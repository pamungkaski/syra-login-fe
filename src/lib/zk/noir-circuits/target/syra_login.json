{"noir_version":"1.0.0-beta.6+e796dfd67726cbc28eb9991782533b211025928d","hash":"4128805798812173331","abi":{"parameters":[{"name":"pubkey_modulus_limbs","type":{"kind":"array","length":18,"type":{"kind":"integer","sign":"unsigned","width":128}},"visibility":"public"},{"name":"redc_params_limbs","type":{"kind":"array","length":18,"type":{"kind":"integer","sign":"unsigned","width":128}},"visibility":"public"},{"name":"domain","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":100,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"public"},{"name":"issuer","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":100,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"public"},{"name":"g3","type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]},"visibility":"public"},{"name":"g4","type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]},"visibility":"public"},{"name":"bridge","type":{"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}]},"visibility":"public"},{"name":"data","type":{"kind":"struct","path":"std::collections::bounded_vec::BoundedVec","fields":[{"name":"storage","type":{"kind":"array","length":1344,"type":{"kind":"integer","sign":"unsigned","width":8}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"signature_limbs","type":{"kind":"array","length":18,"type":{"kind":"integer","sign":"unsigned","width":128}},"visibility":"private"},{"name":"base64_decode_offset","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"current_time","type":{"kind":"integer","sign":"unsigned","width":64},"visibility":"private"},{"name":"r","type":{"kind":"field"},"visibility":"private"}],"return_type":null,"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"},"4453194666306577282":{"error_kind":"string","string":"JWT has expired"},"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"5634341720269277520":{"error_kind":"fmtstring","length":58,"item_types":[{"kind":"integer","sign":"unsigned","width":8},{"kind":"integer","sign":"unsigned","width":32}]},"5675127253506927136":{"error_kind":"string","string":"utils::search could not find needle in haystack"},"5727012404371710682":{"error_kind":"string","string":"push out of bounds"},"6314603625877298116":{"error_kind":"string","string":"haystack length of size 0 not supported"},"6485997221020871071":{"error_kind":"string","string":"call to assert_max_bit_size"},"6543056410826478903":{"error_kind":"string","string":"incorrect value for claim"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"},"7788270038095378938":{"error_kind":"string","string":"substring not present in main text (match found if a padding text included. is main text correctly formatted?)"},"13532288018246966738":{"error_kind":"string","string":"Bridge Fail"},"14225679739041873922":{"error_kind":"string","string":"Index out of bounds"},"14514982005979867414":{"error_kind":"string","string":"attempt to bit-shift with overflow"},"15412340888643424233":{"error_kind":"string","string":"needle length of size 0 not supported"},"17843811134343075018":{"error_kind":"string","string":"Stack too deep"},"18261670735869299181":{"error_kind":"string","string":"data length is too long"}}},"bytecode":"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FV9Mxmky6D3+HHDAYPYg9HvXifWgyXcm4H6oAcLxveszJ9Nf45eQa4zzvetfEj/wWhDQeRfzeO96oQkYB9eOkMUuQeBaCeB0PY4h174KuPa1zbWvEbmmin4EAtewNtOVa18Bcu1rJlz7ivj01j0IzTViPWjy/cZzTXzDgGvfcuXat8QPvBYEdN4lPLhWZALGwbUaWexSBK6VAk7X4xly7buAa9/bXPsekWuq6DUIXMPaTFeufQfIte+ZcO074tNb9yA014j1oMm313NN9DLg2g9cufYD8QOvBQGddykPro0zAePg2tGy2GUIXCsDnK4nMOTajwHXfrK59hMi11TRj0bgGtZmunLtR0Cu/cSEaz8Sn966B6G5RqwHTb4/e66Jnxlw7ReuXPuF+IHXgoDOu4wH18abgHFw7VhZ7HIErpUDTtdahlz7NeDabzbXfkPkmir6sQhcw9pMV679Csi135hw7Vfi01v3IDTXiPWgybfPc030MeDa71y59jvxA68FAZ13OQ+uVZiAcXDteFnsagSuVQNO1xMZcu2PgGt/2lz7E5FrqujHI3ANazNdufYHINf+ZMK1P4hPb92D0Fwj1oMm378818RfDLj2N1eu/U38wGtBQOddzYNrE0zAOLhWK4tdg8C1GsDpehJDrv0TcO1fm2v/InJNFb0WgWtYm+nKtX8AufYvE679Q/2tLEEPQnONWA+afGd5rolZDLg2rIUp10AXPgxPENB51/DgWv8fCY+DayfJYtcicK0WcLqezJBr87X89/1/LcPm5pq6MQppM1XRT0LgGtZmunJtvha42v2vhQfX5qM+vYMehOYasR40+c7f4rk2fwv9NS7AlWsLED/wWhDQedfy4FqVCRgH106Rxa5D4Fod4HQ9hSHXFgy4tpDNtYUQuaaKfgoC17A205VrCwJybSEmXFuQ+PTWPQjNNWI9aPId7rkmhrfQX+MIrlwbQfzAa0FA513HgmuF/bHj4Nppstj1CFyrB5yupzLk2sIB1xaxubYIItdU0U9D4BrWZrpybWFAri3ChGsLE5/eugehuUasB02+i3quiUVb6K9xMa5cW4z4gdeCgM67ngfXhAkYB9fqZLEbELjWADhdT2PItcUDri1hc20JRK6potchcA1rM125tjgg15ZgwrXFiU9v3YPQXCPWgybfDM81kdFCf41LcuXaksQPvBYEdN4NPLiWawLGwbUzZbEbEbjWCDhdT2fItaUCri1tc21pRK6pop+JwDWszXTl2lKAXFuaCdeWIj69dQ9Cc41YD5p8l/FcE8u00F/jsly5tizxA68FAZ13Iw+ujTEB4+Da2bLYTQhcawKcrnUMubZcwLXlba4tj8g1VfSzEbiGtZmuXFsOkGvLM+HacsSnt+5BaK4R60GTb6bnmshsob/GFbhybQXiB14LAjrvJh5cyzMB4+DaubLYrQhcawWcrmcw5NqKAddWsrm2EiLXVNHPReAa1ma6cm1FQK6txIRrKxKf3roHoblGrAdNvit7romVW+ivcRWuXFuF+IHXgoDOu5UH1/JNwDi4Vi+L3YbAtTbA6XomQ66tGnBtpM21kYhcU0WvR+Aa1ma6cm1VQK6NZMK1VYlPb92D0Fwj1oMm3yzPNZHVQn+No7hybRTxA68FAZ13Gw+uFZiAcXDtAlnsdgSutQNO17MYcm21gGur21xbHZFrqugXIHANazNdubYaINdWZ8K11YhPb92D0Fwj1oMm3zU818QaLfTXuCZXrq1J/MBrQUDn3c6Da0kTMA6uTZTF7kDgWgfgdD2bIdfWCri2ts21tRG5poo+EYFrWJvpyrW1ALm2NhOurUV8eusehOYasR40+WZ7ronsFvprHM2Va6OJH3gtCOi8O3hwrdAEjINrk2SxOxG41gk4Xc9hyLV1Aq6ta3NtXUSuqaJPQuAa1ma6cm0dQK6ty4Rr6xCf3roHoblGrAdNvut5ron1WuivcX2uXFuf+IHXgoDOu5MH14pMwDi41iCL3YXAtS7A6XouQ65tEHBtQ5trGyJyTRW9AYFrWJvpyrUNALm2IROubUB8eusehOYasR40+eZ4romcFvprTHDlWoL4gdeCgM67iwfXxpmAcXDtUlnsbgSudQNO1/MYck0EXMu1uZaLyDVV9EsRuIa1mWMcuSYAuZbLhGuC+PTWPQjNNWI9aPId47kmxrTQX2MeV67lET/wWhDQeXfz4Np4EzAOrl0ui92DwLUewOlaz5Br+QHXCmyuFSByTRX9cgSuYW2mK9fyAblWwIRr+cSnt+5BaK4R60GTb9JzTSRb6K+xkCvXCokfeC0I6Lx7eHCtwgSMg2tXymLPRODaTMDpej5DrhUFXNvI5tpGiFxTRb8SgWtYm+nKtSJArm3EhGtFxKe37kForhHrQZPvxp5rYuMW+mvchCvXNiF+4LUgoPOeyYNrE0zAOLjWKIvdi8C1XsDpegFDrm0acG0zm2ubIXJNFb0RgWtYm+nKtU0BubYZE65tSnx66x6E5hqxHjT5FnuuieIW+mscy5VrY4kfeC0I6Lx7eXCt0gSMg2vXyGL3IXCtD3C6XsiQa5sHXNvC5toWiFxTRb8GgWtYm+nKtc0BubYFE65tTnx66x6E5hqxHjT5bum5JrZsob/GrbhybSviB14LAjrvPh5cqzIB4+DadbLYsxC4Ngtwuk5kyLWtA65tY3NtG0SuqaJfh8A1rM105drWgFzbhgnXtiY+vXUPQnONWA+afEs810RJC/01bsuVa9sSP/BaENB5z2LBtaL+2HFw7QZZ7OGV8FxTMUFiyel6EUOubRdwbXuba9sjck0V/QYErmFtpivXtgPk2vZMuLYd8emtexCaa8R60OS7g+ea2KGF/hp35Mq1HYkfeC0I6LzBDnwClWvCBIyDa02y2BkIXMsAnK6TGHJtp4BrO9tc2xmRa6roTQhcw9pMV67tBMi1nZlwbSfi01v3IDTXiPWgybfUc02UttBf4y5cubYL8QOvBQGddwYPruWagHFwbbIsdiYC1zIBp+vFDLm2a8C13Wyu7YbINVX0yQhcw9pMV67tCsi13ZhwbVfi01v3IDTXiPWgyXd3zzWxewv9Ne7BlWt7ED/wWhDQeWfy4NoYEzAOrk2Rxc5C4FoW4HRtYMi1PQOu7WVzbS9ErqmiT0HgGtZmunJtT0Cu7cWEa3sSn966B6G5RqwHTb5lnmuirIX+GvfmyrW9iR94LQjovLN4cC3PBIyDa9NksbMRuJYNOF0vYci1fQKu7WtzbV9ErqmiT0PgGtZmunJtH0Cu7cuEa/sQn966B6G5RqwHTb77ea6J/Vror3F/rlzbn/iB14KAzjubB9fyTcA4uNYqi52DwLUcwOl6KUOuHRBw7UCbawcick0VvRWBa1ib6cq1AwC5diATrh1AfHrrHoTmGrEeNPmWe66J8hb6azyIK9cOIn7gtSCg887hwbUCEzAOrs2QxU4icC0JOF0vY8i1cQHXxttcG4/INVX0GQhcw9pMV66NA+TaeCZcG0d8eusehOYasR40+VZ4romKFvprnMCVaxOIH3gtCOi8kzy4ljQB4+DaLbLYxQhcKwacrpcz5FplwLUqm2tViFxTRb8FgWtYm+nKtUpArlUx4Vol8emtexCaa8R60ORb7bkmqlvor/Fgrlw7mPiB14IA/6gMHlwrNAHj4NptstglCFwrAZyuVzDk2iEB1w61uXYoItdU0W9D4BrWZrpy7RBArh3KhGuHEJ/eugehuUasB02+h3muicNa6K/xcK5cO5z4gdeCAP/byzy4VmQCxsG1NlnsUgSulQJO1ysZcu2IgGtH2lw7EpFrquhtCFzD2kxXrh0ByLUjmXDtCOLTW/cgNNeI9aDJt8ZzTdS00F/jUVy5dhTxA68FAf7H/HhwbZwJGAfX7pTFLkPgWhngdL2KIdeODrh2jM21YxC5pop+JwLXsDbTlWtHA3LtGCZcO5r49NY9CM01Yj1o8j3Wc00c20J/jcdx5dpxxA+8FgT4X4fhwbXxJmAcXLtbFrscgWvlgNO1kSHXjg+4doLNtRMQuaaKfjcC17A205VrxwNy7QQmXDue+PTWPQjNNWI9aPKt9VwTtS3013giV66dSPzAa0GA/7oxD65VmIBxcO1eWexqBK5VA07Xqxly7aSAayfbXDsZkWuq6PcicA1rM125dhIg105mwrWTiE9v3YPQXCPWgybfUzzXxCkt9Nd4KleunUr8wGtBgP/+Cg+uTTAB4+Bauyx2DQLXagCn6zUMuXZawLXTba6djsg1VfR2BK5hbaYr104D5NrpTLh2GvHprXsQmmvEetDkW+e5Jupa6K/xDK5cO4P4gdeCAH9DJA+uVZqAcXDtAVnsWgSu1QJO12sZcu3MgGtn2Vw7C5FrqugPIHANazNduXYmINfOYsK1M4lPb92D0Fwj1oMm37M918TZLfTXeA5Xrp1D/MBrQYD/CzsPrlWZgKopMgZoitFh/6d5ibS/vpxsJyAS6X59O3neYqS7tB9CYqW7tF8mh25SWkv7PTxWWkv7e/JAzRN9acMGPtyRl7bAYIMi4tJGDDp0oi1tsSEGWJSlLTnUMIywtGWHHqwpL22FFIZ0qktbJaWBn9rSRqX2wyOlpa2Z6g+iFJY2OuUfakMvbf0IPyCHXFqUH7ZDLC0v2g/uQZdWGBEBgy1tk8igGHhpY6PjZMClbRU91oBL2zadWAMsbce0YoUvbZc0Y4UtzeHD5OdZmssnndpLc/sYrrmX5vgZEXMtzfkPGM+xNPe/rte/NIg//aKXBvJ7ycHSgH5pZvbSoN7RqZYG93aDvATgs3DwF2r2F0xsUYkWW26OfhGovo8M/vO5si7nyateXufL6wJ5XSivifK6SF6T5HWxvBrkdYm8LpXXZfK6XF5XyOtKeV0lr0Z5XS2va+R1rbyuk9f18rpBXjfKq0lezfKaLK+WlmFzP3ZVixhh3Tsv5F59yL3zQ+5dEHLvwpB7E0PuXRRyb1LIvYtD7jWE3Lsk5N6lIfcuC7l3eci9K0LuXRly76qQe40h964OuXdNyL1rQ+5dF3Lv+pB7N4TcuzHkXlPIveaQe5ND7rUE9+b82ib4Pjb4Pvsg+Bf2g375F/bRvvwL+4R/YW99+Rf2EZcWIZZ/Ye9f2Eddmn9hH21p/oV9tKX5F/bRlob1wt71X0vPBYhVOft9JglxHlAslWM9SKz/6nW+eyzzFp8LXGPlmdqLC91iJebYRzHRJVbuXD0hLko/VsLqLzEpzVgFVfP0qrg4vViFIX0vGtKJVRh6hsQl0WMlBziP4tKosZIDnm1xWbRYuYPMCXF5lFjJQWeOuCL1WBVDzC9xZaqxkkPOQnFVarESKcxV0ZhKrERKM1pcPXSs/BTnvbhmqFh5Kf/sENcOGiuvKsLPIXHdYLGSkX6miesHjlUY8eejuGGAWEVVkX/WihvDYyXS+LktmsJiJdIygGieN5ZI0xNish1rQto2ES1wZkrE8d71hyYOG1aH8N71OsC3ml7H8L3rU1r++z61ZdjcD8DVjVFIm6mK/hDCe9exNtMVtlMAX1RMbcFpMug9ngI4YDB7EPq968R60OQ7DXA/1ADh+N71aS3013gT5BrjfO/6TcQPvBYE+O+vsnjv+rj+2HFw7RFZ7HoErtUDTtfrGXKtNeDadJtr0xG5por+CALXsDbTlWutgFybzoRrrcSnt+5BaK4R60GT7wzPNTGjhf4ab+bKtZuJH3gtCOi863lwTZiAcXCtQxa7AYFrDYDT9QaGXLsl4NqtNtduReSaKnoHAtewNtOVa7cAcu1WJly7hfj01j0IzTViPdj/kcmea+K2FvprvJ0r124nfuC1IKDzbuDBtVwTMA6uPS6L3YjAtUbA6XojQ661BVy7w+baHYhcU0V/HIFrWJvpyrU2QK7dwYRrbcSnt+5BaK4R68H+z+DzXBN3ttBf411cuXYX8QOvBQGddyMPro0xAePg2pOy2E0IXGsCnK5NDLl2d8C1e2yu3YPINVX0JxG4hrWZrly7G5Br9zDh2t3Ep7fuQWiuEevB/g918VwT97bQX+N9XLl2H/EDrwUBnXcTD67lmYBxcO1pWexWBK61Ak7XZoZcaw+4dr/NtfsRuaaK/jQC17A205Vr7YBcu58J19qJT2/dg9BcI9aD/X8l3HNNPNBCf40PcuXag8QPvBYEdN6tPLiWbwLGwbVOWew2BK61AU7XyQy59lDAtYdtrj2MyDVV9E4ErmFtpivXHgLk2sNMuPYQ8emtexCaa8R6sP+d1p5r4pEW+mt8lCvXHiV+4LUgoPNu48G1AhMwDq49J4vdjsC1dsDp2sKQax0B1x6zufYYItdU0Z9D4BrWZrpyrQOQa48x4VoH8emtexCaa8R6sP+tO55r4vEW+mt8givXniB+4LUgoPNu58G1pAkYB9dekMXuQOBaB+B0ncKQa08GXHvK5tpTiFxTRX8BgWtYm+nKtScBufYUE649SXx66x6E5hqxHuz/tyDPNfF0C/01PsOVa88QP/BaENB5d/DgWqEJGAfXXpLF7kTgWifgdJ3KkGudAdeetbn2LCLXVNFfQuAa1ma6cq0TkGvPMuFaJ/HprXsQmmvEerD/4YLnmniuhf4an+fKteeJH3gtCOi8O3lwrcgEjINrXbLYXQhc6wKcrtMYcu2FgGsv2lx7EZFrquhdCFzD2kxXrr0AyLUXmXDtBeLTW/cgNNeI9WD/TyvPNfFSC/01vsyVay9TP/CBIKDz7uLBtXEmYBxce1UWuxuBa92A0/UmhlzrCrj2is21VxC5por+KgLXsDbTlWtdgFx7hQnXuohPb92D0Fwj1oP9A9RzTbzaQn+Nr3Hl2mvED7wWBHTe3Ty4Nt4EjINrr8ti9yBwrQdwurYy5NrrAdfesLn2BiLXVNFfR+Aa1ma6cu11QK69wYRrrxOf3roHoblGrAdNvm96rok3W+iv8S2uXHuL+IHXgoDOu4cH1ypMwDi49qYs9kwErs0EnK7TGXKtO+Da2zbX3kbkmir6mwhcw9pMV651A3LtbSZc6yY+vXUPQnONWA+afN/xXBPvtNBf47tcufYu8QOvBQGd90weXJtgAsbBtW5Z7F4ErvUCTtcZDLn2XsC1922uvY/INVX0bgSuYW2mK9feA+Ta+0y49h7x6a17EJprxHrQ5PuB55r4oIX+Gj/kyrUPiR94LQjovHt5cK3SBIyDa+/IYvchcK0PcLrezJBrPQHXPrK59hEi11TR30HgGtZmunKtB5BrHzHhWg/x6a17EJprxHrQ5Pux55r4uIX+Gj/hyrVPiB94LQjovPt4cK3KBIyDa+/JYs9C4NoswOl6C0OufRpw7TOba58hck0V/T0ErmFtpivXPgXk2mdMuPYp8emtexCaa8R60OT7ueea+LyF/hq/4Mq1L4gfeC0I6LxnseDa+P7YcXDtA1ns4VXwXFMxQWLJ6XorQ67NDLj2pc21LxG5por+AQLXsDbTlWszAbn2JROuzSQ+vXUPQnONWA+afL/yXBNftdBf49dcufY18QOvBQGdN9iBT6ByTZiAcXCtRxY7A4FrGYDT9TaGXPsm4Nq3Nte+ReSaKnoPAtewNtOVa98Acu1bJlz7hvj01j0IzTViPWjy/c5zTXzXQn+N33Pl2vfED7wWBHTeGTy4lmsCxsG1j2WxMxG4lgk4XW9nyLXegGs/2Fz7AZFrqugfI3ANazNdudYLyLUfmHCtl/j01j0IzTViPWjy/dFzTfzYQn+NP3Hl2k/ED7wWBHTemTy4NsYEjINrn8piZyFwLQtwurYx5NrPAdd+sbn2CyLXVNE/ReAa1ma6cu1nQK79woRrPxOf3roHoblGrAdNvr96rolfW+iv8TeuXPuN+IHXgoDOO4sH1/JMwDi49rksdjYC17IBp+sdDLnWF3Dtd5trvyNyTRX9cwSuYW2mK9f6ALn2OxOu9RGf3roHoblGrAdNvn94rok/Wuiv8U+uXPuT+IHXgoDOO5sH1/JNwDi4NlMWOweBazmA0/VOhlz7K+Da3zbX/kbkmir6TASuYW2mK9f+AuTa30y49hfx6a17EJprxHrQ5PuP55r4p4X+Gv/lyrV/iR94LQjovHN4cK3ABIyDa1/JYicRuJYEnK53MeTarIBrw6YMm5tr6sYopM1URf8KgWtYm+nKtVmAXFP7gtFk4H8og/j01j0IzTViPWjynW8K3H5w5RpkDbDW+L8pTLn2vym0D7wWBHTeSR5cS5qAcXDtG1nsYgSuFQNO17sZcm3+KcEe2lxbAJFrqujfIHANazNduTb/FLjaLcCEa/MTn966B6G5RqwHTb4Leq6JBRlwbSGuXFuI+IHXgoDOu5gH1wpNwDi49p0sdgkC10oAp+s9DLk2PODaCJtrIxC5por+HQLXsDbTlWvDAbk2ggnXhhOf3roHoblGrAdNvgt7romFGXBtEa5cW4T4gdeCgM67hAfXikzAOLjWK4tdisC1UsDpei9Dri0acG0xm2uLIXJNFb0XgWtYm+nKtUUBubYYE64tSnx66x6E5hqxHjT5Lu65JhZnwLUluHJtCeIHXgsCOu9SHlwbZwLGwbUfZbHLELhWBjhd72PItYyAa0vaXFsSkWuq6D8icA1rM125lgHItSWZcC2D+PTWPQjNNWI9aPJdynNNLMWAa0tz5drSxA+8FgR03mU8uDbeBIyDaz/LYpcjcK0ccLq2M+TaMgHXlrW5tiwi11TRf0bgGtZmunJtGUCuLcuEa8sQn966B6G5RqwHTb7Lea6J5RhwbXmuXFue+IHXgoDOu5wH1ypMwDi49qssdjUC16oBp+v9DLmWGXBtBZtrKyByTRX9VwSuYW2mK9cyAbm2AhOuZRKf3roHoblGrAdNvit6rokVGXBtJa5cW4n4gdeCgM67mgfXJpiAcXCtTxa7BoFrNYDT9QGGXFs54NoqNtdWQeSaKnofAtewNtOVaysDcm0VJlxbmfj01j0IzTViPWjyXdVzTazKgGsjuXJtJPEDrwUBnXcND65VmoBxcO0PWexaBK7VAk7XBxlyLSvg2iiba6MQuaaK/gcC17A205VrWYBcG8WEa1nEp7fuQWiuEetBk+9qnmtiNQZcW50r11YnfuC1IKDzruXBtSoTMA6u/SWLXYfAtTrA6foQQ66tEXBtTZtrayJyTRX9LwSuYW2mK9fWAOTamky4tgbx6a17EJprxHrQ5LuW55pYiwHX1ubKtbWJH3gtCOi861hwraI/dhxc+0cWux6Ba/WA0/VhhlzLDrg22ubaaESuqaL/g8A1rM105Vo2INdGM+FaNvHprXsQmmvEetDku47nmliHAdfW5cq1dYkfeC0I6LzreXBNmIBxcG2WLHYDAtcaAKfrIwy5tl7AtfVtrq2PyDVV9FkIXMPaTFeurQfItfWZcG094tNb9yA014j1oMl3A881sQEDrm3IlWsbEj/wWhDQeTfw4FquCRgH1+a7aNiwRgSuNQJO10cZci0n4FrC5loCkWuq6GpDobmGtZmuXMsB5FqCCddyiE9v3YPQXCPWgyZf4bkmBAOu5XLlWi7xA68FAZ13Iw+ujTEB4+Da/LLYTQhcawKcrh0MuTYm4FqezbU8RK6pos+PwDWszXTl2hhAruUx4doY4tNb9yA014j1oMk333NN5DPgWgFXrhUQP/BaENB5N/HgWp4JGAfXFpTFbkXgWivgdH2MIdeSAdcKba4VInJNFX1BBK5hbaYr15KAXCtkwrUk8emtexCaa8R60ORb5LkmihhwbSOuXNuI+IHXgoDOu5UH1/JNwDi4NlwWuw2Ba22A0/VxhlzbOODaJjbXNkHkmir6cASuYW2mK9c2BuTaJky4tjHx6a17EJprxHrQ5Lup55rYlAHXNuPKtc2IH3gtCOi823hwrcAEjINrC8tityNwrR1wuj7BkGvFAdfG2lwbi8g1VfSFEbiGtZmuXCsG5NpYJlwrJj69dQ9Cc41YD5p8N/dcE5sz4NoWXLm2BfEDrwUBnXc7D64lTUDVFBkDNMXosP/TvETaXze12AmIRLpfN7fMW4x0l3Z7SKx0l3ZXS+gmpbW0+8JjpbW0B1sGap7oS3t0wFjRl/ZEyyBNHXFpzwwWK+LSnm8Z/LBFWdrLQ8SKsrTXhooVYWlvDR0r5aW9m0KsVJf2YUqxUlvaJ6nFSmlpX6QaK4WlfZ1yrKGX9n2EWEMt7acosYZY2m/RYg26tD8jxhpsaf9GjjXw0v6XDnQGWNpCaaEpfGmLpAmwsKUtkS7mQpbm8GHy8yzN5ZNO7aW5fQzX3Etz/IyIuZbm/AeM51ia+1/X618axJ9+0UsD+b3kYGlAvzQze2lQ7+hUS4N7u0FeAvBZOPgLNfsLJraoRIstN0e/CFTfRwb/eUtZl63ktbW8tpFXiby2ldd28tpeXjvIa0d57SSvneVVKq9d5LWrvHaT1+7y2kNee8prL3mVyWtvee0jr33ltZ+89pfXAfI6UF7l8jrIfuyqFjHCurdVyL2tQ+5tE3KvJOTetiH3tgu5t33IvR1C7u0Ycm+nkHs7h9wrDbm3S8i9XUPu7RZyb/eQe3uE3Nsz5N5eIffKQu7tHXJvn5B7+4bc2y/k3v4h9w4IuXdgyL3ykHsHBffm/LIftc/xNCWRxtMUcUDYI+1EWk9mxIHzxhJpPuUR5YCP2n9Yaz6UQbmVtRez/wf+IcugX/4hS7Qv/5Al4R+yWF/+IUu0pfmHLNGW5h+yRFuaf8gSbWn+IUu0pfmHLNGWhvWQxfV1yJYAsSpnv+cnIbYCiqVy3Bok1n/12sY9lnm7VYlrrLz+15PbusVKzPnadDuXWLlzv87dPv1YCfs18w5pxiqomvf1947pxSoMey2/UzqxCsOfC+wcPVZyoGcMpVFjJQd+XrFLtFi5gz372DVKrOTgz1F2Sz1WxVDPZHZPNVZy6Oc7e6QWK5HKs6I9U4mVSO25015Dx8pP9RlW2VCx8lJ/Hrb3oLHyqqI8W9tnsFjJaM/p9h04VmHUZ377DRCrqCr688P97VgT0v65LQ4C9ATks8g43q+/6EXDhnUgvF+/A/DttU8yfL/+uCn/fR8/ZdjcD/3VjVFIm6mKvijC+/WxNtMVkOMA8T5+Ck6TQe/xOLhhhfL2Xd2D8///7kGTbwXgfqgBwvH9+hVT6K9xAuQa43y//gTiB14LAjrvDh7v1y80AePg2uKy2J0IXOsEnK5PMeRaZcC1KptrVYhcU0VfHIFrWJvpyrVKQK5VMeFaJfHprXsQmmvEetDkW+25JqoZcO1grlw7mPiB14KAzruTB9eKTMA4uJYhi92FwLUuwOn6NEOuHRJw7VCba4cick0VPQOBa1ib6cq1QwC5digTrh1CfHrrHoTmGrEeNPke5rkmDmPAtcO5cu1w4gdeCwI67y4eXBtnAsbBtaVksbsRuNYNOF2fYci1IwKuHWlz7UhErqmiL4XANazNdOXaEYBcO5IJ144gPr11D0JzjVgPmnxrPNdEDQOuHcWVa0cRP/BaENB5d/Pg2ngTMA6uLSOL3YPAtR7A6drJkGtHB1w7xubaMYhcU0VfBoFrWJvpyrWjAbl2DBOuHU18eusehOYasR40+R7ruSaOZcC147hy7TjiB14LAjrvHh5cqzAB4+DacrLYMxG4NhNwuj7LkGvHB1w7webaCYhcU0VfDoFrWJvpyrXjAbl2AhOuHU98eusehOYasR40+dZ6rolaBlw7kSvXTiR+4LUgoPOeyYNrE0zAOLiWKYvdi8C1XsDp+hxDrp0UcO1km2snI3JNFT0TgWtYm+nKtZMAuXYyE66dRHx66x6E5hqxHjT5nuK5Jk5hwLVTuXLtVOIHXgsCOu9eHlzr/8PocXBtRVnsPgSu9QFO1+cZcu20gGun21w7HZFrqugrInANazNduXYaINdOZ8K104hPb92D0Fwj1oMm3zrPNVHHgGtncOXaGcQPvBYEdN59PLhWZQLGwbWVZbFnIXBtFuB0fYEh184MuHaWzbWzELmmir4yAtewNtOVa2cCcu0sJlw7k/j01j0IzTViPWjyPdtzTZzNgGvncOXaOcQPvBYEdN6zWHBtQn/sOLi2qiz28Gp4rqmYILHkdH2RIdfODbh2ns218xC5poq+KgLXsDbTlWvnAnLtPCZcO5f49NY9CM01Yj1o8q33XBP1DLh2PleunU/8wGtBQOcNduATqFwTJmAcXMuSxc5A4FoG4HR9iSHXLgi4dqHNtQsRuaaKnoXANazNdOXaBYBcu5AJ1y6g/meYgh6E5hqxHjT5TvRcExMZcO0irly7iPiB14KAzjuDB9dyTcA4uLaaLHYmAtcyAafrywy5Ning2sU21y5G5Joq+moIXMPaTFeuTQLk2sVMuDaJ+juPgx6E5hqxHjT5NniuiQYGXLuEK9cuIX7gtSCg887kwbUxJmAcXFtDFjsLgWtZgNO1iyHXLg24dpnNtcsQuaaKvgYC17A205VrlwJy7TImXLuU+ovtoAehuUasB02+l3uuicsZcO0Krly7gviB14KAzjuLB9fyTMA4uLaWLHY2AteyAafrKwy5dmXAtatsrl2FyDVV9LUQuIa1ma5cuxKQa1cx4dqVxKe37kForhHrQZNvo+eaaGTAtau5cu1q4gdeCwI672weXMs3AePgWrYsdg4C13IAp+urDLl2TcC1a22uXYvINVX0bASuYW2mK9euAeTatUy4dg3x6a17EJprxHrQ5Hud55q4jgHXrufKteupvz4LBAGddw4PrhWYgHFwbR1Z7CQC15KA0/U1hly7IeDajTbXbkTkmir6Oghcw9pMV67dAMi1G5lw7Qbi01v3IDTXiPWgybfJc000MeBaM1euNRM/8FoQ0HkneXAtaQLGwbX1ZLGLEbhWDDhdX2fItckB11psrrUgck0VfT0ErmFtpivXJgNyrYUJ1yYTn966B6G5RqwHTb5TPNfEFAZcm8qVa1OJH3gtCOi8i3lwrdAEjINrG8hilyBwrQRwur7BkGvTAq7dZHPtJkSuqaJvgMA1rM105do0QK7dxIRr04hPb92D0Fwj1oMm31bPNdHKgGvTuXJtOvEDrwUBnXcJD64VmYBxcC1HFrsUgWulgNP1TYZcmxFw7Wabazcjck0VPQeBa1ib6cq1GYBcu5kJ12YQn966B6G5RqwHTb63eK6JWxhw7VauXLuV+IHXgoDOu5QH18aZgHFwTchilyFwrQxwur7FkGu3BVy73eba7YhcU0UXCFzD2kxXrt0GyLXbmXDtNuLTW/cgNNeI9aDJt81zTbQx4NodXLl2B/EDrwUBnXcZD66NNwHj4NoYWexyBK6VA07XboZcuzPg2l021+5C5Joq+hgErmFtpivX7gTk2l1MuHYn8emtexCaa8R60OR7t+eauJsB1+7hyrV7iB94LQjovMt5cK3CBIyDa/my2NUIXKsGnK5vM+TavQHX7rO5dh8i11TR8xG4hrWZrly7F5Br9zHh2r3Ep7fuQWiuEetBk2+755poZ8C1+7ly7X7iB14LAjrvah5cm2ACxsG1pCx2DQLXagCn6zsMufZAwLUHba49iMg1VfQkAtewNtOVaw8Acu1BJlx7gPj01j0IzTViPWjyfchzTTzEgGsPc+Xaw8QPvBYEdN41PLhWaQLGwbUiWexaBK7VAk7Xdxly7ZGAa4/aXHsUkWuq6EUIXMPaTFeuPQLItUeZcO0R4tNb9yA014j1oMm3w3NNdDDg2mNcufYY8QOvBQGddy0PrlWZgHFwbWNZ7DoErtUBTtf3GHLt8YBrT9hcewKRa6roGyNwDWszXbn2OCDXnmDCtceJT2/dg9BcI9aDJt8nPdfEkwy49hRXrj1F/MBrQUDnXceCa5X9sePg2qay2PUIXKsHnK7vM+Ta0wHXnrG59gwi11TRN0XgGtZmunLtaUCuPcOEa08Tn966B6G5RqwHTb6dnmuikwHXnuXKtWeJH3gtCOi863lwTZiAcXCtWBa7AYFrDYDT9QOGXHsu4NrzNteeR+SaKnoxAtewNtOVa88Bcu15Jlx7jvj01j0IzTViPWjyfcFzTbzAgGsvcuXai8QPvBYEdN4NPLiWawLGwbXNZbEbEbjWCDhdP2TItZcCrr1sc+1lRK6pom+OwDWszXTl2kuAXHuZCddeIj69dQ9Cc41YD5p8uzzXRBcDrr3ClWuvED/wWhDQeTfy4NoYEzAOrm0pi92EwLUmwOnaw5BrrwZce83m2muIXFNF3xKBa1ib6cq1VwG59hoTrr1KfHrrHoTmGrEeNPm+7rkmXmfAtTe4cu0N4gdeCwI67yYeXMszAePg2tay2K0IXGsFnK4fMeTamwHX3rK59hYi11TRt0bgGtZmunLtTUCuvcWEa28Sn966B6G5RqwHTb7dnmuimwHX3ubKtbeJH3gtCOi8W3lwLd8EjINrJbLYbQhcawOcrh8z5No7Adfetbn2LiLXVNFLELiGtZmuXHsHkGvvMuHaO8Snt+5BaK4R60GT73uea+I9Blx7nyvX3id+4LUgoPNu48G1AhMwDq5tJ4vdjsC1dsDp+glDrn0QcO1Dm2sfInJNFX07BK5hbaYr1z4A5NqHTLj2AfHprXsQmmvEetDk2+O5JnoYcO0jrlz7iPiB14IA/6gMHlxLmoBxcG0HWewOBK51AE7XTxly7eOAa5/YXPsEkWuq6DsgcA1rM1259jEg1z5hwrWPiU9v3YPQXCPWgybfTz3XxKcMuPYZV659RvzAa0GA/+1lHlwrNAHj4NpOstidCFzrBJyunzHk2ucB176wufYFItdU0XdC4BrWZrpy7XNArn3BhGufE5/eugehuUasB02+Mz3XxEwGXPuSK9e+JH7gtSDA/5gfD64VmYBxcK1UFrsLgWtdgNP1c4Zc+yrg2tc2175G5JoqeikC17A205VrXwFy7WsmXPuK+PTWPQjNNWI9aPL9xnNNfMOAa99y5dq3xA+8FgT4X4fhwbVxJmAcXNtVFrsbgWvdgNP1C4Zc+y7g2vc2175H5Joq+q4IXMPaTFeufQfIte+ZcO074tNb9yA014j1oMm313NN9DLg2g9cufYD8QOvBQH+68Y8uDbeBIyDa7vLYvcgcK0HcLrOZMi1HwOu/WRz7SdErqmi747ANazNdOXaj4Bc+4kJ134kPr11D0JzjVgPmnx/9lwTPzPg2i9cufYL8QOvBQH++ys8uFZhAsbBtT1lsWcicG0m4HT9kiHXfg249pvNtd8QuaaKvicC17A205VrvwJy7TcmXPuV+PTWPQjNNWI9aPLt81wTfQy49jtXrv1O/MBrQYC/IZIH1yaYgHFwrUwWuxeBa72A0/Urhlz7I+DanzbX/kTkmip6GQLXsDbTlWt/AHLtTyZc+4P49NY9CM01Yj1o8v3Lc038xYBrf3Pl2t/ED7wWBPi/sPPgWqUJGAfX9pHF7kPgWh/gdP2aIdf+Cbj2r821fxG5poq+DwLXsDbTlWv/AHLtXyZc+4f49NY9CM01Yj1o8p3luSZmMeDasKlMuQa68GF4ggB/ZMuDa1UmoGqKjAGaYnTY/2leIu2vCfOcOJFI9+vgkNOb7tIOD5sEaS7tqPCpktbSjhtgQqWztBMHnHbRl3bqwJMz8tLOGGwKR1zaOYNO9GhLO3+Inw5RlnbRUD9pIiztkqF/aqW8tCtS+AmY6tKuTumnaWpLuz61n8wpLa051Z/yKSxtaspiGHpp0yPoY6il3RpFMkMs7Y5oKhp0afdEFNZgS7s/stYGXtrD0eU34NIeS0eRAyztqbREGr60Z9PUbdjSXkxXyiFLc/gw+XmW5vJJp/bS3D6Ga+6lOX5GxFxLc/4DxnMszf2v6/UvDeJPv+ilgfxecrA0oF+amb00qHd0qqXBvd0gLwH4LBz8hZr9BRNbVKLFlpujXwSq7yP1f5Z1+Z+85pfXAvJaUF4LyWu4vEbIa2F5LSKvReW1mLwWl9cS8sqQ15LyWkpeS8trGXktK6/l5LW8vDLltYK8VpTXSvJaWV6ryGtVeY2cOmzux65qESOse/8LuTd/yL0FQu4tGHJvoZB7w0PujQi5t3DIvUVC7i0acm+xkHuLh9xbIuReRsi9JUPuLRVyb+mQe8uE3Fs25N5yIfeWD7mXGXJvhZB7K4bcWynk3soh91YJubdqyL2Rwb05vxYIvo8Nvs/xNCWRxtMUsfLUkFiJtJ7MiFXmjSXSfMojVp0K98Ro3NrzoQzKray9mP0/8A9ZBv3yD1miffmHLAn/kMX68g9Zoi3NP2SJtjT/kCXa0vxDlmhL8w9Zoi3NP2SJtjSshyyur0PmA4hVOfs9PwnxP6BYKsf5QWL9V68F3GOZt1st6Borr//15EJusRJzvjYd7hIrd+7XuSPSj5WwXzMvnGasgqp5X38vkl6swrDX8oumE6sw/LnAYtFjJQd6xrB41FjJgZ9XLBEtVu5gzz4yosRKDv4cZcnUY1UM9UxmqVRjJYd+vrN0arESqTwrWiaVWInUnjstO3Ss/FSfYS03VKy81J+HLT9orLyqKM/WMgeLlYz2nG6FgWMVRn3mt+IAsYqqoj8/XMmONSHtn9tiJNw/tAjIZ5HqWTD2+/X3u2jYsFkI79efBfj22m8Yvl8/a+p/30fZ/3CkboxC2kxV9P0Q3q+PtZmugMwCxPuoqThNBr3HWcTfvqt7EPr9+sR60OS7GuB+qAHC8f36q02lv8bVub5ff3XiB14LAvyXQFi8X7+qP3YcXDtAFnv4wfBcUzFBYsnp+i1Drq0RcG1Nm2trInJNFf0ABK5hbaYr19YA5NqaTLi2BvHprXsQmmvEetDku5bnmliLAdfW5sq1tYkfeC0I6LzBDnwClWvCBIyDa+Wy2BkIXMsAnK7fMeRadsC10TbXRiNyTRW9HIFrWJvpyrVsQK6NZsK1bOLTW/cgNNeI9aDJdx3PNbEOA66ty5Vr6xI/8FoQ0Hln8OBargkYB9fGyWJnInAtE3C6fs+Qa+sFXFvf5tr6iFxTRR+HwDWszXTl2nqAXFufCdfWIz69dQ9Cc41YD5p8N/BcExsw4NqGXLm2IfEDrwUBnXcmD66NMQHj4FqFLHYWAteyAKdrL0Ou5QRcS9hcSyByTRW9AoFrWJvpyrUcQK4lmHAth/j01j0IzTViPWjyFZ5rQjDgWi5XruUSP/BaENB5Z/HgWp4JGAfXKmWxsxG4lg04XX9gyLUxAdfybK7lIXJNFb0SgWtYm+nKtTGAXMtjwrUxxKe37kForhHrQZNvvueayGfAtQKuXCsgfuC1IKDzzubBtXwTMA6uVcti5yBwLQdwuv7IkGvJgGuFNtcKEbmmil6NwDWszXTlWhKQa4VMuJYkPr11D0JzjVgPmnyLPNdEEQOubcSVaxsRP/BaENB55/DgWoEJGAfXDpHFTiJwLQk4XX9iyLWNA65tYnNtE0SuqaIfgsA1rM105drGgFzbhAnXNiY+vXUPQnONWA+afDf1XBObMuDaZly5thnxA68FAZ13kgfXkiZgHFw7TBa7GIFrxYDT9WeGXCsOuDbW5tpYRK6poh+GwDWszXTlWjEg18Yy4Vox8emtexCaa8R60OS7ueea2JwB17bgyrUtiB94LQjovIt5cK3QBIyDa0fIYpcgcK0EcLr+wpBrWwZc28rm2laIXFNFPwKBa1ib6cq1LQG5thUTrm1JfHrrHoTmGrEeNPlu7bkmtmbAtW24cm0b4gdeCwI67xIeXCsyAePgWo0sdikC10oBp+uvDLlWEnBtW5tr2yJyTRW9BoFrWJvpyrUSQK5ty4RrJcSnt+5BaK4R60GT73aea2I7BlzbnivXtid+4LUgoPMu5cG1cSZgHFw7Wha7DIFrZYDT9TeGXNsh4NqONtd2ROSaKvrRCFzD2kxXru0AyLUdmXBtB+LTW/cgNNeI9aDJdyfPNbETA67tzJVrOxM/8FoQ0HmX8eDaeBMwDq4dK4tdjsC1csDp2seQa6UB13axubYLItdU0Y9F4BrWZrpyrRSQa7sw4Vop9T9yHvQgNNeI9aDJd1fPNbErA67txpVruxE/8FoQ0HmX8+BahQkYB9eOl8WuRuBaNeB0/Z0h13YPuLaHzbU9ELmmin48AtewNtOVa7sDcm0PJlzbnfrv9Qc9CM01Yj1o8t3Tc03syYBre3Hl2l7ED7wWBHTe1Ty4NsEEjINrtbLYNQhcqwGcrn8w5FpZwLW9ba7tjcg1VfRaBK5hbaYr18oAubY3E66VUX8rS9CD0Fwj1oMm330818Q+DLi2L1eu7Uv8wGtBQOddw4NrlSZgHFw7SRa7FoFrtYDT9U+GXNsv4Nr+Ntf2R+SaKvpJCFzD2kxXru0HyLX9mXBtP+rTO+hBaK4R60GT7wGea+IABlw7kCvXDiR+4LUgoPOu5cG1KhMwDq6dIotdh8C1OsDp+hdDrpUHXDvI5tpBiFxTRT8FgWtYm+nKtXJArh3EhGvlxKe37kForhHrwf5PuPZcE+MYcG08V66NJ37gtSCg867jwDUxR+w4uHaaLHY9AtfqAafr3wy5VhFwbYLNtQmIXFNFPw2Ba1ib6cq1CkCuTWDCtQri01v3IDTXiPVg/0cmeq6JSgZcq+LKtSriB14LAjrveh5cEyZgHFyrk8VuQOBaA+B0/Ych16oDrh1sc+1gRK6potchcA1rM125Vg3ItYOZcK2a+PTWPQjNNWI92P8ZPJ5r4hAGXDuUK9cOpf44PRAEdN4NPLiWawLGwbUzZbEbEbjWCDhd/2XItcMCrh1uc+1wRK6pop+JwDWszXTl2mGAXDucCdcOIz69dQ9Cc41YD/b/UXfPNXEEA64dyZVrRxI/8FoQ0Hk38uDaGBMwDq6dLYvdhMC1JsDpOosh12oCrh1lc+0oRK6pop+NwDWszXTlWg0g145iwrUa4tNb9yA014j1YP9fCfVcE0cz4NoxXLl2DPEDrwUBnXcTD67lmYBxcO1cWexWBK61Ak7XYVfx49qxAdeOs7l2HCLXVNHPReAa1ma6cu1YQK4dx4RrxxKf3roHoblGrAf7/+yU55o4ngHXTuDKtROIH3gtCOi8W3lwLd8EjINr9bLYbQhcawOcrvMx5FptwLUTba6diMg1VfR6BK5hbaYr12oBuXYiE67VEp/eugehuUasB/v/joHnmjiJAddO5sq1k4kfeC0I6LzbeHCtwASMg2sXyGK3I3CtHXC6/o8h104JuHaqzbVTEbmmin4BAtewNtOVa6cAcu1UJlw7hfj01j0IzTViPdj/i3Gea+I0Blw7nSvXTid+4LUgoPNu58G1pAkYB9cmymJ3IHCtA3C6zs+Qa3UB186wuXYGItdU0ScicA1rM125VgfItTOYcK2O+PTWPQjNNWI92P9Oa881cSYDrp3FlWtnET/wWhDQeXfw4FqhCRgH1ybJYncicK0TcLouwJBrZwdcO8fm2jmIXFNFn4TANazNdOXa2YBcO4cJ184mPr11D0JzjVgP9r91x3NNnMuAa+dx5dp5xA+8FgR03p08uFZkAsbBtQZZ7C4ErnUBTtcFGXKtPuDa+TbXzkfkmip6AwLXsDbTlWv1gFw7nwnX6olPb92D0Fwj1oP9/xbkuSYuYMC1C7ly7ULiB14LAjrvLh5cG2cCxsG1S2WxuxG41g04XRdiyLWJAdcusrl2ESLXVNEvReAa1ma6cm0iINcuYsK1icSnt+5BaK4R68H+hwuea2ISA65dzJVrFxM/8FoQ0Hl38+DaeBMwDq5dLovdg8C1HsDpOpwh1xoCrl1ic+0SRK6pol+OwDWszXTlWgMg1y5hwrUG4tNb9yA014j1YP9PK881cSkDrl3GlWuXET/wWhDQeffw4FqFCRgH166UxZ6JwLWZgNN1BEOuXR5w7Qqba1cgck0V/UoErmFtpivXLgfk2hVMuHY58emtexCaa8R6sH+Aeq6JKxlw7SquXLuK+IHXgoDOeyYPrk0wAePgWqMsdi8C13oBp+vCDLnWGHDtaptrVyNyTRW9EYFrWJvpyrVGQK5dzYRrjcSnt+5BaK4R60GT7zWea+IaBly7livXriV+4LUgoPPu5cG1ShMwDq5dI4vdh8C1PsDpughDrl0XcO16m2vXI3JNFf0aBK5hbaYr164D5Nr1TLh2HfHprXsQmmvEetDke4PnmriBAddu5Mq1G4kfeC0I6Lz7eHCtygSMg2vXyWLPQuDaLMDpuihDrjUFXGu2udaMyDVV9OsQuIa1ma5cawLkWjMTrjURn966B6G5RqwHTb6TPdfEZAZca+HKtRbiB14LAjrvWSy4Jvpjx8G1G2Sxhx8CzzUVE6YgicRiDLk2JeDaVJtrUxG5pop+AwLXsDbTlWtTALk2lQnXphCf3roHoblGrAdNvtM818Q0Bly7iSvXbiJ+4LUgoPMGO/AJVK4JEzAOrjXJYmcgcC0DcLouzpBrrQHXpttcm47INVX0JgSuYW2mK9daAbk2nQnXWolPb92D0Fwj1oMm3xmea2IGA67dzJVrNxM/8FoQ0Hln8OBargkYB9cmy2JnInAtE3C6LsGQa7cEXLvV5tqtiFxTRZ+MwDWszXTl2i2AXLuVCdduIT69dQ9Cc41YD5p8b/NcE7cx4NrtXLl2O/EDrwUBnXcmD66NMQHj4NoUWewsBK5lAU7XDIZcawu4dofNtTsQuaaKPgWBa1ib6cq1NkCu3cGEa23Ep7fuQWiuEetBk++dnmviTgZcu4sr1+4ifuC1IKDzzuLBtTwTMA6uTZPFzkbgWjbgdF2SIdfuDrh2j821exC5poo+DYFrWJvpyrW7Abl2DxOu3U18eusehOYasR40+d7ruSbuZcC1+7hy7T7iB14LAjrvbB5cyzcB4+Baqyx2DgLXcgCn61IMudYecO1+m2v3I3JNFb0VgWtYm+nKtXZArt3PhGvtxKe37kForhHrQZPvA55r4gEGXHuQK9ceJH7gtSCg887hwbUCEzAOrs2QxU4icC0JOF2XZsi1hwKuPWxz7WFErqmiz0DgGtZmunLtIUCuPcyEaw8Rn966B6G5RqwHTb6PeK6JRxhw7VGuXHuU+IHXgoDOO8mDa0kTUDVFxgBNMTrs/zQvkfbX6vM0hUik+7V2SIOlu7R1w5o1zaVtGN74aS0td4BDlM7SCgY8kNGXttHAhzvy0jYbbFBEXNoWgw6daEvbZogBFmVp2w81DCMsbeehB2vKS9sthSGd6tL2Smngp7a0fVP74ZHS0g5M9QdRCksbn/IPtaGXVhXhB+RQSzs0yg/bIZZ2ZLQf3IMu7ZiICBhsaSdEBsXASzs5Ok4GXNrp6UBngKWdlRaawpd2XpoAC1vaheliLmRpDh8mP8/SXD7p1F6a28dwzb00x8+ImGtpzn/AeI6luf91vf6lQfzpF700kN9LDpYG9Eszs5cG9Y5OtTS4txvkJQCfhYO/ULO/YGKLSrTYcnP0i0D1fWTwnztkXR6T1+PyekJeT8rrKXk9La9n5NUpr2fl9Zy8npfXC/J6UV4vyetleXXJ6xV5vSqv1+T1urzekNeb8npLXt3yelte78jrXXm9J6/37ceuahEjrHuPhdx7POTeEyH3ngy591TIvadD7j0Tcq8z5N6zIfeeC7n3fMi9F0LuvRhy76WQey+H3OsKufdKyL1XQ+69FnLv9ZB7b4TcezPk3lsh97pD7r0dcu+dkHvvhtx7L+Te+8G9Ob8WCL6PDb7P8TQlkcbTFPFO2CPtRFpPZsS788YSaT7lEe8BPmp/be35UAblVtZezP4f+Icsg375hyzRvvxDloR/yGJ9+Ycs0ZbmH7JEW5p/yBJtaf4hS7Sl+Ycs0ZbmH7JEWxrWQxbX1yEdALEqZ7/nJyEeA4qlcnwcJNZ/9XrCPZZ5u9WTrrHy+l9PPuUWKzHna9OnXWLlzv0695n0YyXs18ydacYqqJr39fez6cUqDHst/1w6sQrDnws8Hz1WcqBnDC9EjZUc+HnFi9Fi5Q727OOlKLGSgz9HeTn1WBVDPZPpSjVWcujnO6+kFiuRyrOiV1OJlUjtudNrQ8fKT/UZ1utDxcpL/XnYG4PGyquK8mztzcFiJaM9p3tr4FiFUZ/5dQ8Qq6gq+vPDt+1YE9L+uS3eB/QE5LPIBYbhv1//louGDStGeL9+MeDba5dh+H79D6b+9/1D+x+O1I1RSJupin4Lwvv1sTbTFZAfAOL9w6k4TQa9xx/ADSuUt+/qHoR+vz6xHjT59gDuhxogHN+v3zOV/ho/glyjGrBxvV//I+IHXgsCOu9iHu/XLzQB4+DabbLYJQhcKwGcrssy5NrHAdc+sbn2CSLXVNFvQ+Aa1ma6cu1jQK59woRrHxOf3roHoblGrAdNvp96rolPGXDtM65c+4z4gdeCgM67hAfXikzAOLjWJotdisC1UsDpuhxDrn0ecO0Lm2tfIHJNFb0NgWtYm+nKtc8BufYFE659Tnx66x6E5hqxHjT5zvRcEzMZcO1Lrlz7kviB14KAzruUB9fGmYBxcO1OWewyBK6VAU7X5Rly7auAa1/bXPsakWuq6HcicA1rM1259hUg175mwrWviE9v3YPQXCPWgybfbzzXxDcMuPYtV659S/zAa0FA513Gg2vjTcA4uHa3LHY5AtfKAadrJkOufRdw7Xuba98jck0V/W4ErmFtpivXvgPk2vdMuPYd8emtexCaa8R60OTb67kmehlw7QeuXPuB+IHXgoDOu5wH1ypMwDi4dq8sdjUC16oBp+sKDLn2Y8C1n2yu/YTINVX0exG4hrWZrlz7EZBrPzHh2o/Ep7fuQWiuEetBk+/PnmviZwZc+4Ur134hfuC1IKDzrubBtQkmYBxca5fFrkHgWg3gdF2RIdd+Dbj2m8213xC5porejsA1rM105dqvgFz7jQnXfiU+vXUPQnONWA+afPs810QfA679zpVrvxM/8FoQ0HnX8OBa/x9Gj4NrD8hi1yJwrRZwuq7EkGt/BFz70+ban4hcU0V/AIFrWJvpyrU/ALn2JxOu/UF8eusehOYasR40+f7luSb+YsC1v7ly7W/iB14LAjrvWh5cqzIB4+DaQ7LYdQhcqwOcrisz5No/Adf+tbn2LyLXVNEfQuAa1ma6cu0fQK79y4Rr/xCf3roHoblGrAdNvrM818QsBlwbNo0p10AXPgxPENB517HgWm5/7Di49ogsdj0C1+oBp+sqDLk237T/vv9v2rC5uaZujELaTFX0RxC4hrWZrlybbxpc7f43jQfX5iM+vXUPQnONWA+afOef5rk2/zT6a1yAK9cWIH7gtSCg867nwTVhAsbBtQ5Z7AYErjUATtdVGXJtwYBrC9lcWwiRa6roHQhcw9pMV64tCMi1hZhwbUHi01v3IDTXiPWgyXe455oYzoBrI7hybQTxA68FAZ13Aw+u5ZqAcXDtcVnsRgSuNQJO15EMubZwwLVFbK4tgsg1VfTHEbiGtZmuXFsYkGuLMOHawsSnt+5BaK4R60GT76Kea2JRBlxbjCvXFiN+4LUgoPNu5MG1MSZgHFx7Uha7CYFrTYDTNYsh1xYPuLaEzbUlELmmiv4kAtewNtOVa4sDcm0JJlxbnPj01j0IzTViPWjyzfBcExkMuLYkV64tSfzAa0FA593Eg2t5JmAcXHtaFrsVgWutgNN1FEOuLRVwbWmba0sjck0V/WkErmFtpivXlgLk2tJMuLYU8emtexCaa8R60OS7jOeaWIYB15blyrVliR94LQjovFt5cC3fBIyDa52y2G0IXGsDnK6rMeTacgHXlre5tjwi11TROxG4hrWZrlxbDpBryzPh2nLEp7fuQWiuEetBk2+m55rIZMC1FbhybQXiB14LAjrvNh5cKzAB4+Dac7LY7Qhcawecrqsz5NqKAddWsrm2EiLXVNGfQ+Aa1ma6cm1FQK6txIRrKxKf3roHoblGrAdNvit7romVGXBtFa5cW4X4gdeCgM67nQfXkiZgHFx7QRa7A4FrHYDTdQ2GXFs14NpIm2sjEbmmiv4CAtewNtOVa6sCcm0kE66tSv0XxYIehOYasR40+WZ5roksBlwbxZVro4gfeC0I6Lw7eHCt0ASMg2svyWJ3InCtE3C6rsmQa6sFXFvd5trqiFxTRX8JgWtYm+nKtdUAubY6E66tRv3fRoIehOYasR40+a7huSbWYMC1NblybU3iB14LAjrvTh5cKzIB4+Balyx2FwLXugCn61oMubZWwLW1ba6tjcg1VfQuBK5hbaYr19YC5NraTLi2FvHprXsQmmvEetDkm+25JrIZcG00V66Npn7gA0FA593Fg2vjTMA4uPaqLHY3Ate6Aafr2gy5tk7AtXVtrq2LyDVV9FcRuIa1ma5cWweQa+sy4do6xKe37kForhHrQZPvep5rYj0GXFufK9fWJ37gtSCg8+7mwbXxJmAcXHtdFrsHgWs9gNM1myHXNgi4tqHNtQ0RuaaK/joC17A205VrGwBybUMmXNuA+PTWPQjNNWI9aPLN8VwTOQy4luDKtQTxA68FAZ13Dw+uVZiAcXDtTVnsmQhcmwk4XUcz5JoIuJZrcy0XkWuq6G8icA1rM125JgC5lsuEa4L49NY9CM01Yj1o8h3juSbGMOBaHleu5RE/8FoQ0HnP5MG1CSZgHFzrlsXuReBaL+B0XYch1/IDrhXYXCtA5JoqejcC17A205Vr+YBcK2DCtXzi01v3IDTXiPWgyTfpuSaSDLhWyJVrhcQPvBYEdN69PLhWaQLGwbV3ZLH7ELjWBzhd12XItaKAaxvZXNsIkWuq6O8gcA1rM125VgTItY2YcK2I+PTWPQjNNWI9aPLd2HNNbMyAa5tw5domxA+8FgR03n08uFZlAsbBtfdksWchcG0W4HRdjyHXNg24tpnNtc0QuaaK/h4C17A205VrmwJybTMmXNuU+PTWPQjNNWI9aPIt9lwTxQy4NpYr18YSP/BaENB5z2LBtTH9sePg2gey2MMPheeaiglTkERifYZc2zzg2hY217ZA5Joq+gcIXMPaTFeubQ7ItS2YcG1z4tNb9yA014j1oMl3S881sSUDrm3FlWtbET/wWhDQeYMd+AQq14QJGAfXemSxMxC4lgE4XTdgyLWtA65tY3NtG0SuqaL3IHANazNdubY1INe2YcK1rYlPb92D0Fwj1oMm3xLPNVHCgGvbcuXatsQPvBYEdN4ZPLiWawLGwbWPZbEzEbiWCThdN2TIte0Crm1vc217RK6pon+MwDWszXTl2naAXNueCde2Iz69dQ9Cc41YD5p8d/BcEzsw4NqOXLm2I/EDrwUBnXcmD66NMQHj4NqnsthZCFzLApyuOQy5tlPAtZ1tru2MyDVV9E8RuIa1ma5c2wmQazsz4dpOxKe37kForhHrQZNvqeeaKGXAtV24cm0X4gdeCwI67yweXMszAePg2uey2NkIXMsGnK4JhlzbNeDabjbXdkPkmir65whcw9pMV67tCsi13ZhwbVfi01v3IDTXiPWgyXd3zzWxOwOu7cGVa3sQP/BaENB5Z/PgWr4JGAfXZspi5yBwLQdwugqGXNsz4NpeNtf2QuSaKvpMBK5hbaYr1/YE5NpeTLi2J/HprXsQmmvEetDkW+a5JsoYcG1vrlzbm/iB14IA/6gMHlwrMAHj4NpXsthJBK4lAadrLkOu7RNwbV+ba/sick0V/SsErmFtpivX9gHk2r5MuLYP8emtexCaa8R60OS7n+ea2I8B1/bnyrX9iR94LQjwv73Mg2tJEzAOrn0ji12MwLViwOk6hiHXDgi4dqDNtQMRuaaK/g0C17A205VrBwBy7UAmXDuA+PTWPQjNNWI9aPIt91wT5Qy4dhBXrh1E/MBrQYD/MT8eXCs0AePg2ney2CUIXCsBnK55DLk2LuDaeJtr4xG5por+HQLXsDbTlWvjALk2ngnXxhGf3roHoblGrAdNvhWea6KCAdcmcOXaBOIHXgsC/K/D8OBakQkYB9d6ZbFLEbhWCjhd8xlyrTLgWpXNtSpErqmi9yJwDWszXblWCci1KiZcqyQ+vXUPQnONWA+afKs910Q1A64dzJVrBxM/8FoQ4L9uzINr40zAOLj2oyx2GQLXygCnawFDrh0ScO1Qm2uHInJNFf1HBK5hbaYr1w4B5NqhTLh2CPHprXsQmmvEetDke5jnmjiMAdcO58q1w4kfeC0I8N9f4cG18SZgHFz7WRa7HIFr5YDTNcmQa0cEXDvS5tqRiFxTRf8ZgWtYm+nKtSMAuXYkE64dQXx66x6E5hqxHjT51niuiRoGXDuKK9eOIn7gtSDA3xDJg2sVJmAcXPtVFrsagWvVgNO1kCHXjg64dozNtWMQuaaK/isC17A205VrRwNy7RgmXDua+PTWPQjNNWI9aPI91nNNHMuAa8dx5dpxxA+8FgT4v7Dz4NoEEzAOrvXJYtcgcK0GcLoWMeTa8QHXTrC5dgIi11TR+xC4hrWZrlw7HpBrJzDh2vHEp7fuQWiuEetBk2+t55qoZcC1E7ly7UTiB14LAvyRLQ+uVZqAcXDtD1nsWgSu1QJO140Ycu2kgGsn21w7GZFrquh/IHANazNduXYSINdOZsK1k4hPb92D0Fwj1oMm31M818QpDLh2KleunUr8wGtBgL8G4MG1KhNQNUXGAE0xOuz/NC+R9tdHU+0ERCLdr8+mzluMdJf2ZUisdJf27dTQTUpraT+Ex0prab9MHah5oi/t9wFjRV/a31MHaeqISxs26NCJtrQFhhhgUZY2YqhhGGFpiw09WFNe2pIpDOlUl7ZsSgM/taWtkNoPj5SWtkqqP4hSWNqolH+oDb20NSP8gBxqaaOj/LAdYmnrR/vBPfjSIiJgsKXlRQbFwEsrjI6TAZe2STrQGWBpY9NCU/jStkoTYGFL2zZdzIUszeHD5OdZmssnndpLc/sYrrmX5vgZEXMtzfkPGM+xNPe/rte/NIg//aKXBvJ7ycHSgH5pZvbSoN7RqZYG93aDvATgs3DwF2r2F0xsUYkWW26OfhGovo8M/vNpsi6ny6tOXmfI60x5nSWvs+V1jrzOldd58qqX1/nyukBeF8prorwuktckeV0srwZ5XSKvS+V1mbwul9cV8rpSXlfJq1FeV8vrGnldaz92VYsYYd07PeReXci9M0LunRly76yQe2eH3Dsn5N65IffOC7lXH3Lv/JB7F4TcuzDk3sSQexeF3JsUcu/ikHsNIfcuCbl3aci9y0LuXR5y74qQe1eG3Lsq5F5jyL2rQ+5dE3Lv2uDenF/6v48Nvs/zNCUZ6WmKuGLgR9qFEZ/MiCsHiFVUFfkpj7gqPFYijSdGojEsViKtp0/i6nljiTSfZIlr7FgT0n4qJq4F/KeJyybNh/KDZaz1ffb/wD+UGvTLP5SK9uUfSiX8Qynryz+UirY0/1Aq2tL8Q6loS/MPpaItzT+UirY0/1Aq2tKwHkq5vg45DSBW5ez3SCXE6UCxVI51ILH+q9cZ7rHM29POdI2V1/968iy3WIk5X5ue7RIrd+7XueekHythv2Y+N81YBVXzvv4+L71YhWGv5evTiVUY/lzg/OixkgM9Y7ggaqzkwM8rLowWK3ewZx8To8RKDv4c5aLUY1UM9UxmUqqxkkM/37k4tViJVJ4VNaQSK5Hac6dLho6Vn+ozrEuHipWX+vOwywaNlVcV5dna5YA/HyGfrcXxfv2/LpL/RoHwfv06wLfXbszw/frXTfvv+/X2PxypG6OQNlMV/S+E9+tjbaYriK4DxOj103CaDHqPr4MbVihv39U9CP1+fWI9aPK9AXA/1ADh+H79G6bRX+ONkGuM8/36NxI/8FoQ0HnXsXi/fl5/7Di49o8sdj0C1+oBp+smDLnWFHCt2eZaMyLXVNH/QeAa1ma6cq0JkGvNTLjWRHx66x6E5hqxHjT5TvZcE5MZcK2FK9daiB94LQjovOt5cE2YgHFwbZYsdgMC1xoAp+umDLk2JeDaVJtrUxG5poo+C4FrWJvpyrUpgFybyoRrU4hPb92D0Fwj1oMm32mea2IaA67dxJVrNxE/8FoQ0Hk38OBargkYB9fmmzRsWCMC1xoBp+tmDLnWGnBtus216YhcU0VXGwrNNazNdOVaKyDXpjPhWivx6a17EJprxHrQ5DvDc03MYMC1m7ly7WbiB14LAjrvRh5cG2MCxsG1+WWxmxC41gQ4XYsZcu2WgGu32ly7FZFrqujzI3ANazNduXYLINduZcK1W4hPb92D0Fwj1oMm39s818RtDLh2O1eu3U78wGtBQOfdxINreSZgHFxbUBa7FYFrrYDTdSxDrrUFXLvD5todiFxTRV8QgWtYm+nKtTZArt3BhGttxKe37kForhHrQZPvnZ5r4k4GXLuLK9fuIn7gtSCg827lwbV8EzAOrg2XxW5D4Fob4HTdnCHX7g64do/NtXsQuaaKPhyBa1ib6cq1uwG5dg8Trt1NfHrrHoTmGrEeNPne67km7mXAtfu4cu0+4gdeCwI67zYeXCswAePg2sKy2O0IXGsHnK5bMORae8C1+22u3Y/INVX0hRG4hrWZrlxrB+Ta/Uy41k58eusehOYasR40+T7guSYeYMC1B7ly7UHiB14LAjrvdh5cS5qAcXBtUVnsDgSudQBO1y0Zcu2hgGsP21x7GJFrquiLInANazNdufYQINceZsK1h4hPb92D0Fwj1oMm30c818QjDLj2KFeuPUr8wGtBQOfdwYNrhSZgHFxbXBa7E4FrnYDTdSuGXOsIuPaYzbXHELmmir44AtewNtOVax2AXHuMCdc6iE9v3YPQXCPWgybfxz3XxOMMuPYEV649QfzAa0FA593Jg2tFJmAcXMuQxe5C4FoX4HTdmiHXngy49pTNtacQuaaKnoHANazNdOXak4Bce4oJ154kPr11D0JzjVgPmnyf9lwTTzPg2jNcufYM8QOvBQGddxcPro0zAePg2lKy2N0IXOsGnK7bMORaZ8C1Z22uPYvINVX0pRC4hrWZrlzrBOTas0y41kl8eusehOYasR40+T7nuSaeY8C157ly7XniB14LAjrvbh5cG28CxsG1ZWSxexC41gM4XUsYcu2FgGsv2lx7EZFrqujLIHANazNdufYCINdeZMK1F4hPb92D0Fwj1oMm35c818RLDLj2MleuvUz8wGtBQOfdw4NrFSZgHFxbThZ7JgLXZgJO120Zcq0r4NorNtdeQeSaKvpyCFzD2kxXrnUBcu0VJlzrIj69dQ9Cc41YD5p8X/VcE68y4NprXLn2GvEDrwUBnfdMHlybYALGwbVMWexeBK71Ak7X7Rhy7fWAa2/YXHsDkWuq6JkIXMPaTFeuvQ7ItTeYcO114tNb9yA014j1oMn3Tc818SYDrr3FlWtvET/wWhDQeffy4FqlCRgH11aUxe5D4Fof4HTdniHXugOuvW1z7W1Erqmir4jANazNdOVaNyDX3mbCtW7i01v3IDTXiPWgyfcdzzXxDgOuvcuVa+8SP/BaENB59/HgWpUJGAfXVpbFnoXAtVmA03UHhlx7L+Da+zbX3kfkmir6yghcw9pMV669B8i195lw7T3i01v3IDTXiPWgyfcDzzXxAQOufciVax8SP/BaENB5z2LBtfz+2HFwbVVZ7OGHwXNNxYQpSCKxI0Ou9QRc+8jm2keIXFNFXxWBa1ib6cq1HkCufcSEaz3UP5Mm6EForhHrQZPvx55r4mMGXPuEK9c+IX7gtSCg8wY78AlUrgkTMA6uZcliZyBwLQNwuu7EkGufBlz7zObaZ4hcU0XPQuAa1ma6cu1TQK59xoRrn1L/M0xBD0JzjVgPmnw/91wTnzPg2hdcufYF8QOvBQGddwYPruWagHFwbTVZ7EwErmUCTtedGXJtZsC1L22ufYnINVX01RC4hrWZrlybCci1L5lwbSb1dx4HPQjNNWI9aPL9ynNNfMWAa19z5drXxA+8FgR03pk8uDbGBIyDa2vIYmchcC0LcLqWMuTaNwHXvrW59i0i11TR10DgGtZmunLtG0CufcuEa99Qf7Ed9CA014j1oMn3O8818R0Drn3PlWvfEz/wWhDQeWfx4FqeCRgH19aSxc5G4Fo24HTdhSHXegOu/WBz7QdErqmir4XANazNdOVaLyDXfmDCtV7i01v3IDTXiPWgyfdHzzXxIwOu/cSVaz8RP/BaENB5Z/PgWr4JGAfXsmWxcxC4lgM4XXdlyLWfA679YnPtF0SuqaJnI3ANazNdufYzINd+YcK1n4lPb92D0Fwj1oMm318918SvDLj2G1eu/Ub99VkgCOi8c3hwrcAEjINr68hiJxG4lgScrrsx5FpfwLXfba79jsg1VfR1ELiGtZmuXOsD5NrvTLjWR3x66x6E5hqxHjT5/uG5Jv5gwLU/uXLtT+IHXgsCOu8kD64lTcA4uLaeLHYxAteKAafr7gy59lfAtb9trv2NyDVV9PUQuIa1ma5c+wuQa38z4dpfxKe37kForhHrQZPvP55r4h8GXPuXK9f+JX7gtSCg8y7mwbVCEzAOrm0gi12CwLUSwOm6B0OuzQq4NuymYXNzTd0YhbSZqugbIHANazNduTYLkGtqXzCaDPzP0BKf3roHoblGrAdNvvPdBLcfXLkGWQOsNf7vJqZc+99NtA+8FgR03iU8uFZkAsbBtRxZ7FIErpUCTtc9GXJt/puCPbS5tgAi11TRcxC4hrWZrlyb/ya42i3AhGvzE5/eugehuUasB02+C3quiQUZcG0hrlxbiPiB14KAzruUB9fGmYBxcE3IYpchcK0McLruxZBrwwOujbC5NgKRa6roAoFrWJvpyrXhgFwbwYRrw4lPb92D0Fwj1oMm34U918TCDLi2CFeuLUL8wGtBQOddxoNr403AOLg2Rha7HIFr5YDTtYwh1xYNuLaYzbXFELmmij4GgWtYm+nKtUUBubYYE64tSnx66x6E5hqxHjT5Lu65JhZnwLUluHJtCeIHXgsCOu9yHlyrMAHj4Fq+LHY1AteqAafr3gy5lhFwbUmba0sick0VPR+Ba1ib6cq1DECuLcmEaxnEp7fuQWiuEetBk+9SnmtiKQZcW5or15YmfuC1IKDzrubBtQkmYBxcS8pi1yBwrQZwuu7DkGvLBFxb1ubasohcU0VPInANazNdubYMINeWZcK1ZYhPb92D0Fwj1oMm3+U818RyDLi2PFeuLU/8wGtBQOddw4NrlSZgHFwrksWuReBaLeB03Zch1zIDrq1gc20FRK6pohchcA1rM125lgnItRWYcC2T+PTWPQjNNWI9aPJd0XNNrMiAaytx5dpKxA+8FgR03rU8uFZlAsbBtY1lsesQuFYHOF33Y8i1lQOurWJzbRVErqmib4zANazNdOXayoBcW4UJ11YmPr11D0JzjVgPmnxX9VwTqzLg2kiuXBtJ/MBrQUDnXceCawX9sePg2qay2PUIXKsHnK77M+RaVsC1UTbXRiFyTRV9UwSuYW2mK9eyALk2ignXsohPb92D0Fwj1oMm39U818RqDLi2OleurU78wGtBQOddz4NrwgSMg2vFstgNCFxrAJyuBzDk2hoB19a0ubYmItdU0YsRuIa1ma5cWwOQa2sy4doaxKe37kForhHrwf5PuPZcE2sx4NraXLm2NvEDrwUBnXcDD67lmoBxcG1zWexGBK41Ak7XAxlyLTvg2miba6MRuaaKvjkC17A205Vr2YBcG82Ea9nEp7fuQWiuEevB/o9M9FwT6zDg2rpcubYu8QOvBQGddyMPro0xAePg2pay2E0IXGsCnK7lDLm2XsC19W2urY/INVX0LRG4hrWZrlxbD5Br6zPh2nrEp7fuQWiuEevB/s/g8VwTGzDg2oZcubYh8QOvBQGddxMPruWZgHFwbWtZ7FYErrUCTteDGHItJ+BawuZaApFrquhbI3ANazNduZYDyLUEE67lEJ/eugehuUasB/v/qLvnmhAMuJbLlWu5xA+8FgR03q08uJZvAsbBtRJZ7DYErrUBTtdxDLk2JuBans21PESuqaKXIHANazNduTYGkGt5TLg2hvj01j0IzTViPdj/V0I910Q+A64VcOVaAfEDrwUBnXcbD64VmIBxcG07Wex2BK61A07X8Qy5lgy4VmhzrRCRa6ro2yFwDWszXbmWBORaIROuJYlPb92D0Fwj1oP9f3bKc00UMeDaRly5thHxA68FAZ13Ow+uJU1A1RQZAzTF6LD/07xE2l83TrMTEIl0v1qmzVuMdJd2U0isdJd287TQTUprabeHx0praXdNG6h5oi/tvgFjRV/ag9MGaeqIS3t0sFgRl/bEtMEPW5SlPTNErChLe36oWBGW9vLQsVJe2mspxEp1aW+lFCu1pb2bWqyUlvZhqrFSWNonKccaemlfRIg11NK+jhJriKV9Hy3WoEv7KWKswZb2W+RYAy/tz+ixBlzav+nEGmBp/0sTYGFLWyhdzIUszeHD5OdZmssnndpLc/sYrrmX5vgZEXMtzfkPGM+xNPe/rte/NIg//aKXBvJ7ycHSgH5pZvbSoN7RqZYG93aDvATgs3DwF2r2F0xsUYkWW26OfhGovo8M/vPGsi6byGtTeW0mr2JVJ3ltLq8t5LWlvLaS19by2kZeJfLaVl7byWt7ee0grx3ltZO8dpZXqbx2kdeu8tpNXrvLaw957SmvveRVJq+97ceuahEjrHubhNzbNOTeZiH3ikPujQ25t3nIvS1C7m0Zcm+rkHtbh9zbJuReSci9bUPubRdyb/uQezuE3Nsx5N5OIfd2DrlXGnJvl5B7u4bc2y3k3u4h9/YIubdnyL29Qu6VhdzbO7g355f+72OD7/M8TUlGepoidhv4kXZhxCczYvcBYhVVRX7KI/YIj5VI44mR2DMsViKtp09ir3ljiTSfZIkyO9aEtJ+Kib0B/2livovnQ/nBMtb6Pvt/4B9KDfrlH0pF+/IPpRL+oZT15R9KRVuafygVbWn+oVS0pfmHUtGW5h9KRVuafygVbWlYD6WcP7IDIFbl7PdIJcQmQLFUjpuCxPqvXpu5xzJvTyt2jZXX/3pyrFusxJyvTTd3iZU79+vcLdKPlbBfM2+ZZqyCqnlff2+VXqzCsNfyW6cTqzD8ucA20WMlB3rGUBI1VnLg5xXbRouVO9izj+2ixEoO/hxl+9RjVQz1TGaHVGMlh36+s2NqsRKpPCvaKZVYidSeO+08dKz8VJ9hlQ4VKy/152G7DBorryrKs7VdAX8+Qj5bi+P9+jtMGjasA+H9+h2Ab6+tYPh+/X1u+u/7vvY/HKkbo5A2UxV9B4T362NtpiuI9gHE6L434TQZ9B7vAzesUN6+q3sQ+v36xHrQ5Lsf4H6oAcLx/fr73UR/jftDrjHO9+vvT/zAa0FA593B4/36hSZgHFzbSRa7E4FrnYDTdQJDrh0QcO1Am2sHInJNFX0nBK5hbaYr1w4A5NqBTLh2APHprXsQmmvEetDkW+65JsoZcO0grlw7iPiB14KAzruTB9eKTMA4uFYqi92FwLUuwOlayZBr4wKujbe5Nh6Ra6ropQhcw9pMV66NA+TaeCZcG0d8eusehOYasR40+VZ4rokKBlybwJVrE4gfeC0I6Ly7eHBtnAkYB9d2lcXuRuBaN+B0rWLItcqAa1U216oQuaaKvisC17A205VrlYBcq2LCtUri01v3IDTXiPWgybfac01UM+DawVy5djDxA68FAZ13Nw+ujTcB4+Da7rLYPQhc6wGcrtUMuXZIwLVDba4disg1VfTdEbiGtZmuXDsEkGuHMuHaIcSnt+5BaK4R60GT72Gea+IwBlw7nCvXDid+4LUgoPPu4cG1ChMwDq7tKYs9E4FrMwGn68EMuXZEwLUjba4dicg1VfQ9EbiGtZmuXDsCkGtHMuHaEcSnt+5BaK4R60GTb43nmqhhwLWjuHLtKOIHXgsCOu+ZPLg2wQSMg2tlsti9CFzrBZyuhzDk2tEB146xuXYMItdU0csQuIa1ma5cOxqQa8cw4drRxKe37kForhHrQZPvsZ5r4lgGXDuOK9eOI37gtSCg8+7lwbX+P4weB9f2kcXuQ+BaH+B0PZQh144PuHaCzbUTELmmir4PAtewNtOVa8cDcu0EJlw7nvj01j0IzTViPWjyrfVcE7UMuHYiV66dSPzAa0FA593Hg2tVJmAcXNtPFnsWAtdmAU7Xwxhy7aSAayfbXDsZkWuq6PshcA1rM125dhIg105mwrWTiE9v3YPQXCPWgybfUzzXxCkMuHYqV66dSvzAa0FA5z2LBdeS/bHj4NoBstjDD4fnmooJU5BE4nCGXDst4NrpNtdOR+SaKvoBCFzD2kxXrp0GyLXTmXDtNOLTW/cgNNeI9aDJt85zTdQx4NoZXLl2BvEDrwUBnTfYgU+gck2YgHFwrVwWOwOBaxmA0/UIhlw7M+DaWTbXzkLkmip6OQLXsDbTlWtnAnLtLCZcO5P49NY9CM01Yj1o8j3bc02czYBr53Dl2jnED7wWBHTeGTy4lmsCxsG1cbLYmQhcywScrkcy5Nq5AdfOs7l2HiLXVNHHIXANazNduXYuINfOY8K1c4lPb92D0Fwj1oMm33rPNVHPgGvnc+Xa+cQPvBYEdN6ZPLg2xgSMg2sVsthZCFzLApyuNQy5dkHAtQttrl2IyDVV9AoErmFtpivXLgDk2oVMuHYB8emtexCaa8R60OQ70XNNTGTAtYu4cu0i4gdeCwI67yweXMszAePgWqUsdjYC17IBp+tRDLk2KeDaxTbXLkbkmip6JQLXsDbTlWuTALl2MROuTSI+vXUPQnONWA+afBs810QDA65dwpVrlxA/8FoQ0Hln8+BavgkYB9eqZbFzELiWAzhdj2bItUsDrl1mc+0yRK6polcjcA1rM125dikg1y5jwrVLiU9v3YPQXCPWgybfyz3XxOUMuHYFV65dQfzAa0FA553Dg2sFJmAcXDtEFjuJwLUk4HQ9hiHXrgy4dpXNtasQuaaKfggC17A205VrVwJy7SomXLuS+PTWPQjNNWI9aPJt9FwTjQy4djVXrl1N/MBrQUDnneTBtaQJGAfXDpPFLkbgWjHgdD2WIdeuCbh2rc21axG5pop+GALXsDbTlWvXAHLtWiZcu4b49NY9CM01Yj1o8r3Oc01cx4Br13Pl2vXED7wWBHTexTy4VmgCxsG1I2SxSxC4VgI4XY9jyLUbAq7daHPtRkSuqaIfgcA1rM105doNgFy7kQnXbiA+vXUPQnONWA+afJs810QTA641c+VaM/EDrwUBnXcJD64VmYBxcK1GFrsUgWulgNP1eIZcmxxwrcXmWgsi11TRaxC4hrWZrlybDMi1FiZcm0x8eusehOYasR40+U7xXBNTGHBtKleuTSV+4LUgoPMu5cG1cSZgHFw7Wha7DIFrZYDT9QSGXJsWcO0mm2s3IXJNFf1oBK5hbaYr16YBcu0mJlybRnx66x6E5hqxHjT5tnquiVYGXJvOlWvTiR94LQjovMt4cG28CRgH146VxS5H4Fo54HStZci1GQHXbra5djMi11TRj0XgGtZmunJtBiDXbmbCtRnU/8h50IPQXCPWgybfWzzXxC0MuHYrV67dSvzAa0FA513Og2sVJmAcXDteFrsagWvVgNP1RIZcuy3g2u02125H5Joq+vEIXMPaTFeu3QbItduZcO026r/XH/QgNNeI9aDJt81zTbQx4NodXLl2B/EDrwUBnXc1D65NMAHj4FqtLHYNAtdqAKfrSQy5dmfAtbtsrt2FyDVV9FoErmFtpivX7gTk2l1MuHYn9beyBD0IzTViPWjyvdtzTdzNgGv3cOXaPcQPvBYEdN41PLhWaQLGwbWTZLFrEbhWCzhdT2bItXsDrt1nc+0+RK6pop+EwDWszXTl2r2AXLuPCdfupT69gx6E5hqxHjT5tnuuiXYGXLufK9fuJ37gtSCg867lwbUqEzAOrp0ii12HwLU6wOl6CkOuPRBw7UGbaw8ick0V/RQErmFtpivXHgDk2oNMuPYA8emtexCaa8R60OT7kOeaeIgB1x7myrWHiR94LQjovOtYcK2wP3YcXDtNFrsegWv1gNP1VIZceyTg2qM21x5F5Joq+mkIXMPaTFeuPQLItUeZcO0R4tNb9yA014j1oMm3w3NNdDDg2mNcufYY8QOvBQGddz0PrgkTMA6u1cliNyBwrQFwup7GkGuPB1x7wubaE4hcU0WvQ+Aa1ma6cu1xQK49wYRrjxOf3roHoblGrAdNvk96roknGXDtKa5ce4r64/RAENB5N/DgWq4JGAfXzpTFbkTgWiPgdD2dIdeeDrj2jM21ZxC5pop+JgLXsDbTlWtPA3LtGSZce5r49NY9CM01Yj1o8u30XBOdDLj2LFeuPUv8wGtBQOfdyINrY0zAOLh2tix2EwLXmgCnax1Drj0XcO15m2vPI3JNFf1sBK5hbaYr154D5NrzTLj2HPHprXsQmmvEetDk+4LnmniBAdde5Mq1F4kfeC0I6LybeHAtzwSMg2vnymK3InCtFXC6nsGQay8FXHvZ5trLiFxTRT8XgWtYm+nKtZcAufYyE669RHx66x6E5hqxHjT5dnmuiS4GXHuFK9deIX7gtSDAPyqDB9fyTcA4uFYvi92GwLU2wOl6JkOuvRpw7TWba68hck0VvR6Ba1ib6cq1VwG59hoTrr1KfHrrHoTmGrEeNPm+7rkmXmfAtTe4cu0N4gdeCwL8by/z4FqBCRgH1y6QxW5H4Fo74HQ9iyHX3gy49pbNtbcQuaaKfgEC17A205VrbwJy7S0mXHuT+PTWPQjNNWI9aPLt9lwT3Qy49jZXrr1N/MBrQYD/MT8eXEuagHFwbaIsdgcC1zoAp+vZDLn2TsC1d22uvYvINVX0iQhcw9pMV669A8i1d5lw7R3i01v3IDTXiPWgyfc9zzXxHgOuvc+Va+8TP/BaEOB/HYYH1wpNwDi4NkkWuxOBa52A0/Uchlz7IODahzbXPkTkmir6JASuYW2mK9c+AOTah0y49gHx6a17EJprxHrQ5NvjuSZ6GHDtI65c+4j4gdeCAP91Yx5cKzIB4+Bagyx2FwLXugCn67kMufZxwLVPbK59gsg1VfQGBK5hbaYr1z4G5NonTLj2MfHprXsQmmvEetDk+6nnmviUAdc+48q1z4gfeC0I8N9f4cG1cSZgHFy7VBa7G4Fr3YDT9TyGXPs84NoXNte+QOSaKvqlCFzD2kxXrn0OyLUvmHDtc+LTW/cgNNeI9aDJd6bnmpjJgGtfcuXal8QPvBYE+BsieXBtvAkYB9cul8XuQeBaD+B0rWfIta8Crn1tc+1rRK6pol+OwDWszXTl2leAXPuaCde+Ij69dQ9Cc41YD5p8v/FcE98w4Nq3XLn2LfEDrwUB/i/sPLhWYQLGwbUrZbFnInBtJuB0PZ8h174LuPa9zbXvEbmmin4lAtewNtOVa98Bcu17Jlz7jvj01j0IzTViPWjy7fVcE70MuPYDV679QPzAa0GAP7LlwbUJJmAcXGuUxe5F4Fov4HS9gCHXfgy49pPNtZ8QuaaK3ojANazNdOXaj4Bc+4kJ134kPr11D0JzjVgPmnx/9lwTPzPg2i9cufYL8QOvBQH+GoAH1ypNwDi4do0sdh8C1/oAp+uFDLn2a8C132yu/YbINVX0axC4hrWZrlz7FZBrvzHh2q/Ep7fuQWiuEevB/nw910QfA679zpVrvxM/8FoQ4E3Fg2tVJqBqiowBmmJ02P9pXiLtr/3naQqRSPfroJAGS3dpE8KaNc2lHRze+Gkt7fABDlE6SztqwAMZfWnHDXy4Iy/txMEGRcSlnTro0Im2tDOGGGBRlnbOUMMwwtLOH3qwpry0i1IY0qku7ZKUBn5qS7sitR8eKS3t6lR/EKWwtOtT/qE29NKaI/yAHGppU6P8sB1iadOj/eAedGm3RkTAYEu7IzIoBl7aPdFxMuDS7k8HOgMs7eG00BS+tMfSBFjY0p5KF3MhS3P4MPl5lubySaf20tw+hmvupTl+RsRcS3P+A8ZzLM39r+v1Lw3iT7/opYH8XnKwNKBfmpm9NKh3dKqlwb3dIC8B+Cwc/IWa/QUTW1SixZabo18Equ8jg//8h6zLn/L6S15/y+sfef0rr1nq0Wir/N/K63/yml9eC8hrQXktJK/h8hohr4XltYi8FpXXYvJaXF5LyCtDXkvKayl5LS2vZeS1rLyWk9fyrcPmfuyqFjHCuvdnyL2/Qu79HXLvn5B7/4bcmxVyTyVt35sv5N7/Qu7NH3JvgZB7C4bcWyjk3vCQeyNC7i0ccm+RkHuLhtxbLOTe4iH3lgi5lxFyb8mQe0uF3Fs65N4yIfeWDbm3XMi95YN7c37p/z42+D7P05RkpKcpQuU2QKzCiE9mxFIDxCqqivyURywdHiuRxhMjsUxYrERaT5/EsvPGEmk+yRLL2bEmpP1UTCzfCveE7aiL50P5wTLW+j77f+AfSg365R9KRfvyD6US/qGU9eUfSkVbmn8oFW1p/qFUtKX5h1LRluYfSkVbmn8oFW1pWA+lXF+H/AEQq3L2e6QS4k+gWCrHv0Bi/Vevv91jmben/eMaK6//9eS/brESc742neUSK3fu17nD0n+dm7BfM8+XZqyCqnlff/8vvViFYa/l508nVmH4c4EFosdKDvSMYcGosZIDP69YKFqs3MGefQyPEis5+HOUEanHqhjqmczCqcZKDv18Z5HUYiVSeVa0aCqxEqk9d1ps6Fj5qT7DWnyoWHmpPw9bYtBYeVVRnq1ltML9fIR8thbH+/WvmyT/TQHh/fqzAN9eO5Hh+/UzW//7voL9D0fqxiikzVRFvw7h/fpYm+kKokzAh+IrtOI0GfQeZ8INK5S37+oehH6/PrEeNPmuCLgfaoBwfL/+iq3017gS5BrjfL/+SsQPvBYEdN6zWLxfv6g/dhxcu0EWe/gR8FxTMWEKIv+ZiCHXVg64torNtVUQuaaKfgMC17A205VrKwNybRUmXFuZ+PTWPQjNNWI9aPJd1XNNrMqAayO5cm0k8QOvBQGdN9iBT6ByTZiAcXCtSRY7A4FrGYDTdRJDrmUFXBtlc20UItdU0ZsQuIa1ma5cywLk2igmXMsiPr11D0JzjVgPmnxX81wTqzHg2upcubY68QOvBQGddwYPruWagHFwbbIsdiYC1zIBp+vFDLm2RsC1NW2urYnINVX0yQhcw9pMV66tAci1NZlwbQ3i01v3IDTXiPWgyXctzzWxFgOurc2Va2sTP/BaENB5Z/Lg2hgTMA6uTZHFzkLgWhbgdG1gyLXsgGujba6NRuSaKvoUBK5hbaYr17IBuTaaCdeyiU9v3YPQXCPWgybfdTzXxDoMuLYuV66tS/zAa0FA553Fg2t5JmAcXJsmi52NwLVswOl6CUOurRdwbX2ba+sjck0VfRoC17A205Vr6wFybX0mXFuP+PTWPQjNNWI9aPLdwHNNbMCAaxty5dqGxA+8FgR03tk8uJZvAsbBtVZZ7BwEruUATtdLGXItJ+BawuZaApFrquitCFzD2kxXruUAci3BhGs5xKe37kForhHrQZOv8FwTggHXcrlyLZf4gdeCgM47hwfXCkzAOLg2QxY7icC1JOB0vYwh18YEXMuzuZaHyDVV9BkIXMPaTFeujQHkWh4Tro0hPr11D0JzjVgPmnzzPddEPgOuFXDlWgHxA68FAZ13kgfXkiZgHFy7RRa7GIFrxYDT9XKGXEsGXCu0uVaIyDVV9FsQuIa1ma5cSwJyrZAJ15LEp7fuQWiuEetBk2+R55ooYsC1jbhybSPiB14LAjrvYh5cKzQB4+DabbLYJQhcKwGcrlcw5NrGAdc2sbm2CSLXVNFvQ+Aa1ma6cm1jQK5twoRrGxOf3roHoblGrAdNvpt6rolNGXBtM65c24z4gdeCgM67hAfXikzAOLjWJotdisC1UsDpeiVDrhUHXBtrc20sItdU0dsQuIa1ma5cKwbk2lgmXCsmPr11D0JzjVgPmnw391wTmzPg2hZcubYF8QOvBQGddykPro0zAePg2p2y2GUIXCsDnK5XMeTalgHXtrK5thUi11TR70TgGtZmunJtS0CubcWEa1sSn966B6G5RqwHTb5be66JrRlwbRuuXNuG+IHXgoDOu4wH18abgHFw7W5Z7HIErpUDTtdGhlwrCbi2rc21bRG5pop+NwLXsDbTlWslgFzblgnXSohPb92D0Fwj1oMm3+0818R2DLi2PVeubU/8wGtBQOddzoNrFSZgHFy7Vxa7GoFr1YDT9WqGXNsh4NqONtd2ROSaKvq9CFzD2kxXru0AyLUdmXBtB+LTW/cgNNeI9aDJdyfPNbETA67tzJVrOxM/8FoQ0HlX8+DaBBMwDq61y2LXIHCtBnC6XsOQa6UB13axubYLItdU0dsRuIa1ma5cKwXk2i5MuFZKfHrrHoTmGrEeNPnu6rkmdmXAtd24cm034gdeCwI67xoeXKs0AePg2gOy2LUIXKsFnK7XMuTa7gHX9rC5tgci11TRH0DgGtZmunJtd0Cu7cGEa7sTn966B6G5RqwHTb57eq6JPRlwbS+uXNuL+IHXgoDOu5YH16pMwDi49pAsdh0C1+oAp+t1DLlWFnBtb5treyNyTRX9IQSuYW2mK9fKALm2NxOulRGf3roHoblGrAdNvvt4rol9GHBtX65c25f4gdeCgM67jgXXxvXHjoNrj8hi1yNwrR5wul7PkGv7BVzb3+ba/ohcU0V/BIFrWJvpyrX9ALm2PxOu7Ud8eusehOYasR40+R7guSYOYMC1A7ly7UDiB14LAjrveh5cEyZgHFzrkMVuQOBaA+B0vYEh18oDrh1kc+0gRK6poncgcA1rM125Vg7ItYOYcK2c+PTWPQjNNWI9aPId57kmxjHg2niuXBtP/MBrQUDn3cCDa7kmYBxce1wWuxGBa42A0/VGhlyrCLg2webaBESuqaI/jsA1rM105VoFINcmMOFaBfHprXsQmmvEetDkW+m5JioZcK2KK9eqiB94LQjovBt5cG2MCRgH156UxW5C4FoT4HRtYsi16oBrB9tcOxiRa6roTyJwDWszXblWDci1g5lwrZr49NY9CM01Yj1o8j3Ec00cwoBrh3Ll2qHED7wWBHTeTTy4lmcCxsG1p2WxWxG41go4XZsZcu2wgGuH21w7HJFrquhPI3ANazNduXYYINcOZ8K1w4hPb92D0Fwj1oMm3yM818QRDLh2JFeuHUn8wGtBQOfdyoNr+SZgHFzrlMVuQ+BaG+B0ncyQazUB146yuXYUItdU0TsRuIa1ma5cqwHk2lFMuFZD/SMEgx6E5hqxHjT5Hu25Jo5mwLVjuHLtGOIHXgsCOu82HlwrMAHj4NpzstjtCFxrB5yuLQy5dmzAteNsrh2HyDVV9OcQuIa1ma5cOxaQa8cx4dqx1P9qZtCD0Fwj1oMm3+M918TxDLh2AleunUD8wGtBQOfdzoNrSRMwDq69IIvdgcC1DsDpOoUh12oDrp1oc+1ERK6por+AwDWszXTlWi0g105kwrVa6r8oFvQgNNeI9aDJ9yTPNXESA66dzJVrJxM/8FoQ0Hl38OBaoQkYB9deksXuROBaJ+B0ncqQa6cEXDvV5tqpiFxTRX8JgWtYm+nKtVMAuXYqE66dQv3fRoIehOYasR40+Z7muSZOY8C107ly7XTiB14LAjrvTh5cKzIB4+Balyx2FwLXugCn6zSGXKsLuHaGzbUzELmmit6FwDWszXTlWh0g185gwrU64tNb9yA014j1oMn3TM81cSYDrp3FlWtnUT/wgSCg8+7iwbVxJmAcXHtVFrsbgWvdgNP1JoZcOzvg2jk2185B5Joq+qsIXMPaTFeunQ3ItXOYcO1s4tNb9yA014j1oMn3XM81cS4Drp3HlWvnET/wWhDQeXfz4Np4EzAOrr0ui92DwLUewOnaypBr9QHXzre5dj4i11TRX0fgGtZmunKtHpBr5zPhWj3x6a17EJprxHrQ5HuB55q4gAHXLuTKtQuJH3gtCOi8e3hwrcIEjINrb8piz0Tg2kzA6TqdIdcmBly7yObaRYhcU0V/E4FrWJvpyrWJgFy7iAnXJhKf3roHoblGrAdNvpM818QkBly7mCvXLiZ+4LUgoPOeyYNrE0zAOLjWLYvdi8C1XsDpOoMh1xoCrl1ic+0SRK6poncjcA1rM1251gDItUuYcK2B+PTWPQjNNWI9aPK91HNNXMqAa5dx5dplxA+8FgR03r08uFZpAsbBtXdksfsQuNYHOF1vZsi1ywOuXWFz7QpErqmiv4PANazNdOXa5YBcu4IJ1y4nPr11D0JzjVgPmnyv9FwTVzLg2lVcuXYV8QOvBQGddx8PrlWZgHFw7T1Z7FkIXJsFOF1vYci1xoBrV9tcuxqRa6ro7yFwDWszXbnWCMi1q5lwrZH49NY9CM01Yj1o8r3Gc01cw4Br13Ll2rXED7wWBHTes1hwbXx/7Di49oEs9vAj4bmmYsIUJJG4lSHXrgu4dr3NtesRuaaK/gEC17A205Vr1wFy7XomXLuO+PTWPQjNNWI9aPK9wXNN3MCAazdy5dqNxA+8FgR03mAHPoHKNWECxsG1HlnsDASuZQBO19sYcq0p4FqzzbVmRK6povcgcA1rM1251gTItWYmXGsiPr11D0JzjVgPmnwne66JyQy41sKVay3ED7wWBHTeGTy4lmsCxsG1j2WxMxG4lgk4XW9nyLUpAdem2lybisg1VfSPEbiGtZmuXJsCyLWpTLg2hfj01j0IzTViPWjynea5JqYx4NpNXLl2E/EDrwUBnXcmD66NMQHj4NqnsthZCFzLApyubQy51hpwbbrNtemIXFNF/xSBa1ib6cq1VkCuTWfCtVbi01v3IDTXiPWgyXeG55qYwYBrN3Pl2s3ED7wWBHTeWTy4lmcCxsG1z2WxsxG4lg04Xe9gyLVbAq7danPtVkSuqaJ/jsA1rM105dotgFy7lQnXbiE+vXUPQnONWA+afG/zXBO3MeDa7Vy5djvxA68FAZ13Ng+u5ZuAcXBtpix2DgLXcgCn650MudYWcO0Om2t3IHJNFX0mAtewNtOVa22AXLuDCdfaiE9v3YPQXCPWgybfOz3XxJ0MuHYXV67dRfzAa0FA553Dg2sFJmAcXPtKFjuJwLUk4HS9iyHX7g64do/NtXsQuaaK/hUC17A205VrdwNy7R4mXLub+PTWPQjNNWI9aPK913NN3MuAa/dx5dp9xA+8FgR03kkeXEuagKopMgZoitFh/6d5ibS/VpqnKUQi3a+RIQ2W7tJWD2vWNJe2dnjjp7W0dQc4ROksbcMBD2T0peUOfLgjL61gsEERcWkbDTp0oi1tsyEGWJSlbTHUMIywtG2GHqwpL237FIZ0qkvbOaWBn9rSdkvth0dKS9sr1R9EKSxt35R/qA29tAMj/IAcamnjo/ywHWJpVdF+cA+6tEMjImCwpR0ZGRQDL+2Y6DgZcGknpAOdAZZ2clpoCl/a6WkCLGxpZ6WLuZClOXyY/DxLc/mkU3tpbh/DNffSHD8jYq6lOf8B4zmW5v7X9fqXBvGnX/TSQH4vOVga0C/NzF4a1Ds61dLg3m6QlwB8Fg7+Qs3+goktKtFiy83RLwLV95HBf26XdblfXg/I60F5PSSvh+X1iLwelVeHvB6T1+PyekJeT8rrKXk9La9n5NUpr2fl9Zy8npfXC/J6UV4vyetleXXJ6xV5vSqv1+T1urzesB+7qkWMsO7dH3LvgZB7D4bceyjk3sMh9x4JufdoyL2OkHuPhdx7POTeEyH3ngy591TIvadD7j0Tcq8z5N6zIfeeC7n3fMi9F0LuvRhy76WQey+H3OsKufdKyL1XQ+69FnLv9ZB7bwT35vyyH7XP8TQlkcbTFPFq2CPtRFpPZsRr88YSaT7lEa8DPmq/avR8KINyxMB7Mec681PN+YWhcs5LvX4vDhorryrKXrw0WKxktH19eeBYhVF7pGuAWEVV0fvtFTvWhLT7TbwB2LsfXozTu5tZvTv7f+AfEA765R8QRvvyDwgT/gGh9eUfEEZbmn9AGG1p/gFhtKX5B4TRluYfEEZbmn9AGG1pWA8IXV+HtAPEqpz9frWEuB8olsrxAZBY/9XrQfdY5q2CD7nGyut/PfmwW6zEnK9NH3GJlTv369xH04+VsF8zd6QZq6Bq3tffj6UXqzDstfzj6cQqDH8u8ET0WMmBnjE8GTVWcuDnFU9Fi5U72LOPp6PESg7+HOWZ1GNVDPVMpjPVWMmhn+88m1qsRCrPip5LJVYitedOzwP+7AB8Ziogn2HF8TsK30waNqwY4XcUigHfUnw3w99ReLP1v+9v2f9Ypm6MQtpMVfRvEH5HAWszXeHxJiD63mrFaTLoPX4TbvChvGVZ9yD07ygQ60GTbzfgfqgBwvF3FLpb6a/xbcg1xvk7Cm8TP/BaENB5F/P4HYVCEzAOrn0ni12CwLUSwOl6D0OuvRNw7V2ba+8ick0V/TsErmFtpivX3gHk2rtMuPYO8emtexCaa8R6sP+jsT3XxHsMuPY+V669T/zAa0FA513Cg2tFJmAcXOuVxS5F4Fop4HS9lyHXPgi49qHNtQ8RuaaK3ovANazNdOXaB5Bv7WTCtQ+IT2/dg9BcI9aD/Z+16Lkmehhw7SOuXPuI+IHXgoDOu5QH18aZgHFw7UdZ7DIErpUBTtf7GHLt44Brn9hc+wSRa6roPyJwDWszXbn2MSDXPmHCtY+JT2/dg9BcI9aD/R/e47kmPmXAtc+4cu0z4gdeCwI67zIeXBtvAsbBtZ9lscsRuFYOOF3bGXLt84BrX9hc+wKRa6roPyNwDWszXbn2OSDXvmDCtc+JT2/dg9BcI9aD/X8N3nNNzGTAtS+5cu1L4gdeCwI673IeXKswAePg2q+y2NUIXKsGnK73M+TaVwHXvra59jUi11TRf0XgGtZmunLtK0Cufc2Ea18Rn966B6G5RqwH+99p7bkmvmHAtW+5cu1b4gdeCwI672oeXJtgAsbBtT5Z7BoErtUATtcHGHLtu4Br39tc+x6Ra6rofQhcw9pMV659B8i175lw7Tvi01v3IDTXiPVg/1t3PNdELwOu/cCVaz8QP/BaENB51/DgWv8fg4+Da3/IYtcicK0WcLo+yJBrPwZc+8nm2k+IXFNF/wOBa1ib6cq1HwG59hMTrv1IfHrrHoTmGrEe7P+3IM818TMDrv3ClWu/ED/wWhDQedfy4FqVCRgH1/6Sxa5D4Fod4HR9iCHXfg249pvNtd8QuaaK/hcC17A205VrvwJy7TcmXPuV+PTWPQjNNWI92P9wwXNN9DHg2u9cufY78QOvBQGddx0LrlX0x46Da//IYtcjcK0ecLo+zJBrfwRc+9Pm2p+IXFNF/weBa1ib6cq1PwC59icTrv1BfHrrHoTmGrEe7P9p5bkm/mLAtb+5cu1v4gdeCwI673oeXBMmYBxcmyWL3YDAtQbA6foIQ679E3DtX5tr/yJyTRV9FgLXsDbTlWv/AHLtXyZc+4f49NY9CM01Yj3YP0A918QsBlxThQVbY5xcA134MDxBQOfdwINruSZgHFyb7+JhwxoRuNYIOF0fZci1+YKx+7/pw+bmmroxCmkzVdHVhkJzDWszXbk233S42v1vOg+uzUd8eusehOYasR40+c4/3XNt/un017gAV64tQPzAa0FA593Ig2tjTMA4uDa/LHYTAteaAKdrB0OuLRiM3YVsri2EyDVV9PkRuIa1ma5cWxCQawsx4dqCxKe37kForhHrQZPvcM81MZwB10Zw5doI4gdeCwI67yYeXMszAePg2oKy2K0IXGsFnK6PMeTawsHYXcTm2iKIXFNFXxCBa1ib6cq1hQG5tggTri1MfHrrHoTmGrEeNPku6rkmFmXAtcW4cm0x4gdeCwI671YeXMs3AePg2nBZ7DYErrUBTtfHGXJt8WDsLmFzbQlErqmiD0fgGtZmunJtcUCuLcGEa4sTn966B6G5RqwHTb4ZnmsigwHXluTKtSWJH3gtCOi823hwrcAEjINrC8tityNwrR1wuj7BkGtLBWN3aZtrSyNyTRV9YQSuYW2mK9eWAuTa0ky4thTx6a17EJprxHrQ5LuM55pYhgHXluXKtWWJH3gtCOi823lwLWkCxsG1RWWxOxC41gE4XZ9kyLXlgrG7vM215RG5poq+KALXsDbTlWvLAXJteSZcW4749NY9CM01Yj1o8s30XBOZDLi2AleurUD8wGtBQOfdwYNrhSZgHFxbXBa7E4FrnYDT9SmGXFsxGLsr2VxbCZFrquiLI3ANazNdubYiINdWYsK1FYlPb92D0Fwj1oMm35U918TKDLi2CleurUL8wGtBQOfdyYNrRSZgHFzLkMXuQuBaF+B0fZoh11YNxu5Im2sjEbmmip6BwDWszXTl2qqAXBvJhGurEp/eugehuUasB02+WZ5rIosB10Zx5doo4gdeCwI67y4eXBtnAsbBtaVksbsRuNYNOF2fYci11YKxu7rNtdURuaaKvhQC17A205VrqwFybXUmXFuN+PTWPQjNNWI9aPJdw3NNrMGAa2ty5dqaxA+8FgR03t08uDbeBIyDa8vIYvcgcK0HcLp2MuTaWsHYXdvm2tqIXFNFXwaBa1ib6cq1tQC5tjYTrq1FfHrrHoTmGrEeNPlme66JbAZcG82Va6OJH3gtCOi8e3hwrcIEjINry8liz0Tg2kzA6fosQ66tE4zddW2urYvINVX05RC4hrWZrlxbB5Br6zLh2jrEp7fuQWiuEetBk+96nmtiPQZcW58r19YnfuC1IKDznsmDaxNMwDi4limL3YvAtV7A6focQ65tEIzdDW2ubYjINVX0TASuYW2mK9c2AOTahky4tgHx6a17EJprxHrQ5JvjuSZyGHAtwZVrCeIHXgsCOu9eHlyrNAHj4NqKsth9CFzrA5yuzzPkmgjGbq7NtVxErqmir4jANazNdOWaAORaLhOuCeLTW/cgNNeI9aDJd4znmhjDgGt5XLmWR/zAa0FA593Hg2tVJmAcXFtZFnsWAtdmAU7XFxhyLT8YuwU21woQuaaKvjIC17A205Vr+YBcK2DCtXzi01v3IDTXiPWgyTfpuSaSDLhWyJVrhcQPvBYEdN6zWHBtQn/sOLi2qiz28Bp4rqmYMAVJJF5kyLWiYOxuZHNtI0SuqaKvisA1rM105VoRINc2YsK1IuqfSRP0IDTXiPWgyXdjzzWxMQOubcKVa5sQP/BaENB5gx34BCrXhAkYB9eyZLEzELiWAThdX2LItU2DsbuZzbXNELmmip6FwDWszXTl2qaAXNuMCdc2pf5nmIIehOYasR40+RZ7roliBlwby5VrY4kfeC0I6LwzeHAt1wSMg2uryWJnInAtE3C6vsyQa5sHY3cLm2tbIHJNFX01BK5hbaYr1zYH5NoWTLi2OfV3Hgc9CM01Yj1o8t3Sc01syYBrW3Hl2lbED7wWBHTemTy4NsYEjINra8hiZyFwLQtwunYx5NrWwdjdxubaNohcU0VfA4FrWJvpyrWtAbm2DROubU39xXbQg9BcI9aDJt8SzzVRwoBr23Ll2rbED7wWBPhHZfDgWp4JGAfX1pLFzkbgWjbgdH2FIde2C8bu9jbXtkfkmir6Wghcw9pMV65tB8i17ZlwbTvi01v3IDTXiPWgyXcHzzWxAwOu7ciVazsSP/BaEOB/e5kH1/JNwDi4li2LnYPAtRzA6foqQ67tFIzdnW2u7YzINVX0bASuYW2mK9d2AuTazky4thPx6a17EJprxHrQ5FvquSZKGXBtF65c24X667NAEOB/zI8H1wpMwDi4to4sdhKBa0nA6foaQ67tGozd3Wyu7YbINVX0dRC4hrWZrlzbFZBruzHh2q7Ep7fuQWiuEetBk+/unmtidwZc24Mr1/YgfuC1IMD/OgwPriVNwDi4tp4sdjEC14oBp+vrDLm2ZzB297K5thci11TR10PgGtZmunJtT0Cu7cWEa3sSn966B6G5RqwHTb5lnmuijAHX9ubKtb2JH3gtCPBfN+bBtUITMA6ubSCLXYLAtRLA6foGQ67tE4zdfW2u7YvINVX0DRC4hrWZrlzbB5Br+zLh2j7Ep7fuQWiuEetBk+9+nmtiPwZc258r1/YnfuC1IMB/f4UH14pMwDi4liOLXYrAtVLA6fomQ64dEIzdA22uHYjINVX0HASuYW2mK9cOAOTagUy4dgDx6a17EJprxHrQ5FvuuSbKGXDtIK5cO4j4gdeCAH9DJA+ujTMB4+CakMUuQ+BaGeB0fYsh18YFY3e8zbXxiFxTRRcIXMPaTFeujQPk2ngmXBtHfHrrHoTmGrEeNPlWeK6JCgZcm8CVaxOIH3gtCPB/YefBtfEmYBxcGyOLXY7AtXLA6drNkGuVwditsrlWhcg1VfQxCFzD2kxXrlUCcq2KCdcqiU9v3YPQXCPWgybfas81Uc2Aawdz5drBxA+8FgT4I1seXKswAePgWr4sdjUC16oBp+vbDLl2SDB2D7W5digi11TR8xG4hrWZrlw7BJBrhzLh2iHEp7fuQWiuEetBk+9hnmviMAZcO5wr1w4nfuC1IMBfA/Dg2gQTMA6uJWWxaxC4VgM4Xd9hyLUjgrF7pM21IxG5poqeROAa1ma6cu0IQK4dyYRrRxCf3roHoblGrAf78/VcEzUMuHYUV64dRfzAa0GANxUPrlWagHFwrUgWuxaBa7WA0/Vdhlw7Ohi7x9hcOwaRa6roRQhcw9pMV64dDci1Y5hw7Wji01v3IDTXiPWgyfdYzzVxLAOuHceVa8cRP/BaENB51/LgWpUJqJoiY4CmGB32f5qXSPvr7VY7AZFI9+v91nmLke7SPgqJle7SPmsN3aS0lvZleKy0lvZt60DNE31pPwwYK/rSfmkdpKkjLu33wWJFXNrfrYMftihLGzbUMIywtAWGHqwpL21ECkM61aUtltLAT21pS6b2wyOlpS2b6g+iFJa2Qso/1IZe2ioRfkAOtbRRUX7YDrG0NaP94B50aaMjImCwpa0fGRSDLC06TgZcWl460BlgaYVpoSl8aZukCbCwpY1NF3MhS3P4MPl5lubySaf20tw+hmvupTl+RsRcS3P+A8ZzLM39r+v1Lw3iT7/opYH8XnKwNKBfmpm9NKh3dKqlwb3dIC8B+Cwc/IWa/QUTW1SixZabo18Equ8jg/98vKzLCfKqldeJ8jpJXifL6xR5nSqv0+R1urzq5HWGvM6U11nyOlte58jrXHmdJ696eZ0vrwvkdaG8JsrrInlNktfF8mqQ1yXyulRel9mPXdUiRlj3Tgi5Vxty78SQeyeF3Ds55N4pIfdODbl3Wsi900Pu1YXcOyPk3pkh984KuXd2yL1zQu6dG3LvvJB79SH3zg+5d0HIvQtD7k0MuXdRyL1JIfcuDrnXEHLvkpB7l4bcuyy4N+eX/ah9jqcpiTSepoiG6SGxEmk9mRGXzBtLpPmUR1w6He6J0fB15kMZlCMG3os515mfas4XDJVzXur1u3DQWHlVUfZi4mCxktH29aKBYxVG7ZFJA8QqqorebxfbsSak3W/iMsDe3bEBp3c3s3p39v/APyAc9Ms/IIz25R8QJvwDQuvLPyCMtjT/gDDi0iLH8g8I04nlHxD6B4SpLM0/IIy2NKwHhK6vQ44HiFU5+/1qCXECUCyVYy1IrP/qdaJ7LPNWwZNcY+X1v5482S1WYs7Xpqe4xMqd+3XuqenHStivmU9LM1ZB1byvv09PL1Zh2Gv5unRiFYY/FzgjeqzkQM8YzowaKznw84qzosXKHezZx9lRYiUHf45yTuqxKoZ6JnNuqrGSQz/fOS+1WIlUnhXVpxIrkdpzp/MBf3YAPjMVkM+w4vgdhY0vlv/ugfA7CnWAbyl+j+HvKFw+/b/vV0wfNvc/dKgbo5A2UxV9Y4TfUcDaTFd4XA6Ivium4zQZ9B5fDjf4UN6yrHsQ+ncUiPWgyfdKwP1QA2T6sHm/IPc7bM8Tbl/iyun013gV5Brj/B2Fq4gfeC0I6LzrWPyOQmV/7Di4tqksdj0C1+oBp+v7DLnWGIzdq22uXY3INVX0TRG4hrWZrlxrBOTa1Uy41kh8eusehOYasR40+V7juSauYcC1a7ly7VriB14LAjrveh5cEyZgHFwrlsVuQOBaA+B0/YAh164Lxu71NteuR+SaKnoxAtewNtOVa9cBcu16Jly7jvj01j0IzTViPWjyvcFzTdzAgGs3cuXajcQPvBYEdN4NPLiWawLGwbXNZbEbEbjWCDhdP2TItaZg7DbbXGtG5Joq+uYIXMPaTFeuNQFyrZkJ15qIT2/dg9BcI9aDJt/JnmtiMgOutXDlWgvxA68FAZ13Iw+ujTEB4+DalrLYTQhcawKcrj0MuTYlGLtTba5NReSaKvqWCFzD2kxXrk0B5NpUJlybQnx66x6E5hqxHjT5TvNcE9MYcO0mrly7ifiB14KAzruJB9fyTMA4uLa1LHYrAtdaAafrRwy51hqM3ek216Yjck0VfWsErmFtpivXWgG5Np0J11qJT2/dg9BcI9aDJt8ZnmtiBgOu3cyVazcTP/BaENB5t/LgWr4JGAfXSmSx2xC41gY4XT9myLVbgrF7q821WxG5popegsA1rM105dotgFy7lQnXbiE+vXUPQnONWA+afG/zXBO3MeDa7Vy5djvxA68FAZ13Gw+uFZiAcXBtO1nsdgSutQNO108Ycq0tGLt32Fy7A5FrqujbIXANazNdudYGyLU7mHCtjfj01j0IzTViPWjyvdNzTdzJgGt3ceXaXcQPvBYEdN7tPLiWNAHj4NoOstgdCFzrAJyunzLk2t3B2L3H5to9iFxTRd8BgWtYm+nKtbsBuXYPE67dTXx66x6E5hqxHjT53uu5Ju5lwLX7uHLtPuIHXgsCOu8OHlwrNAHj4NpOstidCFzrBJyunzHkWnswdu+3uXY/ItdU0XdC4BrWZrpyrR2Qa/cz4Vo78emtexCaa8R60OT7gOeaeIAB1x7kyrUHiR94LQjovDt5cK3IBIyDa6Wy2F0IXOsCnK6fM+TaQ8HYfdjm2sOIXFNFL0XgGtZmunLtIUCuPcyEaw8Rn966B6G5RqwHTb6PeK6JRxhw7VGuXHuU+IHXgoDOu4sH18aZgHFwbVdZ7G4ErnUDTtcvGHKtIxi7j9lcewyRa6rouyJwDWszXbnWAci1x5hwrYP49NY9CM01Yj1o8n3cc008zoBrT3Dl2hPED7wWBHTe3Ty4Nt4EjINru8ti9yBwrQdwus5kyLUng7H7lM21pxC5poq+OwLXsDbTlWtPAnLtKSZce5L49NY9CM01Yj1o8n3ac008zYBrz3Dl2jPED7wWBHTePTy4VmECxsG1PWWxZyJwbSbgdP2SIdc6g7H7rM21ZxG5poq+JwLXsDbTlWudgFx7lgnXOolPb92D0Fwj1oMm3+c818RzDLj2PFeuPU/8wGtBQOc9kwfXJpiAcXCtTBa7F4FrvYDT9SuGXHshGLsv2lx7EZFrquhlCFzD2kxXrr0AyLUXmXDtBeLTW/cgNNeI9aDJ9yXPNfESA669zJVrLxM/8FoQ0Hn38uBapQkYB9f2kcXuQ+BaH+B0/Zoh17qCsfuKzbVXELmmir4PAtewNtOVa12AXHuFCde6iE9v3YPQXCPWgybfVz3XxKsMuPYaV669RvzAa0FA593Hg2tVJmAcXNtPFnsWAtdmAU7Xbxhy7fVg7L5hc+0NRK6pou+HwDWszXTl2uuAXHuDCddeJz69dQ9Cc41YD5p83/RcE28y4NpbXLn2FvEDrwUBnfcsFlyr6o8dB9cOkMUefhQ811RMmIIkEt8y5Fp3MHbftrn2NiLXVNEPQOAa1ma6cq0bkGtvM+FaN/HprXsQmmvEetDk+47nmniHAdfe5cq1d4kfeC0I6LzBDnwClWvCBIyDa+Wy2BkIXMsAnK7fMeTae8HYfd/m2vuIXFNFL0fgGtZmunLtPUCuvc+Ea+8Rn966B6G5RqwHTb4feK6JDxhw7UOuXPuQ+IHXgoDOO4MH13JNwDi4Nk4WOxOBa5mA0/V7hlzrCcbuRzbXPkLkmir6OASuYW2mK9d6ALn2EROu9RCf3roHoblGrAdNvh97romPGXDtE65c+4T4gdeCgM47kwfXxpiAcXCtQhY7C4FrWYDTtZch1z4Nxu5nNtc+Q+SaKnoFAtewNtOVa58Ccu0zJlz7lPj01j0IzTViPWjy/dxzTXzOgGtfcOXaF8QPvBYEdN5ZPLiWZwLGwbVKWexsBK5lA07XHxhybWYwdr+0ufYlItdU0SsRuIa1ma5cmwnItS+ZcG0m8emtexCaa8R60OT7leea+IoB177myrWviR94LQjovLN5cC3fBIyDa9Wy2DkIXMsBnK4/MuTaN8HY/dbm2reIXFNFr0bgGtZmunLtG0CufcuEa98Qn966B6G5RqwHTb7fea6J7xhw7XuuXPue+IHXgoDOO4cH1wpMwDi4dogsdhKBa0nA6foTQ671BmP3B5trPyByTRX9EASuYW2mK9d6Abn2AxOu9RKf3roHoblGrAdNvj96rokfGXDtJ65c+4n4gdeCgM47yYNrSRMwDq4dJotdjMC1YsDp+jNDrv0cjN1fbK79gsg1VfTDELiGtZmuXPsZkGu/MOHaz8Snt+5BaK4R60GT76+ea+JXBlz7jSvXfiN+4LUgoPMu5sG1QhMwDq4dIYtdgsC1EsDp+gtDrvUFY/d3m2u/I3JNFf0IBK5hbaYr1/oAufY7E671EZ/eugehuUasB02+f3iuiT8YcO1Prlz7k/iB14KAzruEB9eKTMA4uFYji12KwLVSwOn6K0Ou/RWM3b9trv2NyDVV9BoErmFtpivX/gLk2t9MuPYX8emtexCaa8R60OT7j+ea+IcB1/7lyrV/iR94LQjovEt5cG2cCRgH146WxS5D4FoZ4HT9jSHXZumxO2PY3FxTN0YhbaYq+tEIXMPaTFeuzQLkmtoXjCaD3uNZxKe37kForhHrQZPvfDPg9oMr1yBrgLXG/81gyrX/zaB94LUgoPMu48G18SZgHFw7Vha7HIFr5YDTtY8h1+afEeyhzbUFELmmin4sAtewNtOVa/PPgKvdAky4Nj/x6a17EJprxHrQ5Lug55pYkAHXFuLKtYWIH3gtCOi8y3lwrcIEjINrx8tiVyNwrRpwuv7OkGvDA66NsLk2ApFrqujHI3ANazNduTYckGsjmHBtOPHprXsQmmvEetDku7DnmliYAdcW4cq1RYgfeC0I6LyreXBtggkYB9dqZbFrELhWAzhd/2DItUUDri1mc20xRK6potcicA1rM125tigg1xZjwrVFiU9v3YPQXCPWgybfxT3XxOIMuLYEV64tQfzAa0FA513Dg2uVJmAcXDtJFrsWgWu1gNP1T4Zcywi4tqTNtSURuaaKfhIC17A205VrGYBcW5IJ1zKoT++gB6G5RqwHTb5Lea6JpRhwbWmuXFua+IHXgoDOu5YH16pMwDi4doosdh0C1+oAp+tfDLm2TMC1ZW2uLYvINVX0UxC4hrWZrlxbBpBryzLh2jLEp7fuQWiuEetBk+9ynmtiOQZcW54r15YnfuC1IKDzruPAtdw5YsfBtdNksesRuFYPOF3/Zsi1zIBrK9hcWwGRa6ropyFwDWszXbmWCci1FZhwLZP49NY9CM01Yj1o8l3Rc02syIBrK3Hl2krED7wWBHTe9Ty4JkzAOLhWJ4vdgMC1BsDp+g9Drq0ccG0Vm2urIHJNFb0OgWtYm+nKtZUBubYKE66tTHx66x6E5hqxHjT5ruq5JlZlwLWRXLk2kvrj9EAQ0Hk38OBargkYB9fOlMVuROBaI+B0/Zch17ICro2yuTYKkWuq6GcicA1rM125lgXItVFMuJZFfHrrHoTmGrEeNPmu5rkmVmPAtdW5cm114gdeCwI670YeXBtjAsbBtbNlsZsQuNYEOF1nMeTaGgHX1rS5tiYi11TRz0bgGtZmunJtDUCurcmEa2sQn966B6G5RqwHTb5rea6JtRhwbW2uXFub+IHXgoDOu4kH1/JMwDi4dq4sdisC11oBp+uwRn5cyw64Ntrm2mhErqmin4vANazNdOVaNiDXRjPhWjbx6a17EJprxHrQ5LuO55pYhwHX1uXKtXWJH3gtCOi8W3lwLd8EjINr9bLYbQhcawOcrvMx5Np6AdfWt7m2PiLXVNHrEbiGtZmuXFsPkGvrM+HaesSnt+5BaK4R60GT7waea2IDBlzbkCvXNiR+4LUgoPNu48G1AhMwDq5dIIvdjsC1dsDp+j+GXMsJuJawuZZA5Joq+gUIXMPaTFeu5QByLcGEaznEp7fuQWiuEetBk6/wXBOCAddyuXItl/iB14KAzrudB9eSJqBqiowBmmJ02P9pXiLtr6vm+eRokUj369qQT6FOd2k3hn2idZpLawn/dOy0lnbTAJ+0nc7Sbh7wU7ujL+32gT8BPPLS7hrs08QjLu2+QT+ZPNrSHhziU86jLO3RoT4xPcLSnhj609dTXtozKXySe6pLez6lT4VPbWkvp/YJ8ykt7bVUP60+haW9lfIn3w+9tHdTjjX00j6MEGuopX0SJdYQS/siWqxBl/Z1xFiDLe37yLEGXtpP0WMNuLTf0ok1wNL+TCtW+NL+TTNW2NIcPkx+nqW5fNKpvTS3j+Gae2mOnxEx19Kc/4DxHEtz/+t6/UuD+NMvemkgv5ccLA3ol2ZmLw3qHZ1qaXBvN8hLAD4LB3+hZn/BxBaVaLHVP4QFcdT3kcF/HiPrkievfHkVyCspr0J5FclrI3ltLK9N5LWpvDaTV7Gqo7w2l9cW8tpSXlvJa2t5bSOvEnltK6/t5LW9vHaQ147y2kleO8urVF672I9d1SJGWPfyQu7lh9wrCLmXDLlXGHKvKOTeRiH3Ng65t0nIvU1D7m0Wcq845N7YkHubh9zbIuTeliH3tgq5t3XIvW1C7pWE3Ns25N52Ife2D7m3Q8i9HUPu7RRyb+eQe6Uh93YJ7s35ZT9qn+NpSiKNpylip7BH2om0nsyIneeNJdJ8yiNKAR+1n7jOfCiDcsTAezHnOvNTzblkqJzzUq/ftoPGyquKshfbDRYrGW1ftx84VmHUHtlhgFhFVdH7bUc71oS0+03sAti7Dzbg9O5mVu/O/h/4B4SDfvkHhNG+/APChH9AaH35B4TRluYfEEZbmn9AGG1p/gFhtKX5B4TRluYfEEZbGtYDQtfXIWMAYlXOfr9aQuQBxVI55oPE+q9eBe6xzFsFk66x8vpfTxa6xUrM+dq0yCVW7tyvczdKP1bCfs28cZqxCqrmff29SXqxCsNey2+aTqzC8OcCm0WPlRzoGUNx1FjJgZ9XjI0WK3ewZx+bR4mVHPw5yhapx6oY6pnMlqnGSg79fGer1GIlUnlWtHUqsRKpPXfaBvBnB+AzUwH5DCuO31GYePGwYR0Iv6PQAfiW4vkZ/o7CrjP++76b/Y9luyH+joIq+kSE31HA2kxXeOwKiL7dZuA0GfQe7wo3+FDesqx7EPp3FIj1oMl3d/87CmL3GfTXuAfX31HYg/iB14KAzhvswCdQf0eh0ASMg2uTZLE7EbjWCThdF2DItT0Dru1lc20vRK6pok9C4BrWZrpybU9Aru3FhGt7Ep/eugehuUasB02+ZZ5roowB1/bmyrW9iR94LQjovDt5cK3IBIyDaw2y2F0IXOsCnK4LMuTaPgHX9rW5ti8i11TRGxC4hrWZrlzbB5Br+zLh2j7Ep7fuQWiuEetBk+9+nmtiPwZc258r1/YnfuC1IKDz7uLBtXEmYBxcu1QWuxuBa92A03Uhhlw7IODagTbXDkTkmir6pQhcw9pMV64dAMi1A5lw7QDi01v3IDTXiPWgybfcc02UM+DaQVy5dhDxA68FAZ13Nw+ujTcB4+Da5bLYPQhc6wGcrsMZcm1cwLXxNtfGI3JNFf1yBK5hbaYr18YBcm08E66NIz69dQ9Cc41YD5p8KzzXRAUDrk3gyrUJxA+8FgR03j08uFZhAsbBtStlsWcicG0m4HQdwZBrlQHXqmyuVSFyTRX9SgSuYW2mK9cqAblWxYRrlcSnt+5BaK4R60GTb7XnmqhmwLWDuXLtYOIHXgsCOu+ZPLg2wQSMg2uNsti9CFzrBZyuCzPk2iEB1w61uXYoItdU0RsRuIa1ma5cOwSQa4cy4dohxKe37kForhHrQZPvYZ5r4jAGXDucK9cOJ37gtSCg8+7lwbX+PwYfB9eukcXuQ+BaH+B0XYQh144IuHakzbUjEbmmin4NAtewNtOVa0cAcu1IJlw7gvj01j0IzTViPWjyrfFcEzUMuHYUV64dRfzAa0FA593Hg2tVJmAcXLtOFnsWAtdmAU7XRRly7eiAa8fYXDsGkWuq6NchcA1rM125djQg145hwrWjiU9v3YPQXCPWgybfYz3XxLEMuHYcV64dR/zAa0FA5z2LBddEf+w4uHaDLPbwo+G5pmKCxJLTdTGGXDs+4NoJNtdOQOSaKvoNCFzD2kxXrh0PyLUTmHDteOLTW/cgNNeI9aDJt9ZzTdQy4NqJXLl2IvEDrwUBnTfYgU+gck2YgHFwrUkWOwOBaxmA03Vxhlw7KeDayTbXTkbkmip6EwLXsDbTlWsnAXLtZCZcO4n49NY9CM01Yj1o8j3Fc02cwoBrp3Ll2qnED7wWBHTeGTy4lmsCxsG1ybLYmQhcywScrksw5NppAddOt7l2OiLXVNEnI3ANazNduXYaINdOZ8K104hPb92D0Fwj1oMm3zrPNVHHgGtncOXaGcQPvBYEdN6ZPLg2xgSMg2tTZLGzELiWBThdMxhy7cyAa2fZXDsLkWuq6FMQuIa1ma5cOxOQa2cx4dqZxKe37kForhHrQZPv2Z5r4mwGXDuHK9fOIX7gtSCg887iwbU8EzAOrk2Txc5G4Fo24HRdkiHXzg24dp7NtfMQuaaKPg2Ba1ib6cq1cwG5dh4Trp1LfHrrHoTmGrEeNPnWe66JegZcO58r184nfuC1IKDzzubBtXwTMA6utcpi5yBwLQdwui7FkGsXBFy70ObahYhcU0VvReAa1ma6cu0CQK5dyIRrFxCf3roHoblGrAdNvhM918REBly7iCvXLiJ+4LUgoPPO4cG1AhMwDq7NkMVOInAtCThdl2bItUkB1y62uXYxItdU0WcgcA1rM125NgmQaxcz4dok4tNb9yA014j1YP8nXHuuiQYGXLuEK9cuIX7gtSCg807y4FrSBIyDa7fIYhcjcK0YcLouw5BrlwZcu8zm2mWIXFNFvwWBa1ib6cq1SwG5dhkTrl1KfHrrHoTmGrEe7P/IRM81cTkDrl3BlWtXED/wWhDQeRfz4FqhCRgH126TxS5B4FoJ4HRdliHXrgy4dpXNtasQuaaKfhsC17A205VrVwJy7SomXLuS+PTWPQjNNWI92P8ZPJ5ropEB167myrWriR94LQjovEt4cK3IBIyDa22y2KUIXCsFnK7LMeTaNQHXrrW5di0i11TR2xC4hrWZrly7BpBr1zLh2jXEp7fuQWiuEevB/j/q7rkmrmPAteu5cu164gdeCwI671IeXBtnAsbBtTtlscsQuFYGOF2XZ8i1GwKu3Whz7UZErqmi34nANazNdOXaDYBcu5EJ124gPr11D0JzjVgP9v+VUM810cSAa81cudZM/MBrQUDnXcaDa+NNwDi4drcsdjkC18oBp2smQ65NDrjWYnOtBZFrquh3I3ANazNduTYZkGstTLg2mfj01j0IzTViPdj/Z6c818QUBlybypVrU4kfeC0I6LzLeXCtwgSMg2v3ymJXI3CtGnC6rsCQa9MCrt1kc+0mRK6pot+LwDWszXTl2jRArt3EhGvTiE9v3YPQXCPWg/1/x8BzTbQy4Np0rlybTvzAa0FA513Ng2sTTMA4uNYui12DwLUawOm6IkOuzQi4drPNtZsRuaaK3o7ANazNdOXaDECu3cyEazOIT2/dg9BcI9aD/b8Y57kmbmHAtVu5cu1W4gdeCwI67xoeXKs0AePg2gOy2LUIXKsFnK4rMeTabQHXbre5djsi11TRH0DgGtZmunLtNkCu3c6Ea7cRn966B6G5RqwH+99p7bkm2hhw7Q6uXLuD+IHXgoDOu5YH16pMwDi49pAsdh0C1+oAp+vKDLl2Z8C1u2yu3YXINVX0hxC4hrWZrly7E5BrdzHh2p3Ep7fuQWiuEevB/rfueK6Juxlw7R6uXLuH+IHXgoDOu44F13L7Y8fBtUdksesRuFYPOF1XYci1ewOu3Wdz7T5ErqmiP4LANazNdOXavYBcu48J1+4lPr11D0JzjVgP9v9bkOeaaGfAtfu5cu1+4gdeCwI673oeXBMmYBxc65DFbkDgWgPgdF2VIdceCLj2oM21BxG5poregcA1rM105doDgFx7kAnXHiA+vXUPQnONWA/2P1zwXBMPMeDaw1y59jDxA68FAZ13Aw+u5ZqAcXDtcVnsRgSuNQJO15EMufZIwLVHba49isg1VfTHEbiGtZmuXHsEkGuPMuHaI8Snt+5BaK4R68H+n1aea6KDAdce48q1x4gfeC0I8I/K4MG1MSZgHFx7Uha7CYFrTYDTNYsh1x4PuPaEzbUnELmmiv4kAtewNtOVa48Dcu0JJlx7nPj01j0IzTViPdg/QD3XxJMMuPYUV649RfzAa0GA/+1lHlzLMwHj4NrTstitCFxrBZyuoxhy7emAa8/YXHsGkWuq6E8jcA1rM1259jQg155hwrWniU9v3YPQXCPWgybfTs810cmAa89y5dqzxA+8FgT4H/PjwbV8EzAOrnXKYrchcK0NcLquxpBrzwVce97m2vOIXFNF70TgGtZmunLtOUCuPc+Ea89R/wjBoAehuUasB02+L3iuiRcYcO1Frlx7kfiB14IA/+swPLhWYALGwbXnZLHbEbjWDjhdV2fItZcCrr1sc+1lRK6poj+HwDWszXTl2kuAXHuZCddeov5XM4MehOYasR40+XZ5rokuBlx7hSvXXiF+4LUgwH/dmAfXkiZgHFx7QRa7A4FrHYDTdQ2GXHs14NprNtdeQ+SaKvoLCFzD2kxXrr0KyLXXmHDtVeq/KBb0IDTXiPWgyfd1zzXxOgOuvcGVa28QP/BaEOC/v8KDa4UmYBxce0kWuxOBa52A03VNhlx7M+DaWzbX3kLkmir6Swhcw9pMV669Cci1t5hw7U3q/zYS9CA014j1oMm323NNdDPg2ttcufY28QOvBQH+hkgeXCsyAePgWpcsdhcC17oAp+taDLn2TsC1d22uvYvINVX0LgSuYW2mK9feAeTau0y49g7x6a17EJprxHrQ5Pue55p4jwHX3ufKtfepH/hAEOD/ws6Da+NMwDi49qosdjcC17oBp+vaDLn2QcC1D22ufYjINVX0VxG4hrWZrlz7AJBrHzLh2gfEp7fuQWiuEetBk2+P55roYcC1j7hy7SPiB14LAvyRLQ+ujTcB4+Da67LYPQhc6wGcrtkMufZxwLVPbK59gsg1VfTXEbiGtZmuXPsYkGufMOHax8Snt+5BaK4R60GT76eea+JTBlz7jCvXPiN+4LUgwF8D8OBahQkYB9felMWeicC1mYDTdTRDrn0ecO0Lm2tfIHJNFf1NBK5hbaYr1z4H5NoXTLj2OfHprXsQmmvEerA/X881MZMB177kyrUviR94LQjwpuLBtQkmYBxc65bF7kXgWi/gdF2HIde+Crj2tc21rxG5porejcA1rM105dpXgFz7mgnXviI+vXUPQnONWA+afL/xXBPfMODat1y59i3xA68FAZ13Lw+uVZqAcXDtHVnsPgSu9QFO13UZcu27gGvf21z7HpFrqujvIHANazNdufYdINe+Z8K174hPb92D0Fwj1oP9PPVcE70MuPYDV679QPzAa0FA593Hg2tVJqBqiowBmmJ02P9pXiLtrz3maQqRSPdr75AGS3dp+4c1a5pLOyi88dNa2oQBDlE6Szt4wAMZfWmHD3y4Iy/tqMEGRcSlHTfo0Im2tBOHGGBRlnbqUMMwwtLOGHqwpry0c1IY0qku7fyUBn5qS7sotR8eKS3tklR/EKWwtCtS/qE29NKujvADcqilXR/lh+0QS2uO9oN70KVNjYiAwZY2PTIoBl7ardFxMuDS7kgHOgMs7Z600BS+tPvTBFjY0h5OF3MhS3P4MPl5lubySaf20tw+hmvupTl+RsRcS3P+A8ZzLM39r+v1Lw3iT7/opYH8XnKwNKBfmpm9NKh3dKqlwb3dIC8B+Cwc/IWa/QUTW1SixZabo18Equ8jg//8o6zLT/L6WV6/yOtXef0mrz55/S6vP+T1p7z+ktff8vpHXv/Ka5Z6dHqzjCWv/8lrfnktIK8F5bWQvIbLa4S8FpbXIvJaVF6LyWtxeS1x87C5H7uqRYyw7v0Ucu/nkHu/hNz7NeTebyH3+kLu/R5y74+Qe3+G3Psr5N7fIff+Cbn3b8i9WSH3VNHte/OF3PtfyL35Q+4tEHJvwZB7C4XcGx5yb0TIvYVD7i0Scm/RkHuLhdxbPOTeEsG9Ob+WCL6PDb4P+jQlOeTTFKFqmkKsRApPZsT8qcRKpPSURywwdKz8FJ8YiQWHipWX8tMnsdCgsfKqIjzJEsMHi5WM9FRMjBg4VmHEJ2xi4QFiFVVFflonFgmPlUjjyZ9YNCxWIq2niGKxeWOJNJ9IisXtWBPSfroplkjtPKb0pPTHP+dDAcJG1gya/T/wDxcH/fIPF6N9+YeL0ZbmHy5GW5p/uBhtaf7hYrSl+YeL0ZbmHy5GW5p/uBhtaf7hYrSl/QD4VrcfAWJVzn6vW0L8BBRL5fgzSKz/6vWLeyzzNsNfXWPl9b+e/M0tVmLO16Z9LrFy536d+3v6sRL2a+Y/0oxVUDXv6+8/04tVGPZa/q90YhWGPxf4O3qs5EDPGP6JGis58POKf6PFyh3s2cesKLGSgz9HGZb6c5SKoZ7JzHcz3FyFfCYTx/v137tYPrNHeL/+LMC3167H8P36GTf/931J+x+O1I1RSJupiv4ewvv1sTbT9QdpBuDD1CVvxmky6D3OgBtWKG/f1T0I/X59Yj1o8l0KcD/UAOH4fv2lbqa/xqUh1xjn+/WXJn7gtSCg857F4v36Y/pjx8G1D2Sxhx8DzzUVEySWnK7rM+TaMgHXlrW5tiwi11TRP0DgGtZmunJtGUCuLcuEa8sQn966B6G5RqwHTb7Lea6J5RhwbXmuXFue+IHXgoDOG+zAJ1C5JkzAOLjWI4udgcC1DMDpugFDrmUGXFvB5toKiFxTRe9B4BrWZrpyLROQaysw4Vom8emtexCaa8R60OS7oueaWJEB11biyrWViB94LQjovDN4cC3XBIyDax/LYmcicC0TcLpuyJBrKwdcW8Xm2iqIXFNF/xiBa1ib6cq1lQG5tgoTrq1MfHrrHoTmGrEeNPmu6rkmVmXAtZFcuTaS+IHXgoDOO5MH18aYgHFw7VNZ7CwErmUBTtcchlzLCrg2yubaKESuqaJ/isA1rM105VoWINdGMeFaFvHprXsQmmvEetDku5rnmliNAddW58q11YkfeC0I6LyzeHAtzwSMg2ufy2JnI3AtG3C6JhhybY2Aa2vaXFsTkWuq6J8jcA1rM125tgYg19ZkwrU1iE9v3YPQXCPWgybftTzXxFoMuLY2V66tTfzAa0FA553Ng2v5JmAcXJspi52DwLUcwOkqGHItO+DaaJtroxG5poo+E4FrWJvpyrVsQK6NZsK1bOLTW/cgNNeI9aDJdx3PNbEOA66ty5Vr6xI/8FoQ0Hnn8OBagQkYB9e+ksVOInAtCThdcxlybb2Aa+vbXFsfkWuq6F8hcA1rM125th4g19ZnwrX1iE9v3YPQXCPWgybfDTzXxAYMuLYhV65tSPzAa0FA553kwbWkCRgH176RxS5G4Fox4HQdw5BrOQHXEjbXEohcU0X/BoFrWJvpyrUcQK4lmHAth/j01j0IzTViPWjyFZ5rQjDgWi5XruUSP/BaENB5F/PgWqEJGAfXvpPFLkHgWgngdM1jyLUxAdfybK7lIXJNFf07BK5hbaYr18YAci2PCdfGEJ/eugehuUasB02++Z5rIp8B1wq4cq2A+IHXgoDOu4QH14pMwDi41iuLXYrAtVLA6ZrPkGvJgGuFNtcKEbmmit6LwDWszXTlWhKQa4VMuJYkPr11D0JzjVgPmnyLPNdEEQOubcSVaxsRP/BaENB5l/Lg2jgTMA6u/SiLXYbAtTLA6VrAkGsbB1zbxObaJohcU0X/EYFrWJvpyrWNAbm2CROubUx8eusehOYasR40+W7quSY2ZcC1zbhybTPiB14LAjrvMh5cG28CxsG1n2WxyxG4Vg44XZMMuVYccG2szbWxiFxTRf8ZgWtYm+nKtWJAro1lwrVi4tNb9yA014j1oMl3c881sTkDrm3BlWtbED/wWhDQeZfz4FqFCRgH136Vxa5G4Fo14HQtZMi1LQOubWVzbStErqmi/4rANazNdOXaloBc24oJ17YkPr11D0JzjVgPmny39lwTWzPg2jZcubYN8QOvBQGddzUPrk0wAePgWp8sdg0C12oAp2sRQ66VBFzb1ubatohcU0XvQ+Aa1ma6cq0EkGvbMuFaCfHprXsQmmvEetDku53nmtiOAdf+j737gK6i+P4Ajj8LWGPHCljBypuQ8BIbduzYsSOEJPbYY0+ssUdsscceBSEUNXbs2LFjxx577Njzm9GdCSyb5O2be/fc7zmbc/bk99/zP9e5d+7cfN7y8rIdKte2E37grSCo867C4Fq5C5gE137Xxa5m4Fo14XTdAJBr2wdc2yHMtR0YuWaK/jsD17g205dr2xNybQcQrm0vfHrbHqTmmrAedPnumHJN7QjAtZ1QubaT8ANvBUGddzUG1ypcwCS49qcudg0D12oIp+uGgFwbFnBt5zDXdmbkmin6nwxc49pMX64NI+TaziBcGyZ8etsepOaasB50+e6Sck3tAsC1XVG5tqvwA28FQZ13DQTXijpiJ8G1v3Wx6xi4Vkc4XTcC5NpuAdd2D3Ntd0aumaL/zcA1rs305dpuhFzbHYRruwmf3rYHqbkmrAddvnukXFN7AHBtT1Su7Sn8wFtBUOddh8E15QImwbV2Xex6Bq7VE07XjQG5Njzg2l5hru3FyDVT9HYGrnFtpi/XhhNybS8Qrg0XPr1tD1JzTVgPunz3Trmm9gbg2j6oXNtH+IG3gqDOux6Da4UuYBJcm6e+R48GBq41EE7XTQC5tm/Atf3CXNuPkWum6GZDqbnGtZm+XNuXkGv7gXBtX+HT2/YgNdeE9aDLd/+Ua2p/AK4dgMq1A4QfeCsI6rwbMLg2yAVMgmvz6mI3MnCtkXC6DgHk2oiAaweGuXYgI9dM0edl4BrXZvpybQQh1w4E4doI4dPb9iA114T1oMt3ZMo1NRKAa6NQuTZK+IG3gqDOuxGDa0UuYBJcm18Xu4mBa02E03VTQK6VBVwbHebaaEaumaLPz8A1rs305VoZIddGg3CtTPj0tj1IzTVhPejyLU+5psoBuFaByrUK4QfeCoI67yYMrhW7gElwracudjMD15oJp+tmgFyrDLh2UJhrBzFyzRS9JwPXuDbTl2uVhFw7CIRrlcKnt+1Baq4J60GX78Ep19TBAFw7BJVrhwg/8FYQ1Hk3Y3BtsAuYBNcW1MVuYeBaC+F03RyQa4cGXDsszLXDGLlmir4gA9e4NtOXa4cScu0wEK4dKnx62x6k5pqwHnT5Hp5yTR0OwLUjULl2hPADbwVBnXcLBteyLmASXFtYF3sqA9emEk7XLQC5VhVw7cgw145k5Jop+sIMXOPaTF+uVRFy7UgQrlUJn962B6m5JqwHXb5HpVxTRwFw7WhUrh0t/MBbQVDnPRWDayUuYBJcW1QXexoD16YRTtctAbl2TMC1Y8NcO5aRa6boizJwjWszfbl2DCHXjgXh2jHCp7ftQWquCetBl+9xKdfUcQBcOx6Va8cLP/BWENR5T8PgWqkLmATXCnSxpzNwbTrhdN0KkGvVAddOCHPtBEaumaIXMHCNazN9uVZNyLUTQLhWLXx62x6k5pqwHnT5nphyTZ0IwLWTULl2kvADbwVBnfd0DK6NdAGT4NoSutgzGLg2g3C6bg3ItZMDrp0S5topjFwzRV+CgWtcm+nLtZMJuXYKCNdOFj69bQ9Sc01YD7p8T025pk4F4NppqFw7TfiBt4KgznsGBtdGuYBJcG0pXeyZDFybSThdhwJyrSbgWm2Ya7WMXDNFX4qBa1yb6cu1GkKu1YJwrUb49LY9SM01YT3o8j095Zo6HYBrZ6By7QzhB94KgjrvmRhcK3MBk+DaMrrYrQxcayWcrtsAcu3MgGtnhbl2FiPXTNGXYeAa12b6cu1MQq6dBcK1M4VPb9uD1FwT1oMu37NTrqmzAbh2DirXzhF+4K0gqPNuxeDaaBcwCa711sVuY+BaG+F03RaQa3UB184Nc+1cRq6Zovdm4BrXZvpyrY6Qa+eCcK1O+PS2PUjNNWE96PI9L+WaOg+Aa+ejcu184QfeCoI67zYMrpW7gElwbXld7FkMXJtFOF23A+TaBQHXLgxz7UJGrpmiL8/ANa7N9OXaBYRcuxCEaxcIn962B6m5JqwHXb4XpVxTFwFw7WJUrl0s/MBbQVDnPQuDaxUuYBJcW1EXu52Ba+2E03V7QK7VB1y7JMy1Sxi5Zoq+IgPXuDbTl2v1hFy7BIRr9cKnt+1Baq4J60GX75iUa2oMANcuReXapcIPvBUEdd7tEFwr7oidBNdW1sXueQw910xMklh6uu4AyLXLAq5dHuba5YxcM0VfmYFrXJvpy7XLCLl2OQjXLpP+N2mCHqTmmrAedPlekXJNXQHAtStRuXal8ANvBUGdN9mBz7ByTbmASXCtry52AQPXCgin646AXGsIuHZVmGtXMXLNFL0vA9e4NtOXaw2EXLsKhGsN0j+GKehBaq4J60GX79Up19TVAFy7BpVr1wg/8FYQ1HkXYHCt0AVMgmur6GL3ZuBab8LpuhMg164NuHZdmGvXMXLNFH0VBq5xbaYv164l5Np1IFy7Vvo7j4MepOaasB50+V6fck1dD8C1G1C5doPwA28FQZ13bwyuDXIBk+DaarrYfRm41pdwug4D5FpjwLUbw1y7kZFrpuirMXCNazN9udZIyLUbQbjWKP3FdtCD1FwT1oMu35tSrqmbALh2MyrXbhZ+4K0gqPPui8G1IhcwCa6toYvdn4Fr/Qmn686AXLsl4NqtYa7dysg1U/Q1GLjGtZm+XLuFkGu3gnDtFuHT2/YgNdeE9aDL97aUa+o2AK7djsq124UfeCsI6rz7Y3Ct2AVMgmv9dbEHMnBtIOF03QWQa00B1+4Ic+0ORq6Zovdn4BrXZvpyrYmQa3eAcK1J+PS2PUjNNWE96PK9M+WauhOAa2NRuTZW+uuzQBDUeQ/E4NpgFzAJrq2li51l4FqWcLruCsi1cQHX7gpz7S5Grpmir8XANa7N9OXaOEKu3QXCtXHCp7ftQWquCetBl+/4lGtqPADXJqBybYLwA28FQZ13FoNrWRfQNEVBJ00xIOo/WpTJ+2vJuZpCZfL9WjaiwfJd2gpRzZrn0vpEN35eS1u1k0OUz9LW7PRAxl/a2p0f7thLW7+rQRFzaYVdDp14SxvczQCLs7QNuhuGMZa2SfeDNeelbZ7DkM51aVvnNPBzW9p2uf3wyGlpO+X6gyiHpe2a8w+17pe2Z4wfkN0tbZ84P2y7WdoB8X5wd7m0UTER0NXSKmKDovOlHRIfJ50u7Yh8oNPJ0o7OC03RSzs+T4BFLe2kfDEXsTSPPyY/19J8/tJpeGl+f4ZrzqV5/o2IOZbm/QHGsy3N/9P1OpZG8dEvdmkkv5ccLI3ol2b+XRrVOzrN0ujeblCUIXwWTv5CLfxFE1uVs8XWm2NfBJrvfYL/3azrMlFfk/Q1WV9T9HW3vu7R1736atHXffq6X18P6OtBfT2kr4f19Yi+purrUX09pq/H9fWEvp7U11P6elpf0/T1jL6e1ddz+npeXy+EH7uaRfQK3ZsYcW9SxL3JEfemRNy7O+LePRH37o241xJx776Ie/dH3Hsg4t6DEfceirj3cMS9RyLuTY2492jEvcci7j0ece+JiHtPRtx7KuLe0xH3pkXceybi3rMR956LuPd8xL0Xgnuzfy0WfN80+N7l05Rst09T1KO5PdLO5PBkRj2WS6xMTk951OPdxyrO8YmReqK7WEU5P31ST3YZq6gixpMs9VRXsbKxnoqppzuPVRLzCZua1kms0orYT+vUM9GxMnk8+VPPRsXK5PUUUT03dyyV5xNJ9Xw41ui8n26qF3I7jzk9KR3x5zwsQNggNIP+/X9IHy52+ZU+XIz3lT5cjLe09OFivKWlDxfjLS19uBhvaenDxXhLSx8uxlta+nAx3tLSh4vxljaB8HVIM0Gs8n/f65ZRE4limRwnkcT6r16T/WO5txlO8Y1V1PF68m6/WJnZX5ve4xOrcM7XuffmHysTfs3ckmeswRVzv/6+L79YJVGv5e/PJ1ZJ9HOBB+LHynb2jOHBuLGynT+veCherMKunn08HCdWtuvnKI/kHqusu2cyUwnnKuUzmSTer79OfY8eQxjerz+E8O21uwG+X//Fsf99fyn8D0fmRj+mzTRFX4fh/fpcm+n7g/RFQsS8NJanyaj3+EW6YcXy9l3bg9Tv1xfWgy7f6YT7YQYI4vv1p4+Vv8aXKdeY5Pv1XxZ+4K0gqPMegvF+/RIXMAmuraeLPZSBa0MJp+vugFx7JeDaq2GuvcrINVP09Ri4xrWZvlx7hZBrr4Jw7RXh09v2IDXXhPWgy/e1lGvqNQCuvY7KtdeFH3grCOq8h2JwrdQFTIJrA3WxhzFwbRjhdN0DkGtvBFx7M8y1Nxm5Zoo+kIFrXJvpy7U3CLn2JgjX3hA+vW0PUnNNWA+6fGekXFMzALj2FirX3hJ+4K0gqPMehsG1kS5gElxTutjDGbg2nHC67gnItbcDrr0T5to7jFwzRVcMXOPaTF+uvU3ItXdAuPa28Olte5Caa8J60OX7bso19S4A195D5dp7wg+8FQR13sMxuDbKBUyCa4N0sUcwcG0E4XQdDsi19wOufRDm2geMXDNFH8TANa7N9OXa+4Rc+wCEa+8Ln962B6m5JqwHXb4zU66pmQBc+xCVax8KP/BWENR5j8DgWpkLmATXinWxKxm4Vkk4XfcC5NpHAdc+DnPtY0aumaIXM3CNazN9ufYRIdc+BuHaR8Knt+1Baq4J60GX7ycp19QnAFz7FJVrnwo/8FYQ1HlXYnBttAuYBNeyuthVDFyrIpyuewNy7bOAa5+HufY5I9dM0bMMXOPaTF+ufUbItc9BuPaZ8Olte5Caa8J60OXbmnJNtQJw7QtUrn0h/MBbQVDnXYXBtY4PRk+Ca6W62NUMXKsmnK77AHLty4BrX4W59hUj10zRSxm4xrWZvlz7kpBrX4Fw7Uvh09v2IDXXhPWgy/frlGvqawCufYPKtW+EH3grCOq8qzG4VuECJsG1DXWxaxi4VkM4XfcF5Nq3Ade+C3PtO0aumaJvyMA1rs305dq3hFz7DoRr3wqf3rYHqbkmrAddvm0p11QbANe+R+Xa98IPvBUEdd41EFwb3BE7Ca5trItdx8C1OsLpuh8g134IuPZjmGs/MnLNFH1jBq5xbaYv134g5NqPIFz7Qfj0tj1IzTVhPejy/SnlmvoJgGs/o3LtZ+EH3gqCOu86DK4pFzAJrg3Rxa5n4Fo94XTdH5BrvwRc+zXMtV8ZuWaKPoSBa1yb6cu1Xwi59isI134RPr1tD1JzTVgPunxnpVxTswC49hsq134TfuCtIKjzrsfgWqELmATXNtPFbmDgWgPhdD0AkGu/B1z7I8y1Pxi5Zoq+GQPXuDbTl2u/E3LtDxCu/S58etsepOaasB50+f6Zck39CcC1v1C59pfwA28FQZ13AwbXBrmASXBtC13sRgauNRJO1xGAXPs74No/Ya79w8g1U/QtGLjGtZm+XPubkGv/gHDtb+HT2/YgNdeE9aDLtz3lmmoH4FqPcaBcI114Dz5BUOfdiMG1IhcwCa5tpYvdxMC1JsLpeiAg1+YZ99/3/43rMSfXzI1+TJtpir4VA9e4NtOXa/OMo6vd/8ZhcG0e4dPb9iA114T1oMt33nEp1+YdJ3+N86FybT7hB94KgjrvJgyuFbuASXBtqC52MwPXmgmn60hArs0fcG2BMNcWYOSaKfpQBq5xbaYv1+Yn5NoCIFybX/j0tj1IzTVhPejy7ZlyTfUE4FovVK71En7grSCo827G4NpgFzAJrm2ri93CwLUWwuk6CpBrCwZcWyjMtYUYuWaKvi0D17g205drCxJybSEQri0ofHrbHqTmmrAedPkunHJNLQzAtUVQubaI8ANvBUGddwsG17IuYBJc214XeyoD16YSTtcyQK4tGnBtsTDXFmPkmin69gxc49pMX64tSsi1xUC4tqjw6W17kJprwnrQ5VuQck0VAHBtcVSuLS78wFtBUOc9FYNrJS5gElzbURd7GgPXphFO19GAXFsi4NqSYa4tycg1U/QdGbjGtZm+XFuCkGtLgnBtCeHT2/YgNdeE9aDLd6mUa2opAK4tjcq1pYUfeCsI6rynYXCt1AVMgmvDdLGnM3BtOuF0LQfk2jIB15YNc21ZRq6Zog9j4BrXZvpybRlCri0LwrVlhE9v24PUXBPWgy7f3inXVG8Ari2HyrXlhB94KwjqvKdjcG2kC5gE13bRxZ7BwLUZhNO1ApBrywdcWyHMtRUYuWaKvgsD17g205dryxNybQUQri0vfHrbHqTmmrAedPmumHJNrQjAtZVQubaS8ANvBUGd9wwMro1yAZPg2m662DMZuDaTcLpWAnJt5YBrfcJc68PINVP03Ri4xrWZvlxbmZBrfUC4trLw6W17kJprwnrQ5ds35ZrqC8C1fqhc6yf8wFtBUOc9E4NrZS5gElzbQxe7lYFrrYTT9SBArq0ScG3VMNdWZeSaKfoeDFzj2kxfrq1CyLVVQbi2ivDpbXuQmmvCetDlu1rKNbUaANdWR+Xa6sIPvBUEdd6tGFwb7QImwbXhuthtDFxrI5yuBwNybY2Aa2uGubYmI9dM0YczcI1rM325tgYh19YE4doawqe37UFqrgnrQZdv/5Rrqj8A1wagcm2A8ANvBUGddxsG18pdwCS4trcu9iwGrs0inK6HAHJtrYBra4e5tjYj10zR92bgGtdm+nJtLUKurQ3CtbWET2/bg9RcE9aDLt91Uq6pdQC4ti4q19YVfuCtIKjznoXBtQoXMAmu7auL3c7AtXbC6XooINfWC7i2fphr6zNyzRR9XwaucW2mL9fWI+Ta+iBcW0/49LY9SM01YT3o8h2Yck0NBOBaBpVrGeEH3gqCOu92CK5lO2InwbX9dbF7HkvPNROTJJaerocBck0FXCsMc62QkWum6PszcI1rM325pgi5VgjCNSV8etsepOaasB50+Q5KuaYGAXCtCJVrRcIPvBUEdd5kBz7DyjXlAibBtRG62AUMXCsgnK6HA3KtOODa4DDXBjNyzRR9BAPXuDbTl2vFhFwbDMK1YuHT2/YgNdeE9aDLN5tyTWUBuFaCyrUS4QfeCoL8T2VgcK3QBUyCayN1sXszcK034XQ9ApBrpQHXNghzbQNGrpmij2TgGtdm+nKtlJBrG4BwrVT49LY9SM01YT3o8t0w5ZraEIBrG6FybSPhB94KgvyzlzG4NsgFTIJrZbrYfRm41pdwulYBcm3jgGubhLm2CSPXTNHLGLjGtZm+XNuYkGubgHBtY+HT2/YgNdeE9aDLd0jKNTUEgGubonJtU+EH3gqC/MP8MLhW5AImwbVyXez+DFzrTzhdjwTk2mYB1zYPc21zRq6ZopczcI1rM325thkh1zYH4dpmwqe37UFqrgnrQZfvFinX1BYAXNsSlWtbCj/wVhDknw6DwbViFzAJrlXqYg9k4NpAwul6FCDXtgq4tnWYa1szcs0UvZKBa1yb6cu1rQi5tjUI17YSPr1tD1JzTVgPunyHplxTQwG4tg0q17YRfuCtIMh/3RiDa4NdwCS4drAudpaBa1nC6Xo0INe2Dbi2XZhr2zFyzRT9YAaucW2mL9e2JeTadiBc21b49LY9SM01YT3o8t0+5ZraHoBrO6BybQfhB94Kgvz3VzC4lnUBk+DaobrYQxi4NoRwuh4DyLUdA67tFObaToxcM0U/lIFrXJvpy7UdCbm2EwjXdhQ+vW0PUnNNWA+6fIelXFPDALi2MyrXdhZ+4K0gyN8QicG1EhcwCa4dros9lIFrQwmn67GAXNsl4NquYa7tysg1U/TDGbjGtZm+XNuFkGu7gnBtF+HT2/YgNdeE9WDHX7hOuaZ2A+Da7qhc2134gbeCIP8XdgyulbqASXCtShd7GAPXhhFO1+MAubZHwLU9w1zbk5FrpuhVDFzj2kxfru1ByLU9Qbi2h/DpbXuQmmvCerDjTyamXFPDAbi2FyrX9hJ+4K0gyB/ZYnBtpAuYBNeO0sUezsC14YTT9XhAru0dcG2fMNf2YeSaKfpRDFzj2kxfru1NyLV9QLi2t/S/+Bz0IDXXhPVgx9/gSbmm9gXg2n6oXNtP+IG3giB/DYDBtVEuYBJcO0YXewQD10YQTtdqQK7tH3DtgDDXDmDkmin6MQxc49pMX67tT8i1A0C4tr/0DzkPepCaa8J6sCPflGtqBADXDkTl2oHCD7wVBHlTYXCtzAVMgmvH6WJXMnCtknC6ngDItZEB10aFuTaKkWum6McxcI1rM325NpKQa6NAuDZS+u/1Bz1IzTVhPdjxKaEp11QZANdGo3JttPADbwVBnXclBtdGu4BJcK1aF7uKgWtVhNP1RECulQdcqwhzrYKRa6bo1Qxc49pMX66VE3KtAoRr5dLfyhL0IDXXhPVgB09TrqlKAK4dhMq1g4QfeCsI6ryrMLhW7gImwbUTdbGrGbhWTThdTwLk2sEB1w4Jc+0QRq6Zop/IwDWuzfTl2sGEXDsEhGsHS5/eQQ9Sc01YD3Z8jkHKNXUoANcOQ+XaYcIPvBUEdd7VGFyrcAFNUxR00hQDov6jRZm8v14eG05AZfL9en3s3MXId2lvRcTKd2nvjY3cpLyW9mF0rLyW9unYzpon/tK+6DRW/KV9M7aLpo65tO+7ihVzaT+P7fqwxVnab93EirO0v7qLFWNpPXIY0rkubb6cBn5uS+uV2w+PnJa2SK4/iHJY2uI5/1DrfmlLx/gB2d3Slovzw7abpa0U7wd3l0vrFxMBXS1t9dig6HxpA+LjpNOlrZsPdDpbWl5oil5aUZ4Ai1paSb6Yi1iaxx+Tn2tpPn/pNLw0vz/DNefSPP9GxBxL8/4A49mW5v/peh1Lo/joF7s0kt9LDpZG9Esz/y6N6h2dZml0bzcoyhA+Cyd/oRb+oomtytli682xLwLN9z7B/z5c1+UIfVXp60h9HaWvo/V1jL6O1ddx+jpeX9X6OkFfJ+rrJH2drK9T9HWqvk7TV42+avV1ur7O0NeZ+jpLX2fr6xx91enrXH2dp6/zw49dzSJ6he4dEXGvKuLekRH3joq4d3TEvWMi7h0bce+4iHvHR9yrjrh3QsS9EyPunRRx7+SIe6dE3Ds14t5pEfdqIu7VRtw7PeLeGRH3zoy4d1bEvbMj7p0Tca8u4t65EffOi7h3fnBv9q/Fgu+bBt+7fJqS7fZpijott0famRyezKiaXGJlcnrKo2q7j1Wc4xMjdXp3sYpyfvqkzugyVlFFjCdZ6syuYmVjPRVTZ3UeqyTmEzZ1diexSitiP61T50THyuTx5E/VRcXK5PUUUZ07dyyV5xNJdV441ui8n26q83M7jzk9KX3xz3lYgLBBaAb9+/+QPlzs8it9uBjvK324GG9p6cPFeEtLHy7GW1r6cDHe0tKHi/GWlj5cjLe09OFivKWlDxfjLe0wwtchhxPEKv/3vW4ZdQRRLJNjFUms/+p1pH8s9zbDo3xjFXW8njzaL1Zm9temx/jEKpzzde6x+cfKhF8zH5dnrMEVc7/+Pj6/WCVRr+Wr84lVEv1c4IT4sbKdPWM4MW6sbOfPK06KF6uwq2cfJ8eJle36Ocopuccq6+6ZzKmEc5XymUwS79c/uV4/Y2d4v34N4dtrTwZ8v/4F4/77fmH4H47MjX5Mm2mKfjLD+/W5NtP3B+kFhIi5cBxPk1Hv8QV0w4rl7bu2B6nfry+sB12+FxHuhxkgiO/Xv2ic/DVeTLnGJN+vf7HwA28FQZ13DcT79Us6YifBtVN1sesYuFZHOF1PAeRafcC1S8Jcu4SRa6bopzJwjWszfblWT8i1S0C4Vi98etsepOaasB50+Y5JuabGAHDtUlSuXSr8wFtBUOddh8E15QImwbUaXex6Bq7VE07XUwG5dlnAtcvDXLuckWum6DUMXOPaTF+uXUbItctBuHaZ8Olte5Caa8J60OV7Rco1dQUA165E5dqV0h+nB4Kgzrseg2uFLmASXDtdF7uBgWsNhNP1NECuNQRcuyrMtasYuWaKfjoD17g205drDYRcuwqEaw3Cp7ftQWquCetBl+/VKdfU1QBcuwaVa9cIP/BWENR5N2BwbZALmATXztTFbmTgWiPhdK0B5Nq1AdeuC3PtOkaumaKfycA1rs305dq1hFy7DoRr1wqf3rYHqbkmrAddvtenXFPXA3DtBlSu3SD8wFtBUOfdiMG1IhcwCa6drYvdxMC1JsLpWgvItcaAazeGuXYjI9dM0c9m4BrXZvpyrZGQazeCcK1R+PS2PUjNNWE96PK9KeWaugmAazejcu1m4QfeCoI67yYMrhW7gElwrU4Xu5mBa82E0/V0QK7dEnDt1jDXbmXkmil6HQPXuDbTl2u3EHLtVhCu3SJ8etsepOaasB50+d6Wck3dBsC121G5drvwA28FQZ13MwbXBruASXDtPF3sFgautRBO1zMAudYUcO2OMNfuYOSaKfp5DFzj2kxfrjURcu0OEK41CZ/etgepuSasB12+d6ZcU3cCcG0sKtfGCj/wVhDUebdgcC3rAibBtQt0sacycG0q4XQ9E5Br4wKu3RXm2l2MXDNFv4CBa1yb6cu1cYRcuwuEa+OET2/bg9RcE9aDLt/xKdfUeACuTUDl2gThB94KgjrvqRhcK3EBk+DaRbrY0xi4No1wup4FyLXmgGsTw1ybyMg1U/SLGLjGtZm+XGsm5NpEEK41C5/etgepuSasB12+k1KuqUkAXJuMyrXJwg+8FQR13tMwuFbqAibBtXpd7OkMXJtOOF3PBuTalIBrd4e5djcj10zR6xm4xrWZvlybQsi1u0G4NkX49LY9SM01YT3o8r0n5Zq6B4Br96Jy7V7hB94Kgjrv6RhcG+kCJsG1MbrYMxi4NoNwup4DyLWWgGv3hbl2HyPXTNHHMHCNazN9udZCyLX7QLjWInx62x6k5pqwHnT53p9yTd0PwLUHULn2gPADbwVBnfcMDK6NcgGT4NplutgzGbg2k3C61gFy7cGAaw+FufYQI9dM0S9j4BrXZvpy7UFCrj0EwrUHhU9v24PUXBPWgy7fh1OuqYcBuPYIKtceEX7grSCo856JwbUyFzAJrl2hi93KwLVWwul6LiDXpgZcezTMtUcZuWaKfgUD17g205drUwm59igI16YKn962B6m5JqwHXb6PpVxTjwFw7XFUrj0u/MBbQVDn3YrBtdEuYBJca9DFbmPgWhvhdD0PkGtPBFx7Msy1Jxm5ZorewMA1rs305doThFx7EoRrTwif3rYHqbkmrAddvk+lXFNPAXDtaVSuPS38wFtBUOfdhsG1chcwCa5drYs9i4Frswin6/mAXJsWcO2ZMNeeYeSaKfrVDFzj2kxfrk0j5NozIFybJnx62x6k5pqwHnT5PptyTT0LwLXnULn2nPADbwVBnfcsDK5VuIBJcO1aXex2Bq61E07XCwC59nzAtRfCXHuBkWum6NcycI1rM3259jwh114A4drzwqe37UFqrgnrQZfviynX1IsAXHsJlWsvCT/wVhDUebdDcK20I3YSXLteF7vncfRcMzFJYunpeiEg16YHXHs5zLWXGblmin49A9e4NtOXa9MJufYyCNemC5/etgepuSasB12+r6RcU68AcO1VVK69KvzAW0FQ50124DOsXFMuYBJca9TFLmDgWgHhdL0IkGuvBVx7Pcy11xm5ZoreyMA1rs305dprhFx7HYRrrwmf3rYHqbkmrAddvm+kXFNvAHDtTVSuvSn8wFtBUOddgMG1QhcwCa7dpIvdm4FrvQmn68WAXJsRcO2tMNfeYuSaKfpNDFzj2kxfrs0g5NpbIFybIXx62x6k5pqwHnT5vp1yTb0NwLV3ULn2jvADbwVBnXdvDK4NcgGT4Notuth9GbjWl3C61gNy7d2Aa++FufYeI9dM0W9h4BrXZvpy7V1Crr0HwrV3hU9v24PUXBPWgy7f91OuqfcBuPYBKtc+EH7grSCo8+6LwbUiFzAJrt2mi92fgWv9CafrJYBcmxlw7cMw1z5k5Jop+m0MXOPaTF+uzSTk2ocgXJspfHrbHqTmmrAedPl+lHJNfQTAtY9Rufax8ANvBUGdd38MrhW7gElwrUkXeyAD1wYSTtcxgFz7JODap2GufcrINVP0JgaucW2mL9c+IeTapyBc+0T49LY9SM01YT3o8v0s5Zr6DIBrn6Ny7XPhB94KgjrvgRhcG+wCJsG1O3WxswxcyxJO10sBudYacO2LMNe+YOSaKfqdDFzj2kxfrrUScu0LEK61Cp/etgepuSasB12+X6ZcU18CcO0rVK59JfzAW0FQ553F4FrWBUyCa+N0sYcwcG0I4XS9DJBrXwdc+ybMtW8YuWaKPo6Ba1yb6cu1rwm59g0I174WPr1tD1JzTVgPuny/TbmmvgXg2neoXPtO+IG3gqDOewgG10pcwCS4Nl4XeygD14YSTtfLAbnWFnDt+zDXvmfkmin6eAaucW2mL9faCLn2PQjX2oRPb9uD1FwT1oMu3x9SrqkfALj2IyrXfhR+4K0gqPMeisG1UhcwCa4162IPY+DaMMLpegUg134KuPZzmGs/M3LNFL2ZgWtcm+nLtZ8IufYzCNd+Ej69bQ9Sc01YD7p8f0m5pn4B4NqvqFz7VfiBt4KgznsYBtdGuoBJcG2SLvZwBq4NJ5yuVwJybVbAtd/CXPuNkWum6JMYuMa1mb5cm0XItd9AuDZL+PS2PUjNNWE96PL9PeWa+h2Aa3+gcu0P4QfeCoI67+EYXBvlAibBtSm62CMYuDaCcLo2AHLtz4Brf4W59hcj10zRpzBwjWszfbn2JyHX/gLh2p/Cp7ftQWquCetBl+/fKdfU3wBc+weVa/8IP/BWENR5j8DgWpkLmATX7tHFrmTgWiXhdL0KkGvtAdd63NVjTq6ZG/2YNtMU/R4GrnFtpi/X2gm5ZvaFo8mo97hd+PS2PUjNNWE96PKd5y66/UDlGmUNuNb4v7tAufa/u2QfeCsI6rwrMbg22gVMgmstuthVDFyrIpyuVwNybd67gj0Mc20+Rq6ZorcwcI1rM325Nu9ddLWbD4Rr8wqf3rYHqbkmrAddvvOnXFPzA3BtAVSuLSD8wFtBUOddhcG1chcwCa7dr4tdzcC1asLpeg0g13oGXOsV5lovRq6Zot/PwDWuzfTlWk9CrvUC4VpP4dPb9iA114T1oMt3wZRrakEAri2EyrWFhB94KwjqvKsxuFbhAibBtQd1sWsYuFZDOF2vBeTawgHXFglzbRFGrpmiP8jANa7N9OXawoRcWwSEawsLn962B6m5JqwHXb6LplxTiwJwbTFUri0m/MBbQVDnXQPBtZEdsZPg2sO62HUMXKsjnK7XAXKtIODa4mGuLc7INVP0hxm4xrWZvlwrIOTa4iBcKxA+vW0PUnNNWA+6fJdIuaaWAODakqhcW1L4gbeCoM67DoNrygVMgmtTdbHrGbhWTzhdrwfk2lIB15YOc21pRq6Zok9l4BrXZvpybSlCri0NwrWlhE9v24PUXBPWgy7fZVKuqWUAuLYsKteWFX7grSCo867H4FqhC5gE1x7TxW5g4FoD4XS9AZBrvQOuLRfm2nKMXDNFf4yBa1yb6cu13oRcWw6Ea72FT2/bg9RcE9aDLt/lU66p5QG4tgIq11YQfuCtIKjzbsDg2iAXMAmuPaGL3cjAtUbC6doIyLUVA66tFObaSoxcM0V/goFrXJvpy7UVCbm2EgjXVhQ+vW0PUnNNWA+6fFdOuaZWBuBaH1Su9RF+4K0gqPNuxOBakQuYBNee0sVuYuBaE+F0vRGQa30DrvULc60fI9dM0Z9i4BrXZvpyrS8h1/qBcK2v8Olte5Caa8J60OW7Sso1tQoA11ZF5dqqwg+8FQR13k0YXCt2AZPg2jRd7GYGrjUTTtebALm2WsC11cNcW52Ra6bo0xi4xrWZvlxbjZBrq4NwbTXh09v2IDXXhPWgy3eNlGtqDQCurYnKtTWFH3grCOq8mzG4NtgFTIJrz+pitzBwrYVwut4MyLX+AdcGhLk2gJFrpujPMnCNazN9udafkGsDQLjWX/qnZgY9SM01YT3o8l0r5ZpaC4Bra6NybW3hB94KgjrvFgyuZV1A0xQFnTTFgKj/aFEm76+L5/rbNiqT79elEX8nJ9+lXRn1N3fyXNo10X+/J6+l3dDJ3wLKZ2k3d/p3heIv7fbO/0ZR7KWN7ervHcVc2oQu/3ZSvKVN7ubvMMVZ2r3d/U2nGEt7oPu/D5Xz0h7J4W9N5bq0x3P6u1W5Le3p3P4GVk5Ley7Xv6eVw9Jeyvlvc3W/tFdj/J2v7pb2Zpy/GdbN0t6J9/fHulzaBzH/lllXS/s49t9F63xpn8f/G2udLu2rfP5eWydL+y6vv/0WvbQf8/w7clFL+zXfv0kXsTSPPyY/19J8/tJpeGl+f4ZrzqV5/o2IOZbm/QHGsy3N/9P1OpZG8dEvdmkkv5ccLI3ol2b+XRrVOzrN0ujeblCUIXwWTv5CLfxFE1uVs8XWm2NfBJrvfYL/vY6uy7r6Wk9f6+troL4y+lL6KtTXIH0V6atYX4P1ldVXib5K9bWBvjbU10b62lhfm+hriKmzvjbT1+b62kJfW+prK31tra+h+tom/NjVLKJX6N66EffWi7i3fsS9gRH3MhH3VMS9woh7gyLuFUXcK464NzjiXjbiXknEvdKIextE3Nsw4t5GEfc2jri3ScS9IRH3No24t1nEvc0j7m0RcW/LiHtbRdzbOuLe0Ih72wT3Zv+y//emwfccnqYUdvE0RZXGeaSd7fLJjNog91hl3TzlURvmGivb7RMjtVFusTI5PH1SG+cSK5PTkyy1STjW6LyfiqltCP9p4vAx87D8YFkot94tzjXnId3lXJR7/TbtMlZRRZy92KyrWNl4+7p557FK4vbIFp3EKq2I329bRsfK5NO7W0XFyuR3DraeO5bK90wNJTxTRzCdqZLQmfr3/yF90NvlV/qgN95X+qA33tLSB73xlpY+6I23tPRBb7ylpQ964y0tfdAbb2npg954S0sf9MZb2tqEr0PWIYhV/u/7DjNqXaJYJsf1SGL9V6/1/WO5t3wO9I1V1PF6MuMXKzP7a1PlE6twzte5hfnHyoRfMw/KM9bgirlffxflF6sk6rV8cT6xSqKfCwyOHyvb2TOGbNxY2c6fV5QQzhzCZ4CK8tlHEr+j8Hx9jx5TGX5HYSrhW4pvAfwdhW2D31HYLvyPZdsx/o6CKfrzDL+jwLWZvj+wtiXEwnYgv6OwLfG/hHP1IPXvKAjrQZfv9unvKKjt75K/xh1Qf0dhB+EH3gqCOu+pGL+jUOICJsG1F3WxpzFwbRrhdL0VkGs7BlzbKcy1nRi5Zor+IgPXuDbTl2s7EnJtJxCu7Sh8etsepOaasB50+Q5LuaaGAXBtZ1Su7Sz8wFtBUOc9DYNrpS5gElybros9nYFr0wmn622AXNsl4NquYa7tysg1U/TpDFzj2kxfru1CyLVdQbi2i/DpbXuQmmvCetDlu1vKNbUbANd2R+Xa7tIPfCAI6rynY3BtpAuYBNde0cWewcC1GYTT9XZAru0RcG3PMNf2ZOSaKforDFzj2kxfru1ByLU9Qbi2h/DpbXuQmmvCetDlOzzlmhoOwLW9ULm2l/ADbwVBnfcMDK6NcgGT4NprutgzGbg2k3C6NgFybe+Aa/uEubYPI9dM0V9j4BrXZvpybW9Cru0DwrW9hU9v24PUXBPWgy7ffVOuqX0BuLYfKtf2E37grSCo856JwbUyFzAJrr2hi93KwLVWwul6ByDX9g+4dkCYawcwcs0U/Q0GrnFtpi/X9ifk2gEgXNtf+PS2PUjNNWE96PIdkXJNjQDg2oGoXDtQ+IG3gqDOuxWDa6NdwCS4NkMXu42Ba22E0/VOQK6NDLg2Ksy1UYxcM0WfwcA1rs305dpIQq6NAuHaSOHT2/YgNdeE9aDLtyzlmioD4NpoVK6NFn7grSCo827D4FrHh8EnwbW3dbFnMXBtFuF0HQvItfKAaxVhrlUwcs0U/W0GrnFtpi/Xygm5VgHCtXLh09v2IDXXhPWgy7cy5ZqqBODaQahcO0j4gbeCoM57FgbXKlzAJLj2ri52OwPX2gmn6zhArh0ccO2QMNcOYeSaKfq7DFzj2kxfrh1MyLVDQLh2sPDpbXuQmmvCetDle2jKNXUoANcOQ+XaYcIPvBUEdd7tEFwb1RE7Ca69r4vd83h6rpmYJLH0dL0LkGuHB1w7Isy1Ixi5Zor+PgPXuDbTl2uHU/5tLxCuHS58etsepOaasB50+ValXFNVAFw7EpVrRwo/8FYQ1HmTHfgMK9eUC5gE12bqYhcwcK2AcLqOB+TaUQHXjg5z7WhGrpmiz2TgGtdm+nLtKEKuHQ3CtaOET2/bg9RcE9aDLt9jUq6pYwC4diwq144VfuCtIKjzLsDgWqELmATXPtLF7s3Atd6E03UCINeOC7h2fJhrxzNyzRT9IwaucW2mL9eOI+Ta8SBcO0749LY9SM01YT3o8q1OuaaqAbh2AirXThB+4K0gqPPujcG1QS5gElz7RBe7LwPX+hJO12ZArp0YcO2kMNdOYuSaKfonDFzj2kxfrp1IyLWTQLh2ovDpbXuQmmvCetDle3LKNXUyANdOQeXaKcIPvBUEdd59MbhW5AImwbXPdLH7M3CtP+F0nQjItVMDrp0W5tppjFwzRf+MgWtcm+nLtVMJuXYaCNdOFT69bQ9Sc01YD7p8a1KuqRoArtWicq1W+IG3gqDOuz8G14pdwCS41qqLPZCBawMJp+skQK6dHnDtjDDXzmDkmil6KwPXuDbTl2unE3LtDBCunS58etsepOaasB50+Z6Zck2dCcC1s1C5dpbwA28FQZ33QAyuDXYBk+Dal7rYWQauZQmn62RArp0dcO2cMNfOYeSaKfqXDFzj2kxfrp1NyLVzQLh2tvDpbXuQmmvCetDlW5dyTdUBcO1cVK6dK/zAW0FQ553F4FrWBUyCa1/rYg9h4NoQwuk6BZBr5wVcOz/MtfMZuWaK/jUD17g205dr5xFy7XwQrp0nfHrbHqTmmrAedPlekHJNXQDAtQtRuXah8ANvBUGd9xAMrpW4gElw7Vtd7KEMXBtKOF3vBuTaRQHXLg5z7WJGrpmif8vANa7N9OXaRYRcuxiEaxcJn962B6m5JqwHXb71KddUPQDXLkHl2iXCD7wVBHXeQzG4VuoCJsG1Nl3sYQxcG0Y4Xe8B5NqYgGuXhrl2KSPXTNHbGLjGtZm+XBtDyLVLQbg2Rvj0tj1IzTVhPejyvSzlmroMgGuXo3LtcuEH3gqCOu9hGFwb6QImwbUfdLGHM3BtOOF0vReQa1cEXLsyzLUrGblmiv4DA9e4NtOXa1cQcu1KEK5dIXx62x6k5pqwHnT5NqRcUw0AXLsKlWtXCT/wVhDUeQ/H4NooFzAJrv2kiz2CgWsjCKdrCyDXrg64dk2Ya9cwcs0U/ScGrnFtpi/Xribk2jUgXLta+PS2PUjNNWE96PK9NuWauhaAa9ehcu064QfeCoI67xEYXCtzAZPg2i+62JUMXKsknK73AXLt+oBrN4S5dgMj10zRf2HgGtdm+nLtekKu3QDCteuFT2/bg9RcE9aDLt/GlGuqEYBrN6Jy7UbhB94KgjrvSgyujXYBk+DaLF3sKgauVRFO1/sBuXZTwLWbw1y7mZFrpuizGLjGtZm+XLuJkGs3g3DtJuHT2/YgNdeE9aDL95aUa+oWAK7disq1W4UfeCsI6ryrMLhW7gImwbXfdbGrGbhWTThdHwDk2m0B124Pc+12Rq6Zov/OwDWuzfTl2m2EXLsdhGu3CZ/etgepuSasB12+TSnXVBMA1+5A5dodwg+8FQR13tUYXKtwAZPg2p+62DUMXKshnK4PAnLtzoBrY8NcG8vINVP0Pxm4xrWZvly7k5BrY0G4dqfw6W17kJprwnrQ5Tsu5ZoaB8C1u1C5dpfwA28FQZ13DQTXyjpiJ8G1v3Wx6xi4Vkc4XR8C5Nr4gGsTwlybwMg1U/S/GbjGtZm+XBtPyLUJIFwbL3x62x6k5pqwHnT5NqdcU80AXJuIyrWJwg+8FQT5n8rA4JpyAZPgWrsudj0D1+oJp+vDgFybFHBtcphrkxm5ZorezsA1rs305dokQq5NBuHaJOHT2/YgNdeE9aDLd0rKNTUFgGt3o3LtbuEH3gqC/LOXMbhW6AImwbV5LunRo4GBaw2E0/URQK7dE3Dt3jDX7mXkmim62VBqrnFtpi/X7iHk2r0gXLtH+PS2PUjNNWE96PJtSbmmWgC4dh8q1+4TfuCtIMg/zA+Da4NcwCS4Nq8udiMD1xoJp+tUQK7dH3DtgTDXHmDkmin6vAxc49pMX67dT8i1B0C4dr/w6W17kJprwnrQ5ftgyjX1IADXHkLl2kPCD7wVBPmnw2BwrcgFTIJr8+tiNzFwrYlwuj4KyLWHA649EubaI4xcM0Wfn4FrXJvpy7WHCbn2CAjXHhY+vW0PUnNNWA+6fKemXFNTAbj2KCrXHhV+4K0gyH/dGINrxS5gElzrqYvdzMC1ZsLp+hgg1x4LuPZ4mGuPM3LNFL0nA9e4NtOXa48Rcu1xEK49Jnx62x6k5pqwHnT5PpFyTT0BwLUnUbn2pPADbwVB/vsrGFwb7AImwbUFdbFbGLjWQjhdHwfk2lMB154Oc+1pRq6Zoi/IwDWuzfTl2lOEXHsahGtPCZ/etgepuSasB12+01KuqWkAXHsGlWvPCD/wVhDkb4jE4FrWBUyCawvrYk9l4NpUwun6BCDXng249lyYa88xcs0UfWEGrnFtpi/XniXk2nMgXHtW+PS2PUjNNWE96PJ9PuWaeh6Aay+gcu0F4QfeCoL8X9gxuFbiAibBtUV1sacxcG0a4XR9EpBrLwZceynMtZcYuWaKvigD17g205drLxJy7SUQrr0ofHrbHqTmmrAedPlOT7mmpgNw7WVUrr0s/MBbQZA/ssXgWqkLmATXCnSxpzNwbTrhdH0KkGuvBFx7Ncy1Vxm5ZopewMA1rs305dorhFx7FYRrrwif3rYHqbkmrAddvq+lXFOvAXDtdVSuvS78wFtBkL8GwODaSBcwCa4toYs9g4FrMwin69OAXHsj4NqbYa69ycg1U/QlGLjGtZm+XHuDkGtvgnDtDeHT2/YgNdeE9WBHvinX1AwArr2FyrW3hB94KwjypsLg2igXMAmuLaWLPZOBazMJp+s0QK69HXDtnTDX3mHkmin6Ugxc49pMX669Tci1d0C49rbw6W17kJprwnrQ5ftuyjX1LgDX3kPl2nvCD7wVBHXeMzG4VuYCJsG1ZXSxWxm41ko4XZ8B5Nr7Adc+CHPtA0aumaIvw8A1rs305dr7hFz7AIRr7wuf3rYHqbkmrAc7eJpyTc0E4NqHqFz7UPiBt4KgzrsVg2ujXcAkuNZbF7uNgWtthNP1WUCufRRw7eMw1z5m5Jopem8GrnFtpi/XPiLk2scgXPtI+PS2PUjNNWE96PL9JOWa+gSAa5+icu1T4QfeCoI67zYMrpW7gElwbXld7FkMXJtFOF2fA+TaZwHXPg9z7XNGrpmiL8/ANa7N9OXaZ4Rc+xyEa58Jn962B6m5JqwHO54mplxTrQBc+wKVa18IP/BWENR5z8LgWoULaJqioJOmGBD1Hy3K5P21w1xNoTL5fu0c0WD5Lm33qGbNc2l7RTd+Xkvbr5NDlM/SDuz0QMZf2ujOD3fspR3U1aCIubTDuhw68ZZ2ZDcDLM7Sju1uGMZY2gndD9acl3ZKDkM616XV5jTwc1vaWbn98Mhpaefm+oMoh6VdmPMPte6XdkmMH5DdLe3yOD9su1naVfF+cHe5tOtiIqCrpd0YGxSdL+3W+DjpdGl35AOdTpZ2V15oil7axDwBFrW0u/PFXMTSPP6Y/FxL8/lLp+Gl+f0ZrjmX5vk3IuZYmvcHGM+2NP9P1+tYGsVHv9ilkfxecrA0ol+a+XdpVO/oNEuje7tBUYbwWTj5C7XwF01sVc4WW2+OfRFovvcJ/veXui5f6etrfX2jr2/19Z2+2vT1vb5+0NeP+vpJXz/r6xd9/aqvWfr6TV+/6+sPff2pr7/09be+/tFXu3m0Ol7/t/T1P33Nq6/59DW/vhYY32POx65mEb1C976KuPd1xL1vIu59G3Hvu4h7bRH3vo+490PEvR8j7v0Uce/niHu/RNz7NeLerIh7v0Xc+z3i3h8R9/6MuPdXxL2/I+79E3GvPeKe2fTwvXki7v0v4t68Effmi7g3f8S9BYJ7s3/Z/3vT4HsOT1MKu3iaombFeaSd7fLJjPot91hl3TzlUb/nGivb7RMj9UdusTI5PH1Sf+YSK5PTkyz1VzjW6LyfiinTKzF6ouvffxozD8sPloVy693iXHP+u7u9KMq9fv90GauoIs5etHcVKxtvX3t0vq8lcXtknk5ilVbE77f/RcfK5NO780bFyuR3DuabO5bK90zNT3im3mE6UyWhM/Xv/0P6oLfLr/RBb7yv9EFvvKWlD3rjLS190BtvaemD3nhLSx/0xlta+qA33tLSB73xlpY+6I23tC/iPKPp5nXIlwSxyv9932FGfUUUy+T4NUms/+r1jX8s95bPb31jFXW8nvzOL1Zm9tembT6xCud8nft9/rEy4dfMP+QZa3DF3K+/f8wvVknUa/mf8olVEv1c4Of4sbKdPWP4JW6sbOfPK34lnDmEzwAV5bOPJH5HYcVL9L8DMPyOQjvhW4qfB/wdhZ7j//veK/yPZeZGP6bNNEVfkeF3FLg20/cHVk/Ch5a9xvM0GfUe9xxPtq8sb1m2PUj9OwrCerDjT2MT7ocZIIi/o7DgePlrXIhyjUn+jsJCwg+8FQR13u0Qv6MwuiN2ElxbWRe7ZzU910xMklh6ur4AyLWFA64tEubaIoxcM0VfmYFrXJvpy7WFCbm2CAjXFhY+vW0PUnNNWA92/K3FlGtqUQCuLYbKtcWEH3grCOq8yQ58hpVrygVMgmt9dbELGLhWQDhdXwTkWkHAtcXDXFuckWum6H0ZuMa1mb5cKyDk2uIgXCsQPr1tD1JzTVgPdvzxnpRragkAri2JyrUlhR94KwjqvAswuFboAibBtVV0sXszcK034XR9CZBrSwVcWzrMtaUZuWaKvgoD17g205drSxFybWkQri0lfHrbHqTmmrAe7Pg0+JRrahkAri2LyrVlhR94KwjqvHtjcG2QC5gE11bTxe7LwLW+hNN1OiDXegdcWy7MteUYuWaKvhoD17g205drvQm5thwI13pLf7Ed9CA114T1YMfHi6ZcU8sDcG0FVK6tIPzAW0FQ590Xg2tFLmASXFtDF7s/A9f6E07XlwG5tmLAtZXCXFuJkWum6GswcI1rM325tiIh11YC4dqKwqe37UFqrgnrwY637qRcUysDcK0PKtf6CD/wVhDUeffH4FqxC5gE1/rrYg9k4NpAwun6CiDX+gZc6xfmWj9Grpmi92fgGtdm+nKtLyHX+oFwra/w6W17kJprwnqw49+CUq6pVQC4tioq11aV/vosEAR13gMxuDbYBUyCa2vpYmcZuJYlnK6vAnJttYBrq4e5tjoj10zR12LgGtdm+nJtNUKurQ7CtdWET2/bg9RcE9aDHQ8XUq6pNQC4tiYq19YUfuCtIKjzzmJwLesCJsG1dXSxhzBwbQjhdH0NkGv9A64NCHNtACPXTNHXYeAa12b6cq0/IdcGgHCtv/DpbXuQmmvCerDjp1XKNbUWANfWRuXa2sIPvBUEdd5DMLhW4gImwbX1dLGHMnBtKOF0fR2Qa+sEXFs3zLV1Gblmir4eA9e4NtOXa+sQcm1dEK6tI3x62x6k5pqwHuwYoCnX1HoAXFsflWvrCz/wVhDUeQ/F4FqpC5gE1wbqYg9j4Nowwun6BiDXBgZcy4S5lmHkmin6QAaucW2mL9cGEnItA8K1gcKnt+1Baq4J60GXr0q5phQA1wpRuVYo/MBbQVDnPQyDayNdwCS4pnSxhzNwbTjhdH0TkGuDAq4VhblWxMg1U3TFwDWuzfTl2iBCrhWBcG2Q8Olte5Caa8J60OVbnHJNFQNwbTAq1wYLP/BWENR5D8fg2igXMAmuDdLFHsHAtRGE03UGINeyAddKwlwrYeSaKfogBq5xbaYv17KEXCsB4VpW+PS2PUjNNWE96PItTbmmSgG4tgEq1zYQfuCtIKjzHoHBtTIXMAmuFetiVzJwrZJwur4FyLUNA65tFObaRoxcM0UvZuAa12b6cm1DQq5tBMK1DYVPb9uD1FwT1oMu341TrqmNAbi2CSrXNhF+4K0gqPOuxODaaBcwCa5ldbGrGLhWRThd3wbk2pCAa5uGubYpI9dM0bMMXOPaTF+uDSHk2qYgXBsifHrbHqTmmrAedPlulnJNbQbAtc1Ruba58ANvBUGddxUG18pdwCS4VqqLXc3AtWrC6foOINe2CLi2ZZhrWzJyzRS9lIFrXJvpy7UtCLm2JQjXthA+vW0PUnNNWA+6fLdKuaa2AuDa1qhc21r4gbeCoM67GoNrFS5gElzbUBe7hoFrNYTT9V1Arg0NuLZNmGvbMHLNFH1DBq5xbaYv14YScm0bEK4NFT69bQ9Sc01YD7p8t025prYF4Np2qFzbTviBt4KgzrsGgmvlHbGT4NrGuth1DFyrI5yu7wFybfuAazuEubYDI9dM0Tdm4BrXZvpybXtCru0AwrXthU9v24PUXBPWgy7fHVOuqR0BuLYTKtd2En7grSCo867D4JpyAZPg2hBd7HoGrtUTTtf3Abk2LODazmGu7czINVP0IQxc49pMX64NI+TaziBcGyZ8etsepOaasB50+e6Sck3tAsC1XVG5tqvwA28FQZ13PQbXCl3AJLi2mS52AwPXGgin6weAXNst4NruYa7tzsg1U/TNGLjGtZm+XNuNkGu7g3BtN+HT2/YgNdeE9aDLd4+Ua2oPAK7ticq1PYUfeCsI6rwbMLg2yAVMgmtb6GI3MnCtkXC6zgTk2vCAa3uFubYXI9dM0bdg4BrXZvpybTgh1/YC4dpw4dPb9iA114T1oMt375Rram8Aru2DyrV9hB94KwjqvBsxuFbkAibBta10sZsYuNZEOF0/BOTavgHX9gtzbT9Grpmib8XANa7N9OXavoRc2w+Ea/sKn962B6m5JqwHXb77p1xT+wNw7QBUrh0g/MBbQVDn3YTBtWIXMAmuDdXFbmbgWjPhdP0IkGsjAq4dGObagYxcM0UfysA1rs305doIQq4dCMK1EcKnt+1Baq4J60GX78iUa2okANdGoXJtlPADbwVBnXczBtcGu4BJcG1bXewWBq61EE7XjwG5VhZwbXSYa6MZuWaKvi0D17g205drZYRcGw3CtTLh09v2IDXXhPWgy7c85ZoqB+BaBSrXKoQfeCsI6rxbMLiWdQGT4Nr2uthTGbg2lXC6fgLItcqAaweFuXYQI9dM0bdn4BrXZvpyrZKQaweBcK1S+PS2PUjNNWE96PI9OOWaOhiAa4egcu0Q4QfeCoI676kYXCtxAZPg2o662NMYuDaNcLp+Csi1QwOuHRbm2mGMXDNF35GBa1yb6cu1Qwm5dhgI1w4VPr1tD1JzTVgPunwPT7mmDgfg2hGoXDtC+IG3gqDOexoG10pdwCS4NkwXezoD16YTTtfPALlWFXDtyDDXjmTkmin6MAaucW2mL9eqCLl2JAjXqoRPb9uD1FwT1oMu36NSrqmjALh2NCrXjhZ+4K0gqPOejsG1kS5gElzbRRd7BgPXZhBO188BuXZMwLVjw1w7lpFrpui7MHCNazN9uXYMIdeOBeHaMcKnt+1Baq4J60GX73Ep19RxAFw7HpVrxws/8FYQ1HnPwODaKBcwCa7tpos9k4FrMwmnaysg16oDrp0Q5toJjFwzRd+NgWtcm+nLtWpCrp0AwrVq4dPb9iA114T1oMv3xJRr6kQArp2EyrWThB94KwjqvGdicK3MBUyCa3voYrcycK2VcLp+Aci1kwOunRLm2imMXDNF34OBa1yb6cu1kwm5dgoI104WPr1tD1JzTVgPunxPTbmmTgXg2mmoXDtN+IG3gqDOuxWDa6NdwCS4NlwXu42Ba22E0/VLQK7VBFyrDXOtlpFrpujDGbjGtZm+XKsh5FotCNdqhE9v24PUXBPWgy7f01OuqdMBuHYGKtfOEH7grSCo827D4Fq5C5gE1/bWxZ7FwLVZhNP1K0CunRlw7aww185i5Jop+t4MXOPaTF+unUnItbNAuHam8Olte5Caa8J60OV7dso1dTYA185B5do5wg+8FQR13rMwuFbhAibBtX11sdsZuNZOOF2/BuRaXcC1c8NcO5eRa6bo+zJwjWszfblWR8i1c0G4Vid8etsepOaasB50+Z6Xck2dB8C181G5dr7wA28FQZ13OwTXKjpiJ8G1/XWxe55AzzUTkySWnq7fAHLtgoBrF4a5diEj10zR92fgGtdm+nLtAkKuXQjCtQuET2/bg9RcE9aDLt+LUq6piwC4djEq1y4WfuCtIKjzJjvwGVauKRcwCa6N0MUuYOBaAeF0/RaQa/UB1y4Jc+0SRq6Zoo9g4BrXZvpyrZ6Qa5eAcK1e+PS2PUjNNWE96PIdk3JNjQHg2qWoXLtU+IG3gqDOuwCDa4UuYBJcG6mL3ZuBa70Jp+t3gFy7LODa5WGuXc7INVP0kQxc49pMX65dRsi1y0G4dpnw6W17kJprwnrQ5XtFyjV1BQDXrkTl2pXCD7wVBHXevTG4NsgFTIJrZbrYfRm41pdwurYBcq0h4NpVYa5dxcg1U/QyBq5xbaYv1xoIuXYVCNcahE9v24PUXBPWgy7fq1OuqasBuHYNKteuEX7grSCo8+6LwbUiFzAJrpXrYvdn4Fp/wun6PSDXrg24dl2Ya9cxcs0UvZyBa1yb6cu1awm5dh0I164VPr1tD1JzTVgPunyvT7mmrgfg2g2oXLtB+IG3gqDOuz8G14pdwCS4VqmLPZCBawMJp+sPgFxrDLh2Y5hrNzJyzRS9koFrXJvpy7VGQq7dCMK1RuHT2/YgNdeE9aDL96aUa+omAK7djMq1m4UfeCsI6rwHYnBtsAuYBNcO1sXOMnAtSzhdfwTk2i0B124Nc+1WRq6Zoh/MwDWuzfTl2i2EXLsVhGu3CJ/etgepuSasB12+t6VcU7cBcO12VK7dLvzAW0FQ553F4FrWBTRNUdBJUwyI+o8WZfL+WmiuplCZfL8Wi2iwfJe2ZFSz5rm0ZaMbP6+lrdDJIcpnaX06PZDxl7Zq54c79tLW7GpQxFza2l0OnXhLW7+bARZnaYXdDcMYSxvc/WDNeWkb5DCkc13aJjkN/NyWtnluPzxyWtrWuf4gymFp2+X8Q637pe0U4wdkd0vbNc4P226Wtme8H9xdLm2fmAjoamkHxAZF50sbFR8nnS6tIh/odLK0Q/JCU/TSjsgTYFFLOzpfzEUszeOPyc+1NJ+/dBpemt+f4ZpzaZ5/I2KOpXl/gPFsS/P/dL2OpVF89ItdGsnvJQdLI/qlmX+XRvWOTrM0urcbFGUIn4WTv1ALf9HEVuVssfXm2BeB5nuf4H836brcoa879TVWX+P0dZe+xutrgr6a9TVRX5P0NVlfU/R1t77u0de9+mrR1336ul9fD+jrQX09pK+H9fWIvqbq61F9Paavx/X1hL6eDD92NYvoFbp3R8S9OyPujY24Ny7i3l0R98ZH3JsQca854t7EiHuTIu5Njrg3JeLe3RH37om4d2/EvZaIe/dF3Ls/4t4DEfcejLj3UMS9hyPuPRJxb2rEvUcj7j0Wce/xiHtPRNx7Mrg3+5f9vzcNvufwNKWwi6cp6p44j7SzXT6ZUffmHqusm6c8qiXXWNlunxip+3KLlcnh6ZO6P5dYmZyeZKkHwrFG5/1UTD1J+E8TW106D8sPloVy693iXHN+sLuci3Kv30NdxiqqiLMXD3cVKxtvXx/pPFZJ3B6Z2kms0or4/fZodKxMPr37WFSsTH7n4PG5Y6l8z9QThGdqa6YzVRI6U//+P6QPerv8Sh/0xvtKH/TGW1r6oDfe0tIHvfGWlj7ojbe09EFvvKWlD3rjLS190BtvaemD3nhLu53wdUgTQazyf993mFF3EMUyOd5JEuu/eo31j+Xe8jnON1ZRx+vJu/xiZWZ/bTreJ1bhnK9zJ+QfKxN+zdycZ6zBFXO//p6YX6ySqNfyk/KJVRL9XGBy/FjZzp4xTIkbK9v584q7CWcO4TNARfnsI4nfUTj0kh49hjD8jsIQwrcU/wT4OwpPjf/v+9PhfywzN/oxbaYp+qEMv6PAtZm+P7CeIsTC0+N5mox6j5+iG3wsb1m2PUj9OwrCetDlO41wP8wAQfwdhWnj5a/xGco1Jvk7Cs8IP/BWENR5D8H4HYUSFzAJrh2uiz2UgWtDCafrz4Bcezbg2nNhrj3HyDVT9MMZuMa1mb5ce5aQa8+BcO1Z4dPb9iA114T1oMv3+ZRr6nkArr2AyrUXhB94KwjqvIdicK3UBUyCa1W62MMYuDaMcLr+Asi1FwOuvRTm2kuMXDNFr2LgGtdm+nLtRUKuvQTCtReFT2/bg9RcE9aDLt/pKdfUdACuvYzKtZeFH3grCOq8h2FwbaQLmATXjtLFHs7AteGE0/VXQK69EnDt1TDXXmXkmin6UQxc49pMX669Qsi1V0G49orw6W17kJprwnrQ5ftayjX1GgDXXkfl2uvCD7wVBHXewzG4NsoFTIJrx+hij2Dg2gjC6ToLkGtvBFx7M8y1Nxm5Zop+DAPXuDbTl2tvEHLtTRCuvSF8etsepOaasB50+c5IuaZmAHDtLVSuvSX8wFtBUOc9AoNrZS5gElw7The7koFrlYTT9TdArr0dcO2dMNfeYeSaKfpxDFzj2kxfrr1NyLV3QLj2tvDpbXuQmmvCetDl+27KNfUuANfeQ+Xae8IPvBUEdd6VGFwb7QImwbVqXewqBq5VEU7X3wG59n7AtQ/CXPuAkWum6NUMXOPaTF+uvU/ItQ9AuPa+9LeyBD1IzTVhPejynZlyTc0E4NqHqFz7UPiBt4KgzrsKg2sdHwafBNdO1MWuZuBaNeF0/QOQax8FXPs4zLWPGblmin4iA9e4NtOXax8Rcu1jEK59JH16Bz1IzTVhPejy/STlmvoEgGufonLtU+EH3gqCOu9qDK5VuIBJcO1kXewaBq7VEE7XPwG59lnAtc/DXPuckWum6CczcI1rM3259hkh1z4H4dpnwqe37UFqrgnrQZdva8o11QrAtS9QufaF8ANvBUGddw0C1wbNFjsJrp2qi13HwLU6wun6FyDXvgy49lWYa18xcs0U/VQGrnFtpi/XviTk2lcgXPtS+PS2PUjNNWE96PL9OuWa+hqAa9+gcu0b4QfeCoI67zoMrikXMAmu1ehi1zNwrZ5wuv4NyLVvA659F+bad4xcM0WvYeAa12b6cu1bQq59B8K1b4VPb9uD1FwT1oMu37aUa6oNgGvfo3Lte+mP0wNBUOddj8G1QhcwCa6drovdwMC1BsLp+g8g134IuPZjmGs/MnLNFP10Bq5xbaYv134g5NqPIFz7Qfj0tj1IzTVhPejy/SnlmvoJgGs/o3LtZ+EH3gqCOu8GDK4NcgGT4NqZutiNDFxrJJyu7YBc+yXg2q9hrv3KyDVT9DMZuMa1mb5c+4WQa7+CcO0X4dPb9iA114T1oMt3Vso1NQuAa7+hcu034QfeCoI670YMrhW5gElw7Wxd7CYGrjURTtceV+Fx7feAa3+EufYHI9dM0c9m4BrXZvpy7XdCrv0BwrXfhU9v24PUXBPWgy7fP1OuqT8BuPYXKtf+En7grSCo827C4FqxC5gE1+p0sZsZuNZMOF3nAeTa3wHX/glz7R9Grpmi1zFwjWszfbn2NyHX/gHh2t/Cp7ftQWquCetBl297yjXVDsC1HhNAuUa68B58gqDOuxmDa4NdwCS4dp4udgsD11oIp+v/ALk2z4T/vv9vQo85uWZu9GPaTFP08xi4xrWZvlybZwJd7f43AYNr8wif3rYHqbkmrAddvvNOSLk27wT5a5wPlWvzCT/wVhDUebdgcC3rAibBtQt0sacycG0q4XSdF5Br8wdcWyDMtQUYuWaKfgED17g205dr8xNybQEQrs0vfHrbHqTmmrAedPn2TLmmegJwrRcq13oJP/BWENR5T8XgWokLmATXLtLFnsbAtWmE03U+QK4tGHBtoTDXFmLkmin6RQxc49pMX64tSMi1hUC4tqDw6W17kJprwnrQ5btwyjW1MADXFkHl2iLCD7wVBHXe0zC4VuoCJsG1el3s6Qxcm044XecH5NqiAdcWC3NtMUaumaLXM3CNazN9ubYoIdcWA+HaosKnt+1Baq4J60GXb0HKNVUAwLXFUbm2uPADbwVBnfd0DK6NdAGT4NoYXewZDFybQThdFwDk2hIB15YMc21JRq6Zoo9h4BrXZvpybQlCri0JwrUlhE9v24PUXBPWgy7fpVKuqaUAuLY0KteWFn7grSCo856BwbVRLmASXLtMF3smA9dmEk7XnoBcWybg2rJhri3LyDVT9MsYuMa1mb5cW4aQa8uCcG0Z4dPb9iA114T1oMu3d8o11RuAa8uhcm054QfeCoI675kYXCtzAZPg2hW62K0MXGslnK69ALm2fMC1FcJcW4GRa6boVzBwjWszfbm2PCHXVgDh2vLCp7ftQWquCetBl++KKdfUigBcWwmVaysJP/BWENR5t2JwbbQLmATXGnSx2xi41kY4XRcE5NrKAdf6hLnWh5FrpugNDFzj2kxfrq1MyLU+IFxbWfj0tj1IzTVhPejy7ZtyTfUF4Fo/VK71E37grSCo827D4Fq5C5gE167WxZ7FwLVZhNN1IUCurRJwbdUw11Zl5Jop+tUMXOPaTF+urULItVVBuLaK8Olte5Caa8J60OW7Wso1tRoA11ZH5drqwg+8FQR13rMwuFbhAibBtWt1sdsZuNZOOF0XBuTaGgHX1gxzbU1GrpmiX8vANa7N9OXaGoRcWxOEa2sIn962B6m5JqwHXb79U66p/gBcG4DKtQHCD7wVBPmfyoDgmuqInQTXrtfF7nkiPddMTJJYerouAsi1tQKurR3m2tqMXDNFv56Ba1yb6cu1tQi5tjYI19YSPr1tD1JzTVgPunzXSbmm1gHg2rqoXFtX+IG3giD/7OUT6Ztq9i+S2IOUcgGT4FqjLnYBA9cKCKfrooBcWy/g2vphrq3PyDVT9EYGrnFtpi/X1iPk2vogXFtP+PS2PUjNNWE96PIdmHJNDQTgWgaVaxnhB94KgvzD/DC4VugCJsG1m3SxezNwrTfhdF0MkGsq4FphmGuFjFwzRb+JgWtcm+nLNUXItUIQrinh09v2IDXXhPWgy3dQyjU1CIBrRahcKxJ+4K0gyD8dBoNrg1zAJLh2iy52Xwau9SWcrgWAXCsOuDY4zLXBjFwzRb+FgWtcm+nLtWJCrg0G4Vqx8Olte5Caa8J60OWbTbmmsgBcK0HlWonwA28FQf7rxhhcK3IBk+DabbrY/Rm41p9wui4OyLXSgGsbhLm2ASPXTNFvY+Aa12b6cq2UkGsbgHCtVPj0tj1IzTVhPejy3TDlmtoQgGsboXJtI+EH3gqC/PdXMLhW7AImwbUmXeyBDFwbSDhdlwDk2sYB1zYJc20TRq6ZojcxcI1rM325tjEh1zYB4drGwqe37UFqrgnrQZfvkJRraggA1zZF5dqmwg+8FQT5GyIxuDbYBUyCa3fqYmcZuJYlnK5LAnJts4Brm4e5tjkj10zR72TgGtdm+nJtM0KubQ7Ctc2ET2/bg9RcE9aDLt8tUq6pLQC4tiUq17YUfuCtIMj/hR2Da1kXMAmujdPFHsLAtSGE03UpQK5tFXBt6zDXtmbkmin6OAaucW2mL9e2IuTa1iBc20r49LY9SM01YT3o8h2ack0NBeDaNqhc20b4gbeCIH9ki8G1EhcwCa6N18UeysC1oYTTdWlArm0bcG27MNe2Y+SaKfp4Bq5xbaYv17Yl5Np2IFzbVvj0tj1IzTVhPejy3T7lmtoegGs7oHJtB+EH3gqC/DUABtdKXcAkuNasiz2MgWvDCKfrMoBc2zHg2k5hru3EyDVT9GYGrnFtpi/XdiTk2k4gXNtR+PS2PUjNNWE92JFvyjU1DIBrO6NybWfhB94KgrypMLg20gVMgmuTdLGHM3BtOOF0XRaQa7sEXNs1zLVdGblmij6JgWtcm+nLtV0IubYrCNd2ET69bQ9Sc01YD7p8d0u5pnYD4NruqFzbXfiBt4Kgzns4BtdGuYBJcG2KLvYIBq6NIJyuvQG5tkfAtT3DXNuTkWum6FMYuMa1mb5c24OQa3uCcG0P4dPb9iA114T1YAdPU66p4QBc2wuVa3sJP/BWENR5j8DgWpkLmATX7tHFrmTgWiXhdF0OkGt7B1zbJ8y1fRi5Zop+DwPXuDbTl2t7E3JtHxCu7S18etsepOaasB50+e6bck3tC8C1/VC5tp/wA28FQZ13JQbXRruASXCtRRe7ioFrVYTTdXlAru0fcO2AMNcOYOSaKXoLA9e4NtOXa/sTcu0AEK7tL3x62x6k5pqwHux4mphyTY0A4NqBqFw7UPiBt4KgzrsKg2vlLmASXLtfF7uagWvVhNN1BUCujQy4NirMtVGMXDNFv5+Ba1yb6cu1kYRcGwXCtZHCp7ftQWquCetBl29ZyjVVBsC10ahcGy38wFtBUOddjcG1ChfQNEVBJ00xIOo/WpTJ++uZ8eEEVCbfrxfGz12MfJf2ckSsfJf2+vjITcpraW9Fx8prae+N76x54i/tw05jxV/ap+O7aOqYS/uiq1gxl/bN+K4PW5ylfd9NrDhL+7m7WDGW9lv3sXJe2l85xMp1aT1y++GR09Lmy/UHUQ5L65XzD7Xul7ZIjB+Q3S1t8Tg/bLtZ2tLxfnB3ubTlYiKgq6WtFBsUnS+tX3ycdLq01fOBTidLG5AXmqKXtm6eAItcWr6Yi1iaxx+Tn2tpPn/pNLw0vz/DNefSPP9GxBxL8/4A49mW5v/peh1Lo/joF7s0kt9LDpZG9Esz/y6N6h2dZml0bzcoyhA+Cyd/oRb+ook92/Nl6th6c+yLQPO9T/C/y3VdKvRVqa+D9HWwvg7R16H6Okxfh+vrCH1V6etIfR2lr6P1dYy+jtXXcfo6Xl/V+jpBXyfq6yR9nayvU/R1qr5O01eNvmr1dbq+zgg/djWL6BW6VxFxrzLi3kER9w6OuHdIxL1DI+4dFnHv8Ih7R0Tcq4q4d2TEvaMi7h0dce+YiHvHRtw7LuLe8RH3qiPunRBx78SIeydF3Ds54t4pEfdOjbh3WsS9moh7tRH3To+4d0Zwb/avpYPvmwbfc36aUhL5NEUdGf+RdraTJzPqqLixsp0+5VFHx4tV2MUTI3VMnFjZLp8+qWNzj1XWzZMsdVyusbLdPhVTx+cWK5PDEzZVnUusTE5P69QJ3ccqzvHJnzqxu1hFOT9FVCd1GauoIsYTSXVyV7GysZ5uqlM6j1US80mpOrWTWKUVsZ+6qtOiY2XyeIKraqJiZfJ6Gqxq546l8nyyrE4Pxxqd91NqdUb8udrpE+/z/p6HBXpFwfc5YqcPibv8Sh8Sx/tKHxLHW1r6kDje0tKHxPGWlj4kjre09CFxvKWlD4njLS19SBxvaelD4nhLG034OqScIFb5v+9ZzKgKolgmx0qSWP/V6yD/WO7togf7xirqeD15iF+szOyvTQ/1iVU45+vcw/KPlQm/Zj48z1iDK+Z+/X1EfrFKol7LVxGeR8rX8km8X//BS/QzbIb369cQvr12RcD365854b/vZ4X/4cjc6Me0maboDzK8X59rM30H8JmEP/zOmsDTZNR7fCbdsGJ5+67tQer36wvrQZfv2YT7YQYI4vv1z54gf43nUK4xyffrnyP8wFtBUOddA/F+/cKO2Elw7WFd7DoGrtURTteVALlWF3Dt3DDXzmXkmin6wwxc49pMX67VEXLtXBCu1Qmf3rYHqbkmrAc7/q095Zo6D4Br56Ny7XzhB94KgjrvOgyuKRcwCa5N1cWuZ+BaPeF0XRmQaxcEXLswzLULGblmij6VgWtcm+nLtQsIuXYhCNcuED69bQ9Sc01YD7p8L0q5pi4C4NrFqFy7WPiBt4Kgzrseg2uFLmASXHtMF7uBgWsNhNO1DyDX6gOuXRLm2iWMXDNFf4yBa1yb6cu1ekKuXQLCtXrh09v2IDXXhPWgy3dMyjU1BoBrl6Jy7VLhB94KgjrvBgyuDXIBk+DaE7rYjQxcayScrn0BuXZZwLXLw1y7nJFrpuhPMHCNazN9uXYZIdcuB+HaZcKnt+1Baq4J60GX7xUp19QVAFy7EpVrVwo/8FYQ1Hk3YnCtyAVMgmtP6WI3MXCtiXC69gPkWkPAtavCXLuKkWum6E8xcI1rM3251kDItatAuNYgfHrbHqTmmrAedPlenXJNXQ3AtWtQuXaN8ANvBUGddxMG14pdwCS4Nk0Xu5mBa82E03UVQK5dG3DtujDXrmPkmin6NAaucW2mL9euJeTadSBcu1b49LY9SM01YT3o8r0+5Zq6HoBrN6By7QbhB94KgjrvZgyuDXYBk+Das7rYLQxcayGcrqsCcq0x4NqNYa7dyMg1U/RnGbjGtZm+XGsk5NqNIFxrFD69bQ9Sc01YD7p8b0q5pm4C4NrNqFy7WfiBt4KgzrsFg2tZFzAJrj2viz2VgWtTCafraoBcuyXg2q1hrt3KyDVT9OcZuMa1mb5cu4WQa7eCcO0W6b8oFvQgNdeE9aDL97aUa+o2AK7djsq124UfeCsI6rynYnCtxAVMgmsv6mJPY+DaNMLpujog15oCrt0R5todjFwzRX+RgWtcm+nLtSZCrt0BwrUm6f82EvQgNdeE9aDL986Ua+pOAK6NReXaWOEH3gqCOu9pGFwrdQGT4Np0XezpDFybTjhd1wDk2riAa3eFuXYXI9dM0aczcI1rM325No6Qa3eBcG2c8Olte5Caa8J60OU7PuWaGg/AtQmoXJsg/cAHgqDOezoG10a6gElw7RVd7BkMXJtBOF3XBORac8C1iWGuTWTkmin6Kwxc49pMX641E3JtIgjXmoVPb9uD1FwT1oMu30kp19QkAK5NRuXaZOEH3gqCOu8ZGFwb5QImwbXXdLFnMnBtJuF07Q/ItSkB1+4Oc+1uRq6Zor/GwDWuzfTl2hRCrt0NwrUpwqe37UFqrgnrQZfvPSnX1D0AXLsXlWv3Cj/wVhDUec/E4FqZC5gE197QxW5l4For4XQdAMi1loBr94W5dh8j10zR32DgGtdm+nKthZBr94FwrUX49LY9SM01YT3o8r0/5Zq6H4BrD6By7QHhB94KgjrvVgyujXYBk+DaDF3sNgautRFO17UAufZgwLWHwlx7iJFrpugzGLjGtZm+XHuQkGsPgXDtQeHT2/YgNdeE9WDHX7hOuaYeBuDaI6hce0T4gbeCoM67DYNr5S5gElx7Wxd7FgPXZhFO17UBuTY14NqjYa49ysg1U/S3GbjGtZm+XJtKyLVHQbg2Vfj0tj1IzTVhPdjxJxNTrqnHALj2OCrXHhd+4K0gqPOehcG1ChcwCa69q4vdzsC1dsLpug4g154IuPZkmGtPMnLNFP1dBq5xbaYv154g5NqTIFx7Qvj0tj1IzTVhPdjxN3hSrqmnALj2NCrXnhZ+4K0gqPNuh+DaoI7YSXDtfV3snifRc83EJImlp+u6gFybFnDtmTDXnmHkmin6+wxc49pMX65NI+TaMyBcmyZ8etsepOaasB7s+FD3lGvqWQCuPYfKteeEH3grCOq8yQ58hpVrygVMgmszdbELGLhWQDhd1wPk2vMB114Ic+0FRq6Zos9k4BrXZvpy7XlCrr0AwrXnhU9v24PUXBPWgx2fEppyTb0IwLWXULn2kvADbwVBnXcBBtcKXcAkuPaRLnZvBq71Jpyu6wNybXrAtZfDXHuZkWum6B8xcI1rM325Np2Qay+DcG268Olte5Caa8J6sONjp1KuqVcAuPYqKtdeFX7grSCo8+6NwbVBLmASXPtEF7svA9f6Ek7XgYBcey3g2uthrr3OyDVT9E8YuMa1mb5ce42Qa6+DcO014dPb9iA114T1YMfnGKRcU28AcO1NVK69KfzAW0FQ590Xg2tFLmASXPtMF7s/A9f6E07XDCDXZgRceyvMtbcYuWaK/hkD17g205drMwi59hYI12YIn962B6m5JqwHO34xLuWaehuAa++gcu0d4QfeCoI67/4YXCt2AZPgWqsu9kAGrg0knK4KkGvvBlx7L8y19xi5ZoreysA1rs305dq7hFx7D4Rr7wqf3rYHqbkmrAc73mmdck29D8C1D1C59oHwA28FQZ33QAyuDXYBk+Dal7rYWQauZQmnayEg12YGXPswzLUPGblmiv4lA9e4NtOXazMJufYhCNdmCp/etgepuSasBzveupNyTX0EwLWPUbn2sfADbwVBnXcWg2tZFzAJrn2tiz2EgWtDCKfrIECufRJw7dMw1z5l5Jop+tcMXOPaTF+ufULItU9BuPaJ8Olte5Caa8J6sOPfglKuqc8AuPY5Ktc+F37grSCo8x6CwbUSFzAJrn2riz2UgWtDCadrESDXWgOufRHm2heMXDNF/5aBa1yb6cu1VkKufQHCtVbh09v2IDXXhPVgx8OFlGvqSwCufYXKta+EH3grCOq8h2JwrdQFTIJrbbrYwxi4NoxwuhYDcu3rgGvfhLn2DSPXTNHbGLjGtZm+XPuakGvfgHDta+HT2/YgNdeE9WDHT6uUa+pbAK59h8q174QfeCsI6ryHYXBtpAuYBNd+0MUezsC14YTTdTAg19oCrn0f5tr3jFwzRf+BgWtcm+nLtTZCrn0PwrU24dPb9iA114T1YMcATbmmfgDg2o+oXPtR+IG3gqDOezgG10a5gElw7Sdd7BEMXBtBOF2zgFz7KeDaz2Gu/czINVP0nxi4xrWZvlz7iZBrP4Nw7Sfh09v2IDXXhPWgy/eXlGvqFwCu/YrKtV+FH3grCOq8R2BwrcwFTIJrv+hiVzJwrZJwupYAcm1WwLXfwlz7jZFrpui/MHCNazN9uTaLkGu/gXBtlvDpbXuQmmvCetDl+3vKNfU7ANf+QOXaH8IPvBUEdd6VGFwb7QImwbVZuthVDFyrIpyupYBc+zPg2l9hrv3FyDVT9FkMXOPaTF+u/UnItb9AuPan8Olte5Caa8J60OX7d8o19TcA1/5B5do/wg+8FQR13lUYXCt3AZPg2u+62NUMXKsmnK4bAHKtPeBaj+Yec3LN3OjHtJmm6L8zcI1rM3251k7INbMvHE1Gvcftwqe37UFqrgnrQZfvPM10+4HKNcoacK3xf82gXPtfs+wDbwVBnXc1BtcqXMAkuPanLnYNA9dqCKfrhoBcm7c52MMw1+Zj5Jop+p8MXOPaTF+uzdtMV7v5QLg2r/DpbXuQmmvCetDlO3/KNTU/ANcWQOXaAsIPvBUEdd41EFwr6oidBNf+1sWuY+BaHeF03QiQaz0DrvUKc60XI9dM0f9m4BrXZvpyrSch13qBcK2n8Olte5Caa8J60OW7YMo1tSAA1xZC5dpCwg+8FQR13nUYXFMuYBJca9fFrmfgWj3hdN0YkGsLB1xbJMy1RRi5ZorezsA1rs305drChFxbBIRrCwuf3rYHqbkmrAddvoumXFOLAnBtMVSuLSb8wFtBUOddj8G1QhcwCa7NM6ZHjwYGrjUQTtdNALlWEHBt8TDXFmfkmim62VBqrnFtpi/XCgi5tjgI1wqET2/bg9RcE9aDLt8lUq6pJQC4tiQq15YUfuCtIKjzbsDg2iAXMAmuzauL3cjAtUbC6ToEkGtLBVxbOsy1pRm5Zoo+LwPXuDbTl2tLEXJtaRCuLSV8etsepOaasB50+S6Tck0tA8C1ZVG5tqzwA28FQZ13IwbXilzAJLg2vy52EwPXmgin66aAXOsdcG25MNeWY+SaKfr8DFzj2kxfrvUm5NpyIFzrLXx62x6k5pqwHnT5Lp9yTS0PwLUVULm2gvADbwVBnXcTBteKXcAkuNZTF7uZgWvNhNN1M0CurRhwbaUw11Zi5Jopek8GrnFtpi/XViTk2kogXFtR+PS2PUjNNWE96PJdOeWaWhmAa31QudZH+IG3gqDOuxmDa4NdwCS4tqAudgsD11oIp+vmgFzrG3CtX5hr/Ri5Zoq+IAPXuDbTl2t9CbnWD4RrfYVPb9uD1FwT1oMu31VSrqlVALi2KirXVhV+4K0gqPNuweBa1gU0TVHQSVMMiPqPFmXy/jpnrk/fVJl8v86P+CTPfJd2cdSngua5tEujP2E0r6Vd2cmnleaztGs6/eTT+Eu7ofNPUY29tJu7+kTWmEu7vctPd423tLHdfFJsnKVN6O5TZ2MsbXL3n2Cb89LuzeHTcHNd2gM5fbJubkt7JLdP6c1paY/n+om/OSzt6Zw/Pbj7pT0X45OIu1vaS3E+1bibpb0a7xOSu1zamzE/bbmrpb0T+5ObO1/aB/E/BbrTpX2czydKd7K0z/P6dOropX2V5yddRy3tu3w/NTtiaR5/TH6upfn8pdPw0vz+DNecS/P8GxFzLM37A4xnW5r/p+t1LI3io1/s0kh+LzlYGtEvzfy7NKp3dJql0b3doChD+Cyc/IVa+Ismtipni603x74INN/7BP97NV2X1fW1hr7W1Fd/fQ3Q11r6Wltf6+hrXX2tp6/19TVQXxl9KX0V6muQvor0VayvwfrK6qtEX6X62kBfG+prI31trK9N9DXE7EP4satZRK/QvdUj7q0RcW/NiHv9I+4NiLi3VsS9tSPurRNxb92Ie+tF3Fs/4t7AiHuZiHsq4l5hxL1BEfeKIu4VR9wbHHEvG3GvJOJeacS9DSLubRhxb6OIextH3Nsk4t6QiHubBvdm/1o6+L5p8D3npyklkU9T1PrxH2lnO3kyowbGjZXt9CmPysSLVdjFEyOl4sTKdvn0SRXmHqusmydZalCusbLdPhVTRbnFyuTwhE0V5xIrk9PTOjW4+1jFOT75U9nuYhXl/BRRlXQZq6gixhNJVdpVrGysp5tqg85jlcR8Uqo27CRWaUXsp65qo+hYmTye4KqNo2Jl8noarDaZO5bK88myGhKONTrvp9Rq0/hztfM/DPf3PCzQs79XM0fs9CFxl1/pQ+J4X+lD4nhLSx8Sx1ta+pA43tLSh8TxlpY+JI63tPQhcbylpQ+J4y0tfUgcb2mrEr4OWY0gVvm/71nMqNWJYpkc1yCJ9V+91vSP5d4u2t83VlHH68kBfrEys782XcsnVuGcr3PXzj9WJvyaeZ08Yw2umPv197r5xSqJei2/HuF5pHwtn8T79Rce06PHVIb3608lfHvtFoDv198seL/+5uF/ONqc8f36pugLM7xfn2szfQfwZoQ//DYHeb/+ZsT/KszVg9Tv1xfWgy7fLdL366stmuWvcUvU9+tvKfzAW0FQ5z0V4/36JS5gElxbVBd7GgPXphFO1y0BubZVwLWtw1zbmpFrpuiLMnCNazN9ubYVIde2BuHaVsKnt+1Baq4J60GX79CUa2ooANe2QeXaNsIPvBUEdd7TMLhW6gImwbUCXezpDFybTjhdtwLk2rYB17YLc207Rq6ZohcwcI1rM325ti0h17YD4dq2wqe37UFqrgnrQZfv9inX1PYAXNsBlWs7CD/wVhDUeU/H4NpIFzAJri2hiz2DgWszCKfr1oBc2zHg2k5hru3EyDVT9CUYuMa1mb5c25GQazuBcG1H4dPb9iA114T1oMt3WMo1NQyAazujcm1n4QfeCoI67xkYXBvlAibBtaV0sWcycG0m4XQdCsi1XQKu7Rrm2q6MXDNFX4qBa1yb6cu1XQi5tisI13YRPr1tD1JzTVgPunx3S7mmdgPg2u6oXNtd+IG3gqDOeyYG18pcwCS4towudisD11oJp+s2gFzbI+DanmGu7cnINVP0ZRi4xrWZvlzbg5Bre4JwbQ/h09v2IDXXhPWgy3d4yjU1HIBre6FybS/hB94KgjrvVgyujXYBk+Bab13sNgautRFO120BubZ3wLV9wlzbh5Frpui9GbjGtZm+XNubkGv7gHBtb+HT2/YgNdeE9aDLd9+Ua2pfAK7th8q1/YQfeCsI6rzbMLjW8cHoSXBteV3sWQxcm0U4XbcD5Nr+AdcOCHPtAEaumaIvz8A1rs305dr+hFw7AIRr+wuf3rYHqbkmrAddviNSrqkRAFw7EJVrBwo/8FYQ1HnPwuBahQuYBNdW1MVuZ+BaO+F03R6QayMDro0Kc20UI9dM0Vdk4BrXZvpybSQh10aBcG2k8Olte5Caa8J60OVblnJNlQFwbTQq10YLP/BWENR5t0NwrbgjdhJcW1kXu+fJ9FwzMUli6em6AyDXygOuVYS5VsHINVP0lRm4xrWZvlwrJ+RaBQjXyoVPb9uD1FwT1oMu38qUa6oSgGsHoXLtIOEH3gqCOm+yA59h5ZpyAZPgWl9d7AIGrhUQTtcdAbl2cMC1Q8JcO4SRa6bofRm4xrWZvlw7mJBrh4Bw7WDpH8MU9CA114T1oMv30JRr6lAArh2GyrXDhB94KwjqvAswuFboAibBtVV0sXszcK034XTdCZBrhwdcOyLMtSMYuWaKvgoD17g205drhxNy7QgQrh0u/Z3HQQ9Sc01YD7p8q1KuqSoArh2JyrUjhR94KwjqvHtjcG2QC5gE11bTxe7LwLW+hNN1GCDXjgq4dnSYa0czcs0UfTUGrnFtpi/XjiLk2tEgXDtK+ovtoAepuSasB12+x6RcU8cAcO1YVK4dK/zAW0FQ590Xg2tFLmASXFtDF7s/A9f6E07XnQG5dlzAtePDXDuekWum6GswcI1rM325dhwh144H4dpxwqe37UFqrgnrQZdvdco1VQ3AtRNQuXaC8ANvBUGdd38MrhW7gElwrb8u9kAGrg0knK67AHLtxIBrJ4W5dhIj10zR+zNwjWszfbl2IiHXTgLh2onCp7ftQWquCetBl+/JKdfUyQBcOwWVa6dIf30WCII674EYXBvsAibBtbV0sbMMXMsSTtddAbl2asC108JcO42Ra6boazFwjWszfbl2KiHXTgPh2qnCp7ftQWquCetBl29NyjVVA8C1WlSu1Qo/8FYQ1HlnMbiWdQGT4No6uthDGLg2hHC67gbItdMDrp0R5toZjFwzRV+HgWtcm+nLtdMJuXYGCNdOFz69bQ9Sc01YD7p8z0y5ps4E4NpZqFw7S/iBt4KgznsIBtdKXMAkuLaeLvZQBq4NJZyuuwNy7eyAa+eEuXYOI9dM0ddj4BrXZvpy7WxCrp0DwrWzhU9v24PUXBPWgy7fupRrqg6Aa+eicu1c4QfeCoI676EYXCt1AZPg2kBd7GEMXBtGOF33AOTaeQHXzg9z7XxGrpmiD2TgGtdm+nLtPEKunQ/CtfOET2/bg9RcE9aDLt8LUq6pCwC4diEq1y4UfuCtIKjzHobBtZEuYBJcU7rYwxm4Npxwuu4JyLWLAq5dHObaxYxcM0VXDFzj2kxfrl1EyLWLQbh2kfDpbXuQmmvCetDlW59yTdUDcO0SVK5dIvzAW0FQ5z0cg2ujXMAkuDZIF3sEA9dGEE7X4YBcGxNw7dIw1y5l5Jop+iAGrnFtpi/XxhBy7VIQro0RPr1tD1JzTVgPunwvS7mmLgPg2uWoXLtc+IG3gqDOewQG18pcwCS4VqyLXcnAtUrC6boXINeuCLh2ZZhrVzJyzRS9mIFrXJvpy7UrCLl2JQjXrhA+vW0PUnNNWA+6fBtSrqkGAK5dhcq1q4QfeCsI6rwrMbg22gVMgmtZXewqBq5VEU7XvQG5dnXAtWvCXLuGkWum6FkGrnFtpi/Xribk2jUgXLta+PS2PUjNNWE96PK9NuWauhaAa9ehcu064QfeCoI67yoMrpW7gElwrVQXu5qBa9WE03UfQK5dH3DthjDXbmDkmil6KQPXuDbTl2vXE3LtBhCuXS98etsepOaasB50+TamXFONAFy7EZVrNwo/8FYQ5H8qA4NrFS5gElzbUBe7hoFrNYTTdV9Art0UcO3mMNduZuSaKfqGDFzj2kxfrt1EyLWbQbh2k/DpbXuQmmvCetDle0vKNXULANduReXarcIPvBUE+WcvQ3BtcEfsJLi2sS52HQPX6gin636AXLst4NrtYa7dzsg1U/SNGbjGtZm+XLuNkGu3g3DtNuHT2/YgNdeE9aDLtynlmmoC4NodqFy7Q/iBt4Ig/zA/DK4pFzAJrg3Rxa5n4Fo94XTdH5BrdwZcGxvm2lhGrpmiD2HgGtdm+nLtTkKujQXh2p3Cp7ftQWquCetBl++4lGtqHADX7kLl2l3CD7wVBPmnw2BwrdAFTIJrm+liNzBwrYFwuh4AyLXxAdcmhLk2gZFrpuibMXCNazN9uTaekGsTQLg2Xvj0tj1IzTVhPejybU65ppoBuDYRlWsThR94KwjyXzfG4NogFzAJrm2hi93IwLVGwuk6ApBrkwKuTQ5zbTIj10zRt2DgGtdm+nJtEiHXJoNwbZLw6W17kJprwnrQ5Tsl5ZqaAsC1u1G5drfwA28FQf77KxhcK3IBk+DaVrrYTQxcayKcrgcCcu2egGv3hrl2LyPXTNG3YuAa12b6cu0eQq7dC8K1e4RPb9uD1FwT1oMu35aUa6oFgGv3oXLtPuEH3gqC/A2RGFwrdgGT4NpQXexmBq41E07XkYBcuz/g2gNhrj3AyDVT9KEMXOPaTF+u3U/ItQdAuHa/8Olte5Caa8J60OX7YMo19SAA1x5C5dpDwg+8FQT5v7BjcG2wC5gE17bVxW5h4FoL4XQdBci1hwOuPRLm2iOMXDNF35aBa1yb6cu1hwm59ggI1x4WPr1tD1JzTVgPunynplxTUwG49igq1x4VfuCtIMgf2WJwLesCJsG17XWxpzJwbSrhdC0D5NpjAdceD3PtcUaumaJvz8A1rs305dpjhFx7HIRrjwmf3rYHqbkmrAddvk+kXFNPAHDtSVSuPSn8wFtBkL8GwOBaiQuYBNd21MWexsC1aYTTdTQg154KuPZ0mGtPM3LNFH1HBq5xbaYv154i5NrTIFx7Svj0tj1IzTVhPdiRb8o1NQ2Aa8+gcu0Z4QfeCoK8qTC4VuoCJsG1YbrY0xm4Np1wupYDcu3ZgGvPhbn2HCPXTNGHMXCNazN9ufYsIdeeA+Has8Knt+1Baq4J60GX7/Mp19TzAFx7AZVrLwg/8FYQ1HlPx+DaSBcwCa7toos9g4FrMwinawUg114MuPZSmGsvMXLNFH0XBq5xbaYv114k5NpLIFx7Ufj0tj1IzTVhPdjB05RrajoA115G5drLwg+8FQR13jMwuDbKBUyCa7vpYs9k4NpMwulaCci1VwKuvRrm2quMXDNF342Ba1yb6cu1Vwi59ioI114RPr1tD1JzTVgPunxfS7mmXgPg2uuoXHtd+IG3gqDOeyYG18pcwCS4tocudisD11oJp+tBgFx7I+Dam2GuvcnINVP0PRi4xrWZvlx7g5Brb4Jw7Q3h09v2IDXXhPVgx9PElGtqBgDX3kLl2lvCD7wVBHXerRhcG+0CJsG14brYbQxcayOcrgcDcu3tgGvvhLn2DiPXTNGHM3CNazN9ufY2IdfeAeHa28Knt+1Baq4J60GX77sp19S7AFx7D5Vr7wk/8FYQ1Hm3YXCt3AVMgmt762LPYuDaLMLpeggg194PuPZBmGsfMHLNFH1vBq5xbaYv194n5NoHIFx7X/j0tj1IzTVhPdjxj78p19RMAK59iMq1D4UfeCsI6rxnYXCtwgU0TVHQSVMMiPqPFmXy/tpyrqZQmXy/tolosHyXtkNUs+a5tJ2jGz+vpe3eySHKZ2l7dXog4y9tv84Pd+ylHdjVoIi5tNFdDp14SzuomwEWZ2mHdTcMYyztyO4Ha85LOzaHIZ3r0k7IaeDntrRTcvvhkdPSanP9QZTD0s7K+Yda90s7N8YPyO6WdmGcH7bdLO2SeD+4u1za5TER0NXSrooNis6Xdl18nHS6tBvzgU4nS7s1LzRFL+2OPAEWtbS78sVcxNI8/pj8XEvz+Uun4aX5/RmuOZfm+Tci5lia9wcYz7Y0/0/X61gaxUe/2KWR/F5ysDSiX5r5d2lU7+g0S6N7u0FRhvBZOPkLtfAXTWxVzhZbb459EWi+9wn+90e6Lh/r6xN9faqvz/T1ub5a9fWFvr7U11f6+lpf3+jrW319p682fX2vrx/09aO+ftLXz/r6RV+/6muWvn7T1+/6+kNff+rrL339ra9/wo9dzSJ6he59HHHvk4h7n0bc+yzi3ucR91oj7n0Rce/LiHtfRdz7OuLeNxH3vo24913EvbaIe99H3Psh4t6PEfd+irj3c8S9XyLu/Rpxb1bEvd8i7v0ece+PiHt/Rtz7K+Le3xH3/gnuzf61dPB90+B7zk9TSiKfpqhv4j/SznbyZEZ9GzdWttOnPOq7eLEKu3hipNrixMp2+fRJfZ97rLJunmSpH3KNle32qZj6MbdYmRyesKmfcomVyelpnfq5+1jFOT75U790F6so56eI6tcuYxVVxHgiqWZ1FSsb6+mm+q3zWCUxn5Sq3zuJVVoR+6mr+iM6ViaPJ7jqz6hYmbyeBqu/5o6l8nyyrP4Oxxqd91Nq9U/8udrpE+/yf+ZhgV5R8H2O2OlD4i6/0ofE8b7Sh8TxlpY+JI63tPQhcbylpQ+J4y0tfUgcb2npQ+J4S0sfEsdbWvqQON7SPiR8HfIRQazyf9+zmFEfE8UyOX5CEuu/en3qH8u9XfQz31hFHa8nP/eLlZn9tWmrT6zCOV/nfpF/rEz4NfOXecYaXDH36++v8otVEvVa/mvC80j5Wj6J9+vvO6ZHj3aG9+u3E7699lDA9+u3Nwf/Y2KPOR/6mxv9mDbTFH1fhvfrc22m7wBuJ/zhZ/aFo8nI95huWLG8fdf2IPX79YX1oMt3nol0+2EGCOL79SlrwLXG/1GuMcn36/9vouwDbwVBnXc7xPv1sx2xk+Da/rrYPU+h55qJSRJLT9fDALk278RgD8Ncm4+Ra6bo+zNwjWszfbk270S62s0HwrV5hU9v24PUXBPWgy7f+VOuqfkBuLYAKtcWEH7grSCo8yY78BlWrikXMAmujdDFLmDgWgHhdD0ckGs9A671CnOtFyPXTNFHMHCNazN9udaTkGu9QLjWU/j0tj1IzTVhPejyXTDlmloQgGsLoXJtIeEH3gqCOu8CDK4VuoBJcG2kLnZvBq71JpyuRwBybeGAa4uEubYII9dM0UcycI1rM325tjAh1xYB4drCwqe37UFqrgnrQZfvoinX1KIAXFsMlWuLCT/wVhDUeffG4NogFzAJrpXpYvdl4FpfwulaBci1goBri4e5tjgj10zRyxi4xrWZvlwrIOTa4iBcKxA+vW0PUnNNWA+6fJdIuaaWAODakqhcW1L4gbeCoM67LwbXilzAJLhWrovdn4Fr/Qmn65GAXFsq4NrSYa4tzcg1U/RyBq5xbaYv15Yi5NrSIFxbSvj0tj1IzTVhPejyXSblmloGgGvLonJtWeEH3gqCOu/+GFwrdgGT4FqlLvZABq4NJJyuRwFyrXfAteXCXFuOkWum6JUMXOPaTF+u9Sbk2nIgXOstfHrbHqTmmrAedPkun3JNLQ/AtRVQubaC8ANvBUGd90AMrg12AZPg2sG62FkGrmUJp+vRgFxbMeDaSmGurcTINVP0gxm4xrWZvlxbkZBrK4FwbUXh09v2IDXXhPWgy3fllGtqZQCu9UHlWh/hB94KgjrvLAbXsi5gElw7VBd7CAPXhhBO12MAudY34Fq/MNf6MXLNFP1QBq5xbaYv1/oScq0fCNf6Cp/etgepuSasB12+q6RcU6sAcG1VVK6tKvzAW0FQ5z0Eg2slLmASXDtcF3soA9eGEk7XYwG5tlrAtdXDXFudkWum6IczcI1rM325thoh11YH4dpqwqe37UFqrgnrQZfvGinX1BoAXFsTlWtrCj/wVhDUeQ/F4FqpC5gE16p0sYcxcG0Y4XQ9DpBr/QOuDQhzbQAj10zRqxi4xrWZvlzrT8i1ASBc6y98etsepOaasB50+a6Vck2tBcC1tVG5trbwA28FQZ33MAyujXQBk+DaUbrYwxm4Npxwuh4PyLV1Aq6tG+bauoxcM0U/ioFrXJvpy7V1CLm2LgjX1hE+vW0PUnNNWA+6fNdLuabWA+Da+qhcW1/4gbeCoM57OAbXRrmASXDtGF3sEQxcG0E4XasBuTYw4FomzLUMI9dM0Y9h4BrXZvpybSAh1zIgXBsofHrbHqTmmrAedPmqlGtKAXCtEJVrhcIPvBUEdd4jMLhW5gImwbXjdLErGbhWSThdTwDk2qCAa0VhrhUxcs0U/TgGrnFtpi/XBhFyrQiEa4Ok/15/0IPUXBPWgy7f4pRrqhiAa4NRuTZY+IG3gqDOuxKDa6NdwCS4Vq2LXcXAtSrC6XoiINeyAddKwlwrYeSaKXo1A9e4NtOXa1lCrpWAcC0r/a0sQQ9Sc01YD7p8S1OuqVIArm2AyrUNhB94KwjqvKswuFbuAibBtRN1sasZuFZNOF1PAuTahgHXNgpzbSNGrpmin8jANa7N9OXahoRc2wiEaxtKn95BD1JzTVgPunw3TrmmNgbg2iaoXNtE+IG3gqDOuxqDaxUuYBJcO1kXu4aBazWE0/VkQK4NCbi2aZhrmzJyzRT9ZAaucW2mL9eGEHJtUxCuDRE+vW0PUnNNWA+6fDdLuaY2A+Da5qhc21z4gbeCoM67BoJrJR2xk+DaqbrYdQxcqyOcrqcAcm2LgGtbhrm2JSPXTNFPZeAa12b6cm0LQq5tCcK1LYRPb9uD1FwT1oMu361SrqmtALi2NSrXthZ+4K0gqPOuw+CacgGT4FqNLnY9A9fqCafrqYBcGxpwbZsw17Zh5Jopeg0D17g205drQwm5tg0I14YKn962B6m5JqwHXb7bplxT2wJwbTtUrm0n/MBbQVDnXY/BtUIXMAmuna6L3cDAtQbC6XoaINe2D7i2Q5hrOzByzRT9dAaucW2mL9e2J+TaDiBc21749LY9SM01YT3o8t0x5ZraEYBrO6FybSfhB94KgjrvBgyuDXIBk+DambrYjQxcayScrjWAXBsWcG3nMNd2ZuSaKfqZDFzj2kxfrg0j5NrOIFwbJnx62x6k5pqwHnT57pJyTe0CwLVdUbm2q/ADbwVBnXcjBteKXMAkuHa2LnYTA9eaCKdrLSDXdgu4tnuYa7szcs0U/WwGrnFtpi/XdiPk2u4gXNtN+PS2PUjNNWE96PLdI+Wa2gOAa3uicm1P4QfeCoI67yYMrhW7gElwrU4Xu5mBa82E0/V0QK4ND7i2V5hrezFyzRS9joFrXJvpy7XhhFzbC4Rrw4VPb9uD1FwT1oMu371Trqm9Abi2DyrX9hF+4K0gqPNuxuDaYBcwCa6dp4vdwsC1FsLpegYg1/YNuLZfmGv7MXLNFP08Bq5xbaYv1/Yl5Np+IFzbV/j0tj1IzTVhPejy3T/lmtofgGsHoHLtAOEH3gqCOu8WDK5lXcAkuHaBLvZUBq5NJZyuZwJybUTAtQPDXDuQkWum6BcwcI1rM325NoKQaweCcG2E8Olte5Caa8J60OU7MuWaGgnAtVGoXBsl/MBbQVDnPRWDayUuYBJcu0gXexoD16YRTtezALlWFnBtdJhroxm5Zop+EQPXuDbTl2tlhFwbDcK1MuHT2/YgNdeE9aDLtzzlmioH4FoFKtcqhB94KwjqvKdhcK3UBUyCa/W62NMZuDadcLqeDci1yoBrB4W5dhAj10zR6xm4xrWZvlyrJOTaQSBcqxQ+vW0PUnNNWA+6fA9OuaYOBuDaIahcO0T4gbeCoM57OgbXRrqASXBtjC72DAauzSCcrucAcu3QgGuHhbl2GCPXTNHHMHCNazN9uXYoIdcOA+HaocKnt+1Baq4J60GX7+Ep19ThAFw7ApVrRwg/8FYQ1HnPwODaKBcwCa5dpos9k4FrMwmnax0g16oCrh0Z5tqRjFwzRb+MgWtcm+nLtSpCrh0JwrUq4dPb9iA114T1oMv3qJRr6igArh2NyrWjhR94KwjqvGdicK3MBUyCa1foYrcycK2VcLqeC8i1YwKuHRvm2rGMXDNFv4KBa1yb6cu1Ywi5diwI144RPr1tD1JzTVgPunyPS7mmjgPg2vGoXDte+IG3gqDOuxWDa6NdwCS41qCL3cbAtTbC6XoeINeqA66dEObaCYxcM0VvYOAa12b6cq2akGsngHCtWvj0tj1IzTVhPejyPTHlmjoRgGsnoXLtJOEH3gqCOu82DK6Vu4BJcO1qXexZDFybRThdzwfk2skB104Jc+0URq6Zol/NwDWuzfTl2smEXDsFhGsnC5/etgepuSasB12+p6ZcU6cCcO00VK6dJvzAW0FQ5z0Lg2sVLmASXLtWF7udgWvthNP1AkCu1QRcqw1zrZaRa6bo1zJwjWszfblWQ8i1WhCu1Qif3rYHqbkmrAc7/sJ1yjV1OgDXzkDl2hnCD7wVBHXe7RBcK+2InQTXrtfF7nkqPddMTJJYerpeCMi1MwOunRXm2lmMXDNFv56Ba1yb6cu1Mwm5dhYI184UPr1tD1JzTVgPdvzJxJRr6mwArp2DyrVzhB94KwjqvMkOfIaVa8oFTIJrjbrYBQxcKyCcrhcBcq0u4Nq5Ya6dy8g1U/RGBq5xbaYv1+oIuXYuCNfqhE9v24PUXBPWgx1/gyflmjoPgGvno3LtfOEH3gqCOu8CDK4VuoBJcO0mXezeDFzrTThdLwbk2gUB1y4Mc+1CRq6Zot/EwDWuzfTl2gWEXLsQhGsXCJ/etgepuSasBzs+1D3lmroIgGsXo3LtYuEH3gqCOu/eGFwb5AImwbVbdLH7MnCtL+F0rQfkWn3AtUvCXLuEkWum6LcwcI1rM325Vk/ItUtAuFYvfHrbHqTmmrAe7PiU0JRragwA1y5F5dqlwg+8FQR13n0xuFbkAibBtdt0sfszcK0/4XS9BJBrlwVcuzzMtcsZuWaKfhsD17g205drlxFy7XIQrl0mfHrbHqTmmrAe7PjYqZRr6goArl2JyrUrhR94KwjqvPtjcK3YBUyCa0262AMZuDaQcLqOAeRaQ8C1q8Jcu4qRa6boTQxc49pMX641EHLtKhCuNQif3rYHqbkmrAc7Pscg5Zq6GoBr16By7RrhB94KgjrvgRhcG+wCJsG1O3WxswxcyxJO10sBuXZtwLXrwly7jpFrpuh3MnCNazN9uXYtIdeuA+HatcKnt+1Baq4J68GOX4xLuaauB+DaDahcu0H4gbeCoM47i8G1rAtomqKgk6YYEPUfLcrk/fW/uZpCZfL9WiCiwfJd2kJRzZrn0haLbvy8lrZkJ4con6Ut2+mBjL+0FTo/3LGX1qerQRFzaat2OXTiLW3NbgZYnKWt3d0wjLG09bsfrDkvrTCHIZ3r0gbnNPBzW9oGuf3wyGlpm+T6gyiHpW2e8w+17pe2dYwfkN0tbbs4P2y7WdpO8X5wd7m0XWMioKul7RkbFJ0vbZ/4OOl0aQfkA51OljYqLzRFL60iT4BFLe2QfDEXsTSPPyY/19J8/tJpeGl+f4ZrzqV5/o2IOZbm/QHGsy3N/9P1OpZG8dEvdmkkv5ccLI3ol2b+XRrVOzrN0ujeblCUIXwWTv5CLfxFE1uVs8XWm2NfBJrvfYL/3ajrcqO+btLXzfq6RV+36us2fd2uryZ93aGvO/U1Vl/j9HWXvsbra4K+mvU1UV+T9DVZX1P0dbe+7tHXvfpq0dd9+rpfXw/o60F9PRR+7GoW0St078aIezdF3Ls54t4tEfdujbh3W8S92yPuNUXcuyPi3p0R98ZG3BsXce+uiHvjI+5NiLjXHHFvYsS9SRH3JkfcmxJx7+6Ie/dE3Ls34l5LxL37Iu7dH3HvgYh7D0bceyi4N/vXQsH3TYPvOTxNKeziaYoaH+eRdrbLJzNqQu6xyrp5yqOac42V7faJkZqYW6xMDk+f1KRcYmVyepKlJncfqzjHp2JqSnexinJ+wqbu7jJWUUWMp3XqnomxerXLJ38/XDYPyw+8xeKfqdnXmQnn3JRnzoMr5q7fHfnFKonaizvziVUSva9j48fKdtYj4+LGynbeb3d1FSsbq9/UvZ3HKonZu6qlk1ilFbHPgbovOlYmjzOl7o+KlcnrfKoH5o6l8jzr6sFwrNF5zw31EOEMevUfnhlUGJpB//4/pA/su/xKH9jH+0of2MdbWvrAPt7S0gf28ZaWPrCPt7T0gX28paUP7OMtLX1gH29p6QP7eEu7gfB1SCNBrPJ/3z+aUTcSxTI53kQS67963ewfy7119xbfWEUdrydv9YuVmf216W0+sQrnfJ17O2GvEj5rU5SvmZP4HYVxY3r0GMLwOwpDCN9SfBng7yg8PPG/74+E/7HM3OjHtJmm6OMYfkeBazN9B93DhD9kHpnI02TUe/ww3eDLcPYg9e8oCOtBl+9Uwv0wAwTxdxSmTpS/xkcp15jk7yg8KvzAW0FQ5z0E43cUSlzAJLg2Xhd7KAPXhhJO18sBufZYwLXHw1x7nJFrpujjGbjGtZm+XHuMkGuPg3DtMeHT2/YgNdeE9aDL94mUa+oJAK49icq1J4UfeCsI6ryHYnCt1AVMgmvNutjDGLg2jHC6XgHItacCrj0d5trTjFwzRW9m4BrXZvpy7SlCrj0NwrWnhE9v24PUXBPWgy7faSnX1DQArj2DyrVnhB94KwjqvIdhcG2kC5gE1ybpYg9n4Npwwul6JSDXng249lyYa88xcs0UfRID17g205drzxJy7TkQrj0rfHrbHqTmmrAedPk+n3JNPQ/AtRdQufaC8ANvBUGd93AMro1yAZPg2hRd7BEMXBtBOF0bALn2YsC1l8Jce4mRa6boUxi4xrWZvlx7kZBrL4Fw7UXh09v2IDXXhPWgy3d6yjU1HYBrL6Ny7WXhB94KgjrvERhcK3MBk+DaPbrYlQxcqyScrlcBcu2VgGuvhrn2KiPXTNHvYeAa12b6cu0VQq69CsK1V4RPb9uD1FwT1oMu39dSrqnXALj2OirXXhd+4K0gqPOuxODaaBcwCa616GJXMXCtinC6Xg3ItTcCrr0Z5tqbjFwzRW9h4BrXZvpy7Q1Crr0JwrU3hE9v24PUXBPWgy7fGSnX1AwArr2FyrW3hB94KwjqvKswuNbxYfBJcO1+XexqBq5VE07XawC59nbAtXfCXHuHkWum6PczcI1rM3259jYh194B4drbwqe37UFqrgnrQZfvuynX1LsAXHsPlWvvCT/wVhDUeVdjcK3CBUyCaw/qYtcwcK2GcLpeC8i19wOufRDm2geMXDNFf5CBa1yb6cu19wm59gEI194XPr1tD1JzTVgPunxnplxTMwG49iEq1z4UfuCtIKjzroHg2siO2Elw7WFd7DoGrtURTtfrALn2UcC1j8Nc+5iRa6boDzNwjWszfbn2ESHXPgbh2kfCp7ftQWquCetBl+8nKdfUJwBc+xSVa58KP/BWENR512FwTbmASXBtqi52PQPX6gmn6/WAXPss4NrnYa59zsg1U/SpDFzj2kxfrn1GyLXPQbj2mfDpbXuQmmvCetDl25pyTbUCcO0LVK59IfzAW0FQ512PwbVCFzAJrj2mi93AwLUGwul6AyDXvgy49lWYa18xcs0U/TEGrnFtpi/XviTk2lcgXPtS+PS2PUjNNWE96PL9OuWa+hqAa9+gcu0b4QfeCoI67wYMrg1yAZPg2hO62I0MXGsknK6NgFz7NuDad2GufcfINVP0Jxi4xrWZvlz7lpBr34Fw7Vvh09v2IDXXhPWgy7ct5ZpqA+Da96hc+174gbeCoM67EYNrRS5gElx7She7iYFrTYTT9UZArv0QcO3HMNd+ZOSaKfpTDFzj2kxfrv1AyLUfQbj2g/DpbXuQmmvCetDl+1PKNfUTANd+RuXaz8IPvBUEdd5NGFwrdgGT4No0XexmBq41E07XmwC59kvAtV/DXPuVkWum6NMYuMa1mb5c+4WQa7+CcO0X4dPb9iA114T1oMt3Vso1NQuAa7+hcu034QfeCoI672YMrg12AZPg2rO62C0MXGshnK43A3Lt94Brf4S59gcj10zRn2XgGtdm+nLtd0Ku/QHCtd+FT2/bg9RcE9aDLt8/U66pPwG49hcq1/4SfuCtIKjzbsHgWtYFTIJrz+tiT2Xg2lTC6XoLINf+Drj2T5hr/zByzRT9eQaucW2mL9f+JuTaPyBc+1v6L4oFPUjNNWE96PJtT7mm2gG41mMSKNdIF96DTxDUeU/F4FqJC5gE117UxZ7GwLVphNP1VkCuzTPpv+//m9RjTq6ZG/2YNtMU/UUGrnFtpi/X5plEV7v/TcLg2jzCp7ftQWquCetBl++8k1KuzTtJ/hrnQ+XafMIPvBUEdd7TMLhW6gImwbXputjTGbg2nXC63gbItfkDri0Q5toCjFwzRZ/OwDWuzfTl2vyEXFsAhGvzC5/etgepuSasB12+PVOuqZ4AXOuFyrVe0g98IAjqvKdjcG2kC5gE117RxZ7BwLUZhNP1dkCuLRhwbaEw1xZi5Jop+isMXOPaTF+uLUjItYVAuLag8Olte5Caa8J60OW7cMo1tTAA1xZB5doiwg+8FQR13jMwuDbKBUyCa6/pYs9k4NpMwunaBMi1RQOuLRbm2mKMXDNFf42Ba1yb6cu1RQm5thgI1xYVPr1tD1JzTVgPunwLUq6pAgCuLY7KtcWFH3grCOq8Z2JwrcwFTIJrb+hitzJwrZVwut4ByLUlAq4tGebakoxcM0V/g4FrXJvpy7UlCLm2JAjXlhA+vW0PUnNNWA+6fJdKuaaWAuDa0qhcW1r4gbeCoM67FYNro13AJLg2Qxe7jYFrbYTT9U5Ari0TcG3ZMNeWZeSaKfoMBq5xbaYv15Yh5NqyIFxbRvj0tj1IzTVhPejy7Z1yTfUG4NpyqFxbTviBt4Ig/1MZGFwrdwGT4NrbutizGLg2i3C6jgXk2vIB11YIc20FRq6Zor/NwDWuzfTl2vKEXFsBhGvLC5/etgepuSasB12+K6ZcUysCcG0lVK6tJPzAW0GQf/YyBtcqXMAkuPauLnY7A9faCafrOECurRxwrU+Ya30YuWaK/i4D17g205drKxNyrQ8I11YWPr1tD1JzTVgPunz7plxTfQG41g+Va/2EH3grCPIP84Pg2qiO2Elw7X1d7J6n0XPNxCSJpafrXYBcWyXg2qphrq3KyDVT9PcZuMa1mb5cW4WQa6uCcG0V4dPb9iA114T1oMt3tZRrajUArq2OyrXVhR94KwjyT4c5jb6pZv8iiT1olHIBk+DaTF3sAgauFRBO1/GAXFsj4NqaYa6tycg1U/SZDFzj2kxfrq1ByLU1Qbi2hvDpbXuQmmvCetDl2z/lmuoPwLUBqFwbIPzAW0GQ/7oxBtcKXcAkuPaRLnZvBq71JpyuEwC5tlbAtbXDXFubkWum6B8xcI1rM325thYh19YG4dpawqe37UFqrgnrQZfvOinX1DoAXFsXlWvrCj/wVhDkv7+CwbVBLmASXPtEF7svA9f6Ek7XZkCurRdwbf0w19Zn5Jop+icMXOPaTF+urUfItfVBuLae8Olte5Caa8J60OU7MOWaGgjAtQwq1zLCD7wVBPkbIjG4VuQCJsG1z3Sx+zNwrT/hdJ0IyDUVcK0wzLVCRq6Zon/GwDWuzfTlmiLkWiEI15Tw6W17kJprwnrQ5Tso5ZoaBMC1IlSuFQk/8FYQ5P/CjsG1YhcwCa616mIPZODaQMLpOgmQa8UB1waHuTaYkWum6K0MXOPaTF+uFRNybTAI14qFT2/bg9RcE9aDLt9syjWVBeBaCSrXSoQfeCsI8ke2GFwb7AImwbUvdbGzDFzLEk7XyYBcKw24tkGYaxswcs0U/UsGrnFtpi/XSgm5tgEI10qFT2/bg9RcE9aDLt8NU66pDQG4thEq1zYSfuCtIMhfA2BwLesCJsG1r3WxhzBwbQjhdJ0CyLWNA65tEubaJoxcM0X/moFrXJvpy7WNCbm2CQjXNhY+vW0PUnNNWA925JtyTQ0B4NqmqFzbVPiBt4IgbyoMrpW4gElw7Vtd7KEMXBtKOF3vBuTaZgHXNg9zbXNGrpmif8vANa7N9OXaZoRc2xyEa5sJn962B6m5JqwHXb5bpFxTWwBwbUtUrm0p/MBbQVDnPRSDa6UuYBJca9PFHsbAtWGE0/UeQK5tFXBt6zDXtmbkmil6GwPXuDbTl2tbEXJtaxCubSV8etsepOaasB7s4GnKNTUUgGvboHJtG+EH3gqCOu9hGFwb6QImwbUfdLGHM3BtOOF0vReQa9sGXNsuzLXtGLlmiv4DA9e4NtOXa9sScm07EK5tK3x62x6k5pqwHnT5bp9yTW0PwLUdULm2g/ADbwVBnfdwDK6NcgGT4NpPutgjGLg2gnC6tgBybceAazuFubYTI9dM0X9i4BrXZvpybUdCru0EwrUdhU9v24PUXBPWgx1PE1OuqWEAXNsZlWs7Cz/wVhDUeY/A4FqZC5gE137Rxa5k4Fol4XS9D5BruwRc2zXMtV0ZuWaK/gsD17g205druxBybVcQru0ifHrbHqTmmrAedPnulnJN7QbAtd1Ruba78ANvBUGddyUG10a7gElwbZYudhUD16oIp+v9gFzbI+DanmGu7cnINVP0WQxc49pMX67tQci1PUG4tofw6W17kJprwnqw4x9/U66p4QBc2wuVa3sJP/BWENR5V2FwrdwFTIJrv+tiVzNwrZpwuj4AyLW9A67tE+baPoxcM0X/nYFrXJvpy7W9Cbm2DwjX9hY+vW0PUnNNWA+6fPdNuab2BeDafqhc20/4gbeCoM67GoNrFS6gaYqCTppiQNR/tCiT99ejE8MJqEy+X09OnLsY+S7tmYhY+S7thYmRm5TX0l6OjpXX0l6f2FnzxF/aW53Gir+09yZ20dQxl/ZhV7FiLu3TiV0ftjhL+6KbWHGW9k13sWIs7fvuY+W8tJ9ziJXr0n7LKVZuS/srt1g5La1Hzj/Uul/afDF+QHa3tF5xfth2s7RF4v3g7nJpi8dEQFdLWzo2KDpf2nLxcdLp0lbKBzqdLK1fXmiKXtrqeQIsamkD8sVcxNI8/pj83EvzQGZ4aX5/hmvOpXn+jYg5lub9AcazLc3/0/U6lkbx0S92aSS/lxwsjeiXZv5dGtU7Os3S6N5uUJQhfBZO/kIt/EUTW5WzxdabY18Emu99gv+9v67LAfoaoa8D9TVSX6P0Vaav0foq11eFvir1dZC+DtbXIfo6VF+H6etwfR2hryp9Hamvo/R1tL6O0dex+jpOX8frq1pfJ+jrRH2dFH7sahbRK3TvgIh7IyLuHRhxb2TEvVER98oi7o2OuFceca8i4l5lxL2DIu4dHHHvkIh7h0bcOyzi3uER946IuFcVce/IiHtHRdw7OuLeMRH3jo24d1zEveMj7lVH3Dsh4t6JEfdOCu7N/rVQ8H3T4HsOT1MKu3iaog6N80g72+WTGXVY7rHKunnKow7PNVa22ydG6ojcYmVyePqkqnKJlcnpSZY6svtYxTk+FVNHdRerKOcnbOroLmMVVcR4WqeOIfwnk30vn4flB95i8c/U7OvMhHMuzzPnwRVz168iv1glUXtRmU+skuh9PSh+rGxnPXJw3FjZzvvtkK5iZWP1mzq281glMXtXHddJrNKK2OdAHR8dK5PHmVLVUbEyeZ1PdcLcsVSeZ12dGI41Ou+5oU4inEFD2nlmUGFoBv37/5A+sO/yK31gH+8rfWAfb2npA/t4S0sf2MdbWvrAPt7S0gf28ZaWPrCPt7T0gX28paUP7OMtbT/C1yH7E8Qq//f9oxl1AFEsk+MIklj/1etA/1jurbsjfWMVdbyeHOUXKzP7a9Myn1iFc77OHU3Yq4TP2hTla+YkfkfhzzE9etQw/I5CDeFbih8E/B2Fkyf99/2U8D+WmRv9mDbTFN1sKPXvKHBtpu+gO5nwh8wpk3iajHqPT6YbfCxvWbY9SP07CsJ60OV7KuF+mAGC+DsKp06Sv8bTKNeY5O8onCb8wFtBUOddA/E7CmUdsZPg2t+62HUMXKsjnK4PAXKtJuBabZhrtYxcM0X/m4FrXJvpy7UaQq7VgnCtRvj0tj1IzTVhPejyPT3lmjodgGtnoHLtDOEH3gqCOu86DK4pFzAJrrXrYtczcK2ecLo+DMi1MwOunRXm2lmMXDNFb2fgGtdm+nLtTEKunQXCtTOFT2/bg9RcE9aDLt+zU66pswG4dg4q184RfuCtIKjzrsfgWqELmATX5rm0R48GBq41EE7XRwC5Vhdw7dww185l5JoputlQaq5xbaYv1+oIuXYuCNfqhE9v24PUXBPWgy7f81KuqfMAuHY+KtfOF37grSCo827A4NogFzAJrs2ri93IwLVGwuk6FZBrFwRcuzDMtQsZuWaKPi8D17g205drFxBy7UIQrl0gfHrbHqTmmrAedPlelHJNXQTAtYtRuXax8ANvBUGddyMG14pcwCS4Nr8udhMD15oIp+ujgFyrD7h2SZhrlzByzRR9fgaucW2mL9fqCbl2CQjX6oVPb9uD1FwT1oMu3zEp19QYAK5disq1S4UfeCsI6rybMLhW7AImwbWeutjNDFxrJpyujwFy7bKAa5eHuXY5I9dM0XsycI1rM325dhkh1y4H4dplwqe37UFqrgnrQZfvFSnX1BUAXLsSlWtXCj/wVhDUeTdjcG2wC5gE1xbUxW5h4FoL4XR9HJBrDQHXrgpz7SpGrpmiL8jANa7N9OVaAyHXrgLhWoPw6W17kJprwnrQ5Xt1yjV1NQDXrkHl2jXCD7wVBHXeLRhcy7qASXBtYV3sqQxcm0o4XZ8A5Nq1AdeuC3PtOkaumaIvzMA1rs305dq1hFy7DoRr1wqf3rYHqbkmrAddvtenXFPXA3DtBlSu3SD8wFtBUOc9FYNrJS5gElxbVBd7GgPXphFO1ycBudYYcO3GMNduZOSaKfqiDFzj2kxfrjUScu1GEK41Cp/etgepuSasB12+N6VcUzcBcO1mVK7dLPzAW0FQ5z0Ng2ulLmASXCvQxZ7OwLXphNP1KUCu3RJw7dYw125l5JopegED17g205drtxBy7VYQrt0ifHrbHqTmmrAedPnelnJN3QbAtdtRuXa78ANvBUGd93QMro10AZPg2hK62DMYuDaDcLo+Dci1poBrd4S5dgcj10zRl2DgGtdm+nKtiZBrd4BwrUn49LY9SM01YT3o8r0z5Zq6E4BrY1G5Nlb4gbeCoM57BgbXRrmASXBtKV3smQxcm0k4XacBcm1cwLW7wly7i5FrpuhLMXCNazN9uTaOkGt3gXBtnPDpbXuQmmvCetDlOz7lmhoPwLUJqFybIPzAW0FQ5z0Tg2tlLmASXFtGF7uVgWuthNP1GUCuNQdcmxjm2kRGrpmiL8PANa7N9OVaMyHXJoJwrVn49LY9SM01YT3o8p2Uck1NAuDaZFSuTRZ+4K0gqPNuxeDaaBcwCa711sVuY+BaG+F0fRaQa1MCrt0d5trdjFwzRe/NwDWuzfTl2hRCrt0NwrUpwqe37UFqrgnrQZfvPSnX1D0AXLsXlWv3Cj/wVhDUebdhcK3cBUyCa8vrYs9i4Noswun6HCDXWgKu3Rfm2n2MXDNFX56Ba1yb6cu1FkKu3QfCtRbh09v2IDXXhPWgy/f+lGvqfgCuPYDKtQeEH3grCOq8Z2FwrcIFTIJrK+pitzNwrZ1wuj4PyLUHA649FObaQ4xcM0VfkYFrXJvpy7UHCbn2EAjXHhQ+vW0PUnNNWA+6fB9OuaYeBuDaI6hce0T4gbeCoM67HYJroztiJ8G1lXWxe9bQc83EJImlp+sLgFybGnDt0TDXHmXkmin6ygxc49pMX65NJeTaoyBcmyr9b9IEPUjNNWE96PJ9LOWaegyAa4+jcu1x4QfeCoI6b7IDn2HlmnIBk+BaX13sAgauFRBO1xcBufZEwLUnw1x7kpFrpuh9GbjGtZm+XHuCkGtPgnDtCekfwxT0IDXXhPWgy/eplGvqKQCuPY3KtaeFH3grCOq8CzC4VugCJsG1VXSxezNwrTfhdH0JkGvTAq49E+baM4xcM0VfhYFrXJvpy7VphFx7BoRr06S/8zjoQWquCetBl++zKdfUswBcew6Va88JP/BWENR598bg2iAXMAmuraaL3ZeBa30Jp+t0QK49H3DthTDXXmDkmin6agxc49pMX649T8i1F0C49rz0F9tBD1JzTVgPunxfTLmmXgTg2kuoXHtJ+IG3gqDOuy8G14pcwCS4toYudn8GrvUnnK4vA3JtesC1l8Nce5mRa6boazBwjWszfbk2nZBrL4Nwbbrw6W17kJprwnrQ5ftKyjX1CgDXXkXl2qvCD7wVBHXe/TG4VuwCJsG1/rrYAxm4NpBwur4CyLXXAq69Huba64xcM0Xvz8A1rs305dprhFx7HYRrrwmf3rYHqbkmrAddvm+kXFNvAHDtTVSuvSn99VkgCOq8B2JwbbALmATX1tLFzjJwLUs4XV8F5NqMgGtvhbn2FiPXTNHXYuAa12b6cm0GIdfeAuHaDOHT2/YgNdeE9aDL9+2Ua+ptAK69g8q1d4QfeCsI6ryzGFzLuoBJcG0dXewhDFwbQjhdXwPk2rsB194Lc+09Rq6Zoq/DwDWuzfTl2ruEXHsPhGvvCp/etgepuSasB12+76dcU+8DcO0DVK59IPzAW0FQ5z0Eg2slLmASXFtPF3soA9eGEk7X1wG5NjPg2odhrn3IyDVT9PUYuMa1mb5cm0nItQ9BuDZT+PS2PUjNNWE96PL9KOWa+giAax+jcu1j4QfeCoI676EYXCt1AZPg2kBd7GEMXBtGOF3fAOTaJwHXPg1z7VNGrpmiD2TgGtdm+nLtE0KufQrCtU+ET2/bg9RcE9aDLt/PUq6pzwC49jkq1z4XfuCtIKjzHobBtZEuYBJcU7rYwxm4Npxwur4JyLXWgGtfhLn2BSPXTNEVA9e4NtOXa62EXPsChGutwqe37UFqrgnrQZfvlynX1JcAXPsKlWtfCT/wVhDUeQ/H4NooFzAJrg3SxR7BwLURhNN1BiDXvg649k2Ya98wcs0UfRAD17g205drXxNy7RsQrn0tfHrbHqTmmrAedPl+m3JNfQvAte9Qufad8ANvBUGd9wgMrpW5gElwrVgXu5KBa5WE0/UtQK61BVz7Psy17xm5ZopezMA1rs305VobIde+B+Fam/DpbXuQmmvCetDl+0PKNfUDANd+ROXaj8IPvBUEdd6VGFwb7QImwbWsLnYVA9eqCKfr24Bc+yng2s9hrv3MyDVT9CwD17g205drPxFy7WcQrv0kfHrbHqTmmrAedPn+knJN/QLAtV9Rufar8ANvBUGddxUG18pdwCS4VqqLXc3AtWrC6foOINdmBVz7Lcy13xi5ZopeysA1rs305dosQq79BsK1WcKnt+1Baq4J60GX7+8p19TvAFz7A5Vrfwg/8FYQ1HlXY3CtwgVMgmsb6mLXMHCthnC6vgvItT8Drv0V5tpfjFwzRd+QgWtcm+nLtT8JufYXCNf+FD69bQ9Sc01YD7p8/065pv4G4No/qFz7R/iBt4KgzrsGgmvlHbGT4NrGuth1DFyrI5yu7wFyrT3gWo/JPebkmrnRj2kzTdE3ZuAa12b6cq2dkGtmXziajHqP24VPb9uD1FwT1oMu33km0+0HKtcoa8C1xv9NBuXa/ybLPvBWENR512FwTbmASXBtiC52PQPX6gmn6/uAXJt3crCHYa7Nx8g1U/QhDFzj2kxfrs07ma5284FwbV7h09v2IDXXhPWgy3f+lGtqfgCuLYDKtQWEH3grCOq86zG4VugCJsG1zXSxGxi41kA4XT8A5FrPgGu9wlzrxcg1U/TNGLjGtZm+XOtJyLVeIFzrKXx62x6k5pqwHnT5LphyTS0IwLWFULm2kPADbwVBnXcDBtcGuYBJcG0LXexGBq41Ek7XmYBcWzjg2iJhri3CyDVT9C0YuMa1mb5cW5iQa4uAcG1h4dPb9iA114T1oMt30ZRralEAri2GyrXFhB94KwjqvBsxuFbkAibBta10sZsYuNZEOF0/BORaQcC1xcNcW5yRa6boWzFwjWszfblWQMi1xUG4ViB8etsepOaasB50+S6Rck0tAcC1JVG5tqTwA28FQZ13EwbXil3AJLg2VBe7mYFrzYTT9SNAri0VcG3pMNeWZuSaKfpQBq5xbaYv15Yi5NrSIFxbSvj0tj1IzTVhPejyXSblmloGgGvLonJtWeEH3gqCOu9mDK4NdgGT4Nq2utgtDFxrIZyuHwNyrXfAteXCXFuOkWum6NsycI1rM3251puQa8uBcK238Olte5Caa8J60OW7fMo1tTwA11ZA5doKwg+8FQR13i0YXMu6gKYpCjppigFR/9GiTN5fp831+QAqk+/XGRGfNZDv0s6J+tyCPJd2fvRnIOS1tIs7+TyFfJZ2aaefzRB/aVd2/jkPsZd2TVefGRFzaTd0+fkT8ZZ2czefZRFnabd397kYMZY2tvvP2Mh5aRNy+LyOXJc2OafP/shtaffm9jkiOS3tgVw/kySHpT2S8+ebdL+0x2N8Vkp3S3s6zueudLO05+J9hkuXS3sp5ufBdLW0V2N/tkznS3sz/ufUdLq0d/L5zJtOlvZBXp+fE720j/P8LJ6opX2e7+f6RCzN44/Jz7U0n790Gl6a35/hmnNpnn8jYo6leX+A8WxL8/90vY6lUXz0i10aye8lB0sj+qWZf5dG9Y5OszS6txsUZQifhZO/UAt/0cRW5Wyx9ebYF4Hme5/gf6+o67KSvlbWVx999TVPQPW1ir5W1ddq+lpdX2voa0199dfXAH2tpa+19bWOvtbV13r6Wl9fA/WV0ZfSV6G+BumrSF/F+hqsr6y+SsKPXc0ieoXurRRxb+WIe30i7vWNuNcv4t4qEfdWjbi3WsS91SPurRFxb82Ie/0j7g2IuLdWxL21I+6tE3Fv3Yh760XcWz/i3sCIe5mIeyriXmHEvUER94oi7hVH3BsccS8bca8kuDf710LB902D7zk8TSns4mmKWivOI+1sl09m1Nq5xyrr5imPWifXWNlunxipdXOLlcnh6ZNaL5dYmZyeZKn1u49VnONTMTWwu1hFOT9hU5kuYxVVxHhapxThP5k8dfk8LD/wFot/pmZfZyac82p55jy4Yu76rZ5frJKovVgjn1gl0fu6ZvxY2c56pH/cWNnO+21AV7GysfpNFXYeqyRm76pBncQqrYh9DlRRdKxMHmdKFUfFyuR1PtXguWOpPM+6yoZjjc57bqgSwhl0VzvPDCoMzaB//x/SB/ZdfqUP7ON9pQ/s4y0tfWAfb2npA/t4S0sf2MdbWvrAPt7S0gf28ZaWPrCPt7T0gX28pa1A+DpkRYJY5f++fzSjViKKZXJcmSTWf/Xq4x/LvXW3r2+soo7Xk/38YmVmf226ik+swjlf565K2KuEz9oU5WvmJH5HYftLe/SYyvA7ClMJ31L8CeDvKJQGv6OwQfgfyzZg/B0FU/TtGX5HgWszfQddKeEPmQ1AfkehlPhfwrl6kPp3FIT1YMffWkx/R0FtOFn+GjdC/R2FjYQfeCsI6rynYvyOQokLmATXdtTFnsbAtWmE0/VTQK5tHHBtkzDXNmHkmin6jgxc49pMX65tTMi1TUC4trHw6W17kJprwnqw44/3pFxTQwC4tikq1zYVfuCtIKjznobBtVIXMAmuDdPFns7AtemE0/UzQK5tFnBt8zDXNmfkmin6MAaucW2mL9c2I+Ta5iBc20z49LY9SM01YT3Y8WnwKdfUFgBc2xKVa1sKP/BWENR5T8fg2kgXMAmu7aKLPYOBazMIp+vngFzbKuDa1mGubc3INVP0XRi4xrWZvlzbipBrW4NwbSvh09v2IDXXhPVgx8eLplxTQwG4tg0q17YRfuCtIKjznoHBtVEuYBJc200XeyYD12YSTtdWQK5tG3BtuzDXtmPkmin6bgxc49pMX65tS8i17UC4tq3w6W17kJprwnqw4607KdfU9gBc2wGVazsIP/BWENR5z8TgWpkLmATX9tDFbmXgWivhdP0CkGs7BlzbKcy1nRi5Zoq+BwPXuDbTl2s7EnJtJxCu7Sh8etsepOaasB7s+LeglGtqGADXdkbl2s7CD7wVBHXerRhcG+0CJsG14brYbQxcayOcrl8Ccm2XgGu7hrm2KyPXTNGHM3CNazN9ubYLIdd2BeHaLsKnt+1Baq4J68GOhwsp19RuAFzbHZVruws/8FYQ1Hm3YXCt48Pgk+Da3rrYsxi4Notwun4FyLU9Aq7tGebanoxcM0Xfm4FrXJvpy7U9CLm2JwjX9hA+vW0PUnNNWA92/LRKuaaGA3BtL1Su7SX8wFtBUOc9C4NrFS5gElzbVxe7nYFr7YTT9WtAru0dcG2fMNf2YeSaKfq+DFzj2kxfru1NyLV9QLi2t/DpbXuQmmvCerBjgKZcU/sCcG0/VK7tJ/zAW0FQ590OwbWKjthJcG1/XeyetfRcMzFJYunp+g0g1/YPuHZAmGsHMHLNFH1/Bq5xbaYv1/Yn5NoBIFzbX/j0tj1IzTVhPejyHZFyTY0A4NqBqFw7UPiBt4KgzpvswGdYuaZcwCS4NkIXu6CWnmsFtXTT9VtAro0MuDYqzLVRjFwzRR/BwDWuzfTl2khCro0C4dpI4dPb9iA114T1oMu3LOWaKgPg2mhUro0WfuCtIKjzJjvwGVauFbqASXBtpC5271p6rvWupZuu3wFyrTzgWkWYaxWMXDNFH8nANa7N9OVaOSHXKkC4Vi58etsepOaasB50+VamXFOVAFw7CJVrBwk/8FYQ1HmTHfgMK9cGuYBJcK1MF7tvLT3X+tbSTdc2QK4dHHDtkDDXDmHkmil6GQPXuDbTl2sHE3LtEBCuHSx8etsepOaasB50+R6ack0dCsC1w1C5dpjwA28FQZ032YHPsHKtyAVMgmvlutj9a+m51r+Wbrp+D8i1wwOuHRHm2hGMXDNFL2fgGtdm+nLtcEKuHQHCtcOFT2/bg9RcE9aDLt+qlGuqCoBrR6Jy7UjhB94KgjpvsgOfYeVasQuYBNcqdbEH1tJzbWAt3XT9AZBrRwVcOzrMtaMZuWaKXsnANa7N9OXaUYRcOxqEa0cJn962B6m5JqwHXb7HpFxTxwBw7VhUrh0r/MBbQVDnTXbgM6xcG+wCJsG1g3Wxs7X0XMvW0k3XHwG5dlzAtePDXDuekWum6AczcI1rM325dhwh144H4dpxwqe37UFqrgnrQZdvdco1VQ3AtRNQuXaC8ANvBUGdN9mBz7ByLesCJsG1Q3Wxh9TSc21ILd10/QmQaycGXDspzLWTGLlmin4oA9e4NtOXaycScu0kEK6dKHx62x6k5pqwHnT5npxyTZ0MwLVTULl2ivADbwVBnTfZgc+wcq3EBUyCa4frYg+tpefa0Fq66fozINdODbh2WphrpzFyzRT9cAaucW2mL9dOJeTaaSBcO1X49LY9SM01YT3o8q1JuaZqALhWi8q1WuEH3gqCOm+yA59h5VqpC5gE16p0sYfV0nNtWC3ddP0FkGunB1w7I8y1Mxi5ZopexcA1rs305drphFw7A4Rrpwuf3rYHqbkmrAddvmemXFNnAnDtLFSunSX8wFtBUOdNduAzrFwb6QImwbWjdLGH19JzbXgt3XT9FZBrZwdcOyfMtXMYuWaKfhQD17g205drZxNy7RwQrp0tfHrbHqTmmrAedPnWpVxTdQBcOxeVa+cKP/BWENR5kx34DCvXRrmASXDtGF3sEbX0XBtRSzddZwFy7byAa+eHuXY+I9dM0Y9h4BrXZvpy7TxCrp0PwrXzhE9v24PUXBPWgy7fC1KuqQsAuHYhKtcuFH7grSCo8yY78BlWrpW5gElw7Thd7Mpaeq5V1tJN198AuXZRwLWLw1y7mJFrpujHMXCNazN9uXYRIdcuBuHaRdJ/r7/2vx6k5pqwHnT51qdcU/UAXLsElWuXCD/wVhDkfyqjFoJro13AJLhWrYtdVUvPtapauun6OyDXxgRcuzTMtUsZuWaKXs3ANa7N9OXaGEKuXQrCtTHS38pS+18PUnNNWA+6fC9LuaYuA+Da5ahcu1z4gbeCIP/s5VoIrpW7gElw7URd7Opaeq5V19JN1z8AuXZFwLUrw1y7kpFrpugnMnCNazN9uXYFIdeuBOHaFdKnd+1/PUjNNWE96PJtSLmmGgC4dhUq164SfuCtIMg/zK8WgmsVLmASXDtZF7umlp5rNbV00/VPQK5dHXDtmjDXrmHkmin6yQxc49pMX65dTci1a0C4drXw6W17kJprwnrQ5XttyjV1LQDXrkPl2nXCD7wVBPmnw9QCcK1otthJcO1UXey6Wnqu1dXSTde/ALl2fcC1G8Jcu4GRa6bopzJwjWszfbl2PSHXbgDh2vXCp7ftQWquCetBl29jyjXVCMC1G1G5dqPwA28FQf7rxrUQXFMuYBJcq9HFrq+l51p9Ld10/RuQazcFXLs5zLWbGblmil7DwDWuzfTl2k2EXLsZhGs3CZ/etgepuSasB12+t6RcU7cAcO1WVK7dKvzAW0GQ//5KLQTXCl3AJLh2ui52Qy091xpq6abrP4Bcuy3g2u1hrt3OyDVT9NMZuMa1mb5cu42Qa7eDcO024dPb9iA114T1oMu3KeWaagLg2h2oXLtD+IG3giB/Q2QtBNcGuYBJcO1MXezGWnquNdbSTdd2QK7dGXBtbJhrYxm5Zop+JgPXuDbTl2t3EnJtLAjX7hQ+vW0PUnNNWA+6fMelXFPjALh2FyrX7hJ+4K0gyP+FvRaCa0UuYBJcO1sXu6mWnmtNtXTTtcfVeFwbH3BtQphrExi5Zop+NgPXuDbTl2vjCbk2AYRr44VPb9uD1FwT1oMu3+aUa6oZgGsTUbk2UfiBt4Igf2RbC8G1YhcwCa7V6WI319JzrbmWbrrOA8i1SQHXJoe5NpmRa6bodQxc49pMX65NIuTaZBCuTRI+vW0PUnNNWA+6fKekXFNTALh2NyrX7hZ+4K0gyF8D1EJwbbALmATXztPFbqml51pLLd10/R8g1+4JuHZvmGv3MnLNFP08Bq5xbaYv1+4h5Nq9IFy7R/j0tj1IzTVhPdiRb8o11QLAtftQuXaf8ANvBUHeVLUQXMu6gElw7QJd7Km19FybWks3XecF5Nr9AdceCHPtAUaumaJfwMA1rs305dr9hFx7AIRr9wuf3rYHqbkmrAddvg+mXFMPAnDtIVSuPST8wFtBUOdNduAzrFwrcQGT4NpFutjTaum5Nq2WbrrOB8i1hwOuPRLm2iOMXDNFv4iBa1yb6cu1hwm59ggI1x4WPr1tD1JzTVgPdvA05ZqaCsC1R1G59qjwA28FQZ032YHPsHKt1AVMgmv1utjTa+m5Nr2WbrrOD8i1xwKuPR7m2uOMXDNFr2fgGtdm+nLtMUKuPQ7CtceET2/bg9RcE9aDLt8nUq6pJwC49iQq154UfuCtIKjzJjvwGVaujXQBk+DaGF3sGbX0XJtRSzddFwDk2lMB154Oc+1pRq6Zoo9h4BrXZvpy7SlCrj0NwrWnhE9v24PUXBPWgx1PE1OuqWkAXHsGlWvPCD/wVhDUeZMd+Awr10a5gElw7TJd7Jm19FybWUs3XXsCcu3ZgGvPhbn2HCPXTNEvY+Aa12b6cu1ZQq49B8K1Z4VPb9uD1FwT1oMu3+dTrqnnAbj2AirXXhB+4K0gqPMmO/AZVq6VuYBJcO0KXezWWnqutdbSTddegFx7MeDaS2GuvcTINVP0Kxi4xrWZvlx7kZBrL4Fw7UXh09v2IDXXhPVgxz/+plxT0wG49jIq114WfuCtIKjzJjvwGVaujXYBk+Bagy52Wy0919pq6abrgoBceyXg2qthrr3KyDVT9AYGrnFtpi/XXiHk2qsgXHtF+PS2PUjNNWE96PJ9LeWaeg2Aa6+jcu114QfeCoI6b7IDn2HlWrkLmATXrtbFnlVLz7VZtXTTdSFArr0RcO3NMNfeZOSaKfrVDFzj2kxfrr1ByLU3Qbj2hvDpbXuQmmvCerDjvXop19QMAK69hcq1t4QfeCsI6rzJDnyGlWsVLqBpioJOmmJA1H+0KJP310ZzNYXK5Pu1aUSD5bu0LaOaNc+lbRPd+HktbYdODlE+S9u50wMZf2m7d364Yy9tr64GRcyl7dfl0Im3tAO7GWBxlja6u2EYY2kHdT9Yc17aYTkM6VyXdmROAz+3pR2b2w+PnJZ2Qq4/iHJY2ik5/1Drfmm1MX5Adre0s+L8sO1maefG+8Hd5dIujImArpZ2SWxQdL60y+PjpNOlXZUPdDpZ2nV5oSl6aTfmCbCopd2aL+Yilubxx+TnWprPXzoNL83vz3DNuTTPvxExx9K8P8B4tqX5f7pex9IoPvrFLo3k95KDpRH90sy/S6N6R6dZGt3bDYoyhM/CyV+ohb9oYqtyttjmDxAFccz3PsH/flvX5R19vauv9/T1vr4+0NdMfX2or4/09bG+PtHXp/r6TF+f66tVX1/o60t9faWvr/X1jb6+1dd3+mrT1/f6+kFfP+rrJ339rK9f9PVr+LGrWUSv0L13Iu69G3HvvYh770fc+yDi3syIex9G3Pso4t7HEfc+ibj3acS9zyLufR5xrzXi3hcR976MuPdVxL2vI+59E3Hv24h730Xca4u4933EvR8i7v0Yce+niHs/R9z7JeLer8G92b9WCL5vGnzP62lKkXuaoj7we6Sdme3JjJrpE6twjqc86sP8Y2VCT4zUR3nGGlwx19Mn9XF+sUoinmSpT/KJVRL5VEx9Gj9WtpMnbOqzuLGynT6tU5/Hi1XYxZM/1RonVrbLp4jqi9xjlXXzRFJ9mWusbLdPN9VXucXK5PCkVH2dS6xMTk9d1TfdxyrO8Qmu+ra7WEU5Pw1W33UZq6gixpNl1dZVrGysp9Tq+85jlcR84q1+6CRWaUXsp+fqx+hYmTyexKufomJl8nqqr36eO5bK818I1C/hWKPz/tcG9avfz8c5/uVixR7/YwH7+sH3OWKnD/u7/Eof9sf7Sh/2x1ta+rA/3tLSh/3xlpY+7I+3tPRhf7ylpQ/74y0tfdgfb2npw/54S3uL8HXI2wSxyv9972lGvUMUy+T4Lkms/+r1nn8s97bf9wn3kfI1YBLv17/20h492mvp369vYpLE0od2YcD368+a/N/338L/cGRu9GPaTFN0s6HU79fn2kzfgzuLcGj+NpmnycjfD083rFjevmt7kPr9+sJ60OX7O+F+mAGC+H793yfLX+MflGtM8v36fwg/8FYQ1HmTHfgM5/v1VUfsJLh2vS52z9PpuWZiksTS03URQK79GXDtrzDX/mLkmin69Qxc49pMX679Sci1v0C49qfw6W17kJprwnrQ5ft3yjX1NwDX/kHl2j/CD7wVBHXeZAc+w8o15QImwbVGXewCBq4VEE7XRQG51h5wrceUHnNyzdzox7SZpuiNDFzj2kxfrrUTcs3sC0eTkT+9Ej69bQ9Sc01YD7p855lCtx+oXKOsAdca/zcFlGv/myL7wFtBUOddgMG1QhcwCa7dpIvdm4FrvQmn62KAXJt3SrCHYa7Nx8g1U/SbGLjGtZm+XJt3Cl3t5gPh2rzCp7ftQWquCetBl+/8KdfU/ABcWwCVawsIP/BWENR598bg2iAXMAmu3aKL3ZeBa30Jp2sBINd6BlzrFeZaL0aumaLfwsA1rs305VpPQq71AuFaT+HT2/YgNdeE9aDLd8GUa2pBAK4thMq1hYQfeCsI6rz7YnCtyAVMgmu36WL3Z+Baf8Lpujgg1xYOuLZImGuLMHLNFP02Bq5xbaYv1xYm5NoiIFxbWPj0tj1IzTVhPejyXTTlmloUgGuLoXJtMeEH3gqCOu/+GFwrdgGT4FqTLvZABq4NJJyuSwByrSDg2uJhri3OyDVT9CYGrnFtpi/XCgi5tjgI1wqET2/bg9RcE9aDLt8lUq6pJQC4tiQq15YUfuCtIKjzHojBtcEuYBJcu1MXO8vAtSzhdF0SkGtLBVxbOsy1pRm5Zop+JwPXuDbTl2tLEXJtaRCuLSV8etsepOaasB50+S6Tck0tA8C1ZVG5tqzwA28FQZ13FoNrWRcwCa6N08UewsC1IYTTdSlArvUOuLZcmGvLMXLNFH0cA9e4NtOXa70JubYcCNd6C5/etgepuSasB12+y6dcU8sDcG0FVK6tIPzAW0FQ5z0Eg2slLmASXBuviz2UgWtDCafr0oBcWzHg2kphrq3EyDVT9PEMXOPaTF+urUjItZVAuLai8Olte5Caa8J60OW7cso1tTIA1/qgcq2P8ANvBUGd91AMrpW6gElwrVkXexgD14YRTtdlALnWN+BavzDX+jFyzRS9mYFrXJvpy7W+hFzrB8K1vsKnt+1Baq4J60GX7yop19QqAFxbFZVrqwo/8FYQ1HkPw+DaSBcwCa5N0sUezsC14YTTdVlArq0WcG31MNdWZ+SaKfokBq5xbaYv11Yj5NrqIFxbTfj0tj1IzTVhPejyXSPlmloDgGtronJtTeEH3gqCOu/hGFwb5QImwbUputgjGLg2gnC69gbkWv+AawPCXBvAyDVT9CkMXOPaTF+u9Sfk2gAQrvUXPr1tD1JzTVgPunzXSrmm1gLg2tqoXFtb+IG3gqDOewQG18pcwCS4do8udiUD1yoJp+tygFxbJ+DaumGurcvINVP0exi4xrWZvlxbh5Br64JwbR3h09v2IDXXhPWgy3e9lGtqPQCurY/KtfWFH3grCOq8KzG4NtoFTIJrLbrYVQxcqyKcrssDcm1gwLVMmGsZRq6ZorcwcI1rM325NpCQaxkQrg0UPr1tD1JzTVgPunxVyjWlALhWiMq1QuEH3gqCOu8qDK6Vu4BJcO1+XexqBq5VE07XFQC5NijgWlGYa0WMXDNFv5+Ba1yb6cu1QYRcKwLh2iDh09v2IDXXhPWgy7c45ZoqBuDaYFSuDRZ+4K0gqPOuxuBahQuYBNce1MWuYeBaDeF0XRGQa9mAayVhrpUwcs0U/UEGrnFtpi/XsoRcKwHhWlb49LY9SM01YT3o8i1NuaZKAbi2ASrXNhB+4K0gqPOugeBaYUfsJLj2sC52HQPX6gin60qAXNsw4NpGYa5txMg1U/SHGbjGtZm+XNuQkGsbgXBtQ+HT2/YgNdeE9aDLd+OUa2pjAK5tgsq1TYQfeCsI6rzrMLimXMAkuDZVF7uegWv1hNN1ZUCuDQm4tmmYa5sycs0UfSoD17g205drQwi5tikI14YIn962B6m5JqwHXb6bpVxTmwFwbXNUrm0u/MBbQVDnXY/BtUIXMAmuPaaL3cDAtQbC6doHkGtbBFzbMsy1LRm5Zor+GAPXuDbTl2tbEHJtSxCubSF8etsepOaasB50+W6Vck1tBcC1rVG5trXwA28FQZ13AwbXBrmASXDtCV3sRgauNRJO176AXBsacG2bMNe2YeSaKfoTDFzj2kxfrg0l5No2IFwbKnx62x6k5pqwHnT5bptyTW0LwLXtULm2nfADbwVBnXcjBteKXMAkuPaULnYTA9eaCKdrP0CubR9wbYcw13Zg5Jop+lMMXOPaTF+ubU/ItR1AuLa98Olte5Caa8J60OW7Y8o1tSMA13ZC5dpOwg+8FQR13k0YXCt2AZPg2jRd7GYGrjUTTtdVALk2LODazmGu7czINVP0aQxc49pMX64NI+TaziBcGyb9TwgGPUjNNWE96PLdJeWa2gWAa7uicm1X4QfeCoI672YMrg12AZPg2rO62C0MXGshnK6rAnJtt4Bru4e5tjsj10zRn2XgGtdm+nJtN0Ku7Q7Ctd2kf2pm0IPUXBPWgy7fPVKuqT0AuLYnKtf2FH7grSCo827B4FrWBUyCa8/rYk9l4NpUwum6GiDXhgdc2yvMtb0YuWaK/jwD17g205drwwm5thcI14ZL/0WxoAepuSasB12+e6dcU3sDcG0fVK7tI/zAW0FQ5z0Vg2slLmASXHtRF3saA9emEU7X1QG5tm/Atf3CXNuPkWum6C8ycI1rM325ti8h1/YD4dq+0v9tJOhBaq4J60GX7/4p19T+AFw7AJVrBwg/8FYQ1HlPw+BaqQuYBNem62JPZ+DadMLpugYg10YEXDswzLUDGblmij6dgWtcm+nLtRGEXDsQhGsjhE9v24PUXBPWgy7fkSnX1EgAro1C5doo6Qc+EAR13tMxuDbSBUyCa6/oYs9g4NoMwum6JiDXygKujQ5zbTQj10zRX2HgGtdm+nKtjJBro0G4ViZ8etsepOaasB50+ZanXFPlAFyrQOVahfADbwVBnfcMDK6NcgGT4NprutgzGbg2k3C69gfkWmXAtYPCXDuIkWum6K8xcI1rM325VknItYNAuFYpfHrbHqTmmrAedPkenHJNHQzAtUNQuXaI8ANvBUGd90wMrpW5gElw7Q1d7FYGrrUSTtcBgFw7NODaYWGuHcbINVP0Nxi4xrWZvlw7lJBrh4Fw7VDh09v2IDXXhPWgy/fwlGvqcACuHYHKtSOEH3grCOq8WzG4NtoFTIJrM3Sx2xi41kY4XdcC5FpVwLUjw1w7kpFrpugzGLjGtZm+XKsi5NqRIFyrEj69bQ9Sc01YD7p8j0q5po4C4NrRqFw7WviBt4KgzrsNg2vlLmASXHtbF3sWA9dmEU7XtQG5dkzAtWPDXDuWkWum6G8zcI1rM325dgwh144F4doxwqe37UFqrgnrQZfvcSnX1HEAXDselWvHCz/wVhDUec/C4FqFC5gE197VxW5n4Fo74XRdB5Br1QHXTghz7QRGrpmiv8vANa7N9OVaNSHXTgDhWrXw6W17kJprwnrQ5XtiyjV1IgDXTkLl2knCD7wVBHXe7RBcG9QROwmuva+L3fMMeq6ZmCSx9HRdF5BrJwdcOyXMtVMYuWaK/j4D17g205drJxNy7RQQrp0sfHrbHqTmmrAedPmemnJNnQrAtdNQuXaa8ANvBUGdN9mBz7ByTbmASXBtpi52AQPXCgin63qAXKsJuFYb5lotI9dM0WcycI1rM325VkPItVoQrtUIn962B6m5JqwHXb6np1xTpwNw7QxUrp0h/MBbQVDnTXbgM6xcK3QBk+DaR7rYvRm41ptwuq4PyLUzA66dFebaWYxcM0X/iIFrXJvpy7UzCbl2FgjXzhQ+vW0PUnNNWA+6fM9OuabOBuDaOahcO0f4gbeCoM6b7MBnWLk2yAVMgmuf6GL3ZeBaX8LpOhCQa3UB184Nc+1cRq6Zon/CwDWuzfTlWh0h184F4Vqd8Olte5Caa8J60OV7Xso1dR4A185H5dr5wg+8FQR13mQHPsPKtSIXMAmufaaL3Z+Ba/0Jp2sGkGsXBFy7MMy1Cxm5Zor+GQPXuDbTl2sXEHLtQhCuXSB8etsepOaasB50+V6Uck1dBMC1i1G5drHwA28FQZ032YHPsHKt2AVMgmututgDGbg2kHC6KkCu1QdcuyTMtUsYuWaK3srANa7N9OVaPSHXLgHhWr3w6W17kJprwnrQ5Tsm5ZoaA8C1S1G5dqnwA28FQZ032YHPsHJtsAuYBNe+1MXOMnAtSzhdCwG5dlnAtcvDXLuckWum6F8ycI1rM325dhkh1y4H4dplwqe37UFqrgnrQZfvFSnX1BUAXLsSlWtXCj/wVhDUeZMd+Awr17IuoGmKgk6aYkDUf7Qok/fXH5PDCahMvl//TJ67GPku7X9RzZrn0haIbvy8lrZQJ4con6Ut1umBjL+0JTs/3LGXtmxXgyLm0lbocujEW1qfbgZYnKWt2t0wjLG0NbsfrDkvbe0chnSuS1s/p4Gf29IKc/vhkdPSBuf6gyiHpW2Q8w+17pe2SYwfkN0tbfM4P2y7WdrW8X5wd7m07WIioKul7RQbFJ0vbdf4OOl0aXvmA51OlrZPXmiKXtoBeQIsammj8sVcxNI8/pj8XEvz+Uun4aX5/RmuOZfm+Tci5lia9wcYz7Y0/0/X61gaxUe/2KWR/F5ysDSiX5r5d2lU7+g0S6N7u0FRhvBZOPkLtfAXTWxVzhZbb459EWi+9wn+d4Ouy1X6ulpf1+jrWn1dp6/r9XWDvhr1daO+btLXzfq6RV+36us2fd2uryZ93aGvO/U1Vl/j9HWXvsbra4K+mvU1UV+T9DVZX1P0dXf4satZRK/Qvasi7l0dce+aiHvXRty7LuLe9RH3boi41xhx78aIezdF3Ls54t4tEfdujbh3W8S92yPuNUXcuyPi3p0R98ZG3BsXce+uiHvjI+5NiLjXHHFvYsS9SRH3JkfcmxJx7+7g3uxfKwTfNw2+5/U0pcg9TVHX+T3Szsz2ZEZd7xOrcI6nPOqG/GNlQk+MVGOesQZXzPX0Sd2YX6ySiCdZ6qZ8YpVEPhVTN8ePle3kCZu6JW6sbKdP69St8WIVdvHkT90WJ1a2y6eI6vbcY5V180RSNeUaK9vt083/s3cucDaV7d8fUklOSUiFVKjEvvfsYwlJlA4kRSLmtOmEjqRCJyRREqVyPp9znBmFJCQhCZWiUjoIlVIS772e1lrGsmZm771+15r7+r9rPp/18bzr/7y/53df93Vf67t+ew9ianxavjiSUjEtHi1fXKmrmF64VjDOBFfMKEwrEHcaLGYWqBWIJZAsi1kFaYUTSqnF7Py1Igkm3mJOPlrRWMLpuZhrr+VLIokXb9lp+ZJK9cW8E7VEkp8QiPlWrcykP20QC5w9H4//PcaU4iTAXk//8zhtL+wv8McL+xP78cL+xKx5YX9i1rywPzFrXtifmDUv7E/Mmhf2J2bNC/sTs+aF/YlZGwF8DxkJ0Mr633dPfeJVkJa2xtcgWv/Va5RzLfNrv68D9xH5DujG9/V/HpaS0ugp/Pf1G6G+bScPbSrD7+svnP/fn4usHxxpN2oQbaZW9J8Jvq9PtZlOD+5C4NBcNJ+mydB7vBA3rEi+vmv0IPr7+or1oLnexcD90AYIx+/rL56vvsdspEc3v6+frfiBNwgCvW7YgfeRfl8/Ygq6gWu/yGI3J8C15sDpGmCIazk6ruVacS2XENe0ov9CgGtUm+kU13KAuJbLBNdyFJ/eRg+icU2xHjTXu8TDNbGEAa69zRXX3lb8wBsEgV437MD7SHEtagq6gWv7ZLFbEuBaS+B0DTLEtXd0XFtqxbWlhLimFX0fAa5RbaZTXHsHiGtLmeDaO4pPb6MH0bimWA+a613m4ZpYxgDXlnPFteWKH3iDINDrhh14HymupZmCbuDar7LYbQlwrS1wuoYY4tq7Oq6tsOLaCkJc04r+KwGuUW2mU1x7F4hrK5jg2ruKT2+jB9G4plgPmut9z8M18R4DXFvJFddWKn7gDYJArxt24H2kuJZuCrqBa7/LYnciwLVOwOkaZohr7+u4tsqKa6sIcU0r+u8EuEa1mU5x7X0grq1igmvvKz69jR5E45piPWiud7WHa2I1A1xbwxXX1ih+4A2CQK8bduB9pLiWYQq6gWt/yGJ3IcC1LsDpGmGIax/ouLbWimtrCXFNK/ofBLhGtZlOce0DIK6tZYJrHyg+vY0eROOaYj1orvdDD9fEhwxwbR1XXFun+IE3CAK9btiB95HiWqYp6AauHZTF7k6Aa92B0zXKENc+0nFtvRXX1hPimlb0gwS4RrWZTnHtIyCurWeCax8pPr2NHkTjmmI9aK53g4drYgMDXNvIFdc2Kn7gDYJArxt24H2kuHbsL0Z3A9f+lsXuSYBrPYHT9XKGuPaxjmubrLi2iRDXtKL/TYBrVJvpFNc+BuLaJia49rHi09voQTSuKdaD5no/8XBNfMIA1zZzxbXNih94gyDQ64YdeB8prsVMQTdw7R9Z7L4EuNYXOF2vYIhrn+q4tsWKa1sIcU0r+j8EuEa1mU5x7VMgrm1hgmufKj69jR5E45piPWiud6uHa2IrA1zbxhXXtil+4A2CQK8bduB9lLgWOKbtBq79K4s9gADXBgCnawOGuPaZjmufW3Htc0Jc04r+LwGuUW2mU1z7DIhrnzPBtc8Un95GD6JxTbEeNNf7hYdr4gsGuLadK65tV/zAGwSBXjfswPtIcU2Ygm7g2lFZ7KEEuDYUOF2vZIhrX+q49pUV174ixDWt6EcJcI1qM53i2pdAXPuKCa59qfj0NnoQjWuK9aC53h0erokdDHBtJ1dc26n4gTcIAr1u2IH3keKa3xR0A9eKvZySMpIA10YCp2tDhrj2tY5r31hx7RtCXNOKrm0oGteoNtMprn0NxLVvmODa14pPb6MH0bimWA+a6/3WwzXxLQNc28UV13YpfuANgkCvG3bgfaS4lmoKuoFrJ8lijyHAtTHA6dqIIa59p+Pa91Zc+54Q17Sin0SAa1Sb6RTXvgPi2vdMcO07xae30YNoXFOsB8317vZwTexmgGs/cMW1HxQ/8AZBoNcNO/A+UlwLmIJu4NrJsthTCHBtCnC6NmaIaz/quPaTFdd+IsQ1regnE+Aa1WY6xbUfgbj2ExNc+1Hx6W30IBrXFOvBY//CtYdr4mcGuLaHK67tUfzAGwSBXjfswPtIcS1oCrqBa6fKYs8hwLU5wOl6FUNc+0XHtb1WXNtLiGta0U8lwDWqzXSKa78AcW0vE1z7RfHpbfQgGtcU68Fj/2Sih2tiHwNc288V1/YrfuANgkCvG3bgfaS4FjIF3cC102SxFxPg2mLgdG3CENd+1XHtNyuu/UaIa1rRTyPANarNdIprvwJx7TcmuPar4tPb6EE0rinWg8f+DR4P18TvDHDtAFdcO6D4gTcIAr1u2IH3keJa2BR0A9dOl8VeRoBry4DT9WqGuPaHjmt/WnHtT0Jc04p+OgGuUW2mU1z7A4hrfzLBtT8Un95GD6JxTbEePPaXunu4Jg4ywLW/uOLaX4ofeIMg0OuGHXgfKa5FTEE3cK2MLPZqAlxbDZyuTRni2t86rh2y4tohQlzTil6GANeoNtMprv0NxLVDTHDtb8Wnt9GDaFxTrAeP/S2hHq6Jfxjg2mGuuHZY8QNvEAR63bAD7yPFtagp6AaulZPF3kCAaxuA0/Uahrj2r45rR6y4doQQ17SilyPANarNdIpr/wJx7QgTXPtX8elt9CAa1xTrwWN/7ZSHa+IoA1xLWcAU16DGU+gIAr1u2IH3keJaminoBq6dIYu9lQDXtgKnazOGuFZswX9/Fl+QcjyuaTdqEG2mVvQzCHCNajOd4lqxBbjaFV/AA9eKKT69jR5E45piPXjs7zFY4OHaSQvU91iCK66VUPzAGwSBXjfswPtIcS3dFHQD186Uxd5BgGs7gNO1OUNcO1nHtVOsuHYKIa5pRT+TANeoNtMprp0MxLVTmODayYpPb6MH0bimWA8e+8U4D9fEqQxwrSRXXCup+IE3CAL+T2XwwLUMU9ANXDtLFns3Aa7tBk7Xaxni2mk6rpWy4lopQlzTin4WAa5RbaZTXDsNiGulmODaaYpPb6MH0bimWA8e+6a1h2vidAa4VporrpVW/MAbBAH/u5d54FqmKegGrlWWxd5HgGv7gNP1Ooa4VkbHtbJWXCtLiGta0SsT4BrVZjrFtTJAXCvLBNfKKD69jR5E45piPXjsqzserolyDHCtPFdcK6/4gTcIAv6X+fHAtSxT0A1cO1sW+yABrh0ETtcWDHHtDB3XKlhxrQIhrmlFP5sA16g20ymunQHEtQpMcO0Mxae30YNoXFOsB499FuThmjiTAa5V5IprFRU/8AZBwP92GB64FjMF3cC1c2SxjxLg2lHgdL2eIa6dpeNaJSuuVSLENa3o5xDgGtVmOsW1s4C4VokJrp2l+PQ2ehCNa4r14LFwwcM1UZkBrlXhimtVFD/wBkHAf92YBa4Fj2m7gWvnyWKf+jQe1zRNiJacrjcwxLWzdVyrasW1qoS4phX9PAJco9pMp7h2NhDXqjLBtbMVn95GD6JxTbEePPa08nBNnMMA187limvnKn7gDYKA//7K0/imyvsD0Q4EhSnoBq5Vl8UuR4Br5YDT9UaGuHaejmvVrLhWjRDXtKJXJ8A1qs10imvnAXGtGhNcO0/1v4ZJ70E0rinWg8cGqIdrojoDXKvBFddqKH7gDYKAfyGSB675TUE3cO18WezKBLhWGThdb2KIa+fruFbTims1CXFNK/r5BLhGtZlOce18IK7VZIJr56v+zWO9B9G4plgPmuu9wMM1cQEDXLuQK65dqPiBNwgC/gk7D1xLNQXdwLULZLGrE+BadeB0bckQ1y7Sca2WFddqEeKaVvQLCHCNajOd4tpFQFyrxQTXLlL9ZVvvQTSuKdaD5npre7gmajPAtTpcca2O4gfeIAh4ZMsD1wKmoBu4dpEsdm0CXKsNnK6tGOLaxTquXWLFtUsIcU0r+kUEuEa1mU5x7WIgrl3CBNcuVnx6Gz2IxjXFetBc76UerolLGeBaXa64VlfxA28QBPwdgAeuBU1BN3Cttix2fQJcqw+crjczxLXLdFyrZ8W1eoS4phW9NgGuUW2mU1y7DIhr9Zjg2mWKT2+jB9G4plgPHluvh2uiPgNc83HFNZ/q72c6QcCbigeuhUxBN3DtYlnsMAGuhYHTtTVDXBM6rvmtuOYnxDWt6BcT4BrVZjrFNQHENT8TXBOKT2+jB9G4plgPmutN9XBNpDLAtQBXXAsofuANgkCvO8wD18KmoBu4dqksdiMCXGsEnK63MMS1oI5rISuuhQhxTSv6pQS4RrWZTnEtCMS1EBNcCyo+vY0eROOaYj14DE89XBNhBrgW4YprEcUPvEEQ6HU34oFrEVPQDVy7TBa7OQGuNQdO1zYMcS2q49rlVly7nBDXtKJfRoBrVJvpFNeiQFy7nAmuRRWf3kYPonFNsR4013uFh2viCga41oArrjVQ/MAbBIFed3MeuBY1Bd3Atfqy2C0JcK0lcLreyhDXrtRxraEV1xoS4ppW9PoEuEa1mU5x7UogrjVkgmtXKj69jR5E45piPXgsTfRwTTRigGuNueJaY8UPvEEQ6HW35IFraaagG7gmZLHbEuBaW+B0vY0hrl2l41oTK641IcQ1reiCANeoNtMprl0FxLUmTHDtKsWnt9GDaFxTrAfN9V7t4Zq4mgGuNeWKa00VP/AGQaDX3ZYHrqWbgm7gWqosdicCXOsEnK5tGeLaNTquNbPiWjNCXNOKnkqAa1Sb6RTXrgHiWjMmuHaN4tPb6EE0rinWg8c+/PVwTTRngGvXcsW1axU/8AZBoNfdiQeuZZiCbuBaUBa7CwGudQFO13YMce06HddaWHGtBSGuaUUPEuAa1WY6xbXrgLjWggmuXaf49DZ6EI1rivWgud7rPVwT1zPAtRu44toNih94gyDQ6+7CA9cyTUE3cC0si92dANe6A6fr7Qxx7UYd126y4tpNhLimFT1MgGtUm+kU124E4tpNTHDtRsWnt9GDaFxTrAePfVfPwzXRkgGuteKKa60UP/AGQaDX3Z0HrmWZgm7gWlQWuycBrvUETtf2DHHtZh3XWltxrTUhrmlFjxLgGtVmOsW1m4G41poJrt2s+PQ2ehCNa4r1oLneWzxcE7cwwLU2XHGtjeIH3iAI9Lp78sC1mCmoNUW5fJqijt3/aMCX9E/2fOsChC/Zn7fnn1iMZK0tt9FK1trK+bablJS1NfZaSVlbNz+/5knc2sZ8tRK3tnl+AU2doLVtBWklaG37/IIPWyLWdhailYi1XYVpJWDth8K14ra2Jw6teK3tj0srPmsH4tOKy9pf8WrFYe1w3FqFW0tJ5GFbiLUSiT24C7RWMkEIKMha6YSBIn9r5ROHk3ytVUwGdPKxViUpaLK3dm6SAGZnrUayMGdjzcE/Jn+CNSf/0qnVmrN/hstizRn8HmfN8V9gnMea879d75g1xF/9YliD/F6ybg30SzP/s4b6RqdmDfd1g4APmIXDX9SsPxhtkUWmLTfHeAnU/qym/+dbZV1uk1dbebWT1+3yai+vO+TVQV4d5XWnvDrJq7O80uSVLq8MeWXKK0teMXl1kVdXed0lr7vldY+87pXXffLqJq/u8uohr/vl9YA1dtVMlLTcu83mXlube+1s7t1uc6+9zb07bO51sLnX0ebenTb3Otnc62xzL83mXrrNvQybe5k297Js7sVs7nWxudfV5t5dNvfutrl3j829e23u3Wdzr5vNve4293rY3Lvf5t4D+r28P1X1PxvrfyaVpgTMNEW0dxZp+/IkM+IOJ1r+41Ie0SF5LZ8lMRIdk9QKxU5In8SdyWlFbJIs0SkZrYhtKiY6J64VzidhE2mJaoXzTetEemJa/gKSP5GRiFa4wBRRZMavlVFIIimy4tUKF5puilh8Wr44klLRJR4tX1ypq+hauFYwzgRX3FWYViDuNFjcXaBWIJZAsizuKUgrnFBKLe7NXyuSYOIt7stHKxpLOD0X3ey1fEkk8aK7nZYvqVRf9DhRSyT5CYG436qVmfSnDeIBZ8/H4z65OJhSnATY6+l/Hqfthf0F/nhhf2I/XtifmDUv7E/Mmhf2J2bNC/sTs+aF/YlZ88L+xKx5YX9i1rywPzFrbYDvIbcCtLL+991Tn7gNpKWtsS1E6796tXOuZX7t93bgPiLfAd34vv4VL6ek9CX4vn5f4Ndr72D4ff0HF/z350PWD460GzWINlMr+hUE39en2kynB/dB4NB8aAFNk6H3+EHcsCL5+q7Rg+jv6yvWg+Z6HwbuhzZAOH5f/+EF6nt8BOnRze/rP6L4gTcIAr1u2IH3UX5fP3RM2w1cu1IWewABrg0ATtcODHGtp45rvay41osQ17SiX0mAa1Sb6RTXegJxrRcTXOup+PQ2ehCNa4r1oLneRz1cE48ywLXeXHGtt+IH3iAI9LoH8MA1YQq6gWuNZLGHEuDaUOB07cgQ1x7Tce1xK649TohrWtEbEeAa1WY6xbXHgLj2OBNce0zx6W30IBrXFOtBc71PeLgmnmCAa3244lofxQ+8QRDodQ/lgWt+U9ANXLtKFnskAa6NBE7XOxniWl8d1/pZca0fIa5pRb+KANeoNtMprvUF4lo/JrjWV/HpbfQgGtcU60FzvU96uCaeZIBrT3HFtacUP/AGQaDXPZIHrqWagm7g2tWy2GMIcG0McLp2YohrT+u49owV154hxDWt6FcT4BrVZjrFtaeBuPYME1x7WvHpbfQgGtcU60Fzvc96uCaeZYBr/bniWn/FD7xBEOh1j+GBawFT0A1cu0YWewoBrk0BTtfODHFtgI5rA624NpAQ17SiX0OAa1Sb6RTXBgBxbSATXBug+PQ2ehCNa4r1oLne5zxcE88xwLVBXHFtkOIH3iAI9Lqn8MC1oCnoBq41l8WeQ4Brc4DTNY0hrj2v49pgK64NJsQ1rejNCXCNajOd4trzQFwbzATXnld8ehs9iMY1xXrQXO8LHq6JFxjg2hCuuDZE8QNvEAR63XN44FrIFHQD166TxV5MgGuLgdM1nSGuDdVx7UUrrr1IiGta0a8jwDWqzXSKa0OBuPYiE1wbqvj0NnoQjWuK9aC53pc8XBMvMcC1YVxxbZjiB94gCPS6F/PAtbAp6AauXS+LvYwA15YBp2sGQ1x7Wce14VZcG06Ia1rRryfANarNdIprLwNxbTgTXHtZ8elt9CAa1xTrQXO9r3i4Jl5hgGsjuOLaCMUPvEEQ6HUv44FrEVPQDVy7URZ7NQGurQZO10yGuDZSx7VXrbj2KiGuaUW/kQDXqDbTKa6NBOLaq0xwbaTi09voQTSuKdaD5npf83BNvMYA10ZxxbVRih94gyDQ617NA9eipqAbuNZSFnsDAa5tAE7XLIa49rqOa29Yce0NQlzTit6SANeoNtMprr0OxLU3mODa64pPb6MH0bimWA+a633TwzXxJgNcG80V10YrfuANgkCvewMPXEszBd3AtZtlsbcS4NpW4HSNMcS1MTqujbXi2lhCXNOKfjMBrlFtplNcGwPEtbFMcG2M4tPb6EE0rinWg+Z6x3m4JsYxwLXxXHFtvOIH3iAI9Lq38sC1dFPQDVy7RRZ7BwGu7QBO1y4McW2CjmsTrbg2kRDXtKLfQoBrVJvpFNcmAHFtIhNcm6D49DZ6EI1rivWgud5JHq6JSQxwbTJXXJus+IE3CAK97h08cC3DFHQD126Vxd5NgGu7gdO1K0Ncm6Lj2lQrrk0lxDWt6LcS4BrVZjrFtSlAXJvKBNemKD69jR5E45piPWiud5qHa2IaA1ybzhXXpit+4A2CQK97Nw9cyzQF3cC1trLY+whwbR9wut7FENdm6Lg204prMwlxTSt6WwJco9pMp7g2A4hrM5ng2gzFp7fRg2hcU6wHzfXO8nBNzGKAa7O54tpsxQ+8QRDode/jgWtZpqAbuHa7LPZBAlw7CJyudzPEtTk6rs214tpcQlzTin47Aa5RbaZTXJsDxLW5THBtjuLT2+hBNK4p1oPmet/ycE28xQDX5nHFtXmKH3iDINDrPsgD12KmoBu4docs9lECXDsKnK73MMS1+TquLbDi2gJCXNOKfgcBrlFtplNcmw/EtQVMcG2+4tPb6EE0rinWg+Z6F3q4JhYywLVFXHFtkeIH3iAI9LqPssC18DFtN3Ctoyz2qc/gcU3ThGjJ6XovQ1xbrONathXXsglxTSt6RwJco9pMp7i2GIhr2UxwbbHi09voQTSuKdaD5npzPFwTOQxwLZcrruUqfuANgkCvG3bgfaS4JkxBN3Ctkyx2OQJcKwecrvcxxLUlOq69bcW1twlxTSt6JwJco9pMp7i2BIhrbzPBtSWKT2+jB9G4plgPmut9x8M18Q4DXFvKFdeWKn7gDYJAr7scD1zzm4Ju4FqaLHZlAlyrDJyu3Rji2jId15ZbcW05Ia5pRU8jwDWqzXSKa8uAuLacCa4tU3x6Gz2IxjXFetBc77serol3GeDaCq64tkLxA28QBHrdlXngWqop6AauZchiVyfAterA6dqdIa69p+PaSiuurSTENa3oGQS4RrWZTnHtPSCurWSCa+8pPr2NHkTjmmI9aK73fQ/XxPsMcG0VV1xbpfiBNwgCve7qPHAtYAq6gWtZsti1CXCtNnC69mCIa6t1XFtjxbU1hLimFT2LANeoNtMprq0G4toaJri2WvHpbfQgGtcU60FzvR94uCY+YIBra7ni2lrFD7xBEOh11+aBa0FT0A1c6yKLXZ8A1+oDp+v9DHHtQx3X1llxbR0hrmlF70KAa1Sb6RTXPgTi2jomuPah4tPb6EE0rinWg+Z6P/JwTXzEANfWc8W19YofeIMg0OuuzwPXQqagG7h2lyx2mADXwsDp+gBDXNug49pGK65tJMQ1reh3EeAa1WY6xbUNQFzbyATXNig+vY0eROOaYj1orvdjD9fExwxwbRNXXNuk+IE3CAK97jAPXAubgm7g2j2y2I0IcK0RcLo+yBDXPtFxbbMV1zYT4ppW9HsIcI1qM53i2idAXNvMBNc+UXx6Gz2IxjXFetBc76cerolPGeDaFq64tkXxA28QBHrdjXjgWsQUdAPX7pPFbk6Aa82B0/Uhhri2Vce1bVZc20aIa1rR7yPANarNdIprW4G4to0Jrm1VfHobPYjGNcV60FzvZx6uic8Y4NrnXHHtc8UPvEEQ6HU354FrUVPQDVzrLovdkgDXWgKn68MMce0LHde2W3FtOyGuaUXvToBrVJvpFNe+AOLadia49oXi09voQTSuKdaD5nq/9HBNfMkA177iimtfKX7gDYJAr7slD1xLMwXdwLX7ZbHbEuBaW+B0fYQhru3QcW2nFdd2EuKaVvT7CXCNajOd4toOIK7tZIJrOxSf3kYPonFNsR401/u1h2viawa49g1XXPtG8QNvEAR63W154Fq6KegGrj0oi92JANc6AadrT4a49q2Oa7usuLaLENe0oj9IgGtUm+kU174F4touJrj2rep/ybneg2hcU6wHzfV+5+Ga+I4Brn3PFde+V/zAGwSBXncnHriWYQq6gWsPy2J3IcC1LsDp2oshru3Wce0HK679QIhrWtEfJsA1qs10imu7gbj2AxNc26367/XrPYjGNcV60Fzvjx6uiR8Z4NpPXHHtJ8UPvEEQ6HV34YFrmaagG7jWUxa7OwGudQdO10cZ4trPOq7tseLaHkJc04rekwDXqDbTKa79DMS1PUxw7WfVv8qi9yAa1xTrQXO9v3i4Jn5hgGt7ueLaXsUPvEEQ6HV354FrWaagG7j2qCx2TwJc6wmcrr0Z4to+Hdf2W3FtPyGuaUV/lADXqDbTKa7tA+Lafia4tk/16a33IBrXFOtBc72/ergmfmWAa79xxbXfFD/wBkGg192TB67FTEE3cO0xWey+BLjWFzhdH2OIa7/ruHbAimsHCHFNK/pjBLhGtZlOce13IK4dYIJrvys+vY0eROOaYj1orvcPD9fEHwxw7U+uuPan4gfeIAj0uvuywLXIMW03cO0JWewBBLg2ADhdH2eIawd1XPvLimt/EeKaVvQnCHCNajOd4tpBIK79xQTXDio+vY0eROOaYj1orvdvD9fE3wxw7RBXXDuk+IE3CAK97gE8cE2Ygm7gWl9Z7KEEuDYUOF2fYIhr/+i4dtiKa4cJcU0rel8CXKPaTKe49g8Q1w4zwbV/FJ/eRg+icU2xHjTX+6+Ha+JfBrh2hCuuHVE9TtcJAr3uoTxwzW8KuoFrT8pijyTAtZHA6dqHIa4d1XEtZWHK8bim3ahBtJla0Z8kwDWqzXSKa0eBuKbtC0WToff4qOLT2+hBNK4p1oPmeostxO0HV1xD1oDKY/GFTHGt+EK1D7xBEOh1j+SBa6mmoBu49rQs9hgCXBsDnK59GeLaSQv1PbTiWglCXNOK/jQBrlFtplNcO2khrnYlmODaSYpPb6MH0bimWA+a6z3ZwzVxMgNcO4Urrp2i+IE3CAK97jE8cC1gCrqBa8/KYk8hwLUpwOnajyGunarjWkkrrpUkxDWt6M8S4BrVZjrFtVOBuFaSCa6dqvj0NnoQjWuK9aC53tM8XBOnMcC1UlxxrZTiB94gCPS6p/DAtaAp6AauDZDFnkOAa3OA0/VJhrh2uo5rpa24VpoQ17SiDyDANarNdIprpwNxrTQTXDtd8elt9CAa1xTrQXO9ZTxcE2UY4FpZrrhWVvEDbxAEet1zeOBayBR0A9eek8VeTIBri4HT9SmGuFZOx7XyVlwrT4hrWtGfI8A1qs10imvlgLhWngmulVN8ehs9iMY1xXrQXO8ZHq6JMxjgWgWuuFZB8QNvEAR63Yt54FrYFNSaolw+TVHH7n804Ev655ETvsEsfMn+9Lb5NnSy1vrYfbM6SWtP2X9LOylr/fP5xncy1gbl++3xxK0Nyf+b6AlbG1bQt9oTtDaiwG/IJ2ZtVCHftk/E2ujCvrmfgLXxhf8WQNzWJsfxGwXxWpse128nxGdtdny/6RCXtXnx/tZEHNYWxf0bGIVby03gtzkKs7Y0kd8MKcTaisR+y6RAa6sS/I2VgqytTfi3X/K3tj7x36TJ19qmZH4rJx9rW5L6DR97a58n+dtCdta+SvY3j2ysOfjH5E+w5uRfOrVac/bPcB1vzeG/EXGcNcd/gXEea87/dr1j1hB/9YthDfJ7ybo10C/N/M8a6hudmjXc1w0CPmAWDn9Rs/5gtEUWmbbcHOMlUPuzmv6fz5R1qSivs+RVSV6V5VVFXmfLq6q8zpHXufI6T17V5FVdS0jldb68asrrAnldKK+L5FVLXrXlVUdeF8vrEnldKq+68rpMXvXkVV9ePmvsqpkoablX0ebeWTb3Ktncq2xzr4rNvbNt7lW1uXeOzb1zbe6dZ3Ovms296jb3atjcO9/mXk2bexfY3LvQ5t5FNvdq2dyrbXOvjs29i23uXWJz71Kbe3Vt7l1mc6+ezb36Nvd8+r28P6X0PxvrfxaYpoQLTVPEhfFF2r44khlxUTxavrhSHlGrcK1gnImRqF2YViDu9EnUKVArEEsgyRIXF6QVTigVE5fkrxVJMGETl+ajFY0lnNaJusCPTO4aUYzkgVcxkTNVgM8s+WmMtuazFiK0/qtfJeda5sdXlZ1qBY7taxVnWr68PXK2Ey3/8f1WNXktn7V3z0lSKxQ78Rycm5xWxO5MnZeMVsT+fFZLXCuc31mvnqhWOP+5USMxLX9BM+j8RLTCBc+zmvFrZRQ2Gy+w1/IlMRvFZXZavqTmrKh3opZIcmaL+latzKTnv/ABnyWZxYqTPEvq6n8ep+198FLgj/fBS2I/3gcviVnzPnhJzJr3wUti1rwPXhKz5n3wkpg174OXxKx5H7wkZs374CUxaxWA7yFnQrIi7ccnKgLXCMzaBPJdy43fUXj+5ZSUZQS/o7AM+JXipxn+joLQf0fBb/2wzE/4Owpa0Z8n+B0Fqs10GvIK4HDyM/kdBaH4V5aNHkT/joJiPWiuN9X7HQWRulB9jwGuv6MQUPzAGwSBXvcyHr+jEDEF3cC1F2SxVxPg2mrgdH2GIa4FdVwLWXEtRIhrWtFfIMA1qs10imtBIK6FmOBaUPHpbfQgGtcU60FzvWEP10SYAa5FuOJaRPEDbxAEet2reeBa1BR0A9eGymJvIMC1DcDp+ixDXIvquHa5FdcuJ8Q1rehDCXCNajOd4loUiGuXM8G1qOLT2+hBNK4p1oPmeq/wcE1cwQDXGnDFtQaKH3iDINDr3sAD19JMQTdw7SVZ7K0EuLYVOF37M8S1K3Vca2jFtYaEuKYV/SUCXKPaTKe4diUQ1xoywbUrFZ/eRg+icU2xHjTX28jDNdGIAa415oprjRU/8AZBoNe9lQeupZuCbuDay7LYOwhwbQdwug5giGtX6bjWxIprTQhxTSv6ywS4RrWZTnHtKiCuNWGCa1cpPr2NHkTjmmI9aK73ag/XxNUMcK0pV1xrqviBNwgCve4dPHAtwxR0A9dekcXeTYBru4HTdSBDXLtGx7VmVlxrRohrWtFfIcA1qs10imvXAHGtGRNcu0bx6W30IBrXFOtBc73NPVwTzRng2rVcce1axQ+8QRDode/mgWuZpqAbuDZSFnsfAa7tA07X5xji2nU6rrWw4loLQlzTij6SANeoNtMprl0HxLUWTHDtOsWnt9GDaFxTrAfN9V7v4Zq4ngGu3cAV125Q/MAbBIFe9z4euHbsL4N3A9dek8U+SIBrB4HTdRBDXLtRx7WbrLh2EyGuaUV/jQDXqDbTKa7dCMS1m5jg2o2KT2+jB9G4plgPmutt6eGaaMkA11pxxbVWih94gyDQ6z7IA9dipqAbuPa6LPZRAlw7CpyuzzPEtZt1XGttxbXWhLimFf11Alyj2kynuHYzENdaM8G1mxWf3kYPonFNsR4013uLh2viFga41oYrrrVR/MAbBIFe91EWuBY9pu0Grr0pi33qs3hc0zQhWnK6DmaIa7fquHabFdduI8Q1rehvEuAa1WY6xbVbgbh2GxNcu1Xx6W30IBrXFOtBc71tPVwTbRngWjuuuNZO8QNvEAR63bAD7yPFNWEKuoFrY2SxyxHgWjngdH2BIa7druNaeyuutSfENa3oYwhwjWozneLa7UBca88E125XfHobPYjGNcV60FzvHR6uiTsY4FoHrrjWQfEDbxAEet3leOCa3xR0A9fGyWJXJsC1ysDpOoQhrnXUce1OK67dSYhrWtHHEeAa1WY6xbWOQFy7kwmudVR8ehs9iMY1xXrQXG8nD9dEJwa41pkrrnVW/MAbBIFed2UeuJZqCrqBaxNksasT4Fp14HQdyhDX0nRcS7fiWjohrmlFn0CAa1Sb6RTX0oC4ls4E19IUn95GD6JxTbEeNNeb4eGayGCAa5lccS1T8QNvEAR63dV54FrAFHQD1ybJYtcmwLXawOn6IkNcy9JxLWbFtRghrmlFn0SAa1Sb6RTXsoC4FmOCa1mKT2+jB9G4plgPmuvt4uGa6MIA17pyxbWuih94gyDQ667NA9eCpqAbuDZFFrs+Aa7VB07Xlxji2l06rt1txbW7CXFNK/oUAlyj2kynuHYXENfuZoJrdyk+vY0eROOaYj1orvceD9fEPQxw7V6uuHav4gfeIAj0uuvzwLWQKegGrk2TxQ4T4FoYOF2HMcS1+3Rc62bFtW6EuKYVfRoBrlFtplNcuw+Ia92Y4Np9ik9vowfRuKZYD5rr7e7hmujOANd6cMW1HoofeIMg0OsO88C1sCnoBq7NkMVuRIBrjYDT9WWGuHa/jmsPWHHtAUJc04o+gwDXqDbTKa7dD8S1B5jg2v2KT2+jB9G4plgPmut90MM18SADXHuIK649pPiBNwgCve5GPHAtYgq6gWuzZLGbE+Bac+B0Hc4Q1x7Wce0RK649QohrWtFnEeAa1WY6xbWHgbj2CBNce1jx6W30IBrXFOtBc709PVwTPRngWi+uuNZL8QNvEAR63c154FrUFHQD1+bIYrckwLWWwOn6CkNce1THtd5WXOtNiGta0ecQ4BrVZjrFtUeBuNabCa49qvj0NnoQjWuK9aC53sc8XBOPMcC1x7ni2uOKH3iDINDrbskD19JMQTdw7S1Z7LYEuNYWOF1HMMS1J3Rc62PFtT6EuKYV/S0CXKPaTKe49gQQ1/owwbUnFJ/eRg+icU2xHjTX29fDNdGXAa7144pr/RQ/8AZBwP+pDB64lm4KuoFr82WxOxHgWifgdB3JENee1HHtKSuuPUWIa1rR5xPgGtVmOsW1J4G49hQTXHtS8elt9CAa1xTrQXO9T3u4Jp5mgGvPcMW1ZxQ/8AZBwP/uZR64lmEKuoFrC2WxuxDgWhfgdH2VIa49q+Nafyuu9SfENa3oCwlwjWozneLas0Bc688E155VfHobPYjGNcV60FzvAA/XxAAGuDaQK64NVPzAGwQB/8v8eOBapinoBq4tlsXuToBr3YHT9TWGuPacjmuDrLg2iBDXtKIvJsA1qs10imvPAXFtEBNce07x6W30IBrXFOtBc73Pe7gmnmeAa4O54tpgxQ+8QRDwvx2GB65lmYJu4FqOLHZPAlzrCZyuoxji2gs6rg2x4toQQlzTip5DgGtUm+kU114A4toQJrj2guLT2+hBNK4p1oPmeod6uCaGMsC1F7ni2ouKH3iDIOC/bswD12KmoBu4tkQWuy8BrvUFTtfXGeLaSzquDbPi2jBCXNOKvoQA16g20ymuvQTEtWFMcO0lxae30YNoXFOsB831vuzhmniZAa4N54prwxU/8AZBwH9/hQWupR3TdgPX3pHFHkCAawOA0/UNhrj2io5rI6y4NoIQ17Siv0OAa1Sb6RTXXgHi2ggmuPaK4tPb6EE0rinWg+Z6R3q4JkYywLVXueLaq4ofeIMg4F+I5IFrwhR0A9eWyWIPJcC1ocDp+iZDXHtNx7VRVlwbRYhrWtGXEeAa1WY6xbXXgLg2igmuvab49DZ6EI1rivWgud7XPVwTrzPAtTe44tobih94gyDgn7DzwDW/KegGrr0riz2SANdGAqfraIa49qaOa6OtuDaaENe0or9LgGtUm+kU194E4tpoJrj2puLT2+hBNK4p1oPmesd4uCbGMMC1sVxxbaziB94gCHhkywPXUk1BN3DtPVnsMQS4NgY4XccwxLVxOq6Nt+LaeEJc04r+HgGuUW2mU1wbB8S18UxwbZzi09voQTSuKdaD5noneLgmJjDAtYlccW2i4gfeIAj4OwAPXAuYgm7g2vuy2FMIcG0KcLqOZYhrk3Rcm2zFtcmEuKYV/X0CXKPaTKe4NgmIa5OZ4Nokxae30YNoXFOsB4+t18M1MYUBrk3limtTFT/wBkHAm4oHrgVNQTdwbbUs9hwCXJsDnK7jGOLaNB3XpltxbTohrmlFX02Aa1Sb6RTXpgFxbToTXJum+j8hqPcgGtcU60FzvTM8XBMzGODaTK64NlPxA28QBHrdc3jgWsgUdAPXPpDFXkyAa4uB03U8Q1ybpePabCuuzSbENa3oHxDgGtVmOsW1WUBcm80E12ap/rdm6j2IxjXFevAYnnq4JuYwwLW5XHFtruIH3iAI9LoX88C1sCnoBq59KIu9jADXlgGn6wSGuPaWjmvzrLg2jxDXtKJ/SIBrVJvpFNfeAuLaPCa49pbqvyim9yAa1xTrwWP/ZKKHa2I+A1xbwBXXFih+4A2CQK97GQ9ci5iCbuDaR7LYqwlwbTVwuk5kiGsLdVxbZMW1RYS4phX9IwJco9pMp7i2EIhri5jg2kLVPxvRexCNa4r14LE00cM1sZgBrmVzxbVsxQ+8QRDoda/mgWtRU9ANXNsgi72BANc2AKfrJIa4lqPjWq4V13IJcU0r+gYCXKPaTKe4lgPEtVwmuJaj+PQ2ehCNa4r14LG/1N3DNbGEAa69zRXX3lb9wOsEgV73Bh64lmYKuoFrH8tibyXAta3A6TqZIa69o+PaUiuuLSXENa3oHxPgGtVmOsW1d4C4tpQJrr2j+PQ2ehCNa4r14LEPfz1cE8sY4Npyrri2XPEDbxAEet1beeBauinoBq59Iou9gwDXdgCn6xSGuPaujmsrrLi2ghDXtKJ/QoBrVJvpFNfeBeLaCia49q7i09voQTSuKdaDx/7aKQ/XxHsMcG0lV1xbqfiBNwgCve4dPHAtwxR0A9c+lcXeTYBru4HTdSpDXHtfx7VVVlxbRYhrWtE/JcA1qs10imvvA3FtFRNce1/x6W30IBrXFOvBY9/V83BNrGaAa2u44toaxQ+8QRDode/mgWuZpqAbuLZVFnsfAa7tA07XaQxx7QMd19ZacW0tIa5pRd9KgGtUm+kU1z4A4tpaJrj2geLT2+hBNK4p1oPHfjHOwzXxIQNcW8cV19YpfuANgkCvex8PXMsyBd3Atc9ksQ8S4NpB4HSdzhDXPtJxbb0V19YT4ppW9M8IcI1qM53i2kdAXFvPBNc+Unx6Gz2IxjXFevDYN609XBMbGODaRq64tlHxA28QBHrdB3ngWswU1JqiXD5NUcfufzTgS/oncEJTCF+yPxGbBkvWWgO7Zk3SWmP7xk/KWtN8DlEy1q7N90Ambu2G/A93wtZaFTQoErTWpsChk5i1doUMsESsdShsGCZgrXPhgzVua5lxDOl4rXWNa+DHZ+3e+B4ecVnrEe+DKA5rD8X9UCvcWq8EHpCFWXs8kYdtIdb6JfbgLtDaMwlCQEHWBiYMFPlbG5w4nORr7cVkQCcfa8OTgiZ7a68mCWB21t5IFuZsrDn4x+RPsObkXzq1WnP2z3Adb83hvxFxnDXHf4FxHmvO/3a9Y9YQf/WLYQ3ye8m6NdAvzfzPGuobnZo13NcNAj5gFg5/UbP+YLRFFpm23BzjJVD7s5r+nz+Wddkkr0/ktVlen8pri7y2ymubvD6T1+fy+kJe2+X1pby+ktcOee2U19fy+kZe38prl7y+k9f38totrx/k9aO8fpLXz/LaI69f5LXXGrtqJkpa7m2yufeJzb3NNvc+tbm3xebeVpt722zufWZz73Obe1/Y3Ntuc+9Lm3tf2dzbYXNvp829r23ufWNz71ube7ts7n1nc+97m3u7be79YHPvR5t7P9nc+9nm3h6be7/Y3Nur38v7U0r/s7H+Z4FpSrjQNEV8E1+k7YsjmRHfxqPliyvlEbsK1wrGmRiJ7wrTCsSdPonvC9QKxBJIssTugrTCCaVi4of8tSIJJmzix3y0orGE0zrx08I4ezWe31odUYzkgVcxkTNVgM8s+WmMtuZPFiK0/qvfZuda5sdXnzrVChzb1y3OtHx5e2SrEy3/8f22LXktn7V3P0tSKxQ78Rx8npxWxO5MfZGMVsT+fG5PXCuc31n/MlGtcP5z46vEtPwFzaAdiWiFC55nO+PXyihsNn5tr+VLYjaKn+20fEnNWbHnRC2R5MwWv1i1MpOe/2Iv8llSrDjJs6Su/udx2t4HLwX+eB+8JPbjffCSmDXvg5fErHkfvCRmzfvgJTFr3gcviVnzPnhJzJr3wUti1rwPXhKzthH5HgLJirQfn9gEXCMwaxPIdy03fkfhi5dTUo4S/I7CUeBXimcw/B2FfQv/+3O/9cMy7UYNos3Uiv4Fwe8oUG2m05B3H3A47V9I02TwX9nEDT6SrywbPYj+HQXFetBc76/A/dAGCMffUfh1ofoef0N6dPN3FH5T/MAbBIFe91EWv6OQfkzbDVz7Uhb71P54XNM0IVpyus5kiGu/67h2wIprBwhxTSv6lwS4RrWZTnHtdyCuHWCCa78rPr2NHkTjmmI9aK73Dw/XxB8McO1Prrj2p+IH3iAI9LphB95HimvCFHQD13bIYpcjwLVywOk6iyGuHdRx7S8rrv1FiGta0XcQ4BrVZjrFtYNAXPuLCa4dVHx6Gz2IxjXFetBc798erom/GeDaIa64dkjxA28QBHrd5Xjgmt8UdAPXvpbFrkyAa5WB03U2Q1z7R8e1w1ZcO0yIa1rRvybANarNdIpr/wBx7TATXPtH8elt9CAa1xTrQXO9/3q4Jv5lgGtHuOLaEcUPvEEQ6HVX5oFrqaagG7j2rSx2dQJcqw6crnMY4tpRHddSFqUcj2vajRpEm6kV/VsCXKPaTKe4dhSIa9q+UDQZ/Lthik9vowfRuKZYD5rrLbYItx9ccQ1ZAyqPxRcxxbXii9Q+8AZBoNddnQeuBUxBN3DtO1ns2gS4Vhs4XecyxLWTFul7aMW1EoS4phX9OwJco9pMp7h20iJc7UowwbWTFJ/eRg+icU2xHjTXe7KHa+JkBrh2CldcO0XxA28QBHrdtXngWtAUdAPXdsti1yfAtfrA6foWQ1w7Vce1klZcK0mIa1rRdxPgGtVmOsW1U4G4VpIJrp2q+PQ2ehCNa4r1oLne0zxcE6cxwLVSXHGtlOIH3iAI9Lrr88C1kCnoBq79KIsdJsC1MHC6zmOIa6fruFbaimulCXFNK/qPBLhGtZlOce10IK6VZoJrpys+vY0eROOaYj1orreMh2uiDANcK8sV18oqfuANgkCvO8wD18KmoBu49rMsdiMCXGsEnK7zGeJaOR3XyltxrTwhrmlF/5kA16g20ymulQPiWnkmuFZO8elt9CAa1xTrQXO9Z3i4Js5ggGsVuOJaBcUPvEEQ6HU34oFrEVPQDVz7RRa7OQGuNQdO1wUMce1MHdcqWnGtIiGuaUX/hQDXqDbTKa6dCcS1ikxw7UzFp7fRg2hcU6wHzfWe5eGaOIsBrlXiimuVFD/wBkGg192cB65FTUE3cG2fLHZLAlxrCZyuCxniWmUd16pYca0KIa5pRd9HgGtUm+kU1yoDca0KE1yrrPj0NnoQjWuK9aC53rM9XBNnM8C1qlxxrariB94gCPS6W/LAtTRT0A1c+1UWuy0BrrUFTtdFDHHtHB3XzrXi2rmEuKYV/VcCXKPaTKe4dg4Q185lgmvnKD69jR5E45piPWiu9zwP18R5DHCtGldcq6b4gTcIAr3utjxwLd0UdAPXfpfF7kSAa52A03UxQ1yrruNaDSuu1SDENa3ovxPgGtVmOsW16kBcq8EE16orPr2NHkTjmmI9aK73fA/XxPkMcK0mV1yrqfiBNwgCve5OPHAtwxR0A9f+kMXuQoBrXYDTNZshrl2g49qFVly7kBDXtKL/QYBrVJvpFNcuAOLahUxw7QLFp7fRg2hcU6wHzfVe5OGauIgBrtXiimu1FD/wBkGg192FB65lmoJu4NpBWezuBLjWHThdcxjiWm0d1+pYca0OIa5pRT9IgGtUm+kU12oDca0OE1yrrfj0NnoQjWuK9aC53os9XBMXM8C1S7ji2iWKH3iDINDr7s4D17JMQTdw7W9Z7J4EuNYTOF1zGeLapTqu1bXiWl1CXNOK/jcBrlFtplNcuxSIa3WZ4Nqlik9vowfRuKZYD5rrvczDNXEZA1yrxxXX6il+4A2CQK+7Jw9ci5mCbuDaP7LYfQlwrS9wui5hiGv1dVzzWXHNR4hrWtH/IcA1qs10imv1gbjmY4Jr9RWf3kYPonFNsR401ys8XBOCAa75ueKaX/EDbxAEet19WeBaxjFtN3DtX1nsAQS4NgA4Xd9miGupOq4FrLgWIMQ1rej/EuAa1WY6xbVUIK4FmOBaquLT2+hBNK4p1oPmeoMerokgA1wLccW1kOIH3iAI9LoH8MA1YQq6gWtHZbGHEuDaUOB0fYchroV1XItYcS1CiGta0Y8S4BrVZjrFtTAQ1yJMcC2s+PQ2ehCNa4r1oLneqIdrIsoA1y7nimuXK37gDYJAr3soD1zzm4Ju4Fqx4SkpIwlwbSRwui5liGtX6LjWwIprDQhxTSu6tqFoXKPaTKe4dgUQ1xowwbUrFJ/eRg+icU2xHjTXe6WHa+JKBrjWkCuuNVT8wBsEgV73SB64lmoKuoFrJ8lijyHAtTHA6bqMIa410nGtsRXXGhPimlb0kwhwjWozneJaIyCuNWaCa40Un95GD6JxTbEeNNd7lYdr4ioGuNaEK641UfzAGwSBXvcYHrgWMAXdwLWTZbGnEODaFOB0Xc4Q167Wca2pFdeaEuKaVvSTCXCNajOd4trVQFxrygTXrlZ8ehs9iMY1xXrQXO81Hq6JaxjgWjOuuNZM8QNvEAR63VN44FrQFHQD106VxZ5DgGtzgNP1XYa41lzHtWutuHYtIa5pRT+VANeoNtMprjUH4tq1THCtueLT2+hBNK4p1oPmeq/zcE1cxwDXWnDFtRaKH3iDINDrnsMD10KmoBu4dpos9mICXFsMnK4rGOLa9Tqu3WDFtRsIcU0r+mkEuEa1mU5x7Xogrt3ABNeuV3x6Gz2IxjXFetBc740erokbGeDaTVxx7SbFD7xBEOh1L+aBa2FT0A1cO10WexkBri0DTtf3GOJaSx3XWllxrRUhrmlFP50A16g20ymutQTiWismuNZS8elt9CAa1xTrQXO9N3u4Jm5mgGutueJaa8UPvEEQ6HUv44FrEVPQDVwrI4u9mgDXVgOn60qGuHaLjmttrLjWhhDXtKKXIcA1qs10imu3AHGtDRNcu0Xx6W30IBrXFOtBc723ergmbmWAa7dxxbXbFD/wBkGg172aB65FTUE3cK2cLPYGAlzbAJyu7zPEtbY6rrWz4lo7QlzTil6OANeoNtMprrUF4lo7JrjWVvHpbfQgGtcU60Fzvbd7uCZuZ4Br7bniWnvFD7xBEOh1b+CBa2mmoBu4doYs9lYCXNsKnK6rGOLaHTqudbDiWgdCXNOKfgYBrlFtplNcuwOIax2Y4Nodik9vowfRuKZYD5rr7ejhmujIANfu5Iprdyp+4A2CQK97Kw9cSzcF3cC1M2WxdxDg2g7gdF3NENc66bjW2YprnQlxTSv6mQS4RrWZTnGtExDXOjPBtU6KT2+jB9G4plgPmutN83BNpDHAtXSuuJau+IE3CAK97h08cC3DFHQD186Sxd5NgGu7gdN1DUNcy9BxLdOKa5mEuKYV/SwCXKPaTKe4lgHEtUwmuJah+PQ2ehCNa4r1oLneLA/XRBYDXItxxbWY4gfeIAj0unfzwLVMU9ANXKssi72PANf2AafrBwxxrYuOa12tuNaVENe0olcmwDWqzXSKa12AuNaVCa51UXx6Gz2IxjXFetBc710erom7GODa3Vxx7W7FD7xBEOh17+OBa1mmoBu4drYs9kECXDsInK5rGeLaPTqu3WvFtXsJcU0r+tkEuEa1mU5x7R4grt3LBNfuUXx6Gz2IxjXFetBc730eron7GOBaN6641k3xA28QBHrdB3ngWswUdAPXzpHFPkqAa0eB0/VDhrjWXce1HlZc60GIa1rRzyHANarNdIpr3YG41oMJrnVXfHobPYjGNcV60Fzv/R6uifsZ4NoDXHHtAcUPvEEQ6HUfZYFrmce03cC182SxTx2AxzVNE6Ilp+s6hrj2oI5rD1lx7SFCXNOKfh4BrlFtplNcexCIaw8xwbUHVf83afQeROOaYj1orvdhD9fEwwxw7RGuuPaI4gfeIAj0umEH3keKa8IUdAPXqstilyPAtXLA6foRQ1zrqeNaLyuu9SLENa3o1QlwjWozneJaTyCu9WKCaz1V/2uY9B5E45piPWiu91EP18SjDHCtN1dc6634gTcIAr3ucjxwzW8KuoFr58tiVybAtcrA6bqeIa49puPa41Zce5wQ17Sin0+Aa1Sb6RTXHgPi2uNMcO0x1b95rPcgGtcU60FzvU94uCaeYIBrfbjiWh/FD7xBEOh1V+aBa6mmoBu4doEsdnUCXKsOnK4bGOJaXx3X+llxrR8hrmlFv4AA16g20ymu9QXiWj8muNZX9ZdtvQfRuKZYD5rrfdLDNfEkA1x7iiuuPaX4gTcIAr3u6jxwLWAKuoFrF8li1ybAtdrA6bqRIa49rePaM1Zce4YQ17SiX0SAa1Sb6RTXngbi2jNMcO1pxae30YNoXFOsB831PuvhmniWAa7154pr/RU/8AZBoNddmweuBU1BN3Cttix2fQJcqw+crh8zxLUBOq4NtOLaQEJc04pemwDXqDbTKa4NAOLaQCa4NkDx6W30IBrXFOtBc73PebgmnmOAa4O44tog1d/PdIJAr7s+D1wLmYJu4NrFsthhAlwLA6frJoa49ryOa4OtuDaYENe0ol9MgGtUm+kU154H4tpgJrj2vOLT2+hBNK4p1oPmel/wcE28wADXhnDFtSGKH3iDINDrDvPAtbApqDVFuXyaoo7d/2jAl/TPbwutCxC+ZH/+XHhiMZK1dshGK1lrRxbablJS1ornc4iSsXZKvgcycWul8j/cCVsrW9CgSNBahQKHTmLWKhUywBKxVrWwYZiAtWqFD9a4rdWMY0jHa61WXAM/PmuXxPfwiMtavXgfRHFY88f9UCvcWiiBB2Rh1i5P5GFbiLWGiT24C7TWJEEIKMhas4SBIn9rLRKHk3yt3ZQM6ORjrXVS0GRv7bYkAczOWvtkYc7GmoN/TP4Ea07+pVOrNWf/DNfx1hz+GxHHWXP8Fxjnseb8b9c7Zg3xV78Y1iC/l6xbA/3SzP+sob7RqVnDfd0g4ANm4fAXNesPRltkkWnLzTFeArU/q+n/eaisy4vyeklew+T1sryGy+sVeY2Q10h5vSqv1+Q1Sl6vy+sNeb0pr9HyGiOvsfIaJ6/x8pogr4nymiSvyfKaIq+p8pomr+nymiGvmdbYVTNR0nLvRZt7L9ncG2Zz72Wbe8Nt7r1ic2+Ezb2RNvdetbn3ms29UTb3Xre594bNvTdt7o22uTfG5t5Ym3vjbO6Nt7k3webeRJt7k2zuTba5N8Xm3lSbe9Ns7k23uTfD5t5M/V7en1L6n431PwtMU8KFpilibHyRti+OZEaMi0fLF1fKI8YXrhWMMzESEwrTCsSdPomJBWoFYgkkWWJSQVrhhFIxMTl/rUiCCZuYko9WNJZwWiemAj8yiY4sRvLAq5jImSrAZ5b8NEZb80uLEFr/1W+Ycy3z46uXnWoFju3rcGdavrw98ooTLf/x/TYieS2ftXdHJqkVip14Dl5NTitid6ZeS0YrYn8+RyWuFc7vrL+eqFY4/7nxRmJa/oJm0JuJaIULnmej49fKKGw2jrHX8iUxG8U0Oy1fUnNWTD9RSyQ5s8UMq1Zm0vNfzAQ+SxoWL07yLKmr/3mctvfBS4E/3gcvif14H7wkZs374CUxa94HL4lZ8z54Scya98FLYta8D14Ss+Z98JKYNe+Dl8SsDQG+hwyFZEXaj0+8CFwjMGsTyHctN35H4dLhKSmNCH5HoRHwK8WfMPwdhVmL/vtztvXDMu1GDaLN1Ip+KcHvKFBtptOQdxZwOM1eRNNk6D2ehRt8JF9ZNnoQ/TsKivWgud45wP3QBgjH31GYs0h9j3ORHt38HYW5ih94gyDQ627E43cUIqagG7h2mSx2cwJcaw6crpsZ4tpbOq7Ns+LaPEJc04p+GQGuUW2mU1x7C4hr85jg2luKT2+jB9G4plgPmuud7+GamM8A1xZwxbUFih94gyDQ627OA9eipqAbuFZfFrslAa61BE7XTxni2kId1xZZcW0RIa5pRa9PgGtUm+kU1xYCcW0RE1xbqPj0NnoQjWuK9aC53sUeronFDHAtmyuuZSt+4A2CQK+7JQ9cSzMF3cA1IYvdlgDX2gKn6xaGuJaj41quFddyCXFNK7ogwDWqzXSKazlAXMtlgms5ik9vowfRuKZYD5rrXeLhmljCANfe5oprbyt+4A2CQK+7LQ9cSzcF3cC1VFnsTgS41gk4XbcyxLV3dFxbasW1pYS4phU9lQDXqDbTKa69A8S1pUxw7R3Fp7fRg2hcU6wHzfUu83BNLGOAa8u54tpyxQ+8QRDodXfigWsZpqAbuBaUxe5CgGtdgNN1G0Nce1fHtRVWXFtBiGta0YMEuEa1mU5x7V0grq1ggmvvKj69jR5E45piPWiu9z0P18R7DHBtJVdcW6n4gTcIAr3uLjxwLdMUdAPXwrLY3QlwrTtwun7GENfe13FtlRXXVhHimlb0MAGuUW2mU1x7H4hrq5jg2vuKT2+jB9G4plgPmutd7eGaWM0A19ZwxbU1ih94gyDQ6+7OA9eO/WXwbuBaVBa7JwGu9QRO188Z4toHOq6tteLaWkJc04oeJcA1qs10imsfAHFtLRNc+0Dx6W30IBrXFOtBc70fergmPmSAa+u44to6xQ+8QRDodffkgWsxU9ANXLtCFrsvAa71BU7XLxji2kc6rq234tp6QlzTin4FAa5RbaZTXPsIiGvrmeDaR4pPb6MH0bimWA+a693g4ZrYwADXNnLFtY2KH3iDINDr7ssC17KOabuBa1fKYg8gwLUBwOm6nSGufazj2iYrrm0ixDWt6FcS4BrVZjrFtY+BuLaJCa59rPj0NnoQjWuK9aC53k88XBOfMMC1zVxxbbPiB94gCPS6B/DANWEKuoFrjWSxhxLg2lDgdP2SIa59quPaFiuubSHENa3ojQhwjWozneLap0Bc28IE1z5VfHobPYjGNcV60FzvVg/XxFYGuLaNK65tU/zAGwSBXvdQHrjmNwXdwLWrZLFHEuDaSOB0/Yohrn2m49rnVlz7nBDXtKJfRYBrVJvpFNc+A+La50xw7TPFp7fRg2hcU6wHzfV+4eGa+IIBrm3nimvbFT/wBkGg1z2SB66lmoJu4NrVsthjCHBtDHC67mCIa1/quPaVFde+IsQ1rehXE+Aa1WY6xbUvgbj2FRNc+1Lx6W30IBrXFOtBc707PFwTOxjg2k6uuLZT8QNvEAR63WN44FrAFHQD166RxZ5CgGtTgNN1J0Nc+1rHtW+suPYNIa5pRb+GANeoNtMprn0NxLVvmODa14pPb6MH0bimWA+a6/3WwzXxLQNc28UV13YpfuANgkCvewoPXAuagm7gWnNZ7DkEuDYHOF2/Zohr3+m49r0V174nxDWt6M0JcI1qM53i2ndAXPueCa59p/j0NnoQjWuK9aC53t0erondDHDtB6649oPiB94gCPS65/DAtZAp6AauXSeLvZgA1xYDp+s3DHHtRx3XfrLi2k+EuKYV/ToCXKPaTKe49iMQ135igms/Kj69jR5E45piPWiu92cP18TPDHBtD1dc26P4gTcIAr3uxTxwLWwKuoFr18tiLyPAtWXA6fotQ1z7Rce1vVZc20uIa1rRryfANarNdIprvwBxbS8TXPtF8elt9CAa1xTrQXO9+zxcE/sY4Np+rri2X/EDbxAEet3LeOBaxBR0A9dulMVeTYBrq4HTdRdDXPtVx7XfrLj2GyGuaUW/kQDXqDbTKa79CsS135jg2q+KT2+jB9G4plgPmuv93cM18TsDXDvAFdcOKH7gDYJAr3s1D1yLmoJu4FpLWewNBLi2AThdv2OIa3/ouPanFdf+JMQ1regtCXCNajOd4tofQFz7kwmu/aH49DZ6EI1rivWgud6DHq6Jgwxw7S+uuPaX4gfeIAj4P5XBA9fSTEE3cO1mWeytBLi2FThdv2eIa3/ruHbIimuHCHFNK/rNBLhGtZlOce1vIK4dYoJrfys+vY0eROOaYj1orvcfD9fEPwxw7TBXXDus+IE3CAL+dy/zwLV0U9ANXLtFFnsHAa7tAE7X3Qxx7V8d145Yce0IIa5pRb+FANeoNtMprv0LxLUjTHDtX8Wnt9GDaFxTrAfN9R71cE0cZYBrKYuZ4hrUeAodQcD/Mj8euJZhCrqBa7fKYu8mwLXdwOn6A0NcK7b4vz+LL045Hte0GzWINlMr+q0EuEa1mU5xrdhiXO2KL+aBa8UUn95GD6JxTbEeNNd70mIP105arL7HElxxrYTiB94gCPjfDsMD1zJNQTdwra0s9j4CXNsHnK4/MsS1k3VcO8WKa6cQ4ppW9LYEuEa1mU5x7WQgrp3CBNdOVnx6Gz2IxjXFetBc76kerolTGeBaSa64VlLxA28QBPzXjXngWpYp6Aau3S6LfZAA1w4Cp+tPDHHtNB3XSllxrRQhrmlFv50A16g20ymunQbEtVJMcO00xae30YNoXFOsB831nu7hmjidAa6V5oprpRU/8AZBwH9/hQeuxUxBN3DtDlnsowS4dhQ4XX9miGtldFwra8W1soS4phX9DgJco9pMp7hWBohrZZngWhnFp7fRg2hcU6wHzfWW83BNlGOAa+W54lp5xQ+8QRDwL0SywLXYMW03cK2jLPapA/G4pmlCtOR03cMQ187Qca2CFdcqEOKaVvSOBLhGtZlOce0MIK5VYIJrZyg+vY0eROOaYj1orvdMD9fEmQxwrSJXXKuo+IE3CAL+CftAfFPl/YFoB2LCFHQD1zrJYpcjwLVywOn6C0NcO0vHtUpWXKtEiGta0TsR4BrVZjrFtbOAuFaJCa6dpfj0NnoQjWuK9aC53soeronKDHCtCldcq6L4gTcIAh7Z8sA1vynoBq6lyWJXJsC1ysDpupchrp2t41pVK65VJcQ1rehpBLhGtZlOce1sIK5VZYJrZys+vY0eROOaYj1orvccD9fEOQxw7VyuuHau4gfeIAj4OwAPXEs1Bd3AtQxZ7OoEuFYdOF33McS183Rcq2bFtWqEuKYVPYMA16g20ymunQfEtWpMcO08xae30YNoXFOsB4+t18M1UZ0BrtXgims1FD/wBkHAm4oHrgVMQTdwLUsWuzYBrtUGTtf9DHHtfB3XalpxrSYhrmlFzyLANarNdIpr5wNxrSYTXDtf8elt9CAa1xTrQXO9F3i4Ji5ggGsXcsW1CxU/8AZBoNddmweuBU1BN3Ctiyx2fQJcqw+crr8yxLWLdFyrZcW1WoS4phW9CwGuUW2mU1y7CIhrtZjg2kWKT2+jB9G4plgPHsNTD9dEbQa4VocrrtVR/MAbBIFed30euBYyBd3AtbtkscMEuBYGTtffGOLaxTquXWLFtUsIcU0r+l0EuEa1mU5x7WIgrl3CBNcuVnx6Gz2IxjXFetBc76UerolLGeBaXa64VlfxA28QBHrdYR64FjYF3cC1e2SxGxHgWiPgdP2dIa5dpuNaPSuu1SPENa3o9xDgGtVmOsW1y4C4Vo8Jrl2m+PQ2ehCNa4r14LE00cM1UZ8Brvm44ppP8QNvEAR63Y144FrEFHQD1+6TxW5OgGvNgdP1AENcEzqu+a245ifENa3o9xHgGtVmOsU1AcQ1PxNcE4pPb6MH0bimWA+a6031cE2kMsC1AFdcCyh+4A2CQK+7OQ9ci5qCbuBad1nslgS41hI4Xf9giGtBHddCVlwLEeKaVvTuBLhGtZlOcS0IxLUQE1wLKj69jR5E45piPXjsw18P10SYAa5FuOJaRPEDbxAEet0teeBaminoBq7dL4vdlgDX2gKn658McS2q49rlVly7nBDXtKLfT4BrVJvpFNeiQFy7nAmuRRWf3kYPonFNsR4013uFh2viCga41oArrjVQ/MAbBIFed1seuJZuCrqBaw/KYnciwLVOwOl6kCGuXanjWkMrrjUkxDWt6A8S4BrVZjrFtSuBuNaQCa5dqfpfcq73IBrXFOvBY9/V83BNNGKAa4254lpjxQ+8QRDodXfigWsZpqAbuPawLHYXAlzrApyufzHEtat0XGtixbUmhLimFf1hAlyj2kynuHYVENeaMMG1q1T/vX69B9G4plgPmuu92sM1cTUDXGvKFdeaKn7gDYJAr7sLD1zLNAXdwLWestjdCXCtO3C6/s0Q167Rca2ZFdeaEeKaVvSeBLhGtZlOce0aIK41Y4Jr16j+VRa9B9G4plgPHvvVCg/XRHMGuHYtV1y7VvEDbxAEet3deeBalinoBq49KovdkwDXegKn6yGGuHadjmstrLjWghDXtKI/SoBrVJvpFNeuA+JaCya4dp3q01vvQTSuKdaD5nqv93BNXM8A127gims3KH7gDYJAr7snD1yLmYJaU5TLpynq2P2PBnxJ/8xdZF2A8CX7s2DRicVI1lq2jVay1t5eZLtJSVlbbq+VlLWVi/JrnsStrclXK3Fr6xYV0NQJWttYkFaC1jYvKviwJWJtWyFaiVjbXphWAtZ2Fq4Vt7VdcWjFa+2HuLTis7YnPq24rO2PVysOawfi1irc2l8JaBVm7XAiWoVYS0kQAgqyViJhoMjfWsnE4SRfa6WTAZ18rJVPCprsrVVMEsDsrFVJFuZsrDn4x+RPsObkXzq1WnP2z3Adb83hvxFxnDXHf4FxXmuOofyYNcRf/WJYg/xesm4N9Esz/7OG+kanZg33dYOAD5iFw1/UrD8YbZFFpi03x3gJ1P6spv/nG2VdbpJXS3m1ktfN8motr1vk1UZet8rrNnm1lVc7ed0ur/byukNeHeTVUV53yquTvDrLK01e6fLKkFemvLLkFZNXF3l1lddd8rrbGrtqJkpa7t1kc6+lzb1WNvdutrnX2ubeLTb32tjcu9Xm3m0299ra3Gtnc+92m3vtbe7dYXOvg829jjb37rS518nmXmebe2k299Jt7mXY3Mu0uZdlcy9mc6+Lzb2uNvfusrl3t34v708z/c/G+p//Owjei32BP96LfWI/3ou9z3uxt/x4L/aJWfNe7BOz5r3YJ2bNe7FPzJr3Yp+YNe/FPjFrVC/2Tj8tvRGglfW/75n4xE0gLW2NLSFa/9WrlXMt8ys+NzvVCpi1F62dafny7KO4xYmW/7ieEG2S1/JZ+kvcmqRWKHZCr4rbktOK2PS9aJuMVsT2DIl2iWuF8zmP4vZEtcL5nm3RPjEtfwFzQtyRiFa4wJkjOsSvlVHI/BId49UKFzoLxZ3xafnimKuiUzxavrhmtOhcuFYwznkv0grTCsT97BDpBWoFYgk8h0RGQVrhhJ5pIjN/rUiCz0eRlY9WNJbws1bE7LV8STy3RRc7LV9SDCC6nqglkuQJcZdVKzNpNhF345jJ58Z31x8bnpLSl+C7632BXzX9h+F31+9Z/N+f91o/RNFu1CDaTK3ojxF8d51qM52C7T3Al4p7F9M0GXqP7wF/QkrVg+jvrivWg8f+URfgfmgDhON31+9brL7HbkiPbn53vZviB94gCPS6YQfeR/hVkGAebTdw7QlZ7AEEuDYAOF0PM8S17jqu9bDiWg9CXNOK/gQBrlFtplNc6w7EtR5McK274tPb6EE0rinWg8f+lnAP18T9DHDtAa649oDiB94gCPS6B/DANWEKuoFrfWWxhxLg2lDgdP2XIa49qOPaQ1Zce4gQ17Si9yXANarNdIprDwJx7SEmuPag4tPb6EE0rinWg8f+2kkP18TDDHDtEa649ojqcbpOEOh1D+WBa35T0A1ce1IWeyQBro0ETtcjDHGtp45rvay41osQ17SiP0mAa1Sb6RTXegJxrRcTXOup+PQ2ehCNa4r14LG/x8jDNfEoA1zrzRXXeit+4A2CQK97JA9cSzUF3cC1p2WxxxDg2hjgdD3KENce03HtcSuuPU6Ia1rRnybANarNdIprjwFx7XEmuPaY4tPb6EE0rinWg8c+C/JwTTzBANf6cMW1PoofeIMg0OsewwPXAqagG7j2rCz2FAJcmwKcrimj+OFaXx3X+llxrR8hrmlFf5YA16g20ymu9QXiWj8muNZX8elt9CAa1xTrwWPhgodr4kkGuPYUV1x7SvEDbxAEet1TeOBa0BR0A9cGyGLPIcC1OcDpWowhrj2t49ozVlx7hhDXtKIPIMA1qs10imtPA3HtGSa49rTi09voQTSuKdaDx55WHq6JZxngWn+uuNZf8QNvEAR63XN44FrIFHQD156TxV5MgGuLgdO1OENcG6Dj2kArrg0kxDWt6M8R4BrVZjrFtQFAXBvIBNcGKD69jR5E45piPXhsgHq4Jp5jgGuDuOLaIMUPvEEQ6HUv5oFrYVPQDVx7XhZ7GQGuLQNO15MY4trzOq4NtuLaYEJc04r+PAGuUW2mU1x7Hohrg5ng2vOKT2+jB9G4plgPmut9wcM18QIDXBvCFdeGKH7gDYJAr3sZD1yLmIJu4NoLstirCXBtNXC6lmCIa0N1XHvRimsvEuKaVvQXCHCNajOd4tpQIK69yATXhio+vY0eROOaYj1orvclD9fESwxwbRhXXBum+IE3CAK97tU8cC1qCrqBa0NlsTcQ4NoG4HQ9mSGuvazj2nArrg0nxDWt6EMJcI1qM53i2stAXBvOBNdeVnx6Gz2IxjXFetBc7yserolXGODaCK64NkLxA28QBHrdG3jgWpop6AauvSSLvZUA17YCp+spDHFtpI5rr1px7VVCXNOK/hIBrlFtplNcGwnEtVeZ4NpIxae30YNoXFOsB831vubhmniNAa6N4oproxQ/8AZBoNe9lQeupZuCbuDay7LYOwhwbQdwup7KENde13HtDSuuvUGIa1rRXybANarNdIprrwNx7Q0muPa64tPb6EE0rinWg+Z63/RwTbzJANdGc8W10YofeIMg0OvewQPXMkxBN3DtFVns3QS4ths4XUsyxLUxOq6NteLaWEJc04r+CgGuUW2mU1wbA8S1sUxwbYzi09voQTSuKdaD5nrHebgmxjHAtfFccW284gfeIAj0unfzwLVMU9ANXBspi72PANf2AafraQxxbYKOaxOtuDaRENe0oo8kwDWqzXSKaxOAuDaRCa5NUHx6Gz2IxjXFetBc7yQP18QkBrg2mSuuTVb8wBsEgV73Ph64lmUKuoFrr8liHyTAtYPA6VqKIa5N0XFtqhXXphLimlb01whwjWozneLaFCCuTWWCa1MUn95GD6JxTbEeNNc7zcM1MY0Brk3nimvTFT/wBkGg132QB67FTEE3cO11WeyjBLh2FDhdT2eIazN0XJtpxbWZhLimFf11Alyj2kynuDYDiGszmeDaDMWnt9GDaFxTrAfN9c7ycE3MYoBrs7ni2mzFD7xBEOh1H2WBa+KYthu49qYs9qnP4XFN04RoyelamiGuzdFxba4V1+YS4ppW9DcJcI1qM53i2hwgrs1lgmtzFJ/eRg+icU2xHjTX+5aHa+ItBrg2jyuuzVP8wBsEgV437MD7SHFNmIJu4NoYWexyBLhWDjhdyzDEtfk6ri2w4toCQlzTij6GANeoNtMprs0H4toCJrg2X/HpbfQgGtcU60FzvQs9XBMLGeDaIq64tkjxA28QBHrd5Xjgmt8UdAPXxsliVybAtcrA6VqWIa4t1nEt24pr2YS4phV9HAGuUW2mU1xbDMS1bCa4tljx6W30IBrXFOtBc705Hq6JHAa4lssV13IVP/AGQaDXXZkHrqWagm7g2gRZ7OoEuFYdOF3LMcS1JTquvW3FtbcJcU0r+gQCXKPaTKe4tgSIa28zwbUlik9vowfRuKZYD5rrfcfDNfEOA1xbyhXXlip+4A2CQK+7Og9cC5iCbuDaJFns2gS4Vhs4XcszxLVlOq4tt+LackJc04o+iQDXqDbTKa4tA+Lacia4tkzx6W30IBrXFOtBc73vergm3mWAayu44toKxQ+8QRDoddfmgWtBU9ANXJsii12fANfqA6frGQxx7T0d11ZacW0lIa5pRZ9CgGtUm+kU194D4tpKJrj2nuLT2+hBNK4p1oPmet/3cE28zwDXVnHFtVWKH3iDINDrrs8D10KmoBu4Nk0WO0yAa2HgdK3AENdW67i2xoprawhxTSv6NAJco9pMp7i2Gohra5jg2mrFp7fRg2hcU6wHzfV+4OGa+IABrq3limtrFT/wBkGg1x3mgWthU9ANXJshi92IANcaAafrmQxx7UMd19ZZcW0dIa5pRZ9BgGtUm+kU1z4E4to6Jrj2oeLT2+hBNK4p1oPmej/ycE18xADX1nPFtfWKH3iDINDrbsQD1yKmoBu4NksWuzkBrjUHTteKDHFtg45rG624tpEQ17SizyLANarNdIprG4C4tpEJrm1QfHobPYjGNcV60Fzvxx6uiY8Z4Nomrri2SfEDbxAEet3NeeBa1BR0A9fmyGK3JMC1lsDpehZDXPtEx7XNVlzbTIhrWtHnEOAa1WY6xbVPgLi2mQmufaL49DZ6EI1rivWgud5PPVwTnzLAtS1ccW2L4gfeIAj0ulvywLU0U9ANXHtLFrstAa61BU7XSgxxbauOa9usuLaNENe0or9FgGtUm+kU17YCcW0bE1zbqvj0NnoQjWuK9aC53s88XBOfMcC1z7ni2ueKH3iDINDrbssD19JNQTdwbb4sdicCXOsEnK6VGeLaFzqubbfi2nZCXNOKPp8A16g20ymufQHEte1McO0Lxae30YNoXFOsB831funhmviSAa59xRXXvlL8wBsEgV53Jx64lmEKuoFrC2WxuxDgWhfgdK3CENd26Li204prOwlxTSv6QgJco9pMp7i2A4hrO5ng2g7Fp7fRg2hcU6wHzfV+7eGa+JoBrn3DFde+UfzAGwSBXncXHriWaQq6gWuLZbG7E+Bad+B0PZshrn2r49ouK67tIsQ1reiLCXCNajOd4tq3QFzbxQTXvlV8ehs9iMY1xXrQXO93Hq6J7xjg2vdcce17xQ+8QRDodXfngWtZpqAbuJYji92TANd6AqdrVYa4tlvHtR+suPYDIa5pRc8hwDWqzXSKa7uBuPYDE1zbrfj0NnoQjWuK9aC53h89XBM/MsC1n7ji2k+KH3iDINDr7skD12KmoBu4tkQWuy8BrvUFTtdzGOLazzqu7bHi2h5CXNOKvoQA16g20ymu/QzEtT1McO1nxae30YNoXFOsB831/uLhmviFAa7t5YprexU/8AZBoNfdlwWu+Y9pu4Fr78hiDyDAtQHA6XouQ1zbp+Pafiuu7SfENa3o7xDgGtVmOsW1fUBc288E1/YpPr2NHkTjmmI9aK73Vw/XxK8McO03rrj2m+IH3iAI9LoH8MA1YQq6gWvLZLGHEuDaUOB0PY8hrv2u49oBK64dIMQ1rejLCHCNajOd4trvQFw7wATXfld8ehs9iMY1xXrQXO8fHq6JPxjg2p9cce1PxQ+8QRDodQ/lgWt+U9ANXHtXFnskAa6NBE7Xagxx7aCOa39Zce0vQlzTiv4uAa5RbaZTXDsIxLW/mODaQcWnt9GDaFxTrAfN9f7t4Zr4mwGuHeKKa4cUP/AGQaDXPZIHrqWagm7g2nuy2GMIcG0McLpWZ4hr/+i4dtiKa4cJcU0r+nsEuEa1mU5x7R8grh1mgmv/KD69jR5E45piPWiu918P18S/DHDtCFdcO6L4gTcIAr3uMTxwLWAKuoFr78tiTyHAtSnA6VqDIa4d1XEtJTvleFzTbtQg2kyt6O8T4BrVZjrFtaNAXNP2haLJ0Ht8VPHpbfQgGtcU60FzvcWycfvBFdeQNaDyWDybKa4Vz1b7wBsEgV73FB64FjQF3cC11bLYcwhwbQ5wup7PENdOytb30IprJQhxTSv6agJco9pMp7h2UjaudiWY4NpJik9vowfRuKZYD5rrPdnDNXEyA1w7hSuunaL4gTcIAr3uOTxwLWQKuoFrH8hiLybAtcXA6VqTIa6dquNaSSuulSTENa3oHxDgGtVmOsW1U4G4VpIJrp2q+PQ2ehCNa4r1oLne0zxcE6cxwLVSXHGtlOIH3iAI9LoX88C1sCmoNUW5fJqijt3/aMCX9E+3Ez5jEb5kfx6w+bwmWWuP2H32k6S13vafIyVlrU8+n0klY+2pfD/fStxa//w/K0vY2qCCPndL0NqQAj/DS8zasEI+D0zE2ojCPltMwNqowj+njNva6Dg+84zX2vi4Pj+Nz9rk+D6Ljcva9Hg/143D2uy4PyMu3Nq8BD5vLszaokQ+uy7EWm5in4MXaG1pgp+pF2RtRcKfz+dvbVXin/Xna21tMt8byMfa+qS+g2BvbVOS32ews7Yl2e9G2Fhz8I/Jn2DNyb90arXm7J/hOt6aw38j4jhrjv8C4zzWnP/tesesIf7qF8Ma5PeSdWugX5r5nzXUNzo1a7ivGwR8wCwc/qJm/cFo5/l3PdDacnOMl0Dtz2r6fz5d1qW0vMrIq6y8ysmrvLzOkFcFeZ0pr4ryOkteleRVWV5V5HW2vKrK6xx5nSuv8+RVTV7VtQRVXufLq6a8LpDXhfK6SF615FVbXnWssatmoqTlXmmbe2Vs7pW1uVfO5l55m3tn2NyrYHPvTJt7FW3unWVzr5LNvco296rY3Dvb5l5Vm3vn2Nw71+beeTb3qtncq25zr4bNvfNt7tW0uXeBzb0Lbe5dZHOvls292jb36uj38v400/9srP/5v4PgvdgX+OO92Cf2473Y+7wXe8uP92KfmDXvxT4xa96LfWLWvBf7xKx5L/aJWfNe7BOzRvVi7/TT0tMBWln/+56JT5QGaWlrLAPR+q9eZZ1rmV/xKedUK2DWXpR3puXLs4/iDCda/uN6QlRIXstn6S9xZpJaodgJvSoqJqcVsel7cVYyWhHbMyQqJa4Vzuc8isqJaoXzPduiSmJa/gLmhDg7Ea1wgTNHVI1fK6OQ+SXOiVcrXOgsFOfGp+WLY66K8+LR8sU1o0W1wrWCcc57Ub0wrUDczw5Ro0CtQCyB55A4vyCtcELPNFEzf61Igs9HcUE+WtFYws9acaG9li+J57a4yE7LlxQDiFonaokkeULUtmplJs0mog7wAww3vrv+4fCUlGUE311fBvyq6QUMv7t+sf7d9UusH6JcQvjdda3oHxJ8d51qM52C7cXAl4pLmHx3/WLFv8pq9CD6u+uK9aC53ku9766LS7PV91iX63fX6yp+4A2CQK97GY/vrkdMQTdw7SNZ7NUEuLYaOF0vZIhrl+m4Vs+Ka/UIcU0r+kcEuEa1mU5x7TIgrtVjgmuXqf6L4noPonFNsR4011vfwzVRnwGu+bjimk/xA28QBHrdq3ngWtQUdAPXNshibyDAtQ3A6XoRQ1wTOq75rbjmJ8Q1regbCHCNajOd4poA4pqfCa4Jxae30YNoXFOsB831pnq4JlIZ4FqAK64FVD/wOkGg172BB66lmYJu4NrHsthbCXBtK3C61mKIa0Ed10JWXAsR4ppW9I8JcI1qM53iWhCIayEmuBZUfHobPYjGNcV60Fxv2MM1EWaAaxGuuBZR/MAbBIFe91YeuJZuCrqBa5/IYu8gwLUdwOlamyGuRXVcu9yKa5cT4ppW9E8IcI1qM53iWhSIa5czwbWo4tPb6EE0rinWg+Z6r/BwTVzBANcacMW1BoofeIMg0OvewQPXMkxBN3DtU1ns3QS4ths4XeswxLUrdVxraMW1hoS4phX9UwJco9pMp7h2JRDXGjLBtSsVn95GD6JxTbEeNNfbyMM10YgBrjXmimuNFT/wBkGg172bB65lmoJu4NpWWex9BLi2DzhdL2aIa1fpuNbEimtNCHFNK/pWAlyj2kynuHYVENeaMMG1qxSf3kYPonFNsR4013u1h2viaga41pQrrjVV/MAbBIFe9z4euHbsLwl3A9c+k8U+SIBrB4HT9RKGuHaNjmvNrLjWjBDXtKJ/RoBrVJvpFNeuAeJaMya4do3i09voQTSuKdaD5nqbe7gmmjPAtWu54tq1ih94gyDQ6z7IA9dipqAbuPaFLPZRAlw7CpyulzLEtet0XGthxbUWhLimFf0LAlyj2kynuHYdENdaMMG16xSf3kYPonFNsR4013u9h2viega4dgNXXLtB8QNvEAR63UdZ4FrqMW03cO1LWexTB+FxTdOEaMnpWpchrt2o49pNVly7iRDXtKJ/SYBrVJvpFNduBOLaTUxw7UbFp7fRg2hcU6wHzfW29HBNtGSAa6244lorxQ+8QRDodcMOvI8U14Qp6Aau7ZDFLkeAa+WA0/Uyhrh2s45rra241poQ17Si7yDANarNdIprNwNxrTUTXLtZ8elt9CAa1xTrQXO9t3i4Jm5hgGttuOJaG8UPvEEQ6HWX44FrflPQDVz7Wha7MgGuVQZO13oMce1WHddus+LabYS4phX9awJco9pMp7h2KxDXbmOCa7cqPr2NHkTjmmI9aK63rYdroi0DXGvHFdfaKX7gDYJAr7syD1xLNQXdwLVvZbGrE+BadeB0rc8Q127Xca29FdfaE+KaVvRvCXCNajOd4trtQFxrzwTXbld8ehs9iMY1xXrQXO8dHq6JOxjgWgeuuNZB8QNvEAR63dV54FrAFHQD176Txa5NgGu1gdPVxxDXOuq4dqcV1+4kxDWt6N8R4BrVZjrFtY5AXLuTCa51VHx6Gz2IxjXFetBcbycP10QnBrjWmSuudVb8wBsEgV53bR64FjQF3cC13bLY9QlwrT5wugqGuJam41q6FdfSCXFNK/puAlyj2kynuJYGxLV0JriWpvj0NnoQjWuK9aC53gwP10QGA1zL5IprmYofeIMg0OuuzwPXQqagG7j2oyx2mADXwsDp6meIa1k6rsWsuBYjxDWt6D8S4BrVZjrFtSwgrsWY4FqW4tPb6EE0rinWg+Z6u3i4JrowwLWuXHGtq+IH3iAI9LrDPHAtbAq6gWs/y2I3IsC1RsDpmsoQ1+7Sce1uK67dTYhrWtF/JsA1qs10imt3AXHtbia4dpfi09voQTSuKdaD5nrv8XBN3MMA1+7limv3Kn7gDYJAr7sRD1yLmIJu4NovstjNCXCtOXC6Bhji2n06rnWz4lo3QlzTiv4LAa5RbaZTXLsPiGvdmODafYpPb6MH0bimWA+a6+3u4ZrozgDXenDFtR6KH3iDIOD/VAYPXIuagm7g2j5Z7JYEuNYSOF2DDHHtfh3XHrDi2gOEuKYVfR8BrlFtplNcux+Iaw8wwbX7FZ/eRg+icU2xHjTX+6CHa+JBBrj2EFdce0jxA28QBPzvXuaBa2mmoBu49qssdlsCXGsLnK4hhrj2sI5rj1hx7RFCXNOK/isBrlFtplNcexiIa48wwbWHFZ/eRg+icU2xHjTX29PDNdGTAa714oprvRQ/8AZBwP8yPx64lm4KuoFrv8tidyLAtU7A6RpmiGuP6rjW24prvQlxTSv67wS4RrWZTnHtUSCu9WaCa48qPr2NHkTjmmI9aK73MQ/XxGMMcO1xrrj2uOIH3iAI+N8OwwPXMkxBN3DtD1nsLgS41gU4XSMMce0JHdf6WHGtDyGuaUX/gwDXqDbTKa49AcS1Pkxw7QnFp7fRg2hcU6wHzfX29XBN9GWAa/244lo/xQ+8QRDwXzfmgWuZpqAbuHZQFrs7Aa51B07XKENce1LHtaesuPYUIa5pRT9IgGtUm+kU154E4tpTTHDtScWnt9GDaFxTrAfN9T7t4Zp4mgGuPcMV155R/MAbBAH//RUeuJZlCrqBa3/LYvckwLWewOl6OUNce1bHtf5WXOtPiGta0f8mwDWqzXSKa88Cca0/E1x7VvHpbfQgGtcU60FzvQM8XBMDGODaQK64NlDxA28QBPwLkTxwLWannXLVydhizB6D05oH1FoE1MoFai0Faq0Aaq0Caq0Faq0Ham0Cam0Ban0O1PoKqPUNUOt7oNZPQK29QK3fgFp/ArUOAbWOALWKj8VpnQLUKgXUKgvUqgDUqgTUqgrUqgbUqgnUqgXUugSoVQ+o5QdqhYBalwO1GgK1mgC1mgG1WgC17gVq9QBqPQTU6gXUehyo1Q+o9QxQayBQazBQ60Wg1nCg1qtArTeAWmOBWhOBWlOBWjOBWnOBWguAWtlArbeBWsuBWiuBWmuAWuuAWhuBWpuBWtuAWtuBWjuBWruAWj8AtfYAtfYDtQ4Atf4Cah0GaqWMw2mVAGqVBGpdAtSqB9TyA7VCQK3LgVoNgVpNgFrNgFotgFo3AbVaA7VuA2q1B2rdCdRKB2rFgFp3A7W6AbUeAGo9AtTqDdTqA9R6CqjVH6g1CKg1BKg1DKg1Aqg1Cqg1Gqg1Hqg1Gag1Hag1G6g1D6i1CKiVC9RaCtRaAdRaBdT6Aai1B6i1H6h1AKj1F1DrMFArZTzwXRSoVRKoVRqoVR6oVRGoVQWodS5QqwZQ60KgVh2gVl2glg+oFQBqRYBaDYBajYFaTYFa1wK1bgBqtQJqtQFqtQNqdQBqdQZqZQK1ugK17gVq9QBqPQTU6gXUehyo1Q+o9QxQazJQazpQazZQax5QaxFQKxeotRSotQKotQqotRaotR6otQmotQWo9TlQ6yug1jdAre+BWj8BtfYCtX4Dav0J1DoE1DoC1Co+Aad1ClCrFFCrLFCrAlCrElCrKlCrGlCrJlCrFlDrEqBWPaCWH6gVAmpdDtRqCNRqAtTKBGp1BWrdC9TqAdR6CKjVC6j1OFCrH1DrGaDWQKDWYKDWi0Ct4UCtV4FabwC1xgK1JgK1pgK1ZgK15gK1FgC1soFabwO1lgO1VgK11gC11gG1NgK1NgO1tgG1tgO1dgK1dgG1fgBq7QFq7QdqHQBq/QXUOgzUSpkIfBcFatUCal0C1KoH1PIDtUJArcuBWg2BWk2AWs2AWi2AWjcBtVoDtW4DarUHat0J1EoHasWAWncDtboBtR4Aaj0C1OoN1OoD1HoKqNUfqDUIqDUEqDUMqDUCqDUKqDUaqDUeqDUZqDUdqDUbqDUPqLUIqJUL1FoK1NoJ1NoF1PoBqLUHqLUfqHUAqPUXUOswUCtlEk6rBFCrJFCrNFCrPFCrIlCrClDrXKBWDaDWhUCtOkCtukAtH1ArANSKALUaALUaA7WaArWuBWrdANRqBdRqA9RqB9TqANTqDNTKBGp1BWrdC9TqAdR6CKjVC6j1OFBrNFBrPFBrMlBrOlBrNlBrHlBrEVArF6i1FKi1Aqi1Cqi1Fqi1Hqi1Cai1Baj1OVDrK6DWN0Ct74FaPwG19gK1fgNq/QnUOgTUOgLUKj4Zp3UKUKsUUKssUKsCUKsSUKsqUKsaUKsmUKsWUOsSoFY9oJYfqBUCal0O1OoA1OoM1MoEanUFat0L1OoB1HoIqNULqPU4UKsfUOsZoNZAoNZgoNaLQK3hQK1XgVpvALXGArUmArWmArVmArXmArUWALWygVpvA7WWA7VWArXWALXWAbU2ArU2A7W2AbW2A7V2ArV2AbV+AGrtAWrtB2odAGr9hXwXnQJ8FwVq1QRq1QJqXQLUqgfU8gO1QkCty4FaDYFaTYBazYBaLYBaNwG1WgO1bgNqtQdq3QnUSgdqxYBadwO1ugG1HgBqPQLU6g3U6gPUegqo1R+oNQioNQSoNQyoNQKoNQqoNRqoNR6oNRmoNR2oNRuoNQ+otQiotQ2otR2otROotQuo9QNQaw9Qaz9Q6wBQ6y+g1mGgVspUnFYJoFZJoFZpoFZ5oFZFoFYVoNa5QK0aQK0LgVp1gFp1gVo+oFYAqBUBajUAajUGajUFal0L1LoBqNUKqNUGqNUOqNUBqNUZqJUJ1OoK1LoXqNUDqPUQUGsEUGsUUGs0UGs8UGsyUGs6UGs2UGseUGsRUCsXqLUUqLUCqLUKqLUWqLUeqLUJqLUFqPU5UOsroNY3QK3vgVo/AbX2ArV+A2r9CdQ6BNQ6AtQqPg2ndQpQqxRQqyxQqwJQqxJQqypQqxpQqyZQqxZQ6xKgVj2glh+o1Qao1Q6o1QGo1RmolQnU6grUuheo1QOo9RBQqxdQ63GgVj+g1jNArYFArcFArReBWsOBWq8Ctd4Aao0Fak0Eak0Fas0Eas0Fai0AamUDtd4Gai0Haq0Eaq0Baq0Dam0Eam0Gam0Dam0Hau0Eau0Cav0A1NoD1NqPfBedDnwXBWpVBWpVA2rVBGrVAmpdAtSqB9TyA7VCQK3LgVoNgVpNgFrNgFotgFo3AbVaA7VuA2q1B2rdCdRKB2rFgFp3A7W6AbUeAGo9AtTqDdTqA9R6CqjVH6g1CKg1BKg1DKg1Aqg1Cqg1Gqg1Hqg1Gag1Hag1G6i1Eai1Gai1Dai1Hai1E6i1C6j1A1BrD1BrP1DrAFDrL6DWYaBWygycVgmgVkmgVmmgVnmgVkWgVhWg1rlArRpArQuBWnWAWnWBWj6gVgCoFQFqNQBqNQZqNQVqXQvUugGo1Qqo1Qao1Q6o1QGo1RmolQnU6grUuheoNQSoNQyoNQKoNQqoNRqoNR6oNRmoNR2oNRuoNQ+otQiolQvUWgrUWgHUWgXUWgvUWg/U2gTU2gLU+hyo9RVQ6xug1vdArZ+AWnuBWr8Btf4Eah0Cah0BahWfidM6BahVCqhVFqhVAahVCahVFahVDahVE6hVC6h1CVDrBqBWK6BWG6BWO6BWB6BWZ6BWJlCrK1DrXqBWD6DWQ0CtXkCtx4Fa/YBazwC1BgK1BgO1XgRqDQdqvQrUegOoNRaoNRGoNRWoNROoNReotQColQ3UehuotRyotRKotQaotQ6otRGotRmotQ2otR2otROotQuo9QPyXXQW8F0UqFUBqFUJqFUVqFUNqFUTqFULqHUJUKseUMsP1AoBtS4HajUEajUBajUDarUAat0E1GoN1LoNqNUeqHUnUCsdqBUDat0N1OoG1HoAqPUIUKs3UKsPUOspoFZ/oNYgoNYQoNYwoNYIoNYooNZooNZ4oNZkoNYaoNY6oNZGoNZmoNY2oNZ2oNZOoNYuoNYPQK09QK39QK0DQK2/gFqHgVops3FaJYBaJYFapYFa5YFaFYFaVYBa5wK1agC1LgRq1QFq1QVq+YBaAaBWBKjVAKjVGKjVFKh1LVDrBqBWK6BWG6BWO6BWB6BWZ6BWJlCrP1BrEFBrCFBrGFBrBFBrFFBrNFBrPFBrMlBrOlBrNlBrHlBrEVArF6i1FKi1Aqi1Cqi1Fqi1Hqi1Cai1Baj1OVDrK6DWN0Ct74FaPwG19gK1fgNq/QnUOgTUOgLUKj4Hp3UKUKsUUKssUKsCUKsSUKsqUKsaUKsmUKspUOtaoNYNQK1WQK02QK12QK0OQK3OQK1MoFZXoNa9QK0eQK2HgFq9gFqPA7X6AbWeAWoNBGoNBmq9CNQaDtR6Faj1BlBrLFBrIlBrKlBrJlBrLlBrAVArG6j1NlBrOVBrJVBrDVBrHVBrI1BrM1BrG1BrO1BrJ1Cr+FzguyhQqxRQqyxQqwJQqxJQqypQqxpQqyZQqxZQ6xKgVj2glh+oFQJqXQ7UagjUagLUagbUagHUugmo1RqodRtQqz1Q606gVjpQKwbUuhuo1Q2o9QBQ6xGgVm+gVh+g1lNArf5ArUFArSFArWFArRFArVFArdFAreVArZVArTVArXVArY1Arc1ArW1Are1ArZ1ArV1ArR+AWnuAWvuBWgeAWn8BtQ4DtVLewmmVAGqVBGqVBmqVB2pVBGpVAWqdC9SqAdS6EKhVB6hVF6jlA2oFgFoRoFYDoFZjoFZToNa1QK0bgFqtgFptgFrtgFodgFp9gFpPAbX6A7UGAbWGALWGAbVGALVGAbVGA7XGA7UmA7WmA7VmA7XmAbUWAbVygVpLgVorgFqrgFprgVrrgVqbgFpbgFqfA7W+Amp9A9T6Hqj1E1BrL1DrN6DWn0CtQ0CtI0Ct4vOA38UAapUCapUFalUAalUCalUFajUAajUGajUFal0L1LoBqNUKqNUGqNUOqNUBqNUZqJUJ1OoK1LoXqNUDqPUQUKsXUOtxoFY/oNYzQK2BQK3BQK0XgVrDgVqvArXeAGqNBWpNBGpNBWrNBGrNBWotAGplA7XeBmotB2qtBGqtAWqtA2ptBGptBmptA2odAmodAWoVnw98FwVqlQJqlQVqVQBqVQJqVQVqVQNq1QRq1QJqXQLUqgfU8gO1QkCty4FaDYFaTYBazYBaLYBaNwG1WgO1bgNqtQdq3QnUSgdqxYBadwO1ugG1HgBqPQLU6g3U6gPUegqo1R+oNQioNQSoNQyoNQKolQ3UehuotRyotRKotQaotQ6otRGotRmotQ2otR2otROotQuo9QNQaw9Qaz9Q6wBQ6y+g1mGgVsoCnFYJoFZJoFZpoFZ5oFZFoFYVoNa5QK0aQK0LgVp1gFp1gVo+oFYAqBUBajUAajUGajUFal0L1LoBqNUKqNUGqPUIUKs3UKsPUOspoFZ/oNYgoNYQoNYwoNYIoNYooNZooNZ4oNZkoNZ0oNZsoNY8oNYioFYuUGspUGsFUGsVUGstUGs9UGsTUGsLUOtzoNZXQK1vgFrfA7V+AmrtBWr9BtT6E6h1CKh1BKhVfCHwuxhArVJArbJArQpArQBQKwLUagDUagzUagrUuhaodQNQqxVQqw1Qqx1QqwNQqzNQKxOo1RWodS9QqwdQ6yGgVi+g1uNArX5ArWeAWgOBWoOBWi8CtYYDtV4Far0B1BoL1JoI1JoK1JoJ1JoL1FoA1MoGar0N1FoO1FoJ1FoD1FoH1NoI1PoNqPUnUOsQUOsIUKv4IuC7KFCrFFCrLFCrAlCrElCrKlCrGlCrJlCrFlDrEqBWPaCWH6gVAmpdDtRqCNRqAtRqBtRqAdS6CajVGqh1G1CrPVDrTqBWOlArBtS6G6jVDaj1AFDrEaBWb6BWH6DWU0Ct/kCtQUCtIUCtuUCtBUCtbKDW20Ct5UCtlUCtNUCtdUCtjUCtzUCtbUCt7UCtnUCtXUCtH4Bae4Ba+4FaB4BafwG1DgO1UhbjtEoAtUoCtUoDtcoDtSoCtaoAtc4FatUAal0I1KoD1KoL1PIBtQJArQhQqwFQqzFQqylQ61qg1g1ArW5ArQeAWo8AtXoDtfoAtZ4CavUHag0Cag0Bag0Dao0Aao0Cao0Gao0Hak0Gak0Has0Gas0Dai0CauUCtZYCtVYAtVYBtdYCtdYDtTYBtbYAtT4Han0F1PoGqPU9UOsnoNZeoNZvQK0/gVqHgFpHgFrFs4HfxQBqlQJq1QVq+YBaAaBWBKjVAKjVGKjVFKh1LVDrBqBWK6BWG6BWO6BWB6BWZ6BWJlCrK1DrXqBWD6DWQ0CtXkCtx4Fa/YBazwC1BubRSvWFAoGssD9LpIo0nz+aHgn6AsH0UERERDASzPRHUlOzIoFIOJoeDfuiIpCaJWLBaGpMF3sO58tXTGqcJC/tT023hvyzhLzK6fetP1X0P4/73w/4kv458VkvfEn/2NQlWWu2z/okreXzrE/KWn7P+mSs5f+sT9xaAc/6hK0V+KxP0FrBz/rErBX2rE/EWqHP+gSsxfGsj9taPM/6eK3F96yPz1qcz/q4rMX9rI/DWvzP+sKtJfKsL8xaQs/6Qqwl+Kwv0Fqiz/qCrCX+rM/fWhLP+nytDQQ+n1NsfjDaIotMW/zHFdqP9mc1/T8PknV5Xl6D5fWCvIbIa6i8XpTXS/IaJq+X5TVcXq/Ia4S8RsrrVXm9Jq9R8npdXm/I6015jZbXGHmNldc4eY2X1wR5TZTXJHlNlteUbN2EATmaiZKWe8/b3Btsc+8Fm3tDbO4Ntbn3os29l2zuDbO597LNveE2916xuTfC5t5Im3uv2tx7zebeKJt7r9vce8Pm3ps290bb3Btjc2+szb1xNvfG29ybYHNvos29STb3Jtvcm6Lfy/tTQv+zsf5nnJAfzgfyxYhEXxjC+b4wiJGJafkLePkQrwJfZPzBYiSDMuG9CBfoU7wW/5ozClmzGBWvVrjQ+onXgXuRWvR74YvDp3gjnjX74lqzeLNwrWCc9ROjgXsRKMq9CMTtU4wpcM2BWAJrFmML0gonVD8xDrgXwaLZi0iCPsX4fNYcjSW8ZjHBXsuXRP3EROBehIj2oq5lL/73X/BCrQJ/vFArsR8v1PJ5oZblxwu1ErPmhVqJWaMKtZw+xwcBtLJi2o9PPA/S0tY+GKL1Xx1fcK7lNxhqiFOtwDEeG+pMy5eX7V50ouU/nhNfSl7LZ2XOYUlqhWIn8uvLyWlF7Fh4eDJaEXuufsVOy5fUeRSTTtQSSZ5tMdmqlZn0nBBTEp9f+f0IYNYkgFmJAL7rC+C7qqB61yqu/wnSTu01CPdcmorrt+O+WKHp1kj5752/TJ4a5P0phq2LQK7Fxi5KO5C3FtOy//tzuvVDG+3/UM1yT/svWQt5EmERnYFKLHMaEKCmAzc3kaZ06nuac9//AapUTME3pQm/eWsxQ2/KmdamnKmf6oIaEFkwpxQ5A9iAM4k2Et1wM4AEkddnDUzD6co+3/VjIVr/q+kNCC39KNw4FneobnKqlefdtKUzrePecls50bK8L9+cvNYJb96tk9WyeYe/JTkt2zSgTTJa+eQKtyaulW9CcVuiWgXEMG0T0yowa2qXiFYhqdXt8WsVGs21j1crjvzxjvi04koyO8SjFWdc27Fwrbgz6TsL00og3e5UsFZCEX7ngrQS/JwibSzuE4/0/LSS+Fgnw14rqc+uMsfiPgXLOlEr6Y/6YlYtBx8adjley4GS/GRhLI6hao3Dsd0sojfcGvqfAO3/1f20cTgeKzUOx2Onj8PxWOlxOB4rMw7HY2XH4Xis3Dgcj5Ufh+OxM8bheKzCOByPnTkOx2MVx+F47KxxOB6rNA7HY5XH4Xisyjgcj509DsdjVcfheOyccTgeO3ccjsfOG4fjsWrjcDxWfRyOx2qMw/HY+eNwPFZzHI7HLhiH47ELx+F47CIET/z3I75FackV7QKy3WzV2U7fwdVAHlsD5LEPgDy2FshjHwJ5bB2Qxz4C8th6II9tAPLYRiCPfQzksU1AHvsEyGObgTz2KZDHtgB5bCuQx7YBeewzII99DuSxL4A8th3IY18CeewrII/tAPLYTiCPfQ3ksW+APDZ2PI7HxmG0/leb8eNxbDeHiO2MXzN2qG32wrPjcTzWfzyOxwaMx/HYwPE4HntuPI7HBo3H8djz43E8Nng8jsdeGI/jsSHjcTw2dDyOx14cj+Oxl8bjeGzYeByPvTwex2PDx+N47JXxOB4bMR7HYyPH43js1fE4HnttPI7HRo3H8djr43E89sZ4HI+9OR7HY6PH43hsDIJ7dAedJ+C4Z24e7vGnxqK+YIY/FgtH/RFfMD3sC/jSMzIzUkVQBEIZgUhGRnq6CKXK/71IKBzOTA/HMsKhWFZMZPoyI4H9F9F8OxvCUHl27+oJOO5pOgHHPddMwHFPswk47mk+Acc9107Acc91E3Dc02ICjnuun4Djnhsm4Ljnxgk47rlpAo57Wk7AcU+rCTjuuXkCjntaT8Bxzy0TcNzTZgKOe26dgOOe2ybguKftBBz3tJuA457bJ+C4p/0EHPfcMQHHPR2cPWvz/oiqE3E5SrWJOIZ6K292lBVNjUTTM4KhYKo/lOFLjYQjwhfIioWF9kuHgVgoNZDuCwdEWlYgK8OXrv1Koz/D749pBJUa8KfVUpahjuuDYhNx3FN8Io57TpqI454SE3Hcc/JEHPecMhHHPadOxHFPyYk47jltIo57Sk3Ecc/pE3HcU3oijnvKTMRxT9mJOO4pNxHHPeUn4rjnjIk47qkwEcc9Z07EcU/FiTjuOWsijnsqTcRxT+WJOO6pMhHHPWc7ZxXjR2xFackVbXOqlacq24EMNS8vQwWDWf7UjEg0nBqNpqZl+MJZ6cGw8Pt9WTKgigmRKVKjoUBWIOIP+mOhjLRIajAQDGdmagQl0lM3ETFUVf3PpLUtHbUMyD3LgdzzLpB7VgC55z0g96wEcs/7QO5ZBeSe1UDuWQPkng+A3LMWyD0fArlnHZB7PgJyz3og92wAcs9GIPd8DOSeTUDu+QTIPZuB3PMpkHu2AJlgfh4mkClJemrAF4pG/CF/OBzO8EdiYb8/TQYt6YFQVkZaZlYkKxRMy9T+mqiMjEBGJJKVJtJiAY0I/FmBYS8oyQQn1PqJSbjneJ9JuOd430m453i/Sbjn+JOTcM/xpybhnuNPT8I9x5+ZhHuOPzsJ9xzvPwn3HB8wCfccHzgJ9xx/bhLuOT5oEu45/vwk3HN88CTcc/yFSbjn+JBJuOf40Em45/iLk3DP8Zcm4Z7jwybhnuMvJ/scOvFH3DwZxwQLjmOCNCFSA8FAZjQ1EA5kZIYzQmnRjEAwVf7XY1mZvoxQenooNSPLF0sNpocjGaFwekZ6VjCqEUFqNL3YEAWZwGbXrpiMe443mIx7jl85GfccbzgZ9xxvNBn3HG88Gfccv2oy7jneZDLuOX71ZNxzvOlk3HP8msm453izybjnePPJuOf4tZNxz/HrJuOe4y0m457j10/GPcdvmIx7jt84Gfccv2ky7jnecjLuOd4quWeH3Y8oOwX3OUS5KTgmWJj3O6yR9HB6UARikUAsM8OXFc0KZqaHs4L+gPxUIRYVqVmZqRnh9HAsmh7zZwUD/vQsvwj7MvwaEaRFoz2ImKCK/mcS2rb7/zfwOX4I+Bz/B/gcPwx8jv8LfI4fAT7HjwKf4ylTcM/xYlNwz/HiU3DP8ZOm4J7jJabgnuMnT8E9x0+ZgnuOnzoF9xwvOQX3HD9tCu45XmoK7jl++hTcc7z0FNxzvAzwebnouHfocDjVH870y6dhJD0aiPoDmcFIZqZMzbOC6T6/8PljaakiPRKQD8k0f3pmLCjj9Sz5ji2flhF/dESdYjCtr1R79uazY4un4J6X2VNwz8ucKbjnZe4U3PNyyRTc8/LtKbjn5TvA5+VS4PNyGfB5uRz4vHwX+LxcAXxevgd8Xq4EPi/fBz4vVwGfl6uBz8s1wOflB8Dn5VrUu6r0MXAq7tm7OO+7aiw1PTU9FJXRdTAjNebPzAxmilAkTT425XMxJj/djgXkp9jy/29WOChi8kGZEfSlh0RMe1pGommnXlwMpnXDUKWevfnu/cNTcc/LR6binpc9p+Kel72m4p6Xj07FPS97T8U9Lx+bintePj4V97x8YiruedlnKu552Xcq7nnZbyruefnkVNzz8qmpuOfl01Nxz8tnpuKel89OxT0v+0/FPS8HJDpX8/8R10zD5cTNpuGevdl5n73RtHSRLrPijHDMnxaIygzYn56e5stMi2XGYpGsTPnRcnow7I+IWGrEF0tLzwqkRoIi5NeellFfuFfeZ69DrVyiZ29F/c+EtAvootRpuOdlYBrueRmchntehqbhnpfhabjnZWQa7nkZnYZ7Xl4+Dfe8vGIa7nnZYBrueXnlNNzzsuE03POy0TTc87LxNNzz8qppuOdlk2m45+XV03DPy6bA51JO3jw2IP+bmTIojUQCacHUjGhmeiw94ktN92eGo1kZUlpEMwOp0WDEH0jNzApnZQZDvnRfMEt7koT8gV8PKfMsKbC+vwLn/2/A+f87cP4fAM7/P4Dz/0/g/D8InP9/Aef/38D5fwg4//8Bzv/DwPn/L3D+HwHO/6PA+Z8yHTf/i03HvS8tm457luTmfZZkpqYGMqPpGSLoD6Wl+yKZqWm+WEB+RudLy0wNZ2amRkKhtNTUzFAkFpExoMwI5ftJMBzWniSpUX+nfxR5lhSyU3Om4+b/3Om4+f/WdNz8nzcdN//nT8fN/wXTcfN/4XTc/F80HTf/F0/Hzf/s6bj5nzMdN/9zp+Pm/5LpuPn/9nTc/H8HOP+XAuf/4zNwedkTM3DPkiV5nyWhmHxWpAUz06LaEyIQjGYEg+FQxJ8qJYMZ0WA41ReOpGYGg7H0jLSMiMiM+qMZ4bQ07UkiQqGPiJ4lFfQ/49QudM/vm4Gb/91m4OZ/9xm4+d9jBm7+3z8DN/8fmIGb/w/OwM3/h2bg5v/DM3Dz/5EZuPnfcwZu/veagZv/j87Azf/eM3Dz/zHgnH0775wN+0RUROR/Icuf4UsTaeFQKBzIjGVkpab6goGYP5YVC6cKDeID0dRwICw/3A+F06Pp2pQNRsL3vVQMptXtJQVmdhy7dOlM3JytOxM3Zy+biZuz9Wbi5mz9mbg565uJm7NiJm7O+mfi5mzqTNycDczEzdngTNycDc3EzdnwTNycjcR3tuP5EX/OxM3sd/J+luz3y/+eTFT8gfSszKxYIBJJzcqIpMlB64+k+8NZWVlpgbRUEZX/19RYZmp6NCq5OCPs16ZsKBL+LM+cdar1edHP7Lj2+0fgnP0JOGd/Bs7ZPcA5+wtwzu4Fztl9wDm7HzhnfwXO2d+Ac/Z34Jw9AJyzfwDn7PxZuDxjwSzczF6ad2aLmD8tLS09FvRFg/I/Z6WH0yOhNDl5tc9RQ1lpQe2vlEoLBUOZ8j9Eg5KaQyJdZKRpUzYUyLhmWDGYVrNhNDO7bEqcMzvOzpkyCzdnp87Czdlps3Bzdvos3JydMQs3Z2fOws3ZWbNwc3b2LNycnTMLN2fnzsLN2bdm4ebsPOA8W5Y3N8iIhDNFmoimRrNiwfRYND0UzEpPDfvSo0E5Z/xpWdHU1PS0aIZ8ncnyBTIDMZER0v4tAm0CpQcyn/u3SGdQ3DXNmo2bG7HZuLnRZTZubnSdjZsbd83GzY27Z+Pmxj2zcXPj3tm4uXHfbNzc6DYbNze6z05BnU9x2RzcDFqel6kyfelpaYHUtPQsISWjEn38wSyRnp6amZ6eIaJy7IiIfKNNF6mRYCRVBEMyw5BxQZY2gTJCaQeLcgYlsDsXzMHNjQvn4ObGRXNwc6PWHNzcqD0HNzfqzMHNjYvn4ObGJXNwc+PSObi5UXcObm78hNKSK/oZOIPePe7fXwpFg4HMrEgwIxDwRzMj4fTMQIYvHA6G02P+UFT7Z5iCQTl1MmMikhaIZAXkcNL+N7QJFBX+rCM0M6h04TMooX3+Gjg3vgHOjW+Bc2MXcG58B5wb3wPnxm7g3PgBODd+BJ7PFXnPZ3okMxoIydeRSFgIf1D7MkkwGJD/3yIZ/swMGY5kZQTTItGMrHBGZmZGQITSUsPBgM+nnU6RHvj15WIwrU1FddYT3Jkxc3Hnc+xc3PkcNxd3PsfPxZ3PCXNx53PiXNz5nDQXdz4nz8U91zPfwp319477d3zSMtOjkWhmVmpmLF0EIhmpgbS0SEa6L5ienu5PD4ZjGam+SDScniafxuFoOBTVXhQyUrXTmZqResfwYjCtRkeL5KwnvMcd38Kdzzvfwp3PTm/hzmfnt3DnM+0t3PlMfwt3PjPewp3P8+fhuLvmPNxZX5n3rIuYfKcPhTPT/GmBmHzopgf8Icna/qyojAVCmQH5iUfQF8uUj+CQVPSlRQPaP4vqj2mn05/lfz/vWXeoNZPorJcs6Kwn0S3nzMOdz3Pn4c7nefNw57PaPNz5rD4Pdz5rAM/B+8f9/mYoMxgOZgazgrFQKJbmi6VmRQPav+2b4Y9F0/yRaCCalRaV/xVfmi8tlhFNSxWBdL/2q57yfz8WOieluNu9m1QdPwP22+fAfvsC2G/bgf32JWqGSx+vz8f17qq8M1wXC2aFw6GITEwy0kMyIgn6faFIUI5W+eoUiIayhGzbWDgWFJHMWDgSy0qL+P+nGXjO7d5NckdGzsf126vzcf322nxcv42aj+u3dgtw/HH7Alzvrs62+kpe8SBR755i37tJ7+2tC3D9dtsCXL+1Be7rGsu+OtG7a0QxmFZmMRd7xMFunLkQt68VF+LmyKaFuB754Lgecab28XE94lDLvR5xtK8fA/d16CLc8+HFRbgeWZuN04qOLAbTalicpkdqnNgjyf/IvbhxMUTrf316E0JL7/iWzrXMs9PKqVaeU3izM63jznNrJ1qWyXBL8lonzJg2yWrZTKtbk9OynXu3JaOVzwRtm7hWvrO4XaJaBUz12xPTKvD50D4RrUKeNHfEr1XoM6tDvFpxPP06xqcV13P0zni04nwidypcK+5ne+fCtBKghLTFuO8npC/Gff6ZsRj3+UrmYlx+m7UYl6fFFuPyjS6Lce+bXRfj3kvuWozj17sxbKL9iDpATvwwO0V1tvtf3U/PxvFY6Wwcj5XJxvFY2Wwcj5XLxvFY+Wwcj52RjeOxCtk4HjszG8djFbNxPHZWNo7HKmXjeKxyNo7HqmTjeOzsbByPVc3G8dg52TgeOzcbx2PnZeN4rFo2jseqZ+N4rEY2jsfOz8bxWM1sHI9dkI3jsQuzcTx2UTaOx2pl43isNo57xGSUllzRFCDbrQOyXQmpcaq8Ttb1isnr6Ekpx/0U0/9E1bXrWDyboj12YeAxxsBjFgOPmQw8ZjDwmM7AYxoDj50ZeOzEwOOdDDx2ZOCxAwOPdzDw2J6Bx9sZeGzHwGNbBh5vY+DxVgYe2zDweAsDj60ZeLyZgcdWDDy2ZODxJgYeb2Tg8QYGHq9n4LHWOPU9XsTA44UMPF7AwGNNBh7PZ+CxBgOP1Rl4rMbA43kMPJ7LwOM5DDxWZeDxbAYeqzDwWJmBx0oMPJ7FwGNFBh7PZOCxAgOPZzDwWJ6Bx3IMPJZl4LEMA4+lGXg8nYHHUgw8nsbA4y4GHr9l4PEbBh6/ZuBxJwOPOxh4/IqBxy8ZeNzOwOMXDDx+zsDjZww8bmPgcSsDj1sYePyUgcfNDDx+wsDjJgYeP2bgcSMDjxsYeFzPwONHDDyuY+DxQwYe1zLw+AEDj2sYeFzNwOP48ep7HMfA41gGHscw8Diagcc3GXh8g4HH1xl4HMXA42sMPL7KwONIBh5HMPD4CgOPwxl4fJmBx2EMPL7EwOOLDDwOZeBxCAOPLzDwOJiBx+cZeBzEwONzDDwOZOBxAAOP/Rl4fJaBx84T1PfYiYHHOxl47MjAYwcGHu9g4LE9A4+3M/DYjoHHtgw83sbA460MPLZh4PEWBh5bM/B4MwOPrRh4bMnA400MPN7IwOMNDDxez8BjCwYer2Pg8VoGHpsz8NiMgcdrGHhsysDj1Qw8VpuovsfzGHg8l4HHcxh4rMrA49kMPFZh4LEyA4+VGHg8i4HHigw8nsnAYwUGHs9g4LE8A4/lGHgsy8BjGQYeSzPweDoDj6UYeDyNgceSDDyeysDjKQw8nszAYwkGHk9i4LE4A4/FGHjczsDjFww8fs7A42cMPG5j4HErA49bGHj8lIHHzQw8fsLA4yYGHj9m4HEjA48bGHhcz8DjRww8rmPg8UMGHtcy8PgBA49rGHhczcDjKgYe32fgcSUDj+8x8LiCgcd3GXhczsDjMgYeR01S3+NrDDy+ysDjSAYeRzDw+AoDj8MZeHyZgcdhDDy+xMDjiww8DmXgcQgDjy8w8DiYgcfnGXgcxMDjcww8DmTgcQADj/0ZeHyWgcdnGHh8moHHpxh4fJKBx34MPPZl4LEPA49PMPDYbrL6Htsy8HgbA4+3MvDYhoHHWxh4bM3A480MPLZi4LElA483MfB4IwOPNzDweD0Djy0YeLyOgcdrGXhszsBjMwYer2HgsSkDj1cz8NiEgcerGHhszMBjIwYeGzLweCUDjw0YeLyCgcdKU9T3eBYDjxUZeDyTgccKDDyewcBjeQYeyzHwWJaBxzIMPJZm4PF0Bh5LMfB4GgOPJRl4PJWBx1MYeDyZgccSDDyexMBjcQYeizHwmMLA41EG79dHGHj8l4HHwww8/sPA4yEGHv9m4HEzg/n4CQOPmxh4/JiBx40MPG5g4HE9A48fMfC4joHHDxl4XMvA4wcMPK5h4HE1A4+rGHh8n4HHlQw8vsfA4woGHt9l4HE5A4/LGHhcysDjOww8vs3A4xIGHnMZeMxh4DGbgcfFDDwOm6q+x5cYeHyRgcehDDwOYeDxBQYeBzPw+DwDj4MYeHyOgceBDDwOYOCxPwOPzzLw+AwDj08z8PgUA49PMvDYj4HHvgw89mHg8QkGHh9n4PExBh57M/D4KAOPvRh47MnA4yMMPD7MwGOraep7bMnA400MPN7IwOMNDDxez8BjCwYer2Pg8VoGHpsz8NiMgcdrGHhsysDj1Qw8NmHg8SoGHhsz8NiIgceGDDxeycBjAwYer2Dg8XIGHqMMPEYYeAwz8Bhi4DHIwGOAgcdUBh7LTlffYxkGHksz8Hg6A4+lGHg8jYHHkgw8nsrA4ykMPJ7MwGMJBh5PYuCxOAOPxRh4TGHg8SgDfjzCwOO/DDweZuDxHwYeDzHw+DcDj38x8HiQgcc/GXj8g4HHAww8/s7A428MPP7KwOM6Bvz4IQOPaxl4/ICBxzUMPK5m4HEVA4/vM/C4koHH9xh4XMHA47sMPC5n4HEZA49LGXh8h4HHtxl4XMLAYy4DjzkMPGYz8LiYgcdFDDwuZOBxAQOP8xl4nMfA41sMPM5l4HEOA4+DZqjv8TkGHgcy8DiAgcf+DDw+y8DjMww8Ps3A41MMPD7JwGM/Bh77MvDYh4HHJxh4fJyBx8cYeOzNwOOjDDz2YuCxJwOPjzDw+DADjw8x8PggA48PMPB4PwOPPRh47M7AYzcGHu9j4PHamep7bM7AYzMGHq9h4LEpA49XM/DYhIHHqxh4bMzAYyMGHhsy8HglA48NGHi8goHHyxl4jDLwGGHgMczAY4iBxyADjwEGHlMZePQz8CgYePQx8Fifgcd6DDxexsBjXQYeL2Xg8ZRZ6ns8mYHHEgw8nsTAY3EGHosx8JjCwONRBvPxCAOP/zLweJiBx38YeDzEwOPfDDz+xcDjQQYe/2Tg8Q8GHg8w8Pg7A4+/MfD4KwOP+xl43MfA414GHn9h4HEPA48/M/D4EwOPPzLwuJLB+/V7DDyuYODxXQYelzPwuIyBx6UMPL7DwOPbDDwuYeAxl4HHHAYesxl4XMzA4yIGHhcy8LiAgcf5DDzOY+DxLQYe5zLwOIeBx9kMPM5i4HEmA48zGHiczsDjNAYepzLwOIWBx6dmq+/xSQYe+zHw2JeBxz4MPD7BwOPjDDw+xsBjbwYeH2XgsRcDjz0ZeHyEgceHGXh8iIHHBxl4fICBx/sZeOzBwGN3Bh67MfB4HwOP9zLweA8Dj3cz8HgXA49dGXjswsBjjIHHLAYeG89R32MjBh4bMvB4JQOPDRh4vIKBx8sZeIwy8Bhh4DHMwGOIgccgA48BBh5TGXj0M/AoGHj0MfBYn4HHegw8XsbAY10GHi9l4PESBh4vZuCxDgOPtRl4rMXA40UMPF7IwOMFDDweYeDxXwYeDzPw+A8Dj4cYePybgce/GHg8yMDjnww8/sHA4wEGHn9n4PE3Bh5/ZeBxPwOP+xh43MvA4y8MPO5h4PFnBh5/YuDxRwYef2DgcTcDj98z8PgdA4+7GHj8loHHbxh4/JqBx7fnqu9xCQOPuQw85jDwmM3A42IGHhcx8LiQgccFDDzOZ+BxHgOPbzHwOJeBxzkMPM5m4HEWA48zGXicwcDjdAYepzHwOJWBxykMPE5m4HESA48TGXicwMDjeAYexzHwOJaBxzEMPPZ+S32PjzLw2IuBx54MPD7CwOPDDDw+xMDjgww8PsDA4/0MPPZg4LE7A4/dGHi8j4HHexl4vIeBx7sZeLyLgceuDDx2YeAxxsBjFgOPmQw8ZjDwmM7AYxoDj50ZeOzEwOOdDDx2ZOAxMk99j2EGHkMMPAYZeAww8JjKwKOfgUfBwKOPgcf6DDzWY+DxMgYe6zLweCkDj5cw8HgxA491GHiszcBjLQYeL2Lg8UIGHi9g4LEmA4/nM/BYg4HH6gw8VmPg8TwGHs9l4PEcBh7/ZODxDwYeDzDw+DsDj78x8PgrA4/7GXjcx8DjXgYef2HgcQ8Djz8z8PgTA48/MvD4AwOPuxl4/J6Bx+8YeNzFwOO3DDx+w8Dj1ww87mTgcQcDj18x8PglA4/bGXj8goHHzxl4/IyBxwXz1fc4n4HHeQw8vsXA41wGHucw8DibgcdZDDzOZOBxBgOP0xl4nMbA41QGHqcw8DiZgcdJDDxOZOBxAgOP4xl4HMfA41gGHscw8Diagcc3GXh8g4HH1xl4HMXA42sMPL7KwONIBh4fWKC+x/sZeOzBwGN3Bh67MfB4HwOP9zLweA8Dj3cz8HgXA49dGXjswsBjjIHHLAYeMxl4zGDgMZ2BxzQGHjsz8NiJgcc7GXjsyMBjBwYe72DgsT0Dj7cz8NiOgce2DDzexsDjrQw8+haq77E+A4/1GHi8jIHHugw8XsrA4yUMPF7MwGMdBh5rM/BYi4HHixh4vJCBxwsYeKzJwOP5DDzWYOCxOgOP1Rh4PI+Bx3MZeDyHgceqDDyezcBjFQYeKzPwWImBx7MYeKzIwOOZDDzuZeDxFwYe9zDw+DMDjz8x8PgjA48/MPC4m4HH7xl4/I6Bx10MPH7LwOM3DDx+zcDjTgYedzDw+BUDj18y8LidgccvGHj8nIHHzxh43MbA41YGHrcw8PgpA4+bGXj8hIHHTQw8fszA48xF6nucwcDjdAYepzHwOJWBxykMPE5m4HESA48TGXicwMDjeAYexzHwOJaBxzEMPI5m4PFNBh7fYODxdQYeRzHw+BoDj68y8DiSgccRDDy+wsDjcAYeX2bgcRgDjy8x8PgiA49DGXi8e7H6Hu9i4LErA49dGHiMMfCYxcBjJgOPGQw8pjPwmMbAY2cGHjsx8HgnA48dGXjswMDjHQw8tmfg8XYGHtsx8NiWgcfbGHi8lYHHNgw83sLAY2sGHm9m4LEVA48tGXi8iYHHGxl4rJOtvsfaDDzWYuDxIgYeL2Tg8QIGHmsy8Hg+A481GHiszsBjNQYez2Pg8VwGHs9h4LEqA49nM/BYhYHHygw8VmLg8SwGHisy8HgmA48VGHg8g4HH8gw8lmPgsSwDj2UYeCzNwOPpDDxOYeBxMgOPkxh4nMjA4wQGHscz8DiOgcexDDyOYeBxNAOPbzLw+AYDj68z8DiKgcfXGHh8lYHHkQw8jiDwmIL16Ol6up6up/t/VhenLWLa86F6iv0P5n/D76fRDUVpdMOpvHSp6uudP0/X0/V0PV1P19P1dNXUhf/9m4T5BtBnsFgezY+y9UKcpP+p3ahh+R8uDi7UR3kKleoLBQJZYX+WSBVpPn80PRL0BYLpoYiIiGAkmOmPpKZmRQKRcDQ9GvZFRSA1S8SC0dSYLrY+G1sYow7r9TqUkFeZPDWgrMs0teoijP+Qgm9GUztvXTdk//fnRmtTbrRpyhJMip+kll/XEhuAvjYSNYV1kjr1uQF3qEVBBxj9BPiIxRNAxPLW4mP90G2yHjrtxskWA+iJtwnY3J8AmyZvHT6xqcNJhI2TbB2yYtpPlv9jYE03ARvaO4gn2DzuIG7WD+Kn1oOo/R/Otdz71IXD+SmwkbYQHc4tzA7nZmBNPyVqcmsfIX061dqajTt8eftoax7cL5liP6RSsH0VzKuJHoBbgb2R931xm3U4aTeK0SzCry1C0z8J3JBbYQc6FtoGbO7PiN5lP8vz+kTRaIrvUQZyjz4n2qPP48gb0K9ZwCERtLFLQklf6JS0Pc/cgRdmGxGtfGFDctvzEAya4LbphxNZl+3Aw64f0Biy3tuB6/2SqA++zLPn2IEs/lfLL7LxZ6J3qBiUNtG9vtXS6z5nP8Lo9ZPBdVTtwWa8mXwBPDfbgfsA7LugmxHEx4Aa/LfNmTEbuyQB/Ff6w3WHlfJ32ATw6NdsQG5lhuZfAZt5B9FGogf0V0RxwKkn7rPwOfiZBNybnZAB+D8p4Q8Wg2mlArUCQK0gUCsUxAGBNks+lNf5ut4sua+z5TVHXnPl9Za85slrvrwWyGuhvBbJa7G8suWVI69ceS2R19vyekdeS+W1TF7L5fWuvFbI6z15rZTX+/JaJa/V8lojrw/ktVZeH8prnbx26oOwuO7L+oNad0o+s8Dn7Afy8KH2+DXSo92THR1JfExAmMgPa77IJ4rxOfsRSI/I+n0BezBnufYVh2/0wfKtlbC+tSGsUzBGTEMcNtIp+X0DXOO3ebT8af5gpi89lCal0gMZ0XAsHEuPREPp/swMnz8tNT2cJgXS/KmRcCQ1kuGLBmOhYJovEEsL+qOBtBDiNcauWdEU+Q34yUERzWn9gv76z//hs2H62gX0xZWMdjEgo+/QZFQu5RgV5P1RGunImktQ5Cm69LFPS/P+dtz3si675fWDvH6U10/y+llee+T1i7z2ymufvPbL61d5/Sav3+V1QF5/yOtPeR2U11/y+lteh+T1j7wOy+tfeR2R11GNKHLk/668isvrJHmVyEk5njI0IyUt93bb3PvB5t6PNvd+srn3s829PTb3frG5t9fm3j6be/tt7v1qc+83m3u/29w7YHPvD5t7f9rcO2hz7y+be3/b3Dtkc+8fm3uHbe79a3PviM29ozb3tEax3itmc6+4zb2TbO6V0O/l/amh/9lY/9Pn7Oe44eL0Sfg9JDfSfnxiN0hLW+MPwDzrRyBV/+RUK2DWXvzsTMuXZx/FHida/uN6QvySvJbP0l9ib5JaodgJvSr2JacVsel7sT8ZrYjtGRK/Jq4Vzuc8it8S1Qrne7bF74lp+QuYE+JAIlrhAmeO+CN+rYxC5pf4M16tcKGzUByMT8sXx1wVf8Wj5YtrRou/C9cKxjnvxaHCtAJxPzvEPwVqBWIJPIfE4YK0wgk908S/+WtFEnw+iiP5aEVjCT9rxVF7LV8Sz22hccsJWr6kGEAUO1FLJMkTorhVKzNpNhEnHa+V6oBzRIkc3AuZmy+S0Ddgmx+MtvsvkifL/TxFXqdqvC2v0+RVSl6ny6u0vMrIq6y8ysmrvLzOkFcFeZ0pr4ryOkteleRVWV5V5HW2vKrK6xx5nSuv8+RVTV7V5VVDXufLq6a8LrC+SJ5s8xJwis29U23ulbS5d5rNvVI29063uVfa5l4Zm3tlbe6Vs7lX3ubeGTb3KtjcO9PmXkWbe2fZ3Ktkc6+yzb0qNvfOtrlX1ebeOTb3zrW5d57NvWo296rb3Kthc+98m3s1be5d4MKL5HfAF8mTc3AvkqeAtLQ1ngrR+q9eJZ1rmS+SpznVyvMiWcqZ1nEvkqc70bK8SJZOXuuEF8kySWrZvUiWTU7L9kWyXDJa+bxIlk9cK98XyTMS1SrgRbJCYloFvkiemYhWIS+SFePXKvRF8qx4teJ4kawUn1ZcL5KV49GK80WySuFacb9Inl2YVgIvklVzcC+S5+TgXiTPzcG9SJ6Xg3uRrJaDe5GsDnyRrAF8kTwf+CJZE/gieQH4RdKl37Ek/ft+kL9/WyyPzwutL1vajWI0i/Bri9D00V+WQ/7S74U5OK2LcrCbZuyRplsjxf7399CNp9VDq28xwj3zOfxJsflxqG37hbpaOf/9Wdt6aLT/w1dEG6DwoTHftGoBD03tHJrGKA6uH3LNdWzWnKxm3r6so/elNijK5unNvD/og10LvBbj5+IcQsOauLVBnJq/GNfI4hJgs1HV8JKc/IdfsvqXgIdBfnuc5I+ora8buc+X5AB96l/jRfbPpURUc2kBVGP8oB+uiIeNXmJhY5eEQurqg/AyK4VclnMsvzZ+0L+fURuYz9YFNuVlRBuJHpR1iegG7bMezOfx//4B2md9mM9wqnZW1qcc+wD09TEpKVod6uuX9v8+rZE7l/ZTXPdj/cGsl+4r5RQEj/boQ3p0MWQqcDj5nP2QhUzC+qQSxCGTUDRkyjIeMcAnnx+In3n3yO9iyCT0kAn9jo4MBkUOzSFOwdTSFhVTdVQMWA9gKnFgpRWrBJPNdIqxqcDDHCBqMvTBQq45SBR+BYsg/EolCr9COYSGQwThVwjYyGHFwy+thmGC8CusePgV0NeN3OcwQfiF7J8IUfgVKYLwC/GwcTv8iuqD8HIr0VzuQvgVAFJDFNiUlzMJv6LAw8M1HAnkqO/xCqbhyHH/wiiXcKSBdZI1IA5HGqgdjmQ0AE7GK3Gd7M+7R1e6GI40UDgcMf5S5QY5NIc4BVNLW5RoqKNEI+sBbEgcjjRQNByx20ynmNMQeJgbETUZ+mAh19yYKBxpXAThSEOicOSqHELDVxGEI1cBX5qbKB6OaDVsQhCONFE8HGmkrxu5z00IwhFk/1xNFI5cXQThCOJh43Y40lQfhNdYieYaF8KRRkBqaApsymuYhCNNvXBENMpR32MzpuFIal5NLuFIc+ska04cjjRXOxxJaw6cjNfiOvm4d4trXQxHmqsfjmQ1z6E5xCmYWtqixHU6SrSwHsDriMOR5mqHI1nNgZhzHfAwtyBqMvTBQq75eqJw5PoiCEeuIwpHbsghNHwDQThyA/Cl+UbFwxGthjcShCM3Kh6OtNDXjdznGwnCEWT/3EQUjtxUBOEI4mHjdjjSUh+EraxE08qFcKQFkBpaApuyFZNwpKUXjogWOep7vJlpOBLIq8klHGltnWSticOR1mqHI5HWwMl4C66TA3n36BYXw5HW6ocjma1zaA5xCqaWtijRRkeJW60HsA1xONJa7XAkszUQc9oAD/OtRE2GPljINd9GFI7cVgThSBuicKRtDqHhtgThSFvgS3M7xcMRrYbtCMKRdoqHI7fq60buczuCcATZP7cThSO3F0E4gnjYuB2OtNcH4R1WornDhXDkViA1tAc25R1MwpH2Xjgibs1R32MHpuFIMK8ml3Cko3WSdSQORzqqHY6EOgIn4524Tg7m3aM7XQxHOqofjmR0zKE5xCmYWtqiRCcdJTpbD2An4nCko9rhSEZHIOZ0Ah7mzkRNhj5YyDWnEYUjaUUQjnQiCkfScwgNpxOEI+nAl+YMxcMRrYYZBOFIhuLhSGd93ch9ziAIR5D9k0kUjmQWQTiCeNi4HY5k6YMwZiWamAvhSGcgNWQBmzLGJBzJ8sIR0TlHfY9dmIYjobyaXMKRrtZJ1pU4HOmqdjgS6AqcjHfhOjmUd4/ucjEc6ap+OJLeNYfmEKdgammLEnfrKHGP9QDeTRyOdFU7HEnvCsScu4GH+R6iJkMfLOSa7yUKR+4tgnDkbqJw5L4cQsP3EYQj9wFfmrspHo5oNexGEI50UzwcuUdfN3KfuxGEI8j+6U4UjnQvgnAE8bBxOxzpoQ/C+61Ec78L4cg9QGroAWzK+5mEIz28cETck6O+xweYhiPhvJpcwpEHrZPsQeJw5EG1wxH/g8DJ+BCuk8N59+ghF8ORB9UPR9IezKE5xCmYWtqixMM6SjxiPYAPE4cjD6odjqQ9CMSch4GH+RGiJkMfLOSaexKFIz2LIBx5mCgc6ZVDaLgXQTjSC/jS/Kji4YhWw0cJwpFHFQ9HHtHXjdznRwnCEWT/9CYKR3oXQTiCeNi4HY48pg/Cx61E87gL4cgjQGp4DNiUjzMJRx7zwhHxSI76Hp9gGo5E8mpyCUf6WCdZH+JwpI/a4YivD3Ay9sV1ciTvHvV1MRzpo344Eu2TQ3OIUzC1tEWJfjpKPGk9gP2Iw5E+aocj0T5AzOkHPMxPEjUZ+mAh1/wUUTjyVBGEI/2IwpGncwgNP00QjjwNfGl+RvFwRKvhMwThyDOKhyNP6utG7vMzBOEIsn+eJQpHni2CcATxsHE7HOmvD8IBVqIZ4EI48iSQGvoDm3IAk3CkvxeOiCdz1Pc4kGk4Es2rySUcec46yZ4jDkeeUzocycp6DjgZB+E6OZp3jwa5GI48p344Enkuh+YQp2BqaYsSz+soMdh6AJ8nDkeeUzsciTwHxJzngYd5MFGToQ8Wcs0vEIUjLxRBOPI8UTgyJIfQ8BCCcGQI8KV5qOLhiFbDoQThyFDFw5HB+rqR+zyUIBxB9s+LROHIi0UQjiAeNm6HIy/pg3CYlWiGuRCODAZSw0vAphzGJBx5yQtHxOAc9T2+zDQcScurySUcGW6dZMOJw5HhaocjGcOBk/EVXCen5d2jV1wMR4arH46Eh+fQHOIUTC1tUWKEjhIjrQdwBHE4MlztcCQ8HIg5I4CHeSRRk6EPFnLNrxKFI68WQTgygigceS2H0PBrBOHIa8CX5lGKhyNaDUcRhCOjFA9HRurrRu7zKIJwBNk/rxOFI68XQTiCeNi4HY68oQ/CN61E86YL4chIIDW8AWzKN5mEI2944YgYmaO+x9FMw5H0vJpcwpEx1kk2hjgcGaN2OJI2BjgZx+I6OT3vHo11MRwZo344EhqTQ3OIUzC1tEWJcTpKjLcewHHE4cgYtcOR0Bgg5owDHubxRE2GPljINU8gCkcmFEE4Mo4oHJmYQ2h4IkE4MhH40jxJ8XBEq+EkgnBkkuLhyHh93ch9nkQQjiD7ZzJRODK5CMIRxMPG7XBkij4Ip1qJZqoL4ch4IDVMATblVCbhyBQvHBHjc9T3OI1pOJKRV5NLODLdOsmmE4cj09UORyLTgZNxBq6TM/Lu0QwXw5Hp6ocjwek5NIc4BVNLW5SYqaPELOsBnEkcjkxXOxwJTgdizkzgYZ5F1GTog4Vc82yicGR2EYQjM4nCkTk5hIbnEIQjc4AvzXMVD0e0Gs4lCEfmKh6OzNLXjdznuQThCLJ/3iIKR94qgnAE8bBxOxyZpw/C+Vaime9CODILSA3zgE05n0k4Ms8LR8SsHPU9LmAajmTm1eQSjiy0TrKFxOHIQrXDkdBC4GRchOvkzLx7tMjFcGSh+uFIYGEOzSFOwdTSFiUW6yiRbT2Ai4nDkYVqhyOBhUDMWQw8zNlETYY+WMg15xCFIzlFEI4sJgpHcnMIDecShCO5wJfmJYqHI1oNlxCEI0sUD0ey9XUj93kJQTiC7J+3icKRt4sgHEE8bNwOR97RB+FSK9EsdSEcyQZSwzvAplzKJBx5xwtHRHaO+h6XMQ1HsvJqcglHllsn2XLicGS52uFIYDlwMr6L6+SsvHv0rovhyHL1w5HU5Tk0hzgFU0tblFiho8R71gO4gjgcWa52OJK6HIg5K4CH+T2iJkMfLOSaVxKFIyuLIBxZQRSOvJ9DaPh9gnDkfeBL8yrFwxGthqsIwpFViocj7+nrRu7zKoJwBNk/q4nCkdVFEI4gHjZuhyNr9EH4gZVoPnAhHHkPSA1rgE35AZNwZI0Xjoj3ctT3uJZpOBLLq8klHPnQOsk+JA5HPlQ7HPF/CJyM63CdHMu7R+tcDEc+VD8cOW7PfM5+jjvEKZha2qLERzpKrLcewI+Iw5EP1Q5HEAfQxJyPgId5PVGToQ8Wcs0biMKRDUUQjnxEFI5szCE0vJEgHNkIfGn+WPFwRKvhxwThyMeKhyPr9XUj9/ljgnAE2T+biMKRTUUQjiAeNm6HI5/og3CzlWg2uxCOrAdSwyfAptzMJBz5xAtHxPoc9T1+yjMcEb68mlzCkS3WSbaFOBzZonY44tsCnIxbc3DNlXePtroYjmxRPxwRW3JoDnEKppa2KLFNR4nPrAdwG3E4skXtcERsAWLONuBh/oyoydAHC7nmz4nCkc+LIBzZRhSOfJFDaPgLgnDkC+BL83bFwxGthtsJwpHtiocjn+nrRu7zdoJwBNk/XxKFI18WQTiCeNi4HY58pQ/CHVai2eFCOPIZkBq+AjblDibhyFdeOCI+y1Hf406m4UiBzetz9kMWjnxtnWRfE4cjXysdjmRmfQ2cjN/g3qdE3j36xsVw5Gv1wxHf1zk0hzgFU0tblPhWR4ld1gP4LXE48rXa4YjvayDmfAs8zLuImgx9sJBr/o4oHPmuCMKRb4nCke9zCA1/TxCOfA98ad6teDii1XA3QTiyW/FwZJe+buQ+7yYIR5D98wNROPJDEYQjiIeN2+HIj/og/MlKND+5EI7sAlLDj8Cm/IlJOPKjF46IXTnqe/yZaTjiz6vJJRzZY51ke4jDkT1qhyMZe4CT8Rfc+5Q/7x794mI4skf5cCQrtieH5hCnYGppixJ7dZTYZz2Ae4nDkT1KhyPHb6ZTzNkLPMz7iJoMfbCQa95PFI7sL4JwZC9ROPJrDqHhXwnCkV+BL82/KR6OaDX8jSAc+U3xcGSfvm7kPv9GEI4g++d3onDk9yIIRxAPG7fDkQP6IPzDSjR/uBCO7ANSwwFgU/7BJBw54IUjYl+O+h7/ZBqOpObV5BKOHLROsoPE4chBtcORtIPAyfgX7n3quHeLv1wMRw6qH45kHcyhOcQpmFraosTfOkocsh7Av4nDkYNqhyNZB4GY8zfwMB8iajL0wUKu+R+icOSfIghH/iYKRw7nEBo+TBCOHAa+NP+reDii1fBfgnDkX8XDkUP6upH7/C9BOILsnyNE4ciRIghHEA8bt8ORo8YgzE05nmi0GzUsBtDhyCEgNRxFDrVcHuHIUS8cEYdy1PdYLBfo0cVwJJBXk0s4Utw6ybQblOGIpq9wOBIpnovzdVIurrny7tFJue6FI1o9FA9HMovn0hziFEwtbVGiRO5/f55sPYDa/4EyHNGKpXA4kgk4gCbmlAAe5pOJmgx9sJBrPiWXJhw5Jdf9cKQEeC3Gz6m5hIY1cXQ4ciqOr0RJYLNR1bBkLj4cKYlk1BR8OHKyvm7kPpfMxYcjyP45DbgneYfVabnuhyOIh43b4UgpfRCebiWa010IR04GUkMpYFOeziQcKQU8PFzDkZNz1fdYmmk4EsyrySUcKWOdZGWIw5EyaocjoTLAyVgW9z4VzLtHZV0MR8qoH45klMmlOcQpmFraokQ5HSXKWw9gOeJwpIza4UhGGSDmlAMe5vJETYY+WMg1n0EUjpxRBOFIOaJwpEIuoeEKBOFIBeBL85mKhyNaDc8kCEfOVDwcKa+vG7nPZxKEI8j+qUgUjlQsgnAE8bBxOxw5Sx+ElaxEU8mFcKQ8kBrOAjZlJSbhyFleOCLK56rvsTLTcCSUV5NLOFLFOsmqEIcjVdQORwJVgJPxbNz7VCjvHp3tYjhSRf1wJL1KLs0hTsHU0hYlquoocY71AFYlDkeqqB2OpFcBYk5V4GE+h6jJ0AcLueZzicKRc4sgHKlKFI6cl0to+DyCcOQ84EtzNcXDEa2G1QjCkWqKhyPn6OtG7nM1gnAE2T/VicKR6kUQjiAeNm6HIzX0QXi+lWjOdyEcOQdIDTWATXk+k3CkhheOiHNy1fdYk2k4Es6rySUcucA6yS4gDkcuUDsc8V8AnIwX4t6nwnn36EIXw5EL1A9H0i7IpTnEKZha2qLERTpK1LIewIuIw5EL1A5H0i4AYs5FwMNci6jJ0AcLuebaROFI7SIIRy4iCkfq5BIarkMQjtQBvjRfrHg4otXwYoJw5GLFw5Fa+rqR+3wxQTiC7J9LiMKRS4ogHEE8bNwORy7VB2FdK9HUdSEcqQWkhkuBTVmXSThyqReOiFq56nu8jGk4EsmrySUcqWedZPWIw5F6aocjvnrAyVgf9z4VybtH9V0MR+qpH45E6+XSHOIUTC1tUcKno4SwHkAfcThST+1wJFoPiDk+4GEWRE2GPljINfuJwhF/EYQjPqJwJDWX0HAqQTiSCnxpDigejmg1DBCEIwHFwxGhrxu5zwGCcATZP0GicCRYBOEI4mHjdjgS0gdh2Eo0YRfCEQGkhhCwKcNMwpGQF44Ikau+xwjTcCSaV5NLOBK1TrIocTgSVTocyciKAifj5bj3qWjePbrcxXAkqn44Eonm0hziFEwtbVHiCh0lGlgP4BXE4UhU7XAkEgVizhXAw9yAqMnQBwu55iuJwpEriyAcuYIoHGmYS2i4IUE40hD40txI8XBEq2EjgnCkkeLhSAN93ch9bkQQjiD7pzFRONK4CMIRxMPG7XDkKn0QNrESTRMXwpEGQGq4CtiUTZiEI1d54YhokKu+x6uZhiNpeTW5hCNNrZOsKXE40lTtcCSjKXAyXoN7n0rLu0fXuBiONFU/HAk3zaU5xCmYWtqiRDMdJZpbD2Az4nCkqdrhSLgpEHOaAQ9zc6ImQx8s5JqvJQpHri2CcKQZUThyXS6h4esIwpHrgC/NLRQPR7QatiAIR1ooHo4019eN3OcWBOEIsn+uJwpHri+CcATxsHE7HLlBH4Q3WonmRhfCkeZAargB2JQ3MglHbvDCEdE8V32PNzENR9LzanIJR1paJ1lL4nCkpdrhSFpL4GRshXufSs+7R61cDEdaqh+OhFrm0hziFEwtbVHiZh0lWlsP4M3E4UhLtcORUEsg5twMPMytiZoMfbCQa76FKBy5pQjCkZuJwpE2uYSG2xCEI22AL823Kh6OaDW8lSAcuVXxcKS1vm7kPt9KEI4g++c2onDktiIIRxAPG7fDkbb6IGxnJZp2LoQjrYHU0BbYlO2YhCNtvXBEtM5V3+PtTMORjLyaXMKR9tZJ1p44HGmvdjgSaQ+cjHfg3qcy8u7RHS6GI+3VD0eC7XNpDnEKppa2KNFBR4mO1gPYgTgcaa92OBJsD8ScDsDD3JGoydAHC7nmO4nCkTuLIBzpQBSOdMolNNyJIBzpBHxp7qx4OKLVsDNBONJZ8XCko75u5D53JghHkP2TRhSOpBVBOIJ42LgdjqTrgzDDSjQZLoQjHYHUkA5sygwm4Ui6F46Ijrnqe8xkGo5k5tXkEo5kWSdZFnE4kqV2OBLKAk7GGO59KjPvHsVcDEey1A9HAlm5NIc4BVNLW5TooqNEV+sB7EIcjmSpHY4EsoCY0wV4mLsSNRn6YCHXfBdROHJXEYQjXYjCkbtzCQ3fTRCO3A18ab5H8XBEq+E9BOHIPYqHI131dSP3+R6CcATZP/cShSP3FkE4gnjYuB2O3KcPwm5WounmQjjSFUgN9wGbshuTcOQ+LxwRXXPV99idaTiSlVeTSzjSwzrJehCHIz3UDkcCPYCT8X7c+1RW3j2638VwpIf64Uhqj1yaQ5yCqaUtSjygo8SD1gP4AHE40kPtcCS1BxBzHgAe5geJmgx9sJBrfogoHHmoCMKRB4jCkYdzCQ0/TBCOPAx8aX5E8XBEq+EjBOHII4qHIw/q60bu8yME4Qiyf3oShSM9iyAcQTxs3A5HeumD8FEr0TzqQjjyIJAaegGb8lEm4UgvLxwRD+aq77E3dTiCxtGt8tVgG+71wP+Frod+Ym6FBSwi9kU2vpEIDlIwL8Y+Zp3aj+WeyOXgovsfA07ax8GnF31yjYOADr+2gg8XyteSUDGSQ4Cu3xNATO6NW7MA1i9I0c/aeXuCIMxFzoQngFp9iF4v+sRBx0699wXWIW+PqzQj3AjDtd7sm3tMH+U9xebHobbtK1o/3fuT1od9P8LQ2SgaiCzN17R+wKZ+MpdmM9E0jVzzU0Th7lNFEO72Iwp3n84lNPw0Qbj7NJBmnlE83NVq+AxBuPuM4uHuk/q6kfv8DEG4i+yfZ4no69kiCHcRDxu3w93++iAcYCWHAS6Eu08Cw93+wKYcwCTc7e+Fu4KC8NAeB6I9op88JXJSUi7MwTWmpuXLwfv0AT0+R/RqgH7HBzaPeA44JAcpnstqmewgghzrghyaweDU1/PA/Sjo27XofeoL7G8buyQfqgy20tLgAr5d6yy8j8W0Ag3OxdMXsPDhwcBGfiEXVrvjfvX4BRe/XWvsGVp3MNFDC3RYbF8xhuivGEOth2YIYThJdWgGA19ZhgAPzVAmQSdyzS8SBZ0vFkHQOYQo6Hwpl9DwSwRB50tAHBimeNCp1XAYQdA5TPGgc6i+buQ+DyMIOpH98zJR0PlyEQSdiIeN20HncH0QvmKlkFdy6YPOoUBqGA5syleYBJ3DvaBTUBAe2uMI1YPOk2R4I4AhoqZ1BUHQeQXQ40gmQSewecRI4JB8lUHQ+SpB0Fkzh2YwOPX1mhd0+m3skgSdo6y0NIo46ByldtAZHAVs5NdxQedxf43A6y4HnaPwQad/FMOg8w39FeNN66F5gzjoJDg0/lHAV5Y3gIfmTSZBJ3LNo4mCztFFEHS+QRR0jsklNDyGIOgcA8TdsYoHnVoNxxIEnWMVDzrf1NeN3OexBEEnsn/GEQWd44og6EQ8bNwOOsfrg3CClUIm5NIHnW8CqWE8sCknMAk6x3tBp6AgPLTHiaoHncVleNMAGCJqWs0Igs5mQI+TmASdwOYRk4BDcjKDoHMyQdB5fg7NYHDqa4oXdKba2CUJOqdaaWkqcdA5Ve2gM3UqsJGn4YLOWN49muZy0DkVH3QeV2efw5+UFPhhsX3FmK6/YsywHprpxEEnwaFBNLr5yjIdeGhmMAk6kWueSRR0ziyCoHM6UdA5K5fQ8CyCoHMWEHdnKx50ajWcTRB0zlY86Jyhrxu5z7MJgk5k/8whCjrnFEHQiXjYuB10ztUH4VtWCnkrlz7onAGkhrnApnyLSdA51ws6BQXhoT3OUz3oLCbDm+bAEFHTupkg6LwZ6HE+k6AT2DxiPnBILmAQdC4gCDpr5NAMBqe+FnpBZ8DGLknQuchKS4uIg85FagedYhGwkRcDtfLu0WKXg85F+KAzsIhh0Jmtv2LkWA9NNnHQSXBoAouAryzZwEbPYRJ0ItecSxR05hZB0JlNFHQuySU0vIQg6FwCfCq9rXjQqdXwbYKg823Fg84cfd3IfX6bIOhE9s87REHnO0UQdCIeNm4HnUv1QbjMSiHLcumDzhwgNSwFNuUyJkHnUi/oFBSEh/a4XPWgM0WGN62BIaKm1YEg6OwA9Pguk6AT2DziXeCQXMEg6FxBEHRWz6EZDE59vecFnUEbuyRB50orLa0kDjpXEgedTptvJVDrfaJXgvddDjpX4oPO4EqGQecq/RVjtfXQrCIOOgkOTXAl8JVlFfDQrGYSdCLXvIYo6FxTBEHnKqKg84NcQsMfEASdHwBxd63iQadWw7UEQedaxYPO1fq6kfu8liDoRPbPh0RU82ERBJ2Ih43bQec6fRB+ZKWQj3Lpg87VQGpYB2zKj5gEneu8oFNQEB7a43rVg86jMhTqCAwRNa0uBEFnF6DHDUyCTmDziA3AIbmRQdC5kSDorJZDMxic+vrYCzpDNnZJgs5NVlraRBx0blI06DT+LsxNwEb+BDjw8u7RJy4HnZvwQWdoE8Ogc7P+ivGp9dBsJg46CQ5NaBPwlWUz8NB8yiToRK55C1HQuaUIgs7NREHn1lxCw1sJgs6twOm/TfGgU6vhNoKgc5viQeen+rqR+7yNIOhE9s9nREHnZ0UQdCIeNm4HnZ/rg/ALK4V8kUsfdH4KpIbPgU35BZOg83Mv6BQUhIf2uF31oPOIDIW6AkNETesBgqDzAaDHL5kEncDmEV8Ch+RXDILOrwiCzvNyaAaDU187vKAzbGOXJOjcaaWlncRB5061g86MncBG/hrXEP68e/S1y0HnTnzQGd7JMOj8Rn/F+NZ6aL4hDjoJDk14J/CV5RvgofmWSdCJXPMuoqBzVxEEnd8QBZ3f5RIa/o4g6PwOiLvfKx50ajX8niDo/F7xoPNbfd3Iff6eIOhE9s9uoqBzdxEEnYiHjdtB5w/6IPzRSiE/5tIHnd8CqeEHYFP+yCTo/MELOgUF4aE9/qR60PmvDIUeBIaImtYTBEHnE0CPPzMJOoHNI34GDsk9DILOPQRB57k5NIPBqa9fvKAzYmOXJOjca6WlvcRB5161g860vcBG3odriOPyi30uB5178UFnZC/DoHO//orxq/XQ7CcOOgkOTWQv8JVlP/DQ/Mok6ESu+TeioPO3Igg69xMFnb/nEhr+nSDo/B2IuwcUDzq1Gh4gCDoPKB50/qqvG7nPBwiCTmT//EEUdP5RBEEn4mHjdtD5pz4ID1op5GAufdD5K5Aa/gQ25UEmQeefXtApKAgP7fEv1YPOwzIU6gMMETWtgQRB50Cgx7+ZBJ3A5hF/A4fkIQZB5yGCoPOcHJrB4NTXP17QGbWxSxJ0HrbS0mHioPOw2kFn5DCwkf/FNUQg7x7963LQeRgfdEYPMww6j+ivGEeth+YIcdBJcGiih4GvLEeAh+Yok6ATueaUJTRBp6brdtB5hCjoLLaE0LAmjg46iy3BDYHiS9QOOrUaah7RQWfxJdhhgH6NO6qvG7nPxZfgg05k/5wE3JO8w0rTrZHibtCJeNi4HXSW0AfhyUtSjqeQk5fQB51HgdRQAtiUJy+h2Uj0oCwBPDxcg04KwkN7PAX84IE/ef6RodBzwBBR03qZIOh8Gejx1CX4xtF+0MEasHnEqcAhWRJcP4qgU/OI3o+qOTSDwamv04D7wTToTLOxSxJ0lrLSUqkltEFnqSVKB52hUsBGPn0JdtOMPTp9ibtBZ6klcN20UkQPLdBhsX3FKK2/YpSxHprSS2iDToJDkwZodPOVpTTw0JQhagx00Ilcc1mioLNsEQSdpcFrMX7KLSE0XI4g6CwHxN3yigedWg3LEwSd5RUPOsvo60buc3mCoBPZP2cQBZ1nFEHQiXjYuB10VtAH4ZlWCjnThaCzDJAaKgCb8kwmQWcFL+gUFISH9lhR9aDzkAyFhgNDRE1rNEHQORro8SwmQSewecRZwCFZiUHQWYkg6Dw7h2YwOPVV2Qs6023skgSdVay0VIU46KyidtAZqAJs5LNxjRzKu0dnuxx0VsEHnelVGAadVfVXjHOsh6YqcdBJcGjSqwBfWaoCD805TIJO5JrPJQo6zy2CoLMqUdB53hJCw+cRBJ3nAXG3muJBp1bDagRBZzXFg85z9HUj97kaQdCJ7J/qREFn9SIIOhEPG7eDzhr6IDzfSiHnuxB0ngOkhhrApjyfSdBZwws6BQXhoT3WVD3o/FuGQmOAIaKmNY0g6JwG9HgBk6AT2DziAuCQvJBB0HkhQdBZJYdmMDj1dZEXdGbY2CUJOmtZaakWcdBZS+2g018L2Mi1cY0czrtHtV0OOmvhg86MWgyDzjr6K8bF1kNThzjoJDg0GbWAryx1gIfmYiZBJ3LNlxAFnZcUQdBZhyjovHQJoeFLCYLOS4G4W1fxoFOrYV2CoLOu4kHnxfq6kftclyDoRPbPZURB52VFEHQiHjZuB5319EFY30oh9V0IOi8GUkM9YFPWZxJ01vOCTkFBeGiPPtWDzr9kKDQdGCJqWgsIgs4FQI+CSdAJbB4hgEPSzyDo9BMEnZVzaAaDU1+pXtCZaWOXJOgMWGkpQBx0BtQOOn0BYCMHcY0cybtHQZeDzgA+6MwMMAw6Q/orRth6aELEQSfBockMAF9ZQsBDE2YSdCLXHCEKOiNFEHSGiILO6BJCw1GCoDMKxN3LFQ86tRpeThB0Xq540BnW143c58sJgk5k/1xBFHReUQRBJ+Jh43bQ2UAfhFdaKeRKF4LOMJAaGgCb8komQWcDL+gUFISH9thQ9aDzoAyFFgJDRE1rGUHQuQzosRGToBPYPKIRcEg2ZhB0NiYIOivl0AwGp76u8oLOLBu7JEFnEystNSEOOpsoHXRmZTUBNvLVuEaO5t2jq10OOpvgg87j6uxz+JOSAj8stq8YTfVXjGush6YpcdBJcGgQjW6+sjQFHpprmASdyDU3Iwo6mxVB0NmUKOhsvoTQcHOCoLM5EHevVTzo1Gp4LUHQea3iQec1+rqR+3wtQdCJ7J/riILO64og6EQ8bNwOOlvog/B6K4Vc70LQeQ2QGloAm/J6JkFnCy/oFBSEh/Z4g+pB558yFFoODBE1rbUEQedaoMcbmQSdwOYRNwKH5E0Mgs6bCILOs3JoBoNTXy29oDNmY5ck6GxlpaVWxEFnK7WDzoxWwEa+GdfIaXn36GaXg85W+KAz1oph0Nlaf8W4xXpoWhMHnQSHJtYK+MrSGnhobmESdCLX3IYo6GxTBEFna6Kg89YlhIZvJQg6bwXi7m2KB51aDW8jCDpvUzzovEVfN3KfbyMIOpH905Yo6GxbBEEn4mHjdtDZTh+Et1sp5HYXgs5bgNTQDtiUtzMJOtt5QaegIDy0x/aqB51/yFDoQ2CIqGl9ShB0fgr0eAeToBPYPOIO4JDswCDo7EAQdFbMoRkMTn11/P8+6BQU2Y3xc1zQeaeVlu4kDjrvVDvoTLsT2MidcI2cnnePOrkcdN4JDzqF706GQWdn/RUjzXpoOhMHnfhDc/wGOH1l6Qw8NGlMgk7kmtOJgs70Igg6OxMFnRlLCA1nEASdGUDczVQ86NRqmEkQdGYqHnSm6etG7nMmQdCJ7J8soqAzqwiCTsTDxu2gM6YPwi5WCuniQtCZBqSGGLApuzAJOmNe0CkoCA/tsavqQecBGQptAYaImtZOgqBzJ9DjXUyCTmDziLuAQ/JuBkHn3QRB55k5NIPBqa97vKCTgpqMn+OCznuttHQvcdB5r9pBZ+ReYCPfh2vkjLx7dJ/LQee9+KBT3Msw6Oymv2J0tx6absRBJ/7QHL8BTl9ZugEPTXcmQSdyzT2Igs4eRRB0diMKOu9fQmj4foKg834g7j6geNCp1fABgqDzAcWDzu76upH7/ABB0InsnweJgs4HiyDoRDxs3A46H9IH4cNWCnnYhaCzO5AaHgI25cNMgs6HvKBTUBAe2uMjqgedv8tQ6GtgiKhp/UwQdP4M9NiTSdAJbB7REzgkezEIOnsRBJ0VcmgGg1Nfj3pBp9/GLknQ2dtKS72Jg87eagedod7ARn4M18iZeffoMZeDzt74oNPfm2HQ+bj+ivGE9dA8Thx04g/N8Rvg9JXlceCheYJJ0Ilccx+ioLNPEQSdjxMFnX2XEBruSxB09gXibj/Fg06thv0Igs5+igedT+jrRu5zP4KgE9k/TxIFnU8WQdCJeNi4HXQ+pQ/Cp60U8rQLQecTQGp4CtiUTzMJOp/ygk5BQXhoj8+oHnT+JkOhPcAQUdP6kyDo/BPo8VkmQSewecSzwCHZn0HQ2Z8g6Dwjh2YwOPU1wAs6U23skgSdA620NJA46ByodtAZGAhs5OdwjZyVd4+ecznoHIgPOlMHMgw6B+mvGM9bD80g4qATf2iO3wCnryyDgIfmeSZBJ3LNg4mCzsFFEHQOIgo6X1hCaPgFgqDzBSDuDlE86NRqOIQg6ByieND5vL5u5D4PIQg6kf0zlCjoHFoEQSfiYeN20PmiPghfslLISy4Enc8DqeFFYFO+xCTofNELOgUF4aE9DlM96PxVhkIHgSGiplUsF++zWC7O48tMgk5g84iXgUNyOIOgczhB0Fk+h2YwOPX1ihd0BmzskgSdI6y0NII46ByhdtDpHwFs5JG4Ro7l3aORLgedI/BBZ2AEw6DzVf0V4zXroXmVOOjEH5rjN8DpK8urwEPzGpOgE7nmUURB56giCDpfJQo6X19CaPh1gqDzdSDuvqF40KnV8A2CoPMNxYPO1/R1I/f5DYKgE9k/bxIFnW8WQdCJeNi4HXSO1gfhGCuFjHEh6HwNSA2jgU05hknQOdoLOgUF4aE9jlU96NwvQ6HiwBBR0ypNEHSWBnocxyToBDaPGAcckuMZBJ3jCYLOcjk0g8Gprwle0Bm0sUsSdE600tJE4qBzotpBp28isJEnwRpZHPdKMMnloHMiPugMTmQYdE7WXzGmWA/NZOKgE39ojt8Ap68sk4GHZgqToBO55qlEQefUIgg6JxMFndOWEBqeRhB0TgPi7nTFg06thtMJgs7pigedU/R1I/d5OkHQieyfGURB54wiCDoRDxu3g86Z+iCcZaWQWS4EnVOA1DAT2JSzmASdM72gU1AQHtrjbNWDzn0yFCoDDBE1rcoEQWdloMc5TIJOYPOIOcAhOZdB0DmXIOgsm0MzGJz6essLOkM2dkmCznlWWppHHHTOUzrozMyaB2zk+bigU+Tdo/kuB53z8EFnaB7DoHOB/oqx0HpoFhAHnfhDc/wGOH1lWQA8NAuZBJ3INS8iCjoXFUHQuYAo6Fy8hNDwYoKgczEQd7MVDzq1GmYTBJ3ZigedC/V1I/c5myDoRPZPDlHQmVMEQSfiYeN20JmrD8IlVgpZ4kLQuRBIDbnAplzCJOjM9YJOQUF4aI9vqx507pWhUBVgiKhp1SQIOmsCPb7DJOgENo94BzgklzIIOpcSBJ1lcmgGg1Nfy7ygM2xjlyToXG6lpeXEQedytYPOjOXARn4XF3T68+7Ruy4HncvxQWd4OcOgc4X+ivGe9dCsIA468Yfm+A1w+sqyAnho3mMSdCLXvJIo6FxZBEHnCqKg8/0lhIbfJwg63wfi7irFg06thqsIgs5Viged7+nrRu7zKoKgE9k/q4mCztVFEHQiHjZuB51r9EH4gZVCPnAh6HwPSA1rgE35AZOgc40XdAoKwkN7XKt60PmLDIUuAIaImtZlBEHnZUCPHzIJOoHNIz4EDsl1DILOdQRBZ+kcmsHg1NdHXtAZsbFLEnSut9LSeuKgc73aQWfaemAjb8AFncflFxtcDjrX44POyHqGQedG/RXjY+uh2UgcdOIPzfEb4PSVZSPw0HzMJOhErnkTUdC5qQiCzo1EQecnSwgNf0IQdH4CxN3NigedWg03EwSdmxUPOj/W143c580EQSeyfz4lCjo/LYKgE/GwcTvo3KIPwq1WCtnqQtD5MZAatgCbciuToHOLF3QKCsKDZy6qB517ZChUDxgialoRgqAzAvT4GZOgE9g84jPgkPycQdD5OUHQeXoOzWBw6usLL+iM2tglCTq3W2lpO3HQuV3toDOy/f+x9y7gNpVt2/9MEWVXhGyXbURZc+2XUimiKCIqpdaeUpRSqbQvlfZbSlFEFEWErLXmWJuUNkppo0SEIqKoRPS/72cOvrHGe/c8ss5ruM//NI/jOtb7Te93v78xrs19nScBLORvcUZnkjdH3wZsdC7HG53pywmNzhWuxFjpb5oVwkYnvmnKJqC8kmUFsGlWkhidyGf+Tsjo/O4AGJ0rhIzOVQsEgVcJGJ2rgOvuasuNTv0OVwsYnastNzpXus+NzPNqAaMTWT/fCxmd3x8AoxNx2QRtdK5xB+Fa/xayNgCjcyVwa1gDLMq1JEbnmoNGZ1hiw0MzrrPd6PxJmULpQBNRn3WGgNF5BpDxBxKjE1g84R+AQ/JHAqPzRwGj84j5MoOhvFzrDxqdmQZcEaNzg39b2iBsdG6w2+hM2QAs5J9wRmeyN0c/BWx0bsAbnZkbCI3Oja7E2ORvmo3CRie+acomoLySZSOwaTaRGJ3IZ/5ZyOj8+QAYnRuFjM7NCwSBNwsYnZuB6+4Wy41O/Q63CBidWyw3Oje5z43M8xYBoxNZP78IGZ2/HACjE3HZBG10/uoOwq3+LWRrAEbnJuDW8CuwKLeSGJ2/HjQ6wxIbHppxm+1G5wZlCnUGmoj6rHMFjM5zgYy/kRidwOIJ/wYckr8TGJ2/CxidVebLDIbycv1x0OjMMuCKGJ3b/dvSdmGjc7vdRmfSdmAh/4kzOlO8OfozYKNzO97ozNpOaHTucCXGTn/T7BA2OvFNUzYB5ZUsO4BNs5PE6EQ+819CRudfB8Do3CFkdO5aIAi8S8Do3AVcd3dbbnTqd7hbwOjcbbnRudN9bmSedwsYncj6+VvI6Pz7ABidiMsmaKMzlO++i/xQ2S1EfxHnA0Cv2juBW4N+kHKetbcoD8nnMDpD+bjmYTU6JTY8NGOFfDAj+uZZr0yhnkATUZ91kYDReRGQ8dB8fOHoD9pYAxZP+FDgkDwM/P4kjE7NiM5H5fkyg6G8XBWB+SA1OrMNuCJGZyX/tqS/kDQ6K+VbbXQmVAIW8uGwQg6nenN0eH6wRqe3JkDPk11J6NICNYtRYlR2JUYVf9PoX5A0OvFNUzYB5ZUslYFNU0WoMNBGJ/KZj8iXMTqPyA/e6KwMfpY9nyPzBYH14Wij80jgulsVWGxS77BqPt7orAoeBmgZV8V9bmSeq+bjjU5k/VQD5sQ7rKrlB290Ii6boI3O6u4grOHfQmoEYHRWAW4N1YFFWYPE6Kx+0OgMS2x4aMaathudPypTqD/QRNRn5QgYnTlAxqNIjE5g8YSPAg7JowmMzqMFjM7D58sMhvJy1TpodOYYcEWMztr+bam2sNFZ226jM742sJCPwRmdad4cHROw0Vkbb3Tm1CY0Ouu4EqOuv2nqCBud+KYpm4DySpY6wKapS2J0Ip+5npDRWe8AGJ11hIzOY/MFgY8VMDqPBa679S03OvU7rC9gdNa33Ois6z43Ms/1BYxOZP00EDI6GxwAoxNx2QRtdDZ0B2Ej/xbSKACjsy5wa2gILMpGJEZnw4NGZ1hiw0MzNrbd6PxBmUK5QBNRnzVUwOgcCmRsQmJ0Aosn3AQ4JOMIjM44AaOz0nyZwVBerqYHjc5cA66I0dnMvy01EzY6m1ltdGbnNgMWcnOc0ZnuzVHzgI3OZnijs8x7ji/nJxSCN4tRYrRwJUZLf9O0EDY68U0TRhT6XsnSAtg0LUmMTuQztxIyOlsdAKOzhZDReVy+IPBxAkbnccB1t7XlRqd+h60FjM7WlhudLd3nRua5tYDRiayfNkJGZ5sDYHQiLpugjc7j3UHY1r+FtA3A6GwJ3BqOBxZlWxKj8/iDRmdYYsNDM7az3ehcp0yhq4Emoj7rJgGj8yYg4wkkRieweMInAIfkiQRG54kCRmfF+TKDobxc7YXqOe7/5iUcX47P/X5jsxynPfN/TdL9Pu1lk+G6n6e9aTZv9+u0on8ygvfjtI//2VT+16d9+98M6n952k//3ez+V6f9+b+M839x2uH/++/F2efTjtmXv2NnH09rvm9/X88+nRbe17/7Zx9OO3Xf/x6h/3naOf/m7yT6H6dd/O/+fqP/etrl//bvSvovp93w7//epX887Z79+Tuc/uG0J/bv74Mynvbi/v7dUobTXt//v6fq/5xWUJ6/88p32gfl+/uzypy2rLx/F5fnNMA/uLn3NMjfae+eBvpro/5zGuy/zApD//ADdNeOB+92TdyzPGeWa6e7Wd25o4F73YPqrLHA3e5ZddYU4H73ijprDnDHe0udVQLc80rVWUuAu96n6qyVwH3vO3XWJuDO97M6aydw7/tLnVUFuPsdoc6qC9z/6qmzWgJ3wFbqrETgHpikzuoE3AVPV2f1BO6DvdRZA4A74aXqrMHAvfBKddYI4G54kzprFHA/vE+d9RRwR3xanTURuCdOUmfNBO6Ks9RZEeC+6KizPgLujIvVWd8A98bl6izAP26990T9T7hC/g0Z90T9LyVUBO6Q+i8kqwXcI/V/9wf8g4dh/cdr2ucbvbhynQvzMsOwPwD6n3xA/qt5t1YAf9Xo3jou97/P5Omxcv6j9mX6/8j5uNlUdT5ublabj5vp1efj7psa83F3Yc35uHv6qPm4HeLo+bj9ptZ83O5Vez5uLzxmX8/ah521zr6dtU/7dN19OWtfd/3/fdY+65Bj/9dZ/0Ij1Z+P028N5uO0ZcP5ON3baD5Okzeej/MLmszHeRlx83E+S9P5OA+o2XycP9V8Ps6LCwv/KcLy8unf9wb6hf/5ffRwPp5z1TwcY7zQ732jn3kt8JnDAT1zfPk+4Y/m4d5fAu6Zy/zR9gTDH3ZEv4cE4O8HJOLeQ0KQf0I2EfUHK7PjA/sTsknun5BN9v8J2eQA/oRsIvBPyCYBCzBZKJHoPyGbBBySOrcfq/jbTfKgCaHQQBV5KnJV5KjIVpGlIlNFhorLVFyqYoCKS1RcrKK/iotUXKjiAhX9VPRVcb6KPip6qzhPRS8VPVWcq+IcFT1UdFfR6kVl/qtooaK5imYqmqqIU9FERWMVjVQ0VNFARX0Vx6qop6KuijoqjlFRW0UtFUerOEpFTRU1VFRXUU1FVRVHqjhCRRUVa1R8r2K1ilUqvlOxUsUKFd+qWK7iGxVfq1im4isVX6r4QsXnKpaq+EzFpyqWqPhExccqFqv4SMWHKj5Q8b6KRSreU/GuipdeCoVeVDFBxXgVL6h4XsU4Fc+peFbFWBVjVDyj4mkVT6l4UsUTKh5X8ZiKR1U8ouJhFQ+peFDFaBUPqLhfxX0qRqm4V8U9KjImqvypuFTFABWXqLhYRX8VF6m4UMUFKvqp6KvifBV9VPRWcZ6KXip6qjhXxTkqeqjoruJsFWep6Kaiq4ozVXRR0VnFGSoaT1L5U9FQRQMV9VUcq6Keiroq6qg4RkVtFbVUHK3iKBU1VdRQUV1FNRVVVRyp4ggVVVRUVnG4ikoqKqo4TMWhKiqoOETFchXfqPhaxTIVX6n4UsUXKj5XsVTFZyo+VbFExScqPlaxWMVHKj5U8YGK91UsUvGeindVLFTxjopSFSUqilUUqXBURFQ8+7LKn4oxKp5R8bSKp1Q8qeIJFY+reEzFoyoeUfGwiodUPKhitIoHVNyv4j4Vo1Tcq+IeFXeruEvFnSruUHG7ittU3KpipIoLJ6v8qeinoq+K81X0UdFbxXkqeqnoqeJcFeeo6KGiu4qzVZylopuKrirOVNFFRWcVZ6g4XUUnFaepOFXFKSo6qjhZxUkq6kxR+VNRW0UtFUerOEpFTRU1VFRXUU1FVRVHqjhCRRUVlVUcrqKSiooqDlNxqIoKKg5REVLxtzp/t4pdKv5SsVPFDhV/qliqfv0zFZ+qWKLiExUfq1is4iMVH6r4QMX7KhapeE/FuyoWqnhHRamKEhXFKopUOCoiKgpVFKjIV7FAxdsq5quYp2KuisdfUflT8aiKR1Q8rOIhFQ+qGK3iARX3q7hPxSgV96q4R8XdKu5ScaeKO1TcruI2FbeqGKniFhU3q7hJxQgVN6q4QcX1Koar6DVV5U/FuSrOUdFDRXcVZ6s4S0U3FV1VnKmii4rOKs5QcbqKTipOU3GqilNUdFRxsoqTVHRQka4iTUWqihQVySqSVCSqqD5N5U9FVRVHqjhCRRUVlVUcrqKSiooqDlNxqIoKKg5REVLxt/r/v1vFLhV/qdipYoeKP1VsV/GHit9V/KZim4qtKn5V8YuKD9X//w9UvK9ikYr3VLyrYqGKd1SUqihRUayiSIWjIqKiUEWBinwVC1S8rWK+inkq5qp4S8UcFbNVvKliloqZKt5Q8bqKB15V+VNxn4pRKu5VcY+Ku1XcpeJOFXeouF3FbSpuVTFSxS0qblZxk4oRKm5UcYOK61UMV3GdimtVDFNxjYqrVQxVMUTFVSq6vabyp+JMFV1UdFZxhorTVXRScZqKU1WcoqKjipNVnKSig4p0FWkqUlWkqEhWkaQiUUWCirCKeBXtVZyo4gQV7VS0VVFpusqfisNUHKqigopDVIRU/K1+fbeKXSr+UrFTxQ4Vf6rYruIPFb+r+E3FNhVbVfyq4hcVW1RsVvGzik0qNqr4ScUGFetVlKrzS1QUqyhS4aiIqChUUaAiX8UCFW+rmK9inoq5Kt5SMUfFbBVvqpilYqaKN1S8rmKGiukqXlPxqoppKqaqeEXFFBV3zlD5U3G7ittU3KpipIpbVNys4iYVI1TcqOIGFderGK7iOhXXqhim4hoVV6sYqmKIiqtUXKlisIorVFyuYpCKgSryVOSqOO11lT8Vp6joqOJkFSep6KAiXUWailQVKSqSVSSpSFSRoCKsIl5FexUnqjhBRTsVbVUcr6KNitYqjlPRSkVLFS1UNFexW8UuFX+p2Klih4o/VWxX8YeK31X8pmKbiq0qflXxi4otKjar+FnFJhUbVfykYoOK9Sp+VPGDinUq1qpYo+J7FatVrFKR/4bKn4q3VcxXMU/FXBVvqZijYraKN1XMUjFTxRsqXlcxQ8V0Fa+peFXFNBVTVbyiYoqKySpeVjFJxUQVL6l4UcUEFeNV3DRT5U/FjSpuUHG9iuEqrlNxrYphKq5RcbWKoSqGqLhKxZUqBqu4QsXlKgapGKgiT0WuihwV2SqyVGSqyFBxmYpLVQxQkTZL5U9FiopkFUkqElUkqAiriFfRXsWJKk5Q0U5FWxXHq2ijorWK41S0UtFSRQsVzVU0U9FURZyKJioaq2ikoqGKBip+V/Gbim0qtqr4VcUvKrao2KziZxWbVGxU8ZOKDSrWq/hRxQ8q1qlYq2KNiu9VrFaxSsV3KlaqWKHiWxXLVXyj4msVy1TMflPlT8UsFTNVvKHidRUzVExX8ZqKV1VMUzFVxSsqpqiYrOJlFZNUTFTxkooXVUxQMV7FCyqeVzFOxXMqnlUxVsUYFc+oGDZb5U/F1SqGqhii4ioVV6oYrOIKFZerGKRioIo8FbkqclRkq8hSkakiQ8VlKi5VMUDFJSouVtFfxUUqLlRxgYp+KvqqiJ+j8qfiRBUnqGinoq2K41W0UdFaxXEqWqloqaKFiuYqmqloqiJORRMVjVU0UtFQRQMV9VUcq6Keiroq6qg4RkVtFbVU/Kxik4qNKn5SsUHFehU/qvhBxToVa1WsUfG9itUqVqn4TsVKFStUfKtiuYpvVHytYpmKr1R8qeILFZ+rWKriMxWfqlii4rW3VP5UTFMxVcUrKqaomKziZRWTVExU8ZKKF1VMUDFexQsqnlcxTsVzKp5VMVbFGBXPqHhaxVMqnlTxhIrHVTym4lEVj6i4Yq7Kn4pBKgaqyFORqyJHRbaKLBWZKjJUXKbiUhUDVFyi4mIV/VVcpOJCFReo6Keir4rzVfRR0VvFeSp6qeip4lwV56horYy941S0UtFSRQsVzVU0U9FU/y1TKpqoaKyikYqGKhqoqK/iWBX1VNRVUUfFMSpqq6il/xp+FUepqKmihorqKqqpqKriSBVTVExW8bKKSSomqnhJxYsqJqgYr+IFFc+rGKfiORXPqhirYoyKZ1Q8raLKqfsf+lPB9QP8n9NAfsM/eSLx5fuEE/PtZ0yR+gt9JEHL+bdFpXo50e5zItD8SwX+7pLXUE0NwFC9MQN3VirwnaYJ/T0YaQH8zgbyPaQL1VZ6AO8hDfgeOgB/h0fymdOBz3wS8KzDQsH9rtZJhL+rdbL7u1od/b+r1TGAIXwS8He1TgYWTUeS39U6Gfz3vjBusScRbLGnsGyxp8C22Jw8Lyf6tukAbPZTSW+bUwlvm9Pc26aT/7bpFMBtcyrwtjkNWDSdSG6b0w7eNpCmk2Y8neW2OR142/ybyVveRgB4B3unowFXZPKe4U7ezv7Je4b7F6x6v+u8D9MY+RLLO43PAE7jzvm4BAS5DqQTrgNd3KI801+UXQxFeWYAK0I6cEXoAizKM8HJRRefbsA9OfOeW97n7iL8dwsiXMoz8u1207oeXNvCXQnWtm62/+WwtTOixY4qTH1WN4H/oEhz2pgU0hU1sG3gLHcbONu/DZxl2AbOJltRzwI2ztn52ORK3Ipn5Vu5ne1lROaju9DvVXY/AP92AVBGJBhwRQZHD3dwnOMfHD0Mg+McMhnRA1io54CTiy4+3ZQ9BGREDwIZEUsD81zgwGSVJOfm28/Y03ZJckxGtHGQRd5TQJJoThuTQipJAtssermbxXn+zaKXYbM4j0yS9AI2znn52ORK3LC9LL1h9/xDtsh89Ab+sUFvjffmliSJBlyRwdHHHRzn+wdHH8PgOJ9MkvQBFur54OSii083ZR8BSdKHQJLE0sDsCxyYrJKkb779jP1slyR1MqKNgypMfVY/AUmiOW1MCqkkCWyzuMDdLC70bxYXGDaLC8kkyQXAxrkwH5tciRv2Artv2FxkPi7CDYkyf2ffRdySJMmAKzI4+ruD42L/4OhvGBwXk0mS/sBCvRicXHTx6absLyBJ+hNIklgamJcAByarJLkk337GAbZLkroZ0cZBFaY+a4CAJNGcNiaFVJIEtllc6m4Wl/k3i0sNm8VlZJLkUmDjXJaPTa7EDXup3TdsDjIfGbghkeSt8QxuSZJswBUZHJnu4MjyD45Mw+DIIpMkmcBCzQInF118uikzBSRJJoEkiaWBmQ0cmKySJDvffsYc2yVJvYxo46AKU5+VIyBJNKeNSSGVJIFtFrnuZpHn3yxyDZtFHpkkyQU2Tl4+NrkSN2yu3TdsNjIfA3FDItlb4wO5JUmKAVdkcAxyB8fl/sExyDA4LieTJIOAhXo5OLno4tNNOUhAkgwikCSxNDCvAA5MVklyRb79jINtlyTHZkQbB1WY+qzBApJEc9qYFFJJEthmcaW7WVzl3yyuNGwWV5FJkiuBjXNVPja5EjfslXbfsFnIfAzBDYkUb40P4ZYkqQZckcEx1B0cV/sHx1DD4LiaTJIMBRbq1eDkootPN+VQAUkylECSxNLAvAY4MFklyTX59jMOs12S1M+INg6qMPVZwwQkiea0MSmkkiSwzeJad7O4zr9ZXGvYLK4jkyTXAhvnunxsciVu2GvtvmEzkfkYjhsSqd4aH84tSdIMuCKD43p3cNzgHxzXGwbHDWSS5Hpgod4ATi66+HRTXi8gSa4nkCSxNDBvBA5MVklyY779jCNslyQNMqKNgypMfdYIAUmiOW1MCqkkCWyzuMndLG72bxY3GTaLm8kkyU3Axrk5H5tciRv2Jrtv2HRkPm7BDYk0b43fwi1J0g24IoNjpDs4bvUPjpGGwXErmSQZCSzUW8HJRRefbsqRApJkJIEkiaWBeRtwYLJKktvy7We83XZJ0jAj2jiowtRn3S4gSTSnjUkhlSSBbRZ3uJvFnf7N4g7DZnEnmSS5A9g4d+Zjkytxw95h9w2bhszHXbghke6t8bu4JUmmAVdkcNztDo57/IPjbsPguIdMktwNLNR7wMlFF59uyrsFJMndBJIklgbmvcCBySpJ7s23n3GU7ZKkUUa0cVCFqc8aJSBJNKeNSSGVJIFtFve5m8X9/s3iPsNmcT+ZJLkP2Dj352OTK3HD3mf3DZuKzMcDuCGR6a3xB7glSZYBV2RwjHYHx4P+wTHaMDgeJJMko4GF+iA4ueji0005WkCSjCaQJLE0MB8CDkxWSfJQvv2MD9suSRpnRBsHVZj6rIcFJInmtDEppJIksM3iEXezeNS/WTxi2CweJZMkjwAb59F8bHIlbthH7L5hU5D5eAw3JLK8Nf4YtyTJNuCKDI7H3cHxhH9wPG4YHE+QSZLHgYX6BDi56OLTTfm4gCR5nECSxNLAfBI4MFklyZP59jM+ZbskaZIRbRxUYeqznhKQJJrTxqSQSpLANoun3c3iGf9m8bRhs3iGTJI8DWycZ/KxyZW4YZ+2+4ZNRuZjDG5IZHtrfAy3JMkx4IoMjrHu4HjWPzjGGgbHs2SSZCywUJ8FJxddfLopxwpIkrEEkiSWBuZzwIHJKkmey7efcZztkiQuI9o4qMLUZ40TkCSa08akkEqSwDaL593N4gX/ZvG8YbN4gUySPA9snBfyscmVuGGft/uGTULmYzxuSOR4a3w8tyTJNeCKDI4J7uB40T84JhgGx4tkkmQCsFBfBCcXXXy6KScISJIJBJIklgbmS8CBySpJXsq3n3Gi7ZKkaUa0cVCFqc+aKCBJNKeNSSGVJIFtFpPczeJl/2YxybBZvEwmSSYBG+flfGxyJW7YSXbfsInIfEzGDYlcb41P5pYkeQZckcExxR0cr/gHxxTD4HiFTJJMARbqK+DkootPN+UUAUkyhUCSxNLAnAocmKySZGq+/YzTbJckzTKijYMqTH3WNAFJojltTAqpJAlss3jV3Sxe828Wrxo2i9fIJMmrwMZ5LR+bXIkb9lW7b9gEZD6m44ZEnrfGp1NLknC8AVdkcMxwB8fr/sExwzA4XieTJDOAhfo6OLno4tNNOUNAkswgkCSxNDDfAA5MVknyRr79jDNtlyTNM6KNgypMfdZMAUmiOW1MCqckCW6zmOVuFm/6N4tZhs3iTTJJMgvYOG/mY5MrccPOsvuGheZjNmxIhOO9NT6bW5KEDbgig2OOOzje8g+OOYbB8RaZJJkDLNS3wMlFF59uyjkCkmQOgSSJpYE5FzgwWSXJ3Hz7GefZLklaZEQbB1WY+qx5ApJEc9qYFFJJEthmMd/dLN72bxbzDZvF22SSZD6wcd7OxyZX4oadb/cNG4/MxwLcDRv21vgCbkmSYMAVGRz57uAo8A+OfMPgKCCTJPnAQi0AJxddfLop8wUkST6BJImlgVkIHJiskqQw337GiO2SpGVGtHFQhanPighIEs1pY1JIJUlgm4XjbhZF/s3CMWwWRWSSxAE2TlE+NrkSN6xj9Q2bm4fMRzHuhk3w1ngxtyRJNOCKDI4Sd3CU+gdHiWFwlJJJkhJgoZaCk4suPt2UJQKSpIRAksTSwHwHODBZJck7+fYzLrRdkrTKiDYOqjD1WQsFJInmtDEppJIksM3iXXezeM+/Wbxr2CzeI5Mk7wIb5718bHIlbth37b5hc5H5WIS7YRO9Nb6IW5IkGXBFBsf77uD4wD843jcMjg/IJMn7wEL9AJxcdPHppnxfQJK8TyBJYmlgfggcmKyS5MN8+xk/sl2SHJcRbRxUYeqzPhKQJJrTxqSQSpLANovF7mbxsX+zWGzYLD4mkySLgY3zcT42uRI37GK7b9gcZD4+wd2wSd4a/4RbkiQbcEUGxxJ3cHzqHxxLDIPjUzJJsgRYqJ+Ck4suPt2USwQkyRICSRJLA/Mz4MBklSSf5dvPuNR2SdI6I9o4qMLUZy0VkCSa08akkEqSwDaLz93N4gv/ZvG5YbP4gkySfA5snC/yscmVuGE/t/uGzUbm40vcDZvsrfEvuSVJigFXZHB85Q6OZf7B8ZVhcCwjkyRfAQt1GTi56OLTTfmVgCT5ikCSxNLA/Bo4MFklydf59jN+Y7skaZMRbRxUYeqzvhGQJJrTxqSQSpLANovl7mbxrX+zWG7YLL4lkyTLgY3zbT42uRI37HK7b9gsZD5W4G7YFG+Nr+CWJKkGXJHBsdIdHN/5B8dKw+D4jkySrAQW6nfg5KKLTzflSgFJspJAksTSwFwFHJiskmRVvv2Mq22XJMdnRBsHVZj6rNUCkkRz2pgUUkkS2GbxvbtZrPFvFt8bNos1ZJLke2DjrMnHJlfihv3e7hs2E5mPtbgbNtVb42u5JUmaAVdkcKxzB8cP/sGxzjA4fiCTJOuAhfoDOLno4tNNuU5AkqwjkCSxNDB/BA5MVknyY779jOttlyRtM6KNgypMfdZ6AUmiOW1MCqkkCWyz2OBuFj/5N4sNhs3iJzJJsgHYOD/lY5MrccNusPuGTUfmYyPuhk3z1vhGbkmSbsAVGRyb3MHxs39wbDIMjp/JJMkmYKH+DE4uuvh0U24SkCSbCCRJLA3MzcCBySpJNufbz7jFdknSLiPaOKjC1GdtEZAkmtPGpJBKksA2i1/czeJX/2bxi2Gz+JVMkvwCbJxf87HJlbhhf7H7hk1D5mMr7oZN99b4Vm5JkmnAFRkc29zB8Zt/cGwzDI7fyCTJNmCh/gZOLrr4dFNuE5Ak2wgkSSwNzN+BA5NVkvyebz/jH7ZLkhMyoo2DKkx91h8CkkRz2pgUUkkS2Gax3d0s/vRvFtsNm8WfZJJkO7Bx/szHJlfiht1u9w2biszHDtwNm+mt8R3ckiTLgCsyOHa6g+Mv/+DYaRgcf5FJkp3AQv0LnFx08emm3CkgSXYSSJJYGpi7gAOTVZLsyrefcbftkuTEjGjjoApTn7VbQJJoThuTQipJAtss/nY3i1BBqOwW8bdhs9D/S3E+KJslyd/AxtHPjkyuxA37t903bAoyH4cUwG7YLG+NH1JALUmyDbgig6NCQfTnof7BoX/BPzgOLeCSJBUKcIV6aAE2ueji0025J2fec8v73BUKcLe46bkPDsx/97yHAQcmqyQ5rMB+xopoRrQkaZ8RbRxUYeqz9EOjJYnmtDEppJIksM2ikrtZHO7fLCoZNovDySRJJeBmcXgBNrkSN6x+Xotv2GRkPirjbthsb41X5pYkOQZckcFRxR0cR/gHRxXD4DiCTJJUARbqEQXY5KKLTzdlFQFJUoVAksTSwDwSODBZJcmRBfYzVrVdksRnRBsHVZj6rKoCkkRz2pgUUkkS2GZRzd0sqvs3i2qGzaI6mSSpBmyc6gXY5ErcsNXsvmGTkPmogbthc7w1XoNbkuQacEUGR013cBzlHxw1DYPjKDJJUhNYqEcVYJOLLj7dlDUFJElNAkkSSwPzaODAZJUkRxfYz1jLdkkSzog2Dqow9Vm1BCSJ5rQxKaSSJLDNora7WRzj3yxqGzaLY8gkSW1g4xxTgE2uxA1b2+4bNhGZjzq4GzbXW+N1uCVJngFXZHDUdQdHPf/gqGsYHPXIJEldYKHWK8AmF118uinrCkiSugSSJJYG5rHAgckqSY4tsJ+xvu2SJCEj2jiowtRn1ReQJJrTxqSQSpLANosG7mbR0L9ZNDBsFg3JJEkDYOM0LMAmV+KGbWD3DZuAzEcj3A2b563xRtSSJCHegCsyOBq7g6OJf3A0NgyOJmSSpDGwUJsUYJOLLj7dlI0FJEljAkkSSwMzDjgwWSVJXIH9jE1tlySJGdHGQRWmPqupgCTRnDYmhVOSBLdZNHM3i+b+zaKZYbNoTiZJmgEbp3kBNrkSN2wzu29YaD5awIZEQry3xltwS5KwAVdkcLR0B0cr/+BoaRgcrcgkSUtgobYqwCYXXXy6KVsKSJKWBJIklgbmccCBySpJjiuwn7G17ZIkKSPaOKjC1Ge1FpAkmtPGpJBKksA2izbuZnG8f7NoY9gsjieTJG2AjXN8ATa5EjdsG7tv2HhkPtribtiwt8bbckuSBAOuyOBo5w6OE/yDo51hcJxAJknaAQv1hAJsctHFp5uynYAkaUcgSWJpYJ4IHJiskuTEAvsZ29suSZIzoo2DKkx9VnsBSaI5bUwKqSQJbLOIdzeLsH+ziDdsFmEySRIPbJxwATa5EjdsvNU3bE4eMh8JuBs2wVvjCdySJNGAKzI4Et3BkeQfHImGwZFEJkkSgYWaVIBNLrr4dFMmCkiSRAJJEksDMxk4MFklSXKB/YwptkuSlIxo46AKU5+VIiBJNKeNSSGVJIFtFqnuZpHm3yxSDZtFGpkkSQU2TloBNrkSN2yq3TdsLjIf6bgbNtFb4+nckiTJgCsyODq4g+Mk/+DoYBgcJ5FJkg7AQj2pAJtcdPHppuwgIEk6EEiSWBqYJwMHJqskObnAfsaOtkuS1Ixo46AKU5/VUUCSaE4bk0IqSQLbLE5xN4tT/ZvFKYbN4lQySXIKsHFOLcAmV+KGPcXuGzYHmY/TcDdskrfGT+OWJMkGXJHB0ckdHKf7B0cnw+A4nUySdAIW6ukF2OSii083ZScBSdKJQJLE0sA8AzgwWSXJGQX2M3a2XZKkZUQbB1WY+qzOApJEc9qYFFJJEthm0cXdLM70bxZdDJvFmWSSpAuwcc4swCZX4obtYvcNm43MR1fcDZvsrfGu3JIkxYArMji6uYPjLP/g6GYYHGeRSZJuwEI9qwCbXHTx6absJiBJuhFIklgamGcDByarJDm7wH7G7rZLkvSMaOOgClOf1V1AkmhOG5NCKkkC2yx6uJvFOf7NoodhsziHTJL0ADbOOQXY5ErcsD3svmGzkPk4F3fDpnhr/FxuSZJqwBUZHD3dwdHLPzh6GgZHLzJJ0hNYqL0KsMlFF59uyp4CkqQngSSJpYF5HnBgskqS8wrsZ+xtuyTpkBFtHFRh6rN6C0gSzWljUkglSWCbRR93szjfv1n0MWwW55NJkj7Axjm/AJtciRu2j903bCYyH31xN2yqt8b7ckuSNAOuyODo5w6OC/yDo59hcFxAJkn6AQv1ggJsctHFp5uyn4Ak6UcgSWJpYF4IHJiskuTCAvsZL7JdkpyUEW0cVGHqsy4SkCSa08akkEqSwDaL/u5mcbF/s+hv2CwuJpMk/YGNc3EBNrkSN2x/u2/YdGQ+LsHdsGneGr+EW5KkG3BFBscAd3Bc6h8cAwyD41IySTIAWKiXFmCTiy4+3ZQDBCTJAAJJEksD8zLgwGSVJJcV2M+YYbskOTkj2jiowtRnZQhIEs1pY1JIJUlgm0Wmu1lk+TeLTMNmkUUmSTKBjZNVgE2uxA2bafcNm4bMRzbuhk331ng2tyTJNOCKDI4cd3Dk+gdHjmFw5JJJkhxgoeYWYJOLLj7dlDkCkiSHQJLE0sDMAw5MVkmSV2A/40DbJUnHjGjjoApTnzVQQJJoThuTQipJAtssBrmbxeX+zWKQYbO4nEySDAI2zuUF2ORK3LCD7L5hU5H5uAJ3w2Z6a/wKbkmSZcAVGRyD3cFxpX9wDDYMjivJJMlgYKFeWYBNLrr4dFMOFpAkgwkkSSwNzKuAA5NVklxVYD/jENslySkZ0cZBFaY+a4iAJNGcNiaFVJIEtlkMdTeLq/2bxVDDZnE1mSQZCmycqwuwyZW4YYfafcOmIPNxDe6GzfLW+DXckiTbgCsyOIa5g+Na/+AYZhgc15JJkmHAQr22AJtcdPHpphwmIEmGEUiSWBqY1wEHJqskua7AfsbhtkuSUzOijYMqTH3WcAFJojltTAqpJAlss7je3Sxu8G8W1xs2ixvIJMn1wMa5oQCbXIkb9nq7b9hkZD5uxN2w2d4av5FbkuQYcEUGxwh3cNzkHxwjDIPjJjJJMgJYqDcVYJOLLj7dlCMEJMkIAkkSSwPzZuDAZJUkNxfYz3iL7ZLktIxo46AKU591i4Ak0Zw2JoVUkgS2WYx0N4tb/ZvFSMNmcSuZJBkJbJxbC7DJlbhhR9p9wyYh83Eb7obN8db4bdySJNeAKzI4bncHxx3+wXG7YXDcQSZJbgcW6h0F2OSii0835e0CkuR2AkkSSwPzTuDAZJUkdxbYz3iX7ZKkU0a0cVCFqc+6S0CSaE4bk0IqSQLbLO52N4t7/JvF3YbN4h4ySXI3sHHuKcAmV+KGvdvuGzYRmY97cTdsrrfG7+WWJHkGXJHBMcodHPf5B8cow+C4j0ySjAIW6n0F2OSii0835SgBSTKKQJLE0sC8HzgwWSXJ/QX2Mz5guyQ5PSPaOKjC1Gc9ICBJNKeNSSGVJIFtFqPdzeJB/2Yx2rBZPEgmSUYDG+fBAmxyJW7Y0XbfsAnIfDyEu2HzvDX+ELUkSYw34IoMjofdwfGIf3A8bBgcj5BJkoeBhfpIATa56OLTTfmwgCR5mECSxNLAfBQ4MFklyaMF9jM+ZrskOSMj2jiowtRnPSYgSTSnjUnhlCTBbRaPu5vFE/7N4nHDZvEEmSR5HNg4TxRgkytxwz5u9w0LzceTsCGRGO+t8Se5JUnYgCsyOJ5yB8fT/sHxlGFwPE0mSZ4CFurTBdjkootPN+VTApLkKQJJEksD8xngwGSVJM8U2M84xnZJ0jkj2jiowtRnjRGQJJrTxqSQSpLANoux7mbxrH+zGGvYLJ4lkyRjgY3zbAE2uRI37Fi7b9h4ZD6ew92wYW+NP8ctSRIMuCKDY5w7OJ73D45xhsHxPJkkGQcs1OcLsMlFF59uynECkmQcgSSJpYH5AnBgskqSFwrsZxxvuyTpkhFtHFRh6rPGC0gSzWljUkglSWCbxQR3s3jRv1lMMGwWL5JJkgnAxnmxAJtciRt2gtU3bHYeMh8v4W7YBG+Nv8QtSRINuCKDY6I7OCb5B8dEw+CYRCZJJgILdVIBNrno4tNNOVFAkkwkkCSxNDBfBg5MVknycoH9jJNtlyRnZkQbB1WY+qzJApJEc9qYFFJJEthmMcXdLF7xbxZTDJvFK2SSZAqwcV4pwCZX4oadYvcNm4vMx1TcDZvorfGp3JIkyYArMjimuYPjVf/gmGYYHK+SSZJpwEJ9tQCbXHTx6aacJiBJphFIklgamK8BByarJHmtwH7G6bZLkq4Z0cZBFaY+a7qAJNGcNiaFVJIEtlnMcDeL1/2bxQzDZvE6mSSZAWyc1wuwyZW4YWfYfcPmIPPxBu6GTfLW+BvckiTZgCsyOGa6g2OWf3DMNAyOWWSSZCawUGcVYJOLLj7dlDMFJMlMAkkSSwPzTeDAZJUkbxbYzzjbdknSLSPaOKjC1GfNFpAkmtPGpJBKksA2iznuZvGWf7OYY9gs3iKTJHOAjfNWATa5EjfsHLtv2GxkPubibthkb43P5ZYkKQZckcExzx0c8/2DY55hcMwnkyTzgIU6vwCbXHTx6aacJyBJ5hFIklgamG8DByarJHm7wH7GBbZLkrMyoo2z57zyFqY+a4GAJNGcNiaFVJIEtlnku5tFgX+zyDdsFgVkkiQf2DgFBdjkStyw+XbfsFnIfBTibtgUb40XckuSVAOuyOCIuIPD8Q+OiGFwOGSSJAIsVKcAm1x08emmjAhIkgiBJImlgVkEHJiskqSowH7GYtslydkZ0cZBFaY+q1hAkmhOG5NCKkkC2yxK3M2i1L9ZlBg2i1IySVICbJzSAmxyJW7YErtv2ExkPt7B3bCp3hp/h1uSpBlwRQbHQndwvOsfHAsNg+NdMkmyEFio7xZgk4suPt2UCwUkyUICSRJLA/M94MBklSTvFdjPuMh2SdI9I9o4qMLUZy0SkCSa08akkEqSwDaL993N4gP/ZvG+YbP4gEySvA9snA8KsMmVuGHft/uGTUfm40PcDZvmrfEPuSVJugFXZHB85A6Oxf7B8ZFhcCwmkyQfAQt1cQE2ueji0035kYAk+YhAksTSwPwYODBZJcnHBfYzfmK7JOmREW0cVGHqsz4RkCSa08akkEqSwDaLJe5m8al/s1hi2Cw+JZMkS4CN82kBNrkSN+wSu2/YNGQ+PsPdsOneGv+MW5JkGnBFBsdSd3B87h8cSw2D43MySbIUWKifF2CTiy4+3ZRLBSTJUgJJEksD8wvgwGSVJF8U2M/4pe2S5JyMaOOgClOf9aWAJNGcNiaFVJIEtll85W4Wy/ybxVeGzWIZmST5Ctg4ywqwyZW4Yb+y+4ZNRebja9wNm+mt8a+5JUmWAVdkcHzjDo7l/sHxjWFwLCeTJN8AC3V5ATa56OLTTfmNgCT5hkCSxNLA/BY4MFklybcF9jOusF2SnJsRbRxUYeqzVghIEs1pY1JIJUlgm8VKd7P4zr9ZrDRsFt+RSZKVwMb5rgCbXIkbdqXdN2wKMh+rcDdslrfGV3FLkmwDrsjgWO0Oju/9g2O1YXB8TyZJVgML9fsCbHLRxaebcrWAJFlNIEliaWCuAQ5MVkmypsB+xrW2S5KeGdHGQRWmPmutgCTRnDYmhVSSBLZZrHM3ix/8m8U6w2bxA5kkWQdsnB8KsMmVuGHX2X3DJiPz8SPuhs321viP3JIkx4ArMjjWu4Njg39wrDcMjg1kkmQ9sFA3FGCTiy4+3ZTrBSTJegJJEksD8yfgwGSVJD8V2M+40XZJ0isj2jiowtRnbRSQJJrTxqSQSpLANotN7mbxs3+z2GTYLH4mkySbgI3zcwE2uRI37Ca7b9gkZD42427YHG+Nb+aWJLkGXJHBscUdHL/4B8cWw+D4hUySbAEW6i8F2OSii0835RYBSbKFQJLE0sD8FTgwWSXJrwX2M261XZKclxFtHFRh6rO2CkgSzWljUkglSWCbxTZ3s/jNv1lsM2wWv5FJkm3AxvmtAJtciRt2m903bCIyH7/jbthcb43/zi1J8gy4IoPjD3dwbPcPjj8Mg2M7mST5A1io2wuwyUUXn27KPwQkyR8EkiSWBuafwIHJKkn+LLCfcYftkqR3RrRxUIWpz9ohIEk0p41JIZUkgW0WO93N4i//ZrHTsFn8RSZJdgIb568CbHIlbtiddt+wCch87MLdsHneGt9FLUmS4g24IoNjtzs4/vYPjt2GwfE3mSTZDSzUvwuwyUUXn27K3QKSZDeBJImlgRkqxA1MVkmCewdyjIegGdGSpE9GtHFQhfmfTbMQL0k0p41J4ZQkwW0WFQqjPw8tDJXdIvQv+DcL/b8U54OyWZJUKMRxHVqITa7EDauf1+IbFpqPw2BDIineW+OHFVJLkrABV2RwVHQHRyX/4KhoGByVCrkkSUVgoVYqxCYXXXy6KffkzHtueZ+7Ini1Ojgwy/e8hwMHJqskObzQfsbKtkuS8zOijYMqTH1WZQFJojltTAqpJAlss6jibhZH+DeLKobN4ggySVIF2DhHFGKTK3HDVrH7ho1H5uNI3A0b9tb4kdySJMGAKzI4qrqDo5p/cFQ1DI5qZJKkKrBQqxVik4suPt2UVQUkSVUCSRJLA7M6cGCySpLqhfYz1rBdkvTNiDYOqjD1WTUEJInmtDEppJIksM2iprtZHOXfLGoaNoujyCRJTWDjHFWITa7EDVvT6hs2Kw+Zj6NxN2yCt8aP5pYkiQZckcFRyx0ctf2Do5ZhcNQmkyS1gIVauxCbXHTx6aasJSBJahFIklgamMcAByarJDmm0H7GOrZLkn4Z0cZBFaY+q46AJNGcNiaFVJIEtlnUdTeLev7Noq5hs6hHJknqAhunXiE2uRI3bF27b9hcZD6Oxd2wid4aP5ZbkiQZcEUGR313cDTwD476hsHRgEyS1AcWaoNCbHLRxaebsr6AJKlPIEliaWA2BA5MVknSsNB+xka2S5ILMqKNgypMfVYjAUmiOW1MCqkkCWyzaOxuFk38m0Vjw2bRhEySNAY2TpNCbHIlbtjGdt+wOch8xOFu2CRvjcdxS5JkA67I4GjqDo5m/sHR1DA4mpFJkqbAQm1WiE0uuvh0UzYVkCRNCSRJLA3M5sCBySpJmhfaz9jCdklyYUa0cVCFqc9qISBJNKeNSSGVJIFtFi3dzaKVf7NoadgsWpFJkpbAxmlViE2uxA3b0u4bNhuZj+NwN2yyt8aP45YkKQZckcHR2h0cbfyDo7VhcLQhkyStgYXaphCbXHTx6aZsLSBJWhNIklgamMcDByarJDm+0H7GtrZLkosyoo2DKkx9VlsBSaI5bUwKqSQJbLNo524WJ/g3i3aGzeIEMknSDtg4JxRikytxw7az+4bNQubjRNwNm+Kt8RO5JUmqAVdkcLR3B0e8f3C0NwyOeDJJ0h5YqPGF2OSii083ZXsBSdKeQJLE0sAMAwcmqyQJF9rPmGC7JOmfEW0cVGHqsxIEJInmtDEppJIksM0i0d0skvybRaJhs0gikySJwMZJKsQmV+KGTbT7hs1E5iMZd8Omems8mVuSpBlwRQZHijs4Uv2DI8UwOFLJJEkKsFBTC7HJRRefbsoUAUmSQiBJYmlgpgEHJqskSSu0nzHddklycUa0cVCFqc9KF5AkmtPGpJBKksA2iw7uZnGSf7PoYNgsTiKTJB2AjXNSITa5EjdsB7tv2HRkPk7G3bBp3ho/mVuSpBtwRQZHR3dwnOIfHB0Ng+MUMknSEViopxRik4suPt2UHQUkSUcCSRJLA/NU4MBklSSnFtrPeJrtkuSSjGjjoArzP2cJSBLNaWNSSCVJYJtFJ3ezON2/WXQybBank0mSTsDGOb0Qm1yJG7aT3TdsGjIfZ+Bu2HRvjZ/BLUkyDbgig6OzOzi6+AdHZ8Pg6EImSToDC7VLITa56OLTTdlZQJJ0JpAksTQwzwQOTFZJcmah/YxdbZckAzKijYMqTH1WVwFJojltTAqpJAlss+jmbhZn+TeLbobN4iwySdIN2DhnFWKTK3HDdrP7hk1F5uNs3A2b6a3xs7klSZYBV2RwdHcHRw//4OhuGBw9yCRJd2Ch9ijEJhddfLopuwtIku4EkiSWBuY5wIHJKknOKbSf8VzbJcmlGdHGQRWmPutcAUmiOW1MCqkkCWyz6OluFr38m0VPw2bRi0yS9AQ2Tq9CbHIlbtiedt+wKch8nIe7YbO8NX4etyTJNuCKDI7e7uDo4x8cvQ2Dow+ZJOkNLNQ+hdjkootPN2VvAUnSm0CSxNLAPB84MFklyfmF9jP2tV2SXJYRbRxUYeqz+gpIEs1pY1JIJUlgm0U/d7O4wL9Z9DNsFheQSZJ+wMa5oBCbXIkbtp/dN2wyMh8X4m7YbG+NX8gtSXIMuCKD4yJ3cPT3D46LDIOjP5kkuQhYqP0LsclFF59uyosEJMlFBJIklgbmxcCBySpJLi60n/ES2yVJRka0cVCFqc+6RECSaE4bk0IqSQLbLAa4m8Wl/s1igGGzuJRMkgwANs6lhdjkStywA+y+YZOQ+bgMd8PmeGv8Mm5JkmvAFRkcGe7gyPQPjgzD4MgkkyQZwELNLMQmF118uikzBCRJBoEkiaWBmQUcmKySJKvQfsZs2yVJZka0cVCFqc/KFpAkmtPGpJBKksA2ixx3s8j1bxY5hs0il0yS5AAbJ7cQm1yJGzbH7hs2EZmPPNwNm+ut8TxuSZJnwBUZHAPdwTHIPzgGGgbHIDJJMhBYqIMKsclFF59uyoECkmQggSSJpYF5OXBgskqSywvtZ7zCdkmSlRFtHFRh6rOuEJAkmtPGpJBKksA2i8HuZnGlf7MYbNgsriSTJIOBjXNlITa5EjfsYLtv2ARkPq7C3bB53hq/ilqSJMcbcEUGxxB3cAz1D44hhsExlEySDAEW6tBCbHLRxaebcoiAJBlCIEliaWBeDRyYrJLk6kL7Ga+xXZJkZ0QbB1WY+qxrBCSJ5rQxKZySJLjNYpi7WVzr3yyGGTaLa8kkyTBg41xbiE2uxA07zO4bFpqP62BDIjneW+PXcUuSsAFXZHAMdwfH9f7BMdwwOK4nkyTDgYV6fSE2ueji0005XECSDCeQJLE0MG8ADkxWSXJDof2MN9ouSXIyoo2DKkx91o0CkkRz2pgUUkkS2GYxwt0sbvJvFiMMm8VNZJJkBLBxbirEJlfihh1h9w0bj8zHzbgbNuyt8Zu5JUmCAVdkcNziDo6R/sFxi2FwjCSTJLcAC3VkITa56OLTTXmLgCS5hUCSxNLAvBU4MFklya2F9jPeZrskyc2INg6qMPVZtwlIEs1pY1JIJUlgm8Xt7mZxh3+zuN2wWdxBJkluBzbOHYXY5ErcsLdbfcNm5iHzcSfuhk3w1vid3JIk0YArMjjucgfH3f7BcZdhcNxNJknuAhbq3YXY5KKLTzflXQKS5C4CSRJLA/Me4MBklST3FNrPeK/tkiQvI9o4qMLUZ90rIEk0p41JIZUkgW0Wo9zN4j7/ZjHKsFncRyZJRgEb575CbHIlbthRdt+wuch83I+7YRO9NX4/tyRJMuCKDI4H3MEx2j84HjAMjtFkkuQBYKGOLsQmF118uikfEJAkDxBIklgamA8CByarJHmw0H7Gh2yXJAMzoo2DKkx91kMCkkRz2pgUUkkS2GbxsLtZPOLfLB42bBaPkEmSh4GN80ghNrkSN+zDdt+wOch8PIq7YZO8Nf4otyRJNuCKDI7H3MHxuH9wPGYYHI+TSZLHgIX6eCE2ueji0035mIAkeYxAksTSwHwCODBZJckThfYzPmm7JBmUEW0cVGHqs54UkCSa08akkEqSwDaLp9zN4mn/ZvGUYbN4mkySPAVsnKcLscmVuGGfsvuGzUbm4xncDZvsrfFnuCVJigFXZHCMcQfHWP/gGGMYHGPJJMkYYKGOLcQmF118uinHCEiSMQSSJJYG5rPAgckqSZ4ttJ/xOdslyeUZ0cZBFaY+6zkBSaI5bUwKqSQJbLMY524Wz/s3i3GGzeJ5MkkyDtg4zxdikytxw46z+4bNQubjBdwNm+Kt8Re4JUmqAVdkcIx3B8cE/+AYbxgcE8gkyXhgoU4oxCYXXXy6KccLSJLxBJIklgbmi8CBySpJXiy0n/El2yXJFRnRxkEVpj7rJQFJojltTAqpJAlss5jobhaT/JvFRMNmMYlMkkwENs6kQmxyJW7YiXbfsJnIfLyMu2FTvTX+MrckSTPgigyOye7gmOIfHJMNg2MKmSSZDCzUKYXY5KKLTzflZAFJMplAksTSwHwFODBZJckrhfYzTrVdkgzOiDYOqjD1WVMFJInmtDEppJIksM1imrtZvOrfLKYZNotXySTJNGDjvFqITa7EDTvN7hs2HZmP13A3bJq3xl/jliTpBlyRwTHdHRwz/INjumFwzCCTJNOBhTqjEJtcdPHpppwuIEmmE0iSWBqYrwMHJqskeb3QfsY3bJckV2ZEGwdVmPqsNwQkiea0MSmkkiSwzWKmu1nM8m8WMw2bxSwySTIT2DizCrHJlbhhZ9p9w6Yh8/Em7oZN99b4m9ySJNOAKzI4ZruDY45/cMw2DI45ZJJkNrBQ5xRik4suPt2UswUkyWwCSRJLA/Mt4MBklSRvFdrPONd2SXJVRrRxUIWpz5orIEk0p41JIZUkgW0W89zNYr5/s5hn2Czmk0mSecDGmV+ITa7EDTvP7hs2FZmPt3E3bKa3xt/mliRZBlyRwbHAHRz5/sGxwDA48skkyQJgoeYXYpOLLj7dlAsEJMkCAkkSSwOzADgwWSVJQaH9jIW2S5IhGdHGQRWmPqtQQJJoThuTQipJAtssIu5m4fg3i4hhs3DIJEkE2DhOITa5EjdsxO4bNgWZjyLcDZvlrfEibkmSbcAVGRzF7uAo8Q+OYsPgKCGTJMXAQi0pxCYXXXy6KYsFJEkxgSSJpYFZChyYrJKktNB+xndslyRDM6KNgypMfdY7ApJEc9qYFFJJEthmsdDdLN71bxYLDZvFu2SSZCGwcd4txCZX4oZdaPcNm4zMx3u4GzbbW+PvcUuSHAOuyOBY5A6O9/2DY5FhcLxPJkkWAQv1/UJsctHFp5tykYAkWUQgSWJpYH4AHJiskuSDQvsZP7RdklydEW0cVGHqsz4UkCSa08akkEqSwDaLj9zNYrF/s/jIsFksJpMkHwEbZ3EhNrkSN+xHdt+wSch8fIy7YXO8Nf4xtyTJNeCKDI5P3MGxxD84PjEMjiVkkuQTYKEuKcQmF118uik/EZAknxBIklgamJ8CByarJPm00H7Gz2yXJNdkRBsHVZj6rM8EJInmtDEppJIksM1iqbtZfO7fLJYaNovPySTJUmDjfF6ITa7EDbvU7hs2EZmPL3A3bK63xr/gliR5BlyRwfGlOzi+8g+OLw2D4ysySfIlsFC/KsQmF118uim/FJAkXxJIklgamMuAA5NVkiwrtJ/xa9slybCMaOOgClOf9bWAJNGcNiaFVJIEtll8424Wy/2bxTeGzWI5mST5Btg4ywuxyZW4Yb+x+4ZNQObjW9wNm+et8W+pJUlKvAFXZHCscAfHSv/gWGEYHCvJJMkKYKGuLMQmF118uilXCEiSFQSSJJYG5nfAgckqSb4rtJ9xle2S5NqMaOOgClOftUpAkmhOG5PCKUmC2yxWu5vF9/7NYrVhs/ieTJKsBjbO94XY5ErcsKvtvmGh+VgDGxIp8d4aX8MtScIGXJHBsdYdHOv8g2OtYXCsI5Mka4GFuq4Qm1x08emmXCsgSdYSSJJYGpg/AAcmqyT5odB+xh9tlyTXZUQbB1WY+qwfBSSJ5rQxKaSSJLDNYr27WWzwbxbrDZvFBjJJsh7YOBsKscmVuGHX233DxiPz8RPuhg17a/wnbkmSYMAVGRwb3cGxyT84NhoGxyYySbIRWKibCrHJRRefbsqNApJkI4EkiaWB+TNwYLJKkp8L7WfcbLskGZ4RbRxUYeqzNgtIEs1pY1JIJUlgm8UWd7P4xb9ZbDFsFr+QSZItwMb5pRCbXIkbdovVN2x6HjIfv+Ju2ARvjf/KLUkSDbgig2OrOzi2+QfHVsPg2EYmSbYCC3VbITa56OLTTblVQJJsJZAksTQwfwMOTFZJ8luh/Yy/2y5Jrs+INg6qMPVZvwtIEs1pY1JIJUlgm8Uf7max3b9Z/GHYLLaTSZI/gI2zvRCbXIkb9g+7b9hcZD7+xN2wid4a/5NbkiQZcEUGxw53cOz0D44dhsGxk0yS7AAW6s5CbHLRxaebcoeAJNlBIEliaWD+BRyYrJLkr0L7GXfZLkluyIg2Dqow9Vm7BCSJ5rQxKUFuFh1gm0V8YH9wa7e7Wfzt3yz+DmCL6ADcInYDm+TvQplEom/V3cBGYb1lEE0nzRiKABn1RKvugfxvBRZfvk8Z8PKtVznJXt5DIoLA+nDU9bYXHpfBcIUIbgJIvUPNiJpWe95hhQj2WudrgrQkL++hkk1wKLwJ0pIOBTbBYQRNcBi8CdKSDotgryv0SlHBfW60jqlgce3s+aA10Sbg+wP8dsfej+Qz3w985tokz/wA8JmPIXnm0cBnrkPyzA8Cn7kuyTM/BHzmeiTP/DDwmY8leeZHgM9cn+SZHwU+cwOSZ34M+MwNSZ75ceAzNyJ55ieAz9yY5JmfBD5zE5Jnfgr4zHEkz/w08JmbkjzzM8BnbkbyzGOAz9yc5JnHAp+5BckzPwt85pYkz/wc8JlbkTzzOOAzH0fyzM8Dn7k1yTO/AHzmNiTPPB74zMeTPPME4DO3JXnmF4HP3I7kmV8CPvMJJM88EfjMJ5I88yTgM7cneeaXgc8cT/LMk4HPHCZ55inAZ04geeZXgM+cSPLMU4HPnETyzNOAz5xM8syvAp85heSZXwM+cyrJM08HPnMayTPPAD5zOskzvw585g4kz/wG8JlPInnmmcBnPpnkmWcBn7kjyTO/CXzmU0ieeTbwmU8leeY5wGc+jeSZ3wI+cyeSZ54LfObTSZ55HvCZzyB55vnAZ+5M8sxvA5+5C8kzLwA+85kkz5wPfOauJM9cAHzmbiTPXAh85rNInjkCfOazSZ7ZAT5zd5JnLgI+cw+SZy4GPvM5JM9cAnzmc0meuRT4zD1Jnvkd4DP3InnmhcBnPo/kmd8FPnNvkmd+D/jMfUieeRHwmc8neeb3gc/cl+SZPwA+cz+SZ/4Q+MwXkDzzR8BnvpDkmRcDn/kikmf+GPjM/Ume+RPgM19M8sxLgM98Cckzfwp85gEkz/wZ8JkvJXnmpcBnvozkmT8HPnMGyTN/AXzmTJJn/hL4zFkkz/wV8JmzSZ55GfCZc0ie+WvgM+eSPPM3wGfOI3nm5cBnHkjyzN8Cn3kQyTOvAD7z5STPvBL4zFeQPPN3wGceTPLMq4DPfCXJM68GPvNVJM/8PfCZh5A88xrgMw8leea1wGe+muSZ1wGf+RqSZ/4B+MzDSJ75R+AzX0vyzOuBz3wdyTNvAD7zcJJn/gn4zMB/Tlj0mTcCnxn475X95x8j0XGke57+NxlOqxgq84H/Q5IhfM7QjNsJGP8kYNxBwLiTgPEvAsZdBIy7CRj/JmDUB9rOeAgBYwUCxkMJGA8jYKxIwFiJgPFwAsbKBIxVCBiPIGA8koCxKgFjNQLG6gSMNQgYaxIwHkXAeDQBYy0CxtoEjMcQMNYhYKxLwFiPgPFYAsb6BIwNCBgbEjA2ImBsTMDYhIAxjoCxKQFjMwLG5gSMLQgYWxIwtiJgPI6AsTUBYxsCxuMJGNsSMLYjYDyBgPFEAsb2BIzxBIxhAsYEAsZEAsYkAsZkAsYUAsZUAsY0AsZ0AsYOBIwnETCeTMDYkYDxFALGUwkYTyNg7ETAeDoB4xkEjJ0JGLsQMJ5JwNiVgLEbAeNZBIxnEzB2J2DsQcB4DgHjuQSMPQkYexEwnkfA2JuAsQ8B4/kEjH0JGPsRMF5AwHghAeNFBIz9CRgvJmC8hIBxAAHjpQSMlxEwZhAwZhIwZhEwZhMw5hAw5hIw5hEwDiRgHETAeDkB4xUEjIMJGK8kYLyKgHEIAeNQAsarCRivIWAcRsB4LQHjdQSMwwkYrydgvIGA8UYCxhEEjDcRMN5MwHgLAeNIAsZbCRhvI2C8nYDxDgLGOwkY7yJgvJuA8R4CxnsJGEcRMN5HwHg/AeMDBIyjCRgfJGB8iIDxYQLGRwgYHyVgfIyA8XECxicIGJ8kYHyKgPFpAsZnCBjHEDCOJWB8loDxOQLGcQSMzxMwvkDAOJ6AcQIB44sEjC8RME4kYJxEwPgyAeNkAsYpBIyvEDBOJWCcRsD4KgHjawSM0wkYZxAwvk7A+AYB40wCxlkEjG8SMM4mYJxDwPgWAeNcAsZ5BIzzCRjfJmBcQMCYT8BYQMBYSMAYIWB0CBiLCBiLCRhLCBhLCRjfIWBcSMD4LgHjewSMiwgY3ydg/ICA8UMCxo8IGBcTMH5MwPgJAeMSAsZPCRg/I2BcSsD4OQHjFwSMXxIwfkXAuIyA8WsCxm8IGJcTMH5LwLiCgHElAeN3BIyrCBhXEzB+T8C4hoBxLQHjOgLGHwgYfyRgXE/AuIGA8ScCxo0EjJsIGH8mYNxMwLiFgPEXAsZfCRi3EjBuI2D8jYDxdwLGPwgYtxMw/knAuIOAcScB418EjLsIGHcTMP5NwBiqYD/jIQSMFQgYDyVgPIyAsSIBYyUCxsMJGCsTMFYhYDyCgPFIAsaqBIzVCBirEzDWIGCsScB4FAHj0QSMtQgYaxMwHkPAWIeAsS4BYz0CxmMJGOsTMDYgYGxIwNiIgLExAWMTAsY4AsamBIzNCBibEzC2IGBsScDYioDxOALG1gSMbQgYjydgbEvA2I6A8QQCxhMJGNsTMMYTMIYJGBMIGBMJGJMIGJMJGFMIGFMJGNMIGNMJGDsQMJ5EwHgyAWNHAsZTCBhPJWA8jYCxEwHj6QSMZxAwdiZg7ELAeCYBY1cCxm4EjGcRMJ5NwNidgLEHAeM5BIznEjD2JGDsRcB4HgFjbwLGPgSM5xMw9iVg7EfAeAEB44UEjBcRMPYnYLyYgPESAsYBBIyXEjBeRsCYQcCYScCYRcCYTcCYQ8CYS8CYR8A4kIBxEAHj5QSMVxAwDiZgvJKA8SoCxiEEjEMJGK8mYLyGgHEYAeO1BIzXETAOJ2C8noDxBgLGGwkYRxAw3kTAeDMB4y0EjCMJGG8lYLyNgPF2AsY7CBjvJGC8i4DxbgLGewgY7yVgHEXAeB8B4/0EjA8QMI4mYHyQgPEhAsaHCRgfIWB8lIDxMQLGxwkYnyBgfJKA8SkCxqcJGJ8hYBxDwDiWgPFZAsbnCBjHETA+T8D4AgHjeALGCQSMLxIwvkTAOJGAcRIB48sEjJMJGKcQML5CwDiVgHEaAeOrBIyvETBOJ2CcQcD4OgHjGwSMMwkYZxEwvknAOJuAcQ4B41sEjHMJGOcRMM4nYHybgHEBAWM+AWMBAWMhAWOEgNEhYCwiYCwmYCwhYCwlYHyHgHEhAeO7BIzvETAuImB8n4DxAwLGDwkYPyJgXEzA+DEB4ycEjEsIGD8lYPyMgHEpAePnBIxfEDB+ScD4FQHjMgLGrwkYvyFgXE7A+C0B4woCxpUEjN8RMK4iYFxNwPg9AeMaAsa1BIzrCBh/IGD8kYBxPQHjBgLGnwgYNxIwbiJg/JmAcTMB4xYCxl8IGH8lYNxKwLiNgPE3AsbfCRj/IGDcTsD4JwHjDgLGnQSMfxEw7iJg3E3A+DcBY+hQ+xkPIWCsQMB4KAHjYQSMFQkYKxEwHk7AWJmAsQoB4xEEjEcSMFYlYKxGwFidgLEGAWNNAsajCBiPJmCsRcBYm4DxGALGOgSMdQkY6xEwHkvAWJ+AsQEBY0MCxkYEjI0JGJsQMMYRMDYlYGxGwNicgLEFAWNLAsZWBIzHETC2JmBsQ8B4PAFjWwLGdgSMJxAwnkjA2J6AMZ6AMUzAmEDAmEjAmETAmEzAmELAmErAmEbAmE7A2IGA8SQCxpMJGDsSMJ5CwHgqAeNpBIydCBhPJ2A8g4CxMwFjFwLGMwkYuxIwdiNgPIuA8WwCxu4EjD0IGM8hYDyXgLEnAWMvAsbzCBh7EzD2IWA8n4CxLwFjPwLGCwgYLyRgvIiAsT8B48UEjJcQMA4gYLyUgPEyAsYMAsZMAsYsAsZsAsYcAsZcAsY8AsaBBIyDCBgvJ2C8goBxMAHjlQSMVxEwDiFgHErAeDUB4zUEjMMIGK8lYLyOgHE4AeP1BIw3EDDeSMA4goDxJgLGmwkYbyFgHEnAeCsB420EjLcTMN5BwHgnAeNdBIx3EzDeQ8B4LwHjKALG+wgY7ydgfICAcTQB44MEjA8RMD5MwPgIAeOjBIyPETA+TsD4BAHjkwSMTxEwPk3A+AwB4xgCxrEEjM8SMD5HwDiOgPF5AsYXCBjHEzBOIGB8kYDxJQLGiQSMkwgYXyZgnEzAOIWA8RUCxqkEjNMIGF8lYHyNgHE6AeMMAsbXCRjfIGCcScA4i4DxTQLG2QSMcwgY3yJgnEvAOI+AcT4B49sEjAsIGPMJGAsIGAsJGCMEjA4BYxEBYzEBYwkBYykB4zsEjAsJGN8lYHyPgHERAeP7BIwfEDB+SMD4EQHjYgLGjwkYPyFgXELA+CkB42cEjEsJGD8nYPyCgPFLAsavCBiXETB+TcD4DQHjcgLGbwkYVxAwriRg/I6AcRUB42oCxu8JGNcQMK4lYFxHwPgDAeOPBIzrCRg3EDD+RMC4kYBxEwHjzwSMmwkYtxAw/kLA+CsB41YCxm0EjL8RMP5OwPgHAeN2AsY/CRh3EDDuJGD8i4BxFwHjbgLGvwkYQ4fZz3gIAWMFAsZDCRgPI2CsSMBYiYDxcALGygSMVQgYjyBgPJKAsSoBYzUCxuoEjDUIGGsSMB5FwHg0AWMtAsbaBIzHEDDWIWCsS8BYj4DxWALG+gSMDQgYGxIwNiJgbEzA2ISAMY6AsSkBYzMCxuYEjC0IGFsSMLYiYDyOgLE1AWMbAsbjCRjbEjC2I2A8gYDxRALG9gSM8QSMYQLGBALGRALGJALGZALGFALGVALGNALGdALGDgSMJxEwnkzA2JGA8RQCxlMJGE8jYOxEwHg6AeMZBIydCRi7EDCeScDYlYCxGwHjWQSMZxMwdidg7EHAeA4B47kEjD0JGHsRMJ5HwNibgLEPAeP5BIx9CRj7ETBeQMB4IQHjRQSM/QkYLyZgvISAcQAB46UEjJcRMGYQMGYSMGYRMGYTMOYQMOYSMOYRMA4kYBxEwHg5AeMVBIyDCRivJGC8ioBxCAHjUALGqwkYryFgHEbAeC0B43UEjMMJGK8nYLyBgPFGAsYRBIw3ETDeTMB4CwHjSALGWwkYbyNgvJ2A8Q4CxjsJGO8iYLybgPEeAsZ7CRhHETDeR8B4PwHjAwSMowkYHyRgfIiA8WECxkcIGB8lYHyMgPFxAsYnCBifJGB8ioDxaQLGZwgYxxAwjiVgfJaA8TkCxnEEjM8TML5AwDiegHECAeOLBIwvETBOJGCcRMD4MgHjZALGKQSMrxAwTiVgnEbA+CoB42sEjNMJGGcQML5OwPgGAeNMAsZZBIxvEjDOJmCcQ8D4FgHjXALGeQSM8wkY3yZgXEDAmE/AWEDAWEjAGCFgdAgYiwgYiwkYSwgYSwkY3yFgXEjA+C4B43sEjIsIGN8nYPyAgPFDAsaPCBgXEzB+TMD4CQHjEgLGTwkYPyNgXErA+DkB4xcEjF8SMH5FwLiMgPFrAsZvCBiXEzB+S8C4goBxJQHjdwSMqwgYVxMwfk/AuIaAcS0B4zoCxh8IGH8kYFxPwLiBgPEnAsaNBIybCBh/JmDcTMC4hYDxFwLGXwkYtxIwbiNg/I2A8XcCxj8IGLcTMP5JwLiDgHEnAeNfBIy7CBh3EzD+TcAYqmg/4yEEjBUIGA8lYDyMgLEiAWMlAsbDCRgrEzBWIWA8goDxSALGqgSM1QgYqxMw1iBgrEnAeBQB49EEjLUIGGsTMB5DwFiHgLEuAWM9AsZjCRjrEzA2IGBsSMDYiICxMQFjEwLGOALGpgSMzQgYmxMwtiBgbEnA2IqA8TgCxtYEjG0IGI8nYGxLwNiOgPEEAsYTCRjbEzDGEzCGCRgTCBgTCRiTCBiTCRhTCBhTCRjTCBjTCRg7EDCeRMB4MgFjRwLGUwgYTyVgPI2AsRMB4+kEjGcQMHYmYOxCwHgmAWNXAsZuBIxnETCeTcDYnYCxBwHjOQSM5xIw9iRg7EXAeB4BY28Cxj4EjOcTMPYlYOxHwHgBAeOFBIwXETD2J2C8mIDxEgLGAQSMlxIwXkbAmEHAmEnAmEXAmE3AmEPAmEvAmEfAOJCAcRAB4+UEjFcQMA4mYLySgPEqAsYhBIxDCRivJmC8hoBxGAHjtQSM1xEwDidgvJ6A8QYCxhsJGEcQMN5EwHgzAeMtBIwjCRhvJWC8jYDxdgLGOwgY7yRgvIuA8W4CxnsIGO8lYBxFwHgfAeP9BIwPEDCOJmB8kIDxIQLGhwkYHyFgfJSA8TECxscJGJ8gYHySgPEpAsanCRifIWAcQ8A4loDxWQLG5wgYxxEwPk/A+AIB43gCxgkEjC8SML5EwDiRgHESAePLBIyTCRinEDC+QsA4lYBxGgHjqwSMrxEwTidgnEHA+DoB4xsEjDMJGGcRML5JwDibgHEOAeNbBIxzCRjnETDOJ2B8m4BxAQFjPgFjAQFjIQFjhIDRIWAsImAsJmAsIWAsJWB8h4BxIQHjuwSM7xEwLiJgfJ+A8QMCxg8JGD8iYFxMwPgxAeMnBIxLCBg/JWD8jIBxKQHj5wSMXxAwfknA+BUB4zICxq8JGL8hYFxOwPgtAeMKAsaVBIzfETCuImBcTcD4PQHjGgLGtQSM6wgYfyBg/JGAcT0B4wYCxp8IGDcSMG4iYPyZgHEzAeMWAsZfCBh/JWDcSsC4jYDxNwLG3wkY/yBg3E7A+CcB4w4Cxp0EjH8RMO4iYNxNwPg3AWOokv2MhxAwViBgPJSA8TACxooEjJUIGA8nYKxMwFiFgPEIAsYjCRirEjBWI2CsTsBYg4CxJgHjUQSMRxMw1iJgrE3AeAwBYx0CxroEjPUIGI8lYKxPwNiAgLEhAWMjAsbGBIxNCBjjCBibEjA2I2BsTsDYgoCxJQFjKwLG4wgYWxMwtiFgPJ6AsS0BYzsCxhMIGE8kYGxPwBhPwBgmYEwgYEwkYEwiYEwmYEwRYJTgTAVyarajQ2U/8D/vE7I/94cQMFYgYDyUgPEwAsaKBIyVCBgPJ2CsTMBYhYDxCALGIwkYqxIwViNgrE7AWIOAsSYB41FAxiB28qMJ3mktAsbaBIzHEDDWIWCsS8BYj4DxWALG+gSMDQgYGxIwNiJgbEzA2ISAMY6AsSkBYzMCxuZAxiB28jSC3yNJJ2DsQMB4EgHjyQSMHQkYTyFgPJWA8TQCxk4EjKcTMJ5BwNiZgLELAeOZBIxdCRi7ETCeBf6zK5VD5g/6PRw89+C5QZ4LOzs5SfTPop1dieAdxEdnxaEh8wfzfyMlLHNuarIQb5Lcu4j+WTX90e89x/2fK0ZCoUoqDldRWUUVFUeoOFJFVRXVVFRXUUNFTRVHqThaRS0VtVUco6KOiroq6qk4VkV9FQ1UNFTRSEVjFU1UxKloqqKZiuYqWqhoqaKViuNUtFbRRsXxKtqqaKfiBBUnqmivIl5FWEWCikQVSSqSVaSoSFWRpiJdRQcVJ6k4WUVHFaeoOFXFaSo6qThdxRkqOqvoouJMFV1VdFNxloqzVXRX0UPFOSrOVdFTRS8V56noraKPivNV9FXRT8UFKi5UcZGK/iouVnGJigEqLlVxmYoMFZkqslRkq8hRkasiT8VAFYMi0ZxcHnGTdKj7Uyepsu+7SobvDjd8V9nwXRXDd0cYvjvS8F1Vw3fVDN9VN3xXw/BdTcN3Rxm+O9rwXS3Dd7UN3x1j+K6O4bu6hu/qGb471vBdfcN3DQzfNTR818jwXWPDd00M38UZvmtq+K6Z4bvmhu9aGL5rafiuleG74wzftTZ818bw3fGG79oavmtn+O4Ew3cnGr5rb/gu3vBd2PBdguG7RMN3SYbvkg3fpRi+SzV8l2b4Lt3wXQfDdycZvjvZ8F1Hw3enGL471fDdaYbvOhm+O93w3RmG7zobvuti+O5Mw3ddDd91M3x3luG7sw3fdTd818Pw3TmG7841fNfT8F0vw3fnGb7rbfiuj+G78w3f9TV818/w3QWG7y40fHeR4bv+hu8uNnx3ieG7AYbvLjV8d5nhuwzDd5mG77IM32UbvssxfJdr+C7P8N1Aw3eDDN/pCz5O/dR/6F3/YWj9B8tD7q/97duID3F/nub+jC/fJzxogv2GxEACxjwCxlwCxhwCxmwCxiwCxkwCxgwCxssIGC8lYBxAwHgJAePFBIz9CRgvImC8kIDxAgLGfgSMfQkYzydg7EPA2JuA8TwCxl4EjD0JGM8lYDyHgLEHAWN3AsZWL9rP2JKAsQUBY3MCxmYEjE0JGOMIGJsQMDYmYGxEwNiQgLEBAWN9AsZjCRjrETDWJWCsQ8B4DAFjbQLGWgSMRxMwHkXAWJOAsQYBY3UCxmoEjFUJGI8kYDyCgLEKAeMaAsbvCRhXEzCuImD8joBxJQHjCgLGbwkYlxMwfkPA+DUB4zICxq8IGL8kYPyCgPFzAsalBIyfETB+SsC4hIDxEwLGjwkYFxMwfkTA+CEB4wcEjO8TMC4iYHyPgPFdAsaXXrKf8UUCxgkEjOMJGF8gYHyegHEcAeNzBIzPEjCOJWAcQ8D4DAHj0wSMTxEwPknA+AQB4+MEjI8RMD5KwPgIAePDBIwPETA+SMA4moDxAQLG+wkY7yNgHEXAeC8B4z0EjBkT7We8jIDxUgLGAQSMlxAwXkzA2J+A8SICxgsJGC8gYOxHwNiXgPF8AsY+BIy9CRjPI2DsRcDYk4DxXALGcwgYexAwdidgPJuA8SwCxm4EjF0JGM8kYOxCwNiZgPEMAsbGk+xnbETA2JCAsQEBY30CxmMJGOsRMNYlYKxDwHgMAWNtAsZaBIxHEzAeRcBYk4CxBgFjdQLGagSMVQkYjyRgPIKAsQoBY2UCxsMJGCsRMFYkYDyMgPFQAsYKBIyHEDAuJ2D8hoDxawLGZQSMXxEwfknA+AUB4+cEjEsJGD8jYPyUgHEJAeMnBIwfEzAuJmD8iIDxQwLGDwgY3ydgXETA+B4B47sEjAsJGN8hYCwlYCwhYCwmYCwiYHQIGCMEjM++bD/jWALGMQSMzxAwPk3A+BQB45MEjE8QMD5OwPgYAeOjBIyPEDA+TMD4EAHjgwSMowkYHyBgvJ+A8T4CxlEEjPcSMN5DwHg3AeNdBIx3EjDeQcB4OwHjbQSMtxIwjiRgvHCy/YwXEDD2I2DsS8B4PgFjHwLG3gSM5xEw9iJg7EnAeC4B4zkEjD0IGLsTMJ5NwHgWAWM3AsauBIxnEjB2IWDsTMB4BgHj6QSMnQgYTyNgPJWA8RQCxo4EjCcTMJ5EwFhniv2MxxAw1iZgrEXAeDQB41EEjDUJGGsQMFYnYKxGwFiVgPFIAsYjCBirEDBWJmA8nICxEgFjRQLGwwgYDyVgrEDAeAgBY4iA8W8Cfb2bgHEXAeNfBIw7CRh3EDD+ScC4lGA+fkbA+CkB4xICxk8IGD8mYFxMwPgRAeOHBIwfEDC+T8C4iIDxPQLGdwkYFxIwvkPAWErAWELAWEzAWETA6BAwRggYCwkYCwgY8wkYFxAwvk3AOJ+AcR4B41wCxsdfsZ/xMQLGRwkYHyFgfJiA8SECxgcJGEcTMD5AwHg/AeN9BIyjCBjvJWC8h4DxbgLGuwgY7yRgvIOA8XYCxtsIGG8lYBxJwHgLAePNBIw3ETCOIGC8kYDxBgLG6wkYhxMw9ppqP2NPAsZzCRjPIWDsQcDYnYDxbALGswgYuxEwdiVgPJOAsQsBY2cCxjMIGE8nYOxEwHgaAeOpBIynEDB2JGA8mYDxJALGDgSM6QSMaQSMqQSMKQSMyQSMSQSMiQSM1afZz1iNgLEqAeORBIxHEDBWIWCsTMB4OAFjJQLGigSMhxEwHkrAWIGA8RACxhAB498E++NuAsZdBIx/ETDuJGDcQcD4JwHjdgLGPwgYfydg/I2AcRsB41YCxl8JGH8hYPyQYH/8gIDxfQLGRQSM7xEwvkvAuJCA8R0CxlICxhICxmICxiICRoeAMULAWEjAWEDAmE/AuICA8W0CxvkEjPMIGOcSML5FwDiHgHE2AeObBIyzCBhnEjC+QcD4OgHjA6/az3g/AeN9BIyjCBjvJWC8h4DxbgLGuwgY7yRgvIOA8XYCxtsIGG8lYBxJwHgLAePNBIw3ETCOIGC8kYDxBgLG6wkYhxMwXkfAeC0B4zACxmsIGK8mYBxKwDiEgPEqAsZur9nP2JWA8UwCxi4EjJ0JGM8gYDydgLETAeNpBIynEjCeQsDYkYDxZALGkwgYOxAwphMwphEwphIwphAwJhMwJhEwJhIwJhAwhgkY4wkY2xMwnkjAeAIBYzsCxrYEjJWm289YkYDxMALGQwkYKxAwHkLAGCJg/JtgPu4mYNxFwPgXAeNOAsYdBIx/EjBuJ2D8g4DxdwLG3wgYtxEwbiVg/JWA8RcCxi0EjJsJGH8mYNxEwLiRgPEnAsYNBIzrCRhLCfR1CQFjMQFjEQGjQ8AYIWAsJGAsIGDMJ2BcQMD4NgHjfALGeQSMcwkY3yJgnEPAOJuA8U0CxlkEjDMJGN8gYHydgHEGAeN0AsbXCBhfJWCcRsA4lYDxFQLGKQSMd86wn/EOAsbbCRhvI2C8lYBxJAHjLQSMNxMw3kTAOIKA8UYCxhsIGK8nYBxOwHgdAeO1BIzDCBivIWC8moBxKAHjEALGqwgYryRgHEzAeAUB4+UEjIMIGAcSMOYRMOYSMJ72uv2MpxIwnkLA2JGA8WQCxpMIGDsQMKYTMKYRMKYSMKYQMCYTMCYRMCYSMCYQMIYJGOMJGNsTMJ5IwHgCAWM7Asa2BIzHEzC2IWBsTcB4HAFjKwLGlgSMLQgYmxMw7iZg3EXA+BcB404Cxh0EjH8SMG4nYPyDgPF3AsbfCBi3ETBuJWD8lYDxFwLGLQSMmwkYfyZg3ETAuJGA8ScCxg0EjOsJGH8kYPyBgHEdAeNaAsY1BIzfEzCuJmBcRcCY/4b9jAsIGN8mYJxPwDiPgHEuAeNbBIxzCBhnEzC+ScA4i4BxJgHjGwSMrxMwziBgnE7A+BoB46sEjNMIGKcSML5CwDiFgHEyAePLBIyTCBgnEjC+RMD4IgHjBALG8QSMN820n3EEAeONBIw3EDBeT8A4nIDxOgLGawkYhxEwXkPAeDUB41ACxiEEjFcRMF5JwDiYgPEKAsbLCRgHETAOJGDMI2DMJWDMIWDMJmDMImDMJGDMIGC8jIDxUgLGAQSMabPsZ0wlYEwhYEwmYEwiYEwkYEwgYAwTMMYTMLYnYDyRgPEEAsZ2BIxtCRiPJ2BsQ8DYmoDxOALGVgSMLQkYWxAwNidgbEbA2JSAMY6AsQkBY2MCxkYEjA0JGBsQMP5OwPgbAeM2AsatBIy/EjD+QsC4hYBxMwHjzwSMmwgYNxIw/kTAuIGAcT0B448EjD8QMK4jYFxLwLiGgPF7AsbVBIyrCBi/I2BcScC4goDxWwLG5QSM3xAwfk3AuIyAcfab9jO+ScA4i4BxJgHjGwSMrxMwziBgnE7A+BoB46sEjNMIGKcSML5CwDiFgHEyAePLBIyTCBgnEjC+RMD4IgHjBALG8QSMLxAwPk/AOI6A8TkCxmcJGMcSMI4hYHyGgHHYbPsZryFgvJqAcSgB4xACxqsIGK8kYBxMwHgFAePlBIyDCBgHEjDmETDmEjDmEDBmEzBmETBmEjBmEDBeRsB4KQHjAALGSwgYLyZg7E/AeBEB44UEjBcQMPYjYOxLwBg/x37G9gSMJxIwnkDA2I6AsS0B4/EEjG0IGFsTMB5HwNiKgLElAWMLAsbmBIzNCBibEjDGETA2IWBsTMDYiICxIQFjAwLG+gSMxxIw1iNgrEvAWIeA8RgCxtoEjLUIGH8mYNxEwLiRgPEnAsYNBIzrCRh/JGD8gYBxHQHjWgLGNQSM3xMwriZgXEXA+B0B40oCxhUEjN8SMC4nYPyGgPFrAsZlBIxfETB+ScD4BQHj5wSMSwkYPyNg/JSAcQkB42tv2c/4KgHjNALGqQSMrxAwTiFgnEzA+DIB4yQCxokEjC8RML5IwDiBgHE8AeMLBIzPEzCOI2B8joDxWQLGsQSMYwgYnyFgfJqA8SkCxicJGJ8gYHycgPExAsZHCRgfIWC8Yq79jJcTMA4iYBxIwJhHwJhLwJhDwJhNwJhFwJhJwJhBwHgZAeOlBIwDCBgvIWC8mICxPwHjRQSMFxIwXkDA2I+AsS8B4/kEjH0IGHsTMJ5HwNiLgLEnAeO5BIznEDC2nmc/43EEjK0IGFsSMLYgYGxOwNiMgLEpAWMcAWMTAsbGBIyNCBgbEjA2IGCsT8B4LAFjPQLGugSMdQgYjyFgrE3AWIuA8WgCxqMIGGsSMNYgYKxOwFiNgLEqAeORBIxTCBgnEzC+TMA4iYBxIgHjSwSMLxIwTiBgHE/A+AIB4/MEjOMIGJ8jYHyWgHEsAeMYAsZnCBifFmAMYRkPnnvw3IPnHjz3/7fn4s4O5+n7oUnI/MH830hIkDk3JSxzbmqyEG8S1/s92H8Hzz147sFzD5578NyD5x48185z4X//pqC/AeRMPsRz5hUR90Uc6v7UX8T5/g9XAL8o/X9jz1mJarlNyk1NyA0nhjPjE9Kz0pLjk5KzUtLCaeHktOSchLTExNy0pLTU9Kz01Pj0cFJibjgvOT0xzz1scAT7Yva8h8HuezhMRTXPO5B8L94CsuC9hPf8DyF8Me492/ter4xEf17lL8qrDEV5GMnL38+zEtyzwlcCm+UqoaLwT9Lycl6Ja+rwf2tg+N8aFGG4AcJ53ncxxG26of6m019U9AGgJ95QYHFfDSwa73u42vAeDhUsnP19D7l5+pObMAT4TocCC/pgI/4fzDKNeI3biMP8jah/oaHvu2EBNOcwYCFdK9Sc15I15zXAdzpMqMj9dYTkLO9Z10Vwzeeto+s8637lkHlIhbB1Veb3CtAD8DpgbXj14nD/cNJfHCLzEAn6IfT5h4IL8jpYQ+elDAcW9/VCWvZ6j3ySKDTLc5SNzNENQjm6YR/8BrTMAg6JZAOuyJZ0o7sljfDMHfiLGS60rdxo2ORGeDYY9AY33G1O5HsZAWx2t0HzkO97BPB5bxKqg5s8OccO5PB/3uWNEXxP9Ew7BLptomv9Ol+tx5fvE95T6xXB79G2i22PMrkR2DcjgHkA1l1ykBbEEMA7iKY5J8+AK2LA3+xerrf4t/xbDAY8WmYDfKu9pvnNwGK+RSiR6AF9M1Dy6aL4IAQvur2ff3oH8eX7QJpOmnEkktE00dBSbIjAzYo0qW/8BwkaX75PGMmIfH83wgZSbmC/tXure7Pc5r9ZbjPcLJUwIHuBGBJZ3hvvVuAz3uY5KyEzITknPislUx2VlZSdnpqXmpeVlp6SlZCTHZ+QmZiVmqkOyExITEtNS0zLjk9PzktJzoxPystMTkhPykxBrG+mYkXfnreCbw4JS0LXC/qPPfz/uDf2ct0O5GLdjG4n2IzuQG9GNUL/byvwfqxe6cSKKyyhI92j/9/vEnn/q6A71Xu5S8XdKu5Rca+KUSruU3G/igdUjFbxoIqHVDys4hEVj6p4TMXjKp5Q8aSKp1Q8reIZFWNUjFXxrIrnVIxT8byKF1SMVzHBv2VokMq+7+4yfHe34bt7DN/da/hulOG7+wzf3W/47gHDd6MN3z1o+O4hw3cPG757xPDdo4bvHjN897jhuycM3z1p+O4pw3dPG757xvDdGMN3Yw3fPWv47jnDd+MM3z1v+O4Fw3fjDd9NcL/zfuLcn6e5P+PL9ykzXMp7E94JMwzjw3eBztLPeDfkrOj7uge4Vd9b3rOS9r778KjynRXvyWP4vvKclVCmJsL37/9Z8b76Cj+wn2el5P2fWg2P3r+z0gx1H35wf85KM/ZQ+KF/f1bqP/Rj+OF/e1bqP/Z2+JF/d1bCf5kT4Uf/zVmp/3XmhB/b97Oy/8f8Cj++r2el/s9ZGH5i386K34e5Gn5yX86K36cZHX7qf5+VvI/zPvz0/zoraZ/vjvAz//WspLx/cQ+Fx/y3s1L/1Z0WHvvPZ6X9y/sx/Ow/nJWe96/v2vBz5rPi9+PeDo8znRW/XztA+Pn/e1Z4P/eJ8Av+s3L2ezcJjy97VmI59pzwBKAgC1JIQhWw4YM5O3gh+aJ6Ly+pmKhikoqXVUxWMUXFKyqmqpim4lUVr6mYrmKGitdVvKFipopZKt5UMVvFHBVvqZirYp6K+SreVrFARb6KAhWFKiJ+IfmiQQS8ZPhuouG7SYbvXjZ8N9nw3RTDd68Yvptq+G6a4btXDd+9ZvhuuuG7GYbvXjd894bhu5mG72YZvnvT8N1sw3dzDN+9ZfhuruG7eYbv5hu+e9vw3QLDd/mG7woM3xUavotE5IXkHfu5nJuE5ItAIfkSUEhOBArJSUAh+TJQSE4GCskpQCH5ClBITgUKyWlAIfkqUEi+BhSS04FCcgZQSL4OFJJvAIXkTKCQnAUUkm8CheRsoJCcAxSSbwGF5FygkJwHFJLzgULybaCQXAAUkvlAIVkAFJKFQCEZAQvJgP7bMtG/5wT53x0e4uF0/GJLf3GIzEMk6IfQ56P/sBzyP3Z0gGcVgZO2J0f63LiQ+b9bQheefh/DIv/3XFv/Q9oQ5vmNf6CuOBL9WeJvGv0LK4QSYHHT7FVaxcCmKREqjArg94d85lLDM+/vmd66LHXrUg+K6p7a9H7QjV0MfpY9n3cigsD6cH+BlBf+HVwhhxcCi03qHS6M/PPw29/zF4KHwT/leD8/4RL3uZF5XhgBcrp/jBdZP+8KbTXv/petZs8HfbkiLhv3FYcNuCJbyHvuIFzk30IWRf6ff73ng/7vM0qAW8N7wKJcJJRI9KB8T2i7QXO+D+NMEX2fH8A4U5MlOT/Evc8k3dOfhf7fb9Q+Nz4U0vnS70L/39H/7yqnBhP6U8Hl8X8wzyv3R98llAaa8SMkY4Bm2H9t+vjyfcTMsMX+G3WxsBm22FIzzP27DnIXA2/oj4FrsjdHHwdohi12zTC0l4A0MBdHZJo4hHmXxpX2E3elXeJvwE+EjTX9sg4jSWZ51+1PgFxLhIoM3VjIZ/5UyKT79ACYdJ8ImXSfRQSBPxMw6T4DFvJSy006/Q6XCph0Sy036Za4z43M81IBkw5ZP58LmXSfHwCTDnHZBG3SfeEOwi/9G82XEXmTbglwa/gCWJRfkph0XwCbh9UcWRKxn/ErUnOkzL8AyWKOLPNPsmXC5sgyu82R7GXAyfg1LmkJ3hx9HaA5ssxic2TPX3q7LCLTxCHMuzSuEt+4q8RyfwN+I2yOLLPUHDEls7xrzjfAZl4uVGToxkI+87dC5si3B8Ac+UbIHFkREQReIWCOrACK5pWWmyP6Ha4UMEdWWm6OLHefG5nnlQLmCLJ+vhMyR747AOYI4rIJ2hxZ5Q7C1f6NZnUA5shy4NawCliUq0nMkVUHzZHw8oj9jN+TmiOJ3jNZzJE1/km2RtgcWWO3OZK5BjgZ1+KSVkZbrA3QHFljvzmSuyYi08QhzLs0rhLr3FXiB38DrhM2R9bYbY7krgGuOeuAzfyDUJGhGwv5zD8KmSM/HgBzZJ2QObI+Igi8XsAcWQ8UzRssN0f0O9wgYI5ssNwc+cF9bmSeNwiYI8j6+UnIHPnpAJgjiMsmaHNkozsIN/k3mk0BmCM/ALeGjcCi3ERijmw8aI6Ef4jYz/gzqTmS5D2TxRzZ7J9km4XNkc12myNpm4GTcQsuaUneHG0J0BzZbL85krM5ItPEIcy7NK4Sv7irxK/+BvxF2BzZbLc5krMZuOb8AmzmX4WKDN1YyGfeKmSObD0A5sgvQubItogg8DYBc2QbUDT/Zrk5ot/hbwLmyG+WmyO/us+NzPNvAuYIsn5+FzJHfj8A5gjisgnaHPnDHYTb/RvN9gDMkV+BW8MfwKLcTmKO/HHQHAn/GrGf8U9Sc+S//gU+8eX7iJkjO/yTbIewObLDbnMkZQdwMu7EJS3Zm6OdAZojO+w3R7J3RGSaOIR5l8ZV4i93ldjlb8C/hM2RHXabI9k7gGvOX8Bm3iVUZOjGQj7zbiFzZPcBMEf+EjJH/o4IAv8tYI78DRTNIcduc+Q/U9bBmyPe544v50efgTZHdrnPjcyzDrQ5gqyfQ4A58Q4rfW5cKFhzBHHZBG2OVHCiPw91QmU3mkMdeXNkF3BrqODgivJQh8McqeDgmofVHAFueGKMhzmc5kiK90wWc6SiEyo7yfQXkuaIPt9icySpooPjquTgisubI31uXCgYc0S/D8vNkayKjkwThzDv0rhKHO5Ef1Z2QmUbUP+CpDmiX5bF5kgWoAH3rjmHO7hnrCxUZOjGQj5zFUfGHKniBG+OHA5+lj2fIxxBYH042hw5wsENlCOBxSb1DjUj2hw5EvcORcyRyu5zI/N8pIM3R5D1UxWYE++w0ufGhYI1RxCXTdDmSDUn+rO6Eyq70VR35M2Ryg5ua6jm4IqyulAi0YOymoNrHlZzBLjhiTHWQDIGaI6kes9kMUdqOqGyk0x/IWmO6PMtNkcSajo4rqMcXHF5c6TPjQsFY47o92G5OZJZ05Fp4hDmXRpXiaOd6M9aTqhsA+pfkDRH9Muy2BzJBDTg3jXnaAf3jLWEigzdWMhnru3ImCO1neDNkaPBz7Lnc4wjCKwPR5sjxzi4gVIHWGxS71Azos2ROrh3KGKO1HKfG5nnOg7eHEHWT11gTrzDSp8bFwrWHEFcNkGbI/Wc6M9jnVDZjeZYR94cqeXgtoZ6Dq4ojxVKJHpQ1nNwzcNqjgA3PDHG+kjGAM2RNO+ZLOZIAydUdpLpLyTNEX2+xeZIfAMHx9XQwRWXN0f63LhQMOaIfh+WmyPpDRyZJg5h3qVxlWjkRH82dkJlG1D/gqQ5ol+WxeZIOqAB9645jRzcMzYWKjJ0YyGfuYkjY440cYI3RxqBn2XPJ84RBNaHo82ROAc3UJoCi03qHWpGtDnSFPcORcyRxu5zI/Pc1MGbI8j6aQbMiXdY6XPjQsGaI4jLJmhzpLkT/dnCCZXdaFo48uZIYwe3NTR3cEXZQiiR6EHZ3ME1D6s5AtzwxBhbIhkDNEfSvWeymCOtnFDZSaa/kDRH9Pn2miO5ua0cHNdxDq64vDnS58aFgjFH9Puw3BxJa+XINHEI8y6Nq0RrJ/qzjRMq24D6FyTNEf2yLDZHyiSzvGtOawf3jG2EigzdWMhnPt6RMUeOd4I3R1qDn2XPp60jCKwPR5sjbR3cQGkHLDapd6gZ0eZIO9w7FDFH2rjPjcxzOwdvjiDr5wRgTrzDSp8bFwrWHEFcNkGbIyc60Z/tnVDZjaa9I2+OtHFwW8OJDq4o2wslEj0oT3RwzcNqjgA3PDHGeCRjgOZIpvdMFnMk7ITKTjL9haQ5os+32BzJDjs4rgQHV1zeHOlz40LBmCP6fVhujqSGHZkmDmHepXGVSHSiP5OcUNkG1L8gaY7ol2WxOZIKaMC9a06ig3vGJKEiQzcW8pmTHRlzJNkJ3hxJBD/Lnk+KIwisD0ebIykObqCkAotN6h1qRrQ5kop7hyLmSJL73Mg8pzp4cwRZP2nAnHiHlT43LhSsOYK4bII2R9Kd6M8OTqjsRtPBkTdHkhzc1pDu4Iqyg1Ai0YMy3cE1D6s5AtzwxBhPQjIGaI5kec9kMUdOdkJlJ5n+QtIc0edbbI5knuzguDo6uOLy5kifGxcKxhzR78NycyTlZEemiUOYd2lcJU5xoj9PdUJlG1D/gqQ5ol+WxeZICqAB9645pzi4ZzxVqMjQjYV85tMcGXPkNCd4c+QU8LPs+XRyBIH14WhzpJODGyinA4tN6h1qRrQ5cjruHYqYI6e6z43M8+kO3hxB1s8ZwJx4h5U+Ny4UrDmCuGyCNkc6O9GfXZxQ2Y2miyNvjpzq4LaGzg6uKLsIJRI9KDs7uOZhNUeAG54Y45lIxgDNkWzvmSzmSFcnVHaS6S8kzRF9vsXmSFpXB8fVzcEVlzdH+ty4UDDmiH4flpsjyV0dmSYOYd6lcZU4y4n+PNsJlW1A/QuS5oh+WRabI8mABty75pzl4J7xbKEiQzcW8pm7OzLmSHcneHPkLPCz7Pn0cASB9eFoc6SHgxso5wCLTeodaka0OXIO7h2KmCNnu8+NzPM5Dt4cQdbPucCceIeVPjcuFKw5grhsgjZHejrRn72cUNmNppcjb46c7eC2hp4Orih7CSUSPSh7OrjmYTVHgBueGON5SMYAzZEc75ks5khvJ1R2kukvJM0Rfb7F5khKbwfH1cfBFZc3R/rcuFAw5oh+H5abI0m9HZkmDmHepXGVON+J/uzrhMo2oP4FSXNEvyyLzZEkQAPuXXPOd3DP2FeoyNCNhXzmfo6MOdLPCd4cOR/8LHs+FziCwPpwtDlygYMbKBcCi03qHWpGtDlyIe4dipgjfd3nRub5QgdvjiDr5yJgTrzDSp8bFwrWHEFcNkGbI/2d6M+LnVDZjeZiR94c6evgtob+Dq4oLxZKJHpQ9ndwzcNqjgA3PDHGS5CMAZojud4zWcyRAU6o7CTTX0iaI/p8i82RpAEOjutSB1dc3hzpc+NCwZgj+n1Ybo4kDnBkmjiEeZfGVeIyJ/ozwwmVbUD9C5LmiH5ZFpsjiYAG3LvmXObgnjFDqMjQjYV85kxHxhzJdII3Ry4DP8ueT5YjCKwPR5sjWQ5uoGQDi03qHWpGtDmSjXuHIuZIhvvcyDxnO3hzBFk/OcCceIeVPjcuFKw5grhsgjZHcp3ozzwnVHajyXPkzZEMB7c15Dq4oswTSiR6UOY6uOZhNUeAG54Y40AkY4DmSJ73TBZzZJATKjvJ9BeS5og+32JzJGGQg+O63MEVlzdH+ty4UDDmiH4flpsjZXIWX75PmSYOYd6lcZW4won+HOyEyjag/gVJc0S/LIvNEUQD7l1zrnBwzzhYqMjQjYV85isdGXPkSid4c+QK8LPs+VzlCALrw9HmyFUObqAMARab1DvUjGhzZAjuHYqYI4Pd50bmeYiDN0eQ9TMUmBPvsNLnxoWCNUcQl03Q5sjVTvTnNU6o7EZzjSNvjgx2cFvD1Q6uKK8RSiR6UF7t4JqH1RwBbnhijMOQjMGZI+F475ks5si1TqjsJNNfSJoj+nyLzZH4ax0c13UOrri8OdLnxoWCMUf0+7DcHAlf68g0cQjzLo2rxHAn+vN6J1S2AfUvSJoj+mVZbI6EAQ24d80Z7uCe8XqhIkM3FvKZb3BkzJEbnODNkeHgZ9nzudERBNaHo82RGx3cQBkBLDapd6gZ0ebICNw7FDFHrnefG5nnEQ7eHEHWz03AnHiHlT43LhSsOYK4bII2R252oj9vcUJlN5pbHHlz5HoHtzXc7OCK8hahRKIH5c0OrnlYzRHchifHOBLJGKA58l+LN758HzFz5FYnVHaS6S8kzRF9vr3mSE7urQ6O6zYHV1zeHOlz40LBmCP6fVhujsTf6sg0cQjzLo2rxO1O9OcdTqhsA+pfkDRH9Muy2ByJBzTg3jXndgf3jHcIFRm6sZDPfKcjY47c6QRvjtwOfpY9n7scQWB9ONocucvBDZS7gcUm9Q41I9ocuRv3DkXMkTvc50bm+W4Hb44g6+ceYE68w0qfGxcK1hxBXDZBmyP3OtGfo5xQ2Y1mlCNvjtzh4LaGex1cUY4SSiR6UN7r4JqH1RzBbXhyjPchGQM0RxK8Z7KYI/c7obKTTH8haY7o8y02R7Lvd3BcDzi44vLmSJ8bFwrGHNHvw25zJDfvfkemiUOYd2lcJUY70Z8POqGyDah/QdIc0S/LXnOkbDLLu+aMdnDP+KBQkaEbC/nMDzky5shDTvDmyGjws+z5POwIAuvD0ebIww5uoDwCLDapd6gZ0ebII7h3KGKOPOg+NzLPjzh4cwRZP48Cc+IdVvrcuFCw5gjisgnaHHnMif583AmV3Wged+TNkQcd3NbwmIMryseFEokelI85uOZhNUdwG54c4xNIxgDNkUTvmSzmyJNOqOwk019ImiP6fIvNkcwnHRzXUw6uuLw50ufGhYIxR/T7sNwcyX3SkWniEOZdGleJp53oz2ecUNkG1L8gaY7ol2WxOZILaMC9a87TDu4ZnxEqMnRjIZ95jCNjjoxxgjdHngY/y57PWEcQWB+ONkfGOriB8iyw2KTeoWZEmyPP4t6hiDnyjPvcyDw/6+DNEWT9PAfMiXdY6XPjQsGaI4jLJmhzZJwT/fm8Eyq70TzvyJsjzzi4rWGcgyvK54USiR6U4xxc87CaI7gNT47xBSRjgOZIkvdMFnNkvBMqO8n0F5LmiD7fYnMkbbyD45rg4IrLmyN9blwoGHNEvw/LzZGc8Y5ME4cw79K4SrzoRH++5ITKNqD+BUlzRL8si82RHEAD7l1zXnRwz/iSUJGhGwv5zBMdGXNkohO8OfIi+Fn2fCY5gsD6cLQ5MsnBDZSXgcUm9Q41I9oceRn3DkXMkZfc50bm+WUHb44g62cyMCfeYaXPjQsFa44gLpugzZEpTvTnK06o7EbziiNvjrzk4LaGKQ6uKF8RSiR6UE5xcM3Dao7gNjw5xqlIxgDNkWTvmSzmyDQnVHaS6S8kzRF9vsXmSMo0B8f1qoMrLm+O9LlxoWDMEf0+LDdHsqc5Mk0cwrxL4yrxmhP9Od0JlW1A/QuS5oh+WRabI9mABty75rzm4J5xulCRoRsL+cwzHBlzZIYTvDnyGvhZ9nxedwSB9eFoc+R1BzdQ3gAWm9Q71Ixoc+QN3DsUMUemu8+NzPMbDt4cQdbPTGBOvMNKnxsXCtYcQVw2QZsjs5zozzedUNmN5k1H3hyZ7uC2hlkOrijfFEokelDOcnDNw2qO4DY8OcbZSMYAzZEU75ks5sgcJ1R2kukvJM0Rfb7F5kjSHAfH9ZaDKy5vjvS5caFgzBH9Piw3R7LmODJNHMK8S+MqMdeJ/pznhMo2oP4FSXNEvyyLzZEsQAPuXXPmOrhnnCdUZOjGQj7zfEfGHJnvBG+OzAU/y57P244gsD4cbY687eAGygJgsUm9Q82INkcW4N6hiDkyz31uZJ4XOHhzBFk/+cCceIeVPjcuFKw5grhsgjZHCpzoz0InVHajKXTkzZF5Dm5rKHBwRVkolEj0oCxwcM3Dao7gNjw5xgiSMUBzJNV7Jos54jihspNMfyFpjujzLTZHEhwHx1Xk4IrLmyN9blwoGHNEvw/LzZFMx5Fp4hDmXRpXiWIn+rPECZVtQP0LkuaIflkWmyOZgAbcu+YUO7hnLBEqMnRjIZ+51JExR0qd4M2RYvCz7Pm84wgC68PR5sg7Dm6gLAQWm9Q71Ixoc2Qh7h2KmCMl7nMj87zQwZsjyPp5F5gT77DS58aFgjVHEJdN0ObIe0705yInVHajWeTImyMlDm5reM/BFeUioUSiB+V7Dq55WM0R3IYnx/g+kjFAcyTNeyaLOfKBEyo7yfQXkuaIPt9icyT+AwfH9aGDKy5vjvS5caFgzBH9Piw3R9I/cGSaOIR5l8ZV4iMn+nOxEyrbgPoXJM0R/bIsNkfSAQ24d835yME942KhIkM3FvKZP3ZkzJGPneDNkY/Az7Ln84kjCKwPR5sjnzi4gbIEWGxS71Azos2RJbh3KGKOLHafG5nnJQ7eHEHWz6fAnHiHlT43LhSsOYK4bII2Rz5zoj+XOqGyG81SR94cWezgtobPHFxRLhVKJHpQfubgmofVHMFteHKMnyMZAzRH0r1nspgjXzihspNMfyFpjujz7TVHsnO/cHBcXzq44vLmSJ8bFwrGHNHvw3JzJO0LR6aJQ5h3aVwlvnKiP5c5obINqH9B0hzRL8ticyQN0IB715yvHNwzLhMqMnRjIZ/5a0fGHPnaCd4c+Qr8LHs+3ziCwPpwtDnyjYMbKMuBxSb1DjUj2hxZjnuHIubIMve5kXle7uDNEWT9fAvMiXdY6XPjQsGaI4jLJmhzZIUT/bnSCZXdaFY68ubIMge3NaxwcEW5UiiR6EG5wsE1D6s5gtvw5Bi/QzIGaI5kes9kMUdWOaGyk0x/IWmO6PMtNkeyVzk4rtUOrri8OdLnxoWCMUf0+7DcHEld5cg0cQjzLo2rxPdO9OcaJ1S2AfUvSJoj+mVZbI6kAhpw75rzvYN7xjVCRYZuLOQzr3VkzJG1TvDmyPfgZ9nzWecIAuvD0ebIOgc3UH4AFpvUO9SMaHPkB9w7FDFH1rjPjczzDw7eHEHWz4/AnHiHlT43LhSsOYK4bII2R9Y70Z8bnFDZjWaDI2+OrHFwW8N6B1eUG4QSiR6U6x1c87CaI7gNT47xJyRjgOZIlvdMFnNkoxMqO8n0F5LmiD7fYnMkc6OD49rk4IrLmyN9blwoGHNEvw/LzZGUjY5ME4cw79K4SvzsRH9udkJlG1D/gqQ5ol+WxeZICqAB9645Pzu4Z9wsVGToxkI+8xZHxhzZ4gRvjvwMfpY9n18cQWB9ONoc+cXBDZRfgcUm9Q41I9oc+RX3DkXMkc3ucyPz/KuDN0eQ9bMVmBPvsNLnxoWCNUcQl03Q5sg2J/rzNydUdqP5zZE3RzY7uK1hm4Mryt+EEokelNscXPOwmiO4DU+O8XckY4DmSLb3TBZz5A8nVHaS6S8kzRF9vsXmSNofDo5ru4MrLm+O9LlxoWDMEf0+LDdHkv9wZJo4hHmXxlXiTyf6c4cTKtuA+hckzRH9siw2R5IBDbh3zfnTwT3jDqEiQzcW8pl3OjLmyE4neHPkT/Cz7Pn85QgC68PR5shfDm6g7AIWm9Q71Ixoc2QX7h2KmCM73OdG5nmXgzdHkPWzG5gT77DS58aFgjVHEJdN0ObI3477PxSFym40+os4HwDaHNnh4LaGvx3gUCviMEe8zxxfzg+rOYLb8OQYDykCMgZojuR4z2QxRyr4J5n+QtIc0edbbI6kVCjCcR1ahCsub44OLQrOHNHvw3JzJKlCkUwThzDv0rhKHFYU/VnR34D6FyTNEf2yLDZHkgANuHfNOQzYzBWFigzdWMhnrlQkY45UKgreHDkM/Cx7PocXCQLrw9HmyOG4/SpcGVhsUu+wchHeHKmM3FFDeHOkovvcyDxXLsKbI8j6qQLMiXdYVSkK3hxBXDZBmyNHuIPwSP9Gc2SRvDlSEbg1HAEsyiNJzJEjgM3Dao5ULLKfsSqpOZLrPZPFHKnmn2TVhM2RanabI0nVgJOxOk5P5XpzVD1Ac6Sa/eZIYrUimSYOYd6lcZWo4a4SNf0NWEPYHKlmtzmSCGjAvWtODWAz1xQqMnRjIZ/5KCFz5KgDYI7UEDJHji4SBD5awBw5Giiaa1lujuh3WEvAHKlluTlS031uZJ5rCZgjyPqpLWSO1D4A5gjisgnaHDnGHYR1/BtNnSJ5c6QmcGs4BliUdUjMkWMOmiPhmkX2M9aVNkfQ6+h1ShoMx8mDhBvd89A35nUwgyWcd2MEX0gCjZTsXWPr+ad2vaL/u5eDX3pCPeCkPRbcvejO3dMIaPPrOnBzobgeTjtEpAnQ768+cE3uiXvmMPD9JUvUs+63+gJmLnIm1Aee1UBIXjTYh+24vOwNge/BW+M2zYggzHBdmw2L/t/5KPaQ4VPOs40SrZHL3th/2TcSNJ33vDTQZrlXpjUCFnXjIplkordp5DM3ETJ3mxwAc7eRkLkbVyQIHCdg7sYBt5mmlpu7+h02FTB3m1pu7jZ2nxuZ56YC5i6yfpoJbV/NDoC5i7hsgjZ3m7uDsIV/c2ixD+trfPk+ZV5YebeG5sCibEFi7jY/aO6GJTY8NGNLNCP65pmg/CEH6BHpsz4SMHM/AjK2EpIGaI0PLJ5wK+CQPM5yX1Z7sscJ+FiRiMxgKC9Xa2A+/tufrkXnqSGwvg24Ir+p0sa/LbUp+uc/XVs+8z4vT7+gNkX47Qv44lPbAAv5+CLYuyvznx4fXxTcn67dkzP0uW2ELi1QsxglRltXYrTzN01bQXNSqmkAhb5XsrQFNk07EqMT+cwnCBmdJxwAo7OtkNF5YpEg8IkCRueJwHWgveVGp36H7QWMzvaWG53t3OdG5rl9Ed7oRNZPvJDRGX8AjE7EZRO00Rl2B2GCfwtJKJI3OtsBt4YwsCgTSIzO8EGjMyyx4aEZE203Oscr82Yx0ETUZ30lYHR+BWRMIjE6gcUTTgIOyWQCozNZwOgsjMgMhvJypRw0OhMMuCJGZ6p/W0oVNjpT7TY6k1OBhZyGMzrL/DUCaQEbnal4ozMhldDoTHclRgd/06QLG50CTZMAKPS9kiUd2DQdSIxO5DOfJGR0nnQAjM50IaPz5CJB4JMFjM6TgetuR8uNTv0OOwoYnR0tNzo7uM+NzHPHIrzRiayfU4SMzlMOgNGJuGyCNjpPdQfhaf4t5LQieaOzA3BrOBVYlKeRGJ2nHjQ6wxIbHpqxk+1G5wvKvFkGNBH1Wd8LGJ3fAxlPJzE6gcUTPh04JM8gMDrPEDA6CyIyg6G8XJ0PGp2JBlwRo7OLf1vqImx0drHb6EzsAizkM3FGZ543R2cGbHR2wRudZd5zfDk/oRC8WYwSo6srMbr5m6arsNEp0DSIQt8rWboCm6YbidGJfOazhIzOsw6A0dlVyOg8u0gQ+GwBo/Ns4Lrb3XKjU7/D7gJGZ3fLjc5u7nMj89y9CG90Iuunh5DR2eMAGJ2IyyZoo/McdxCe699Czi2SNzq7AbeGc4BFeS6J0XnOQaMzLLHhoRl72m50Pq/MmzVAE1Gf9bOA0fkzkLEXidEJLJ5wL+CQPI/A6DxPwOjMj8gMhvJy9T5odCYZcEWMzj7+bamPsNHZx26jM9wHWMjnA8/y5uj8gI3OPnijM6kPodHZ15UY/fxN01fY6BRomiRAoe+VLH2Bhd6PxOhEPvMFQkbnBQfA6OwrZHReWCQIfKGA0Xkh8Fa6yHKjU7/DiwSMzossNzr7uc+NzPNFRXijE1k//YWMzv4HwOhEXDZBG50Xu4PwEv8WckmRvNHZD7g1XAwsyktIjM6LDxqdYYkND804wHajc5wybzYDTUR91p8CRuefQMZLSYxOYPGELwUOycsIjM7LBIzOBRGZwVBeroyDRmeyAVfE6Mz0b0uZwkZnprDRWd7iywSelSUkCbICNjoz8UZnciah0ZntSowcf9NkCxudAk2TDCj0vZIlG9g0OSRGJ/KZc4WMztwDYHRmCxmdeUWCwHkCRmcecN0daLnRqd/hQAGjc6DlRmeO+9zIPA8swhudyPoZJLTVDDoARifisgna6LzcHYRX+LeQK4rkjc4c4NZwObAoryAxOi8/aHSGJTY8NONg243O55R5swNoIuqzDnPwnPpMFOOVJEYnsHjCVwKH5FUERudVAkbn2xGZwVBeriEHjc4UA66I0TnUvy0NFTY6h1pqdO75uzCHAgv5auDA8+bo6oCNzqF4ozNlKKHReY0rMYb5m+YaYaNToGlSAIW+V7JcA2yaYSRGJ/KZrxUyOq89AEbnNUJG53VFgsDXCRid1wGn/3DLjU79DocLGJ3DLTc6h7nPjczz8CK80Ymsn+uFjM7rD4DRibhsgjY6b3AH4Y3+LeTGInmjcxhwa7gBWJQ3khidNxw0OsMSGx6acYTtRuezyryp6OAKU59Vw8Fz1gAy3kRidAKLJ3wTcEjeTGB03ixgdM6PyAyG8nLdctDoTDXgihidI/3b0khho3Ok3UZn9khgId+KK4gEb45uDdjoHIk3OlNHEhqdt7kS43Z/09wmbHQKNE0qoND3SpbbgE1zO4nRiXzmO4SMzjsOgNF5m5DReWeRIPCdAkbnncB19y7LjU79Du8SMDrvstzovN19bmSe7yrCG53I+rlbyOi8+wAYnYjLJmij8x53EN7r30LuLZI3Om8Hbg33AIvyXhKj856DRmdYYsNDM46y3egcq8ybmg6uMPVZ9R08Z30g430kRieweML3AYfk/QRG5/0CRue8iMxgKC/XAweNzjQDrojROdq/LY0WNjpH2210Zo4GFvKDuIIo4188GLDRORpvdKaNJjQ6H3IlxsP+pnlI2OgUaJo0QKHvlSwPAZvmYRKjE/nMjwgZnY8cAKPzISGj89EiQeBHBYzOR4Hr7mOWG536HT4mYHQ+ZrnR+bD73Mg8P1aENzqR9fO4kNH5+AEwOhGXTdBG5xPuIHzSv4U8WSRvdD4M3BqeABblkyRG5xMHjc6wxIaHZnzKdqNzjDJvGji4wtRntXTwnC2BjE+TGJ3A4gk/DRySzxAYnc8IGJ1zIzKDobxcYw4anekGXBGjc6x/WxorbHSOtdvoTBsLLORncQWR5M3RswEbnWPxRmf6WEKj8zlXYozzN81zwkanQNOkAwp9r2R5Dtg040iMTuQzPy9kdD5/AIzO54SMzheKBIFfEDA6XwCuu+MtNzr1OxwvYHSOt9zoHOc+NzLP44vwRieyfiYIGZ0TDoDRibhsgjY6X3QH4Uv+LeSlInmjcxxwa3gRWJQvkRidLx40OsMSGx6acaLtRuczyrxp5eAKU58V7+A544GMk0iMTmDxhCcBh+TLBEbnywJG51sRmcFQXq7JB43OTAOuiNE5xb8tTRE2OqfYbXSmTAEW8itF2KTtydErARudU/BGZ+YUQqNzqisxpvmbZqqw0SnQNJmAQt8rWaYCm2YaidGJfOZXhYzOVw+A0TlVyOh8rUgQ+DUBo/M14Lo73XKjU7/D6QJG53TLjc5p7nMj8zy9CG90IutnhpDROeMAGJ2IyyZoo/N1dxC+4d9C3iiSNzqnAbeG14FF+QaJ0fn6QaMzLLHhoRln2m50Pq3Mm7CDK0x91kkOnvMkIOMsEqMTWDzhWcAh+SaB0fmmgNE5JyIzGMrLNfug0ZllwBUxOuf4t6U5wkbnHLuNzqQ5wEJ+C1cQKd4cvRWw0TkHb3RmzSE0Oue6EmOev2nmChudAk2TBSj0vZJlLrBp5pEYnchnni9kdM4/AEbnXCGj8+0iQeC3BYzOt4Hr7gLLjU79DhcIGJ0LLDc657nPjczzgiK80Ymsn3whozP/ABidiMsmaKOzwB2Ehf4tpLBI3uicB9waCoBFWUhidBYcNDrDEhsemjFiu9H5lDJvTnZwhanPOtPBc54JZHRIjE5g8YQd4JAsIjA6iwSMztkRmcFQXq7ig0ZntgFXxOgs8W9LJcJGZ4ndRmdCCbCQS3EFkerNUWnARmcJ3ujMLiE0Ot9xJcZCf9O8I2x0CjRNNqDQ90qWd4BNs5DE6EQ+87tCRue7B8DofEfI6HyvSBD4PQGj8z3gurvIcqNTv8NFAkbnIsuNzoXucyPzvKgIb3Qi6+d9IaPz/QNgdCIum6CNzg/cQfihfwv5sEje6FwI3Bo+ABblhyRG5wcHjc6wxIaHZvzIdqPzSWXedHVwhanPOs/Bc54HZFxMYnQCiye8GDgkPyYwOj8WMDrfjMgMhvJyfXLQ6Mwx4IoYnUv829ISYaNzid1GZ/wSYCF/iiuING+OPg3Y6FyCNzpzlhAanZ+5EmOpv2k+EzY6BZomB1DoeyXLZ8CmWUpidCKf+XMho/PzA2B0fiZkdH5RJAj8hYDR+QVw3f3ScqNTv8MvBYzOLy03Ope6z43M85dFeKMTWT9fCRmdXx0AoxNx2QRtdC5zB+HX/i3k6yJ5o3MpcGtYBizKr0mMzmUHjc6wxIaHZvzGdqPzCWXe9HZwhanPusTBc14CZFxOYnQCiye8HDgkvyUwOr8VMDpnRWQGQ3m5Vhw0OnMNuCJG50r/trRS2OhcabXRmZu7EljI3+EKIt2bo+8CNjpX4o3OMu85vpyfUAjeLEaJscqVGKv9TbNK2OgUaBpEoe+VLKuATbOaxOhEPvP3Qkbn9wfA6FwlZHSuKRIEXiNgdK4BrrtrLTc69TtcK2B0rrXc6FztPjcyz2uL8EYnsn7WCRmd6w6A0Ym4bII2On9wB+GP/i3kxyJ5o3M1cGv4AViUP5IYnT8cNDrDEhsemnG97Ubn48q8GeDgClOfNdDBcw4EMm4gMTqBxRPeABySPxEYnT8JGJ0zIzKDobxcGw8anXkGXBGjc5N/W9okbHRustvozN4ELOSfcQWR6c3RzwEbnZvwRmfeJkKjc7MrMbb4m2azsNEp0DR5gELfK1k2A5tmC4nRiXzmX4SMzl8OgNG5Wcjo/LVIEPhXAaPzV+C6u9Vyo1O/w60CRudWy43OLe5zI/O8tQhvdCLrZ5uQ0bntABidiMsmaKPzN3cQ/u7fQn4vkjc6twC3ht+ARfk7idH520GjMyyx4aEZ/7Dd6HxMmTeDHFxh6rOGOXjOYUDG7SRGJ7B4wtuBQ/JPAqPzTwGj842IzGAoL9eOmDc6wxLezZ5PGaNzp39b2ilsdO602+jM3Aks5L9whZzlzdFfARudO+FGZzh+J6HRucuVGLv9TbNL2OjEN03ZBJRXsuwCNs1uEqMT+cx/Cxmdfx8Ao3OXkNEZKhYE1oejjU59pv+s/fyEDym22+jU71Azoo3OQ4qxwwAt43a7z43M8yHFeKMTWT8VgDnxDit9blwoWKMTcdkEbXQe6g7Cw4pDZbeQw4rljc7dwK3hUGBRHlYsk0j0oDwU2DysRqfEhodmrAi+eOA3z6PKvLnWwRWmPmukg+ccCWSsVIwvHP1BG2vA4glXAg7Jw8HvT8Lo1IzofLwekRkM5eWqDMwHqdEpsTXt+ZQxOqv4t6UqxbJGZ5Viq43OtCrAQj4CV8jZ3hwdURys0VmlGG50hqsIXVqgZjFKjCNdiVHV3zT6FySNTnzTlE1AeSXLkcCmqSpUGGijE/nM1YpljM5qxcEbnUeCn2XPp3qxIHB1AaOzOnDdrQEsNql3WEPA6KxhudFZ1X1uZJ5rFOONTmT91BQyOmsWB290Ii6boI3Oo9xBeLR/Czm6WN7orArcGo4CFuXRJEbnUcDm0UXBaHRKbHhoxlq2G52PKPPmVgdXmPqs+xw8531AxtoChaM/aGMNWDzh2sAheQyB0XmMgNE5IyIzGMrLVeeg0ZlgwBUxOuv6t6W6wkZn3WKrjc6UusBCrocr5BxvjuoFbHTWLYYbnQl1hS4tULMYJcaxrsSo72+aY4tljU5805RNQHkly7HApqlPYnQin7kB2BzcU5cNDoDReSz4WfZ8GhYLAjcUMDobAtfdRsBik3qHjQSMzkbgYfBPOd7PT7i++9zIPDcqxhudyPppDMyJd1g1Lg7e6ERcNkEbnU3cQRjn30LiiuWNzvrAraEJsCjjSIzOJsDm0UXBaHRKbHhoxqa2G50PK/PmfgdXmPqsJxyBfzQJyNhMoHD0B22sAYsn3Aw4JJsTGJ3NBYzO6RGZwVBerhYHjc5EA66I0dnSvy21FDY6WxZbbXQmtQQWcitcIed6c9QqYKOzZTHc6ExsKXRpgZrFKDGOcyVGa3/THFcsa3Tim6ZsAsorWY4DNk1rEqMT+cxtwObgnrpscwCMzuPAz7Lnc3yxIPDxAkbn8cB1ty2w2KTeYVsBo7MteBj8U4738xNu7T43Ms9ti/FGJ7J+2gFz4h1W7YqDNzoRl03QRucJ7iA80b+FnFgsb3S2Bm4NJwCL8kQSo/MEYPPoomA0OiU2PDRje9uNzoeUefOkgytMfdYLDp7zBSBjvEDh6A/aWAMWTzgeOCTDBEZnWMDofC0iMxjKy5Vw0OhMMuCKGJ2J/m0pUdjoTCy22uhMSAQWchKukPO8OUoK2OhMLIYbnUmJQpcWqFmMEiPZlRgp/qZJLpY1OvFNUzYB5ZUsycCmSSExOpHPnAo2B/fUZeoBMDqTwc+y55NWLAicJmB0pgHX3XRgsUm9w3QBozMdPAz+Kcf7+QmnuM+NzHN6Md7oRNZPB2BOvMOqQ3HwRifisgna6DzJHYQn+7eQk4vljc4U4NZwErAoTyYxOk8CNo8uCkajU2LDQzN2tN3ofFCZN+MdXGHqs6Y6eM6pQMZTBApHf9DGGrB4wqcAh+SpBEbnqQJG56sRmcFQXq7TDhqdyQZcEaOzk39b6iRsdHYqttrojO8ELOTTYYUcLiMJTg/Y6OxUDDc6kzsJXVqgZjFKjDNcidHZ3zRnFMsanfimKZuA8kqWM4BN05nE6EQ+cxewObinLrscAKPzDPCz7PmcWSwIfKaA0XkmcN3tCiw2qXfYVcDo7AoeBv+U4/38hDu7z43Mc9divNGJrJ9uwJx4h1W34uCNTsRlE7TReZY7CM/2byFnF8sbnZ2BW8NZwKI8m8ToPAvYPLooGI1OiQ0PzdjddqNztDJvpjm4wtRnzXbwnLOBjD0ECkd/0MYasHjCPYBD8hwCo/McAaNzWkRmMJSX69yDRmeKAVfE6Ozp35Z6ChudPYttNjpzcnsCC7kXzugMe3PUK2Cjs2cx3OhM6Sl0aYGaxSgxznMlRm9/05xXLGt04pumbALKK1nOAzZNbxKjE/nMfcDm4J667HMAjM7zwM+y53N+sSDw+QJG5/nAdbcvsNik3mFfAaOzL3gY/FOO9/MT7u0+NzLPfYvxRieyfvoBc+IdVv2Kgzc6EZdN0EbnBe4gvNC/hVxYLG909gZuDRcAi/JCEqPzAmDz6KJgNDolNjw040W2G50PKPNmjoMrTH1WxMFzRoCM/QUKR3/QxhqweML9gUPyYgKj82IBo3NqRGYwlJfrkoNGZ6oBV8ToHODflgYIG50Diq02OrMHAAv5UpzRmeDN0aUBG50DiuFGZ+oAoUsL1CxGiXGZKzEy/E1zWbGs0YlvmrIJKK9kuQzYNBkkRifymTPB5uCeusw8AEbnZeBn2fPJKhYEzhIwOrOA6242sNik3mG2gNGZDR4G/5Tj/fyEM9znRuY5uxhvdCLrJweYE++wyikO3uhEXDZBG5257iDM828hecXyRmcGcGvIBRZlHonRmQtsHl0UjEanxIaHZhxou9F5vzJvHAdXmPqs9x085/tAxkEChaM/aGMNWDzhQcAheTmB0Xm5gNH5SkRmMJSX64qDRmeaAVfE6Bzs35YGCxudg4utNjozBwML+Uqc0VnGv7gyYKNzcDHc6EwbLHRpgZrFKDGuciXGEH/TXFUsa3Tim6ZsAsorWa4CNs0QEqMT+cxDwebgnrocegCMzqvAz7Lnc3WxIPDVAkbn1cB19xpgsUm9w2sEjM5rwMPgn3K8n5/wEPe5kXm+phhvdCLrZxgwJ95hNaw4eKMTcdkEbXRe6w7C6/xbyHXF8kbnEODWcC2wKK8jMTqvBTaPLgpGo1Niw4N7LrYbnfcp8+YDB1eY+qzPHTzn50DG6wUKR3/QxhqweMLXA4fkDQRG5w0CRueUiMxgKC/XjQeNznQDrojROcK/LY0QNjpHFFttdKaNABbyTTijM8mbo5sCNjpHFMONzvQRQpcWqFmMEuNmV2Lc4m+am4tljU5805RNQHkly83AprmFxOhEPvNIsDm4py5HHgCj82bws+z53FosCHyrgNF5K3DdvQ1YbFLv8DYBo/M28DD4pxzv5yd8i/vcyDzfVow3OpH1czswJ95hdXtx8EYn4rIJ2ui8wx2Ed/q3kDuL5Y3OW4Bbwx3AoryTxOi8A9g8uigYjU6JDQ/NeJftRucoZd584eAKU5/1nYPn/A7IeLdA4egP2lgDFk/4buCQvIfA6LxHwOicHJEZDOXluveg0ZlpwBUxOkf5t6VRwkbnqGKrjc6UUcBCvg9ndCZ7c3RfwEbnqGK40Zk5SujSAjWLUWLc70qMB/xNc3+xrNGJb5qyCSivZLkf2DQPkBidyGceDTYH99Tl6ANgdN4PfpY9nweLBYEfFDA6HwSuuw8Bi03qHT4kYHQ+BB4G/5Tj/fyEH3CfG5nnh4rxRieyfh4G5sQ7rB4uDt7oRFw2QRudj7iD8FH/FvJosbzR+QBwa3gEWJSPkhidjwCbRxcFo9EpseGhGR+z3ei8V5k3qxxcYeqzfnLwnD8BGR8XKBz9QRtrwOIJPw4ckk8QGJ1PCBidL0dkBkN5uZ48aHRmGXBFjM6n/NvSU8JG51PFVhudSU8BC/lpnNGZ4s3R0wEbnU8Vw43OrKeELi1QsxglxjPF0Z9j/E3zTLGs0YlvmrIJKK9keQbYNGNIjE7kM48Fm4N76nLsATA6nwE/y57Ps8WCwM8KGJ3PAtfd54DFJvUOnxMwOp8DD4N/yvF+fsJj3OdG5vm5YrzRiayfccCceIfVuOLgjU7EZRO00fm8Owhf8G8hLxTLG51jgFvD88CifIHE6Hwe2Dy6KBiNTokND8043naj8x5l3mx0cIWpz/rdwXP+DmScIFA4+oM21oDFE54AHJIvgt+fhNH5ooDROSkiMxjKy/XSQaMz24ArYnRO9G9LE4WNzonFVhudCROBhTwJZ3SmenM0KWCjc2Ix3OjMnih0aYGaxSgxXnYlxmR/07xcLGt04pumbALKK1leBjbNZBKjE/nMU8Dm4J66nHIAjM6Xwc+y5/NKsSDwKwJG5yvAdXcqsNik3uFUAaNzKngY/FOO9/MTnuw+NzLPU4vxRieyfqYBc+IdVtOKgzc6EZdN0Ebnq+4gfM2/hbxWLG90TgZuDa8Ci/I1EqPzVWDz6KJgNDolNjw043Tbjc67lXnzh4MrTH3WIUV4zkOKcIwzBApHf9DGGrB4wjOAQ/J1AqPzdQGjc2JEZjCUl+uNg0ZnjgFXxOic6d+WZgobnTOLrTY642cCC3kWzuhM8+ZoVsBG58xiuNGZM1Po0gI1i1FivOlKjNn+pnmzWNboxDdN2QSUV7K8CWya2SRGJ/KZ54DNwT11OecAGJ1vgp9lz+etYkHgtwSMzreA6+5cYLFJvcO5AkbnXPAw+Kcc7+cnPNt9bmSe5xbjjU5k/cwD5sQ7rOYVB290Ii6boI3O+e4gfNu/hbxdLG90zgZuDfOBRfk2idE5H9g8uigYjU6JDQ/NuMB2o/MuZd5UAJqI+qyqAkZnVSBjvkDh6A/aWAMWTzgfOCQLCIzOAgGj86WIzGAoL1fhQaMz14ArYnRG/NtSRNjojBTbbHRm50aAhezgjM50b46cgI3OSDHc6CzznuPL+QmF4M1ilBhFrsQo9jdNUbGs0YlvmjCi0PdKliJg0xSTGJ3IZy4Bm4N76rLkABidReBn2fMpLRYELhUwOkuB6+47wGKTeofvCBid74CHwT/leD8/4WL3uZF5fqcYb3Qi62chMCfeYbWwOHijE3HZBG10vusOwvf8W8h7xfJGZzFwa3gXWJTvkRid7wKbRxcFo9EpseGhGRfZbnTeqcybakATUZ9VV8DorAtkfF+gcPQHbawBiyf8PnBIfkBgdH4gYHS+GJEZDOXl+lConuP+b17C8eX4tPIbm+U4Len/mqT7fdrpJsN1P0/rZTZv9+u0S//JCN6P0678Z1P5X592038zqP/laff9d7P7X5329P8yzv/FaZP+twm/z6fN2hdDfx9Pc/btNwf26bTF+/obDftw2vJ9/02L/3nahn/zGyD/47Tt/+43U/7raZX+7Zz9L6fV/vcz+x9Pa7Y/8/+fTtu/u8R42in7ey8ZTuux/3fc/zmtf3nuS99pg8p395Y57fry3uOe0wD/4Obe0yB/p717GuivjfrPabD/MisM/cMP0F37I/Bu18Q9y3NmuXa6emq+tgbudW3UWSnA3S5VndUZuN91UWf1Bu54fdRZGcA9L1OdNQS46w1VZ90C3PdGqrMeAO58o9VZY4B731h11mTg7jdFnTUbuP/NUWcVA3fAEnXWJ8A9cIk6awVwF1ypztoI3Ac3qbN2AHfCneqsysC9sIo6qw5wN6yrzmoB3A9bqrMSgDtioj4LuCd2UmedC9wVe6qzLgHuiwPUWVeU704vc+JgddaN5d0RPCeOUGfdW97zPCfqf8IV8m/IuCfqfykB9Fc1/udE/ReSwf6LaHWi/u/+gH/wMKz/eI329+Lc81DnwrzMMOwPgEbzEcHVCuCvGt1bx+X+95k8PVbOf9S+TP9PieBm0ysR3NycGsHN9GkR3H3zagR3F74Wwd3T0yO4HWJGBLffvB7B7V5v7PtZ/3MvnLmvZ+3Dzjpr387ap336zX05ax93/dn/+6x91iFz/tdZ/0IjvRXB6be5EZy2nBfB6d75EZwmfzuC8wsWRHBeRn4E57MURHAeUGEE509FIjgvbjFurzP+KcLy8unf9wb6hf/5fXT9zGjOkcDfR0f7o3s+6Ge+A/jMiwN65vjyfcJXAHvvY9wzl/mj7R8X/98/7Ih+Dx8Dfz/gE9x7SAjyT8giuKP/aVV8YH9Cdklx9OenxaGyf0L202L5PyH7SfmLZu+fkF0CLMBPhRKJ/hOyS4BDUhfFxyF40e39/NM7iC/fJwwcFmKMnwldZqKg5fyvQ1O9nOjb5hNgsy8FbpPeAbo0gAF6OXDjWgp8p58DC977Tj8PYJNBvocvhGrriwDew+fA9/AlcKOTfOYvgM/8FfCsILfYrwi32GXuFvu1f4v9OoAhDEj03i12GbBovibZYpcd3GIhTSfN+I0AozhoOf8y5zwvJ/q2+RLY7MtJb5vlhLfNt+5ts8J/26wI4LYBJHrvbfMtsGhWkNw23x68bSBNJ824kuW2WQm8bf7N5C1vIwC8g73T0YArMnm/cyfvKv/k1b9wiO+7VfswjZEvsbzT+DvgNF5VjEtAkOsAwjAJeh1Y7Rbl9/6iXG0oyu8DWBEALsbeolwNLMrvwclFF59uwD05855b3udeDb7K0Hy6XvSzo/UN0k1bc3BtC68ptp9xLZoRXZQVI9FiRxWmPmttMf4P01SM2JkU0hU1sG1gnbsN/ODfBtYZtoEfyFbUdcDG+aEYm1yJW1E/r4Xb2V5GZD5+xA2JMr9X+WNx8H9XIVBGJBhwRQbHendwbPAPjvWGwbGBTEasBxbqBnBy0cWnm3JPzrznlve51xPIiFgamD8BByarJPmp2H7GjbZLkkqRaOMgi3yjgCSpFLEzKaSSJLDNYpO7Wfzs3yw2GTaLn8kkySZg4/xcjE2uxA27ydIbds8/XIPMx2bckEjw1vhmbkmSaMAVGRxb3MHxi39wbDEMjl/IJMkWYKH+Ak4uuvh0U+7Jmffc8j73FgJJEksD81fgwGSVJL8W28+41XZJcngk2jiowtRnbRWQJIdH7EwKqSQJbLPY5m4Wv/k3i22GzeI3MkmyDdg4vxVjkytxw26z+4bNRebjd9yQKPPf6P/OLUmSDLgig+MPd3Bs9w+OPwyDYzuZJPkDWKjbwclFF59uyj05855b3uf+g0CSxNLA/BM4MFklyZ/F9jPusF2SVI5EGwdVmPqsHQKSpHLEzqSQSpLANoud7mbxl3+z2GnYLP4ikyQ7gY3zVzE2uRI37E67b9gcZD524YZEkrfGd3FLkmQDrsjg2O0Ojr/9g2O3YXD8TSZJdgML9W9wctHFp5tyT86855b3uXcTSJJYGpihEtzAZJUkwHcgxngImhEtSapEoo2DKsz/bJoleElSJWJnUkglSWCbRYWS6M9DS0Jltwj9C/7NQv8vxfmgbJYkFUpwXIeWYJMrccPq57X4hs1G5uMw3JBI9tb4YSXUkiTFgCsyOCq6g6OSf3BUNAyOSiVckqQisFArlWCTiy4+3ZR7cuY9t9z/dSl4tTo4MMv551iAA5NVkhxeYj9jZdslyRGRaOOgClOfVVlAkhwRsTMppJIksM2iirtZHOHfLKoYNosjyCRJFWDjHFGCTa7EDVvF7hs2C5mPI3FDIsVb40dyS5JUA67I4KjqDo5q/sFR1TA4qpFJkqrAQq1Wgk0uuvh0U1YVkCRVCSRJLA3M6sCBySpJqpfYz1jDdklyZCTaOKjC1GfVEJAkR0bsTAqpJAlss6jpbhZH+TeLmobN4igySVIT2DhHlWCTK3HD1rT7hs1E5uNo3JBI9db40dySJM2AKzI4armDo7Z/cNQyDI7aZJKkFrBQa5dgk4suPt2UtQQkSS0CSRJLA/MY4MBklSTHlNjPWMd2SVI1Em0cVGHqs+oISJKqETuTQipJAtss6rqbRT3/ZlHXsFnUI5MkdYGNU68Em1yJG7au3TdsOjIfx+KGRJq3xo/lliTpBlyRwVHfHRwN/IOjvmFwNCCTJPWBhdqgBJtcdPHppqwvIEnqE0iSWBqYDYEDk1WSNCyxn7GR7ZKkWiTaOKjC1Gc1EpAk1SJ2JoVUkgS2WTR2N4sm/s2isWGzaEImSRoDG6dJCTa5EjdsY7tv2DRkPuJwQyLdW+Nx3JIk04ArMjiauoOjmX9wNDUMjmZkkqQpsFCblWCTiy4+3ZRNBSRJUwJJEksDszlwYLJKkuYl9jO2sF2SVI9EGwdVmPqsFgKSpHrEzqSQSpLANouW7mbRyr9ZtDRsFq3IJElLYOO0KsEmV+KGbWn3DZuKzMdxuCGR6a3x47glSZYBV2RwtHYHRxv/4GhtGBxtyCRJa2ChtinBJhddfLopWwtIktYEkiSWBubxwIHJKkmOL7Gfsa3tkqRGJNo4qMLUZ7UVkCQ1InYmhVSSBLZZtHM3ixP8m0U7w2ZxApkkaQdsnBNKsMmVuGHb2X3DpiDzcSJuSGR5a/xEbkmSbcAVGRzt3cER7x8c7Q2DI55MkrQHFmp8CTa56OLTTdleQJK0J5AksTQww8CBySpJwiX2MybYLklqRqKNgypMfVaCgCSpGbEzKaSSJLDNItHdLJL8m0WiYbNIIpMkicDGSSrBJlfihk20+4ZNRuYjGTcksr01nswtSXIMuCKDI8UdHKn+wZFiGBypZJIkBVioqSXY5KKLTzdlioAkSSGQJLE0MNOAA5NVkqSV2M+YbrskOSoSbRxUYeqz0gUkyVERO5NCKkkC2yw6uJvFSf7NooNhsziJTJJ0ADbOSSXY5ErcsB3svmGTkPk4GTckcrw1fjK3JMk14IoMjo7u4DjFPzg6GgbHKWSSpCOwUE8pwSYXXXy6KTsKSJKOBJIklgbmqcCBySpJTi2xn/E02yXJ0ZFo46AK8z9nCUiSoyN2JoVUkgS2WXRyN4vT/ZtFJ8NmcTqZJOkEbJzTS7DJlbhhO9l9wyYi83EGbkjkemv8DG5JkmfAFRkcnd3B0cU/ODobBkcXMknSGVioXUqwyUUXn27KzgKSpDOBJImlgXkmcGCySpIzS+xn7Gq7JKkViTYOqjD1WV0FJEmtiJ1JIZUkgW0W3dzN4iz/ZtHNsFmcRSZJugEb56wSbHIlbthudt+wCch8nI0bEnneGj+bWpKE4w24IoOjuzs4evgHR3fD4OhBJkm6Awu1Rwk2ueji003ZXUCSdCeQJLE0MM8BDkxWSXJOif2M59ouSWpHoo2DKkx91rkCkqR2xM6kcEqS4DaLnu5m0cu/WfQ0bBa9yCRJT2Dj9CrBJlfihu1p9w0Lzcd5sCERjvfW+HnckiRswBUZHL3dwdHHPzh6GwZHHzJJ0htYqH1KsMlFF59uyt4CkqQ3gSSJpYF5PnBgskqS80vsZ+xruyQ5JhJtHFRh6rP6CkiSYyJ2JoVUkgS2WfRzN4sL/JtFP8NmcQGZJOkHbJwLSrDJlbhh+9l9w8Yj83Eh7oYNe2v8Qm5JkmDAFRkcF7mDo79/cFxkGBz9ySTJRcBC7V+CTS66+HRTXiQgSS4ikCSxNDAvBg5MVklycYn9jJfYLknqRKKNgypMfdYlApKkTsTOpJBKksA2iwHuZnGpf7MYYNgsLiWTJAOAjXNpCTa5EjfsAKtv2Nw8ZD4uw92wCd4av4xbkiQacEUGR4Y7ODL9gyPDMDgyySRJBrBQM0uwyUUXn27KDAFJkkEgSWJpYGYBByarJMkqsZ8x23ZJUjcSbRxUYeqzsgUkSd2InUkhlSSBbRY57maR698scgybRS6ZJMkBNk5uCTa5Ejdsjt03bC4yH3m4GzbRW+N53JIkyYArMjgGuoNjkH9wDDQMjkFkkmQgsFAHlWCTiy4+3ZQDBSTJQAJJEksD83LgwGSVJJeX2M94he2SpF4k2jiowtRnXSEgSepF7EwKqSQJbLMY7G4WV/o3i8GGzeJKMkkyGNg4V5Zgkytxww62+4bNQebjKtwNm+St8au4JUmyAVdkcAxxB8dQ/+AYYhgcQ8kkyRBgoQ4twSYXXXy6KYcISJIhBJIklgbm1cCBySpJri6xn/Ea2yXJsZFo46AKU591jYAkOTZiZ1JIJUlgm8Uwd7O41r9ZDDNsFteSSZJhwMa5tgSbXIkbdpjdN2w2Mh/X4W7YZG+NX8ctSVIMuCKDY7g7OK73D47hhsFxPZkkGQ4s1OtLsMlFF59uyuECkmQ4gSSJpYF5A3BgskqSG0rsZ7zRdklSPxJtHFRh6rNuFJAk9SN2JoVUkgS2WYxwN4ub/JvFCMNmcROZJBkBbJybSrDJlbhhR9h9w2Yh83Ez7oZN8db4zdySJNWAKzI4bnEHx0j/4LjFMDhGkkmSW4CFOrIEm1x08emmvEVAktxCIEliaWDeChyYrJLk1hL7GW+zXZI0iEQbB1WY+qzbBCRJg4idSSGVJIFtFre7m8Ud/s3idsNmcQeZJLkd2Dh3lGCTK3HD3m73DZuJzMeduBs21Vvjd3JLkjQDrsjguMsdHHf7B8ddhsFxN5kkuQtYqHeXYJOLLj7dlHcJSJK7CCRJLA3Me4ADk1WS3FNiP+O9tkuShpFo46AKU591r4AkaRixMymkkiSwzWKUu1nc598sRhk2i/vIJMkoYOPcV4JNrsQNO8ruGzYdmY/7cTdsmrfG7+eWJOkGXJHB8YA7OEb7B8cDhsExmkySPAAs1NEl2OSii0835QMCkuQBAkkSSwPzQeDAZJUkD5bYz/iQ7ZKkUSTaOKjC1Gc9JCBJGkXsTAqpJAlss3jY3Swe8W8WDxs2i0fIJMnDwMZ5pASbXIkb9mG7b9g0ZD4exd2w6d4af5RbkmQacEUGx2Pu4HjcPzgeMwyOx8kkyWPAQn28BJtcdPHppnxMQJI8RiBJYmlgPgEcmKyS5IkS+xmftF2SNI5EGwdVmPqsJwUkSeOInUkhlSSBbRZPuZvF0/7N4inDZvE0mSR5Ctg4T5dgkytxwz5l9w2biszHM7gbNtNb489wS5IsA67I4BjjDo6x/sExxjA4xpJJkjHAQh1bgk0uuvh0U44RkCRjCCRJLA3MZ4EDk1WSPFtiP+NztkuSJpFo46AKU5/1nIAkaRKxMymkkiSwzWKcu1k8798sxhk2i+fJJMk4YOM8X4JNrsQNO87uGzYFmY8XcDdslrfGX+CWJNkGXJHBMd4dHBP8g2O8YXBMIJMk44GFOqEEm1x08emmHC8gScYTSJJYGpgvAgcmqyR5scR+xpdslyRxkWjjoApTn/WSgCSJi9iZFFJJEthmMdHdLCb5N4uJhs1iEpkkmQhsnEkl2ORK3LAT7b5hk5H5eBl3w2Z7a/xlbkmSY8AVGRyT3cExxT84JhsGxxQySTIZWKhTSrDJRRefbsrJApJkMoEkiaWB+QpwYLJKkldK7GecarskaRqJNg6qMPVZUwUkSdOInUkhlSSBbRbT3M3iVf9mMc2wWbxKJkmmARvn1RJsciVu2Gl237BJyHy8hrthc7w1/hq3JMk14IoMjunu4JjhHxzTDYNjBpkkmQ4s1Bkl2OSii0835XQBSTKdQJLE0sB8HTgwWSXJ6yX2M75huyRpFok2Dqow9VlvCEiSZhE7k0IqSQLbLGa6m8Us/2Yx07BZzCKTJDOBjTOrBJtciRt2pt03bCIyH2/ibthcb42/yS1J8gy4IoNjtjs45vgHx2zD4JhDJklmAwt1Tgk2ueji0005W0CSzCaQJLE0MN8CDkxWSfJWif2Mc22XJM0j0cZBFaY+a66AJGkesTMppJIksM1inrtZzPdvFvMMm8V8MkkyD9g480uwyZW4YefZfcMmIPPxNu6GzfPW+NvUkiQh3oArMjgWuIMj3z84FhgGRz6ZJFkALNT8Emxy0cWnm3KBgCRZQCBJYmlgFgAHJqskKSixn7HQdknSIhJtHFRh6rMKBSRJi4idSeGUJMFtFhF3s3D8m0XEsFk4ZJIkAmwcpwSbXIkbNmL3DQvNRxFsSCTEe2u8iFuShA24IoOj2B0cJf7BUWwYHCVkkqQYWKglJdjkootPN2WxgCQpJpAksTQwS4EDk1WSlJbYz/iO7ZKkZSTaOKjC1Ge9IyBJWkbsTAqpJAlss1jobhbv+jeLhYbN4l0ySbIQ2DjvlmCTK3HDLrT7ho1H5uM93A0b9tb4e9ySJMGAKzI4FrmD433/4FhkGBzvk0mSRcBCfb8Em1x08emmXCQgSRYRSJJYGpgfAAcmqyT5oMR+xg9tlyStItHGQRWmPutDAUnSKmJnUkglSWCbxUfuZrHYv1l8ZNgsFpNJko+AjbO4BJtciRv2I6tv2Jw8ZD4+xt2wCd4a/5hbkiQacEUGxyfu4FjiHxyfGAbHEjJJ8gmwUJeUYJOLLj7dlJ8ISJJPCCRJLA3MT4EDk1WSfFpiP+NntkuS4yLRxkEVpj7rMwFJclzEzqSQSpLANoul7mbxuX+zWGrYLD4nkyRLgY3zeQk2uRI37FK7b9hcZD6+wN2wid4a/4JbkiQZcEUGx5fu4PjKPzi+NAyOr8gkyZfAQv2qBJtcdPHppvxSQJJ8SSBJYmlgLgMOTFZJsqzEfsavbZckrSPRxkEVpj7rawFJ0jpiZ1JIJUlgm8U37max3L9ZfGPYLJaTSZJvgI2zvASbXIkb9hu7b9gcZD6+xd2wSd4a/5ZbkiQbcEUGxwp3cKz0D44VhsGxkkySrAAW6soSbHLRxaebcoWAJFlBIEliaWB+BxyYrJLkuxL7GVfZLknaRKKNgypMfdYqAUnSJmJnUkglSWCbxWp3s/jev1msNmwW35NJktXAxvm+BJtciRt2td03bDYyH2twN2yyt8bXcEuSFAOuyOBY6w6Odf7BsdYwONaRSZK1wEJdV4JNLrr4dFOuFZAkawkkSSwNzB+AA5NVkvxQYj/jj7ZLkuMj0cZBFaY+60cBSXJ8xM6kkEqSwDaL9e5mscG/Waw3bBYbyCTJemDjbCjBJlfihl1v9w2bhczHT7gbNsVb4z9xS5JUA67I4NjoDo5N/sGx0TA4NpFJko3AQt1Ugk0uuvh0U24UkCQbCSRJLA3Mn4EDk1WS/FxiP+Nm2yVJ20i0cVCFqc/aLCBJ2kbsTAqpJAlss9jibha/+DeLLYbN4hcySbIF2Di/lGCTK3HDbrH7hs1E5uNX3A2b6q3xX7klSZoBV2RwbHUHxzb/4NhqGBzbyCTJVmChbivBJhddfLoptwpIkq0EkiSWBuZvwIHJKkl+K7Gf8XfbJUm7SLRxUIWpz/pdQJK0i9iZFFJJEthm8Ye7WWz3bxZ/GDaL7WSS5A9g42wvwSZX4ob9w+4bNh2Zjz9xN2yat8b/5JYk6QZckcGxwx0cO/2DY4dhcOwkkyQ7gIW6swSbXHTx6abcISBJdhBIklgamH8BByarJPmrxH7GXbZLkhMi0cZBFaY+a5eAJDkhYmdSSCVJYJvFbnez+Nu/Wew2bBZ/k0mS3cDG+bsEm1yJG3a33TdsGjIfoVLYDZvurXF9blyIVpJkGnBFBschpdGfFUpDZYeE/gX/4KhQyiVJDinFFWqFUmxy0cX3n0Ffih9Ih5TibnHTcx8cmP/ueQ8FDkxWSXJoqf2Mh6EZ0ZLkxEi0cVCFqc/SD42WJCdG7EwKqSQJbLOo6G4WlfybRUXDZlGplEuSVARuFpVKscmVuGH181p8w6Yi83E47obN9Nb44dySJMuAKzI4KruDo4p/cFQ2DI4qZJKkMrBQq5Rik4suPt2UlQUkSWUCSRJLA/MI4MBklSRHlNrPeKTtkqR9JNo4qMLUZx0pIEnaR+xMCqkkCWyzqOpuFtX8m0VVw2ZRjUySVAU2TrVSbHIlbtiqdt+wKch8VMfdsFneGq/OLUmyDbgig6OGOzhq+gdHDcPgqEkmSWoAC7VmKTa56OLTTVlDQJLUIJAksTQwjwIOTFZJclSp/YxH2y5J4iPRxkEVpj7raAFJEh+xMymkkiSwzaKWu1nU9m8WtQybRW0ySVIL2Di1S7HJlbhha9l9wyYj83EM7obN9tb4MdySJMeAKzI46riDo65/cNQxDI66ZJKkDrBQ65Zik4suPt2UdQQkSR0CSRJLA7MecGCySpJ6pfYzHmu7JAlHoo2DKkx91rECkiQcsTMppJIksM2ivrtZNPBvFvUNm0UDMklSH9g4DUqxyZW4YevbfcMmIfPREHfD5nhrvCG3JMk14IoMjkbu4GjsHxyNDIOjMZkkaQQs1Mal2OSii083ZSMBSdKIQJLE0sBsAhyYrJKkSan9jHG2S5KESLRxUIWpz4oTkCQJETuTQipJAtssmrqbRTP/ZtHUsFk0I5MkTYGN06wUm1yJG7ap3TdsIjIfzXE3bK63xptzS5I8A67I4GjhDo6W/sHRwjA4WpJJkhbAQm1Zik0uuvh0U7YQkCQtCCRJLA3MVsCBySpJWpXaz3ic7ZIkMRJtHFRh6rOOE5AkiRE7k0IqSQLbLFq7m0Ub/2bR2rBZtCGTJK2BjdOmFJtciRu2td03bAIyH8fjbtg8b40fTy1JEuMNuCKDo607ONr5B0dbw+BoRyZJ2gILtV0pNrno4tNN2VZAkrQlkCSxNDBPAA5MVklyQqn9jCfaLkmSItHGQRWmPutEAUmSFLEzKZySJLjNor27WcT7N4v2hs0inkyStAc2TnwpNrkSN2x7u29YaD7CsCGRGO+t8TC3JAkbcEUGR4I7OBL9gyPBMDgSySRJArBQE0uxyUUXn27KBAFJkkAgSWJpYCYBByarJEkqtZ8x2XZJkhyJNg6qMPVZyQKSJDliZ1JIJUlgm0WKu1mk+jeLFMNmkUomSVKAjZNaik2uxA2bYvcNG4/MRxruhg17azyNW5IkGHBFBke6Ozg6+AdHumFwdCCTJOnAQu1Qik0uuvh0U6YLSJJ0AkkSSwPzJODAZJUkJ5Xaz3iy7ZIkJRJtHFRh6rNOFpAkKRE7k0IqSQLbLDq6m8Up/s2io2GzOIVMknQENs4ppdjkStywHa2+YbPzkPk4FXfDJnhr/FRuSZJowBUZHKe5g6OTf3CcZhgcncgkyWnAQu1Uik0uuvj+05QCkuQ0AkkSSwPzdODAZJUkp5faz3iG7ZIkNRJtHFRh6rPOEJAkqRE7k0IqSQLbLDq7m0UX/2bR2bBZdCGTJJ2BjdOlFJtciRu2s903bC4yH2fibthEb42fyS1Jkgy4IoOjqzs4uvkHR1fD4OhGJkm6Agu1Wyk2ueji003ZVUCSdCWQJLE0MM8CDkxWSXJWqf2MZ9suSdIi0cZBFaY+62wBSZIWsTMppJIksM2iu7tZ9PBvFt0Nm0UPMknSHdg4PUqxyZW4YbvbfcPmIPNxDu6GTfLW+DnckiTZgCsyOM51B0dP/+A41zA4epJJknOBhdqzFJtcdPHppjxXQJKcSyBJYmlg9gIOTFZJ0qvUfsbzbJck6ZFo46AKU591noAkSY/YmRRSSRLYZtHb3Sz6+DeL3obNog+ZJOkNbJw+pdjkStywve2+YbOR+Tgfd8Mme2v8fG5JkmLAFRkcfd3B0c8/OPoaBkc/MknSF1io/UqxyUUXn27KvgKSpC+BJImlgXkBcGCySpILSu1nvNB2SdIhEm0cVGHqsy4UkCQdInYmhVSSBLZZXORuFv39m8VFhs2iP5kkuQjYOP1LscmVuGEvsvuGzULm42LcDZvirfGLuSVJqgFXZHBc4g6OAf7BcYlhcAwgkySXAAt1QCk2ueji0015iYAkuYRAksTSwLwUODBZJcmlpfYzXma7JDkpEm0cVGHqsy4TkCQnRexMCqkkCWyzyHA3i0z/ZpFh2CwyySRJBrBxMkuxyZW4YTPsvmEzkfnIwt2wqd4az+KWJGkGXJHBke0Ojhz/4Mg2DI4cMkmSDSzUnFJsctHFp5syW0CSZBNIklgamLnAgckqSXJL7WfMs12SnByJNg6qMPVZeQKS5OSInUkhlSSBbRYD3c1ikH+zGGjYLAaRSZKBwMYZVIpNrsQNO9DuGzYdmY/LcTdsmrfGL+eWJOkGXJHBcYU7OAb7B8cVhsExmEySXAEs1MGl2OSii0835RUCkuQKAkkSSwPzSuDAZJUkV5baz3iV7ZKkYyTaOKjC1GddJSBJOkbsTAqpJAlssxjibhZD/ZvFEMNmMZRMkgwBNs7QUmxyJW7YIXbfsGnIfFyNu2HTvTV+NbckyTTgigyOa9zBMcw/OK4xDI5hZJLkGmChDivFJhddfLoprxGQJNcQSJJYGpjXAgcmqyS5ttR+xutslySnRKKNgypMfdZ1ApLklIidSSGVJIFtFsPdzeJ6/2Yx3LBZXE8mSYYDG+f6UmxyJW7Y4XbfsKnIfNyAu2EzvTV+A7ckyTLgigyOG93BMcI/OG40DI4RZJLkRmChjijFJhddfLopbxSQJDcSSJJYGpg3AQcmqyS5qdR+xpttlySnRqKNgypMfdbNApLk1IidSSGVJIFtFre4m8VI/2Zxi2GzGEkmSW4BNs7IUmxyJW7YW+y+YVOQ+bgVd8NmeWv8Vm5Jkm3AFRkct7mD43b/4LjNMDhuJ5MktwEL9fZSbHLRxaeb8jYBSXIbgSSJpYF5B3BgskqSO0rtZ7zTdklyWiTaOKjC1GfdKSBJTovYmRRSSRLYZnGXu1nc7d8s7jJsFneTSZK7gI1zdyk2uRI37F1237DJyHzcg7ths701fg+3JMkx4IoMjnvdwTHKPzjuNQyOUWSS5F5goY4qxSYXXXy6Ke8VkCT3EkiSWBqY9wEHJqskua/Ufsb7bZcknSLRxkEVpj7rfgFJ0iliZ1JIJUlgm8UD7mYx2r9ZPGDYLEaTSZIHgI0zuhSbXIkb9gG7b9gkZD4exN2wOd4af5BbkuQacEUGx0Pu4HjYPzgeMgyOh8kkyUPAQn24FJtcdPHppnxIQJI8RCBJYmlgPgIcmKyS5JFS+xkftV2SnB6JNg6qMPVZjwpIktMjdiaFVJIEtlk85m4Wj/s3i8cMm8XjZJLkMWDjPF6KTa7EDfuY3TdsIjIfT+Bu2FxvjT/BLUnyDLgig+NJd3A85R8cTxoGx1NkkuRJYKE+VYpNLrr4dFM+KSBJniSQJLE0MJ8GDkxWSfJ0qf2Mz9guSc6IRBsHVZj6rGcEJMkZETuTQipJAtssxribxVj/ZjHGsFmMJZMkY4CNM7YUm1yJG3aM3TdsAjIfz+Ju2DxvjT9LLUmS4g24IoPjOXdwjPMPjucMg2McmSR5Dlio40qxyUUXn27K5wQkyXMEkiSWBubzwIHJKkmeL7Wf8QXbJUnnSLRxUIWpz3pBQJJ0jtiZFE5JEtxmMd7dLCb4N4vxhs1iApkkGQ9snAml2ORK3LDj7b5hofl4ETYkkuK9Nf4ityQJG3BFBsdL7uCY6B8cLxkGx0QySfISsFAnlmKTiy4+3ZQvCUiSlwgkSSwNzEnAgckqSSaV2s/4su2SpEsk2jiowtRnvSwgSbpE7EwKqSQJbLOY7G4WU/ybxWTDZjGFTJJMBjbOlFJsciVu2Ml237DxyHy8grthw94af4VbkiQYcEUGx1R3cEzzD46phsExjUySTAUW6rRSbHLRxaebcqqAJJlKIEliaWC+ChyYrJLk1VL7GV+zXZKcGYk2Dqow9VmvCUiSMyN2JoVUkgS2WUx3N4sZ/s1iumGzmEEmSaYDG2dGKTa5EjfsdKtv2Kw8ZD5ex92wCd4af51bkiQacEUGxxvu4JjpHxxvGAbHTDJJ8gawUGeWYpOLLj7dlG8ISJI3CCRJLA3MWcCBySpJZpXaz/im7ZKkayTaOKjC1Ge9KSBJukbsTAqpJAlss5jtbhZz/JvFbMNmMYdMkswGNs6cUmxyJW7Y2XbfsLnIfLyFu2ETvTX+FrckSTLgigyOue7gmOcfHHMNg2MemSSZCyzUeaXY5KKLTzflXAFJMpdAksTSwJwPHJiskmR+qf2Mb9suSbpFoo2DKkx91tsCkqRbxM6kkEqSwDaLBe5mke/fLBYYNot8MkmyANg4+aXY5ErcsAvsvmFzkPkowN2wSd4aL+CWJMkGXJHBUegOjoh/cBQaBkeETJIUAgs1UopNLrr4dFMWCkiSQgJJEksD0wEOTFZJ4pTaz1hkuyQ5KxJtHFRh6rOKBCTJWRE7k0IqSQLbLIrdzaLEv1kUGzaLEjJJUgxsnJJSbHIlbthiu2/YbGQ+SnE3bLK3xku5JUmKAVdkcLzjDo6F/sHxjmFwLCSTJO8AC3VhKTa56OLTTfmOgCR5h0CSxNLAfBc4MFklybul9jO+Z7skOTsSbRxUYeqz3hOQJGdH7EwKqSQJbLNY5G4W7/s3i0WGzeJ9MkmyCNg475dikytxwy6y+4bNQubjA9wNm+Kt8Q+4JUmqAVdkcHzoDo6P/IPjQ8Pg+IhMknwILNSPSrHJRRefbsoPBSTJhwSSJJYG5mLgwGSVJItL7Wf82HZJ0j0SbRxUYeqzPhaQJN0jdiaFVJIEtll84m4WS/ybxSeGzWIJmST5BNg4S0qxyZW4YT+x+4bNRObjU9wNm+qt8U+5JUmaAVdkcHzmDo6l/sHxmWFwLCWTJJ8BC3VpKTa56OLTTfmZgCT5jECSxNLA/Bw4MFklyeel9jN+Ybsk6RGJNg6qMPVZXwhIkh4RO5NCKkkC2yy+dDeLr/ybxZeGzeIrMknyJbBxvirFJlfihv3S7hs2HZmPZbgbNs1b48u4JUm6AVdkcHztDo5v/IPja8Pg+IZMknwNLNRvSrHJRRefbsqvBSTJ1wSSJJYG5nLgwGSVJMtL7Wf81nZJck4k2jiowtRnfSsgSc6J2JkUUkkS2Gaxwt0sVvo3ixWGzWIlmSRZAWyclaXY5ErcsCvsvmHTkPn4DnfDpntr/DtuSZJpwBUZHKvcwbHaPzhWGQbHajJJsgpYqKtLsclFF59uylUCkmQVgSSJpYH5PXBgskqS70vtZ1xjuyQ5NxJtHFRh6rPWCEiScyN2JoVUkgS2Wax1N4t1/s1irWGzWEcmSdYCG2ddKTa5EjfsWrtv2FRkPn7A3bCZ3hr/gVuSZBlwRQbHj+7gWO8fHD8aBsd6MknyI7BQ15dik4suPt2UPwpIkh8JJEksDcwNwIHJKkk2lNrP+JPtkqRnJNo4qMLUZ/0kIEl6RuxMCqkkCWyz2OhuFpv8m8VGw2axiUySbAQ2zqZSbHIlbtiNdt+wKch8/Iy7YbO8Nf4ztyTJNuCKDI7N7uDY4h8cmw2DYwuZJNkMLNQtpdjkootPN+VmAUmymUCSxNLA/AU4MFklyS+l9jP+arsk6RWJNg6qMPVZvwpIkl4RO5NCKkkC2yy2upvFNv9msdWwWWwjkyRbgY2zrRSbXIkbdqvdN2wyMh+/4W7YbG+N/8YtSXIMuCKD43d3cPzhHxy/GwbHH2SS5Hdgof5Rik0uuvh0U/4uIEl+J5AksTQwtwMHJqsk2V5qP+OftkuS8yLRxkEVpj7rTwFJcl7EzqSQSpLANosd7max079Z7DBsFjvJJMkOYOPsLMUmV+KG3WH3DZuEzMdfuBs2x1vjf3FLklwDrsjg2OUOjt3+wbHLMDh2k0mSXcBC3V2KTS66+HRT7hKQJLsIJEksDcy/gQOTVZL8XWo/Y+gdyyVJ70i0cVCF+Z8V9B28JOkdsTMppJIksM3ikHeiPyu88/+xdx5QVlTbum5yzjnnnLo6NznnnDN0JOdsQECCqCAiCiKSc44StQHZ3TTdiCKSQUEwICqSs2/XpfBs6pQedP+z9vqfu8eo4X113lh+q9acc8352ajPs12E/j+YOwv9/1NhE5TKI0kSB44rqQN7uBI3rL5fhW9Yf+R5JIMViYAo1xhP5qAeSaItcEUKR3KjcKQwF47kFoUjhYNrJEkODNQUDuzhooNPT8qnZ+a6rrv7Tg5urbwF0739pgQWTNaRJKVDfcZUqo8kbWKeJA4qMPW1UgmMJG1i1DwU0pHEts4itdFZpDF3FqktOos0ZCNJamDipHFgD1fihk2t9g3rhzyPtLgbNto1xtNSjySBvha4IoUjnVE40psLRzqLwpGebCRJBwzU9A7s4aKDT0/KdAIjSTqCkeTfVDAzAAsm60iSwaE+Y0bVR5K2MU8SBxWY+loZBUaStjFqHgrnSGJfZ5HJ6CwymzuLTBadRWaykSQTMHEyO7CHK3HDZlL7hoWeRxZYkQj0dY3xLNwjiWaBK1I4shqFI5u5cGS1KBzZyEaSrMBAzebAHi46+PSkzCowkmQlGEn+TQUzO7Bgso4k2R3qM+ZQfSRpF/MkcVCBqa+VQ2AkaRej5qGQjiS2dRY5jc4il7mzyGnRWeQiG0lyAhMnlwN7uBI3bE61b1hf5Hnkxt2wmmuM5+YeSfwscEUKRx6jcOQ1F448FoUjL9lIkgcYqHkd2MNFB5+elHkERpI8BCPJv6lg5gMWTNaRJJ9Dfcb8qo8k7WOeJA4qMPW18guMJO1j1DwU0pHEts6igNFZFDR3FgUsOouCZCNJAWDiFHRgD1fihi2g9A0bFo08j0K4G9bPNcYLcY8k/ha4IoWjsFE4ipgLR2GLwlGEbCQpDAzUIg7s4aKDT0/KwgIjSWGCkeTfVDCLAgsm60hS1KE+YzHVR5IOMU8SBxWY+lrFBEaSDjFqHgrpSGJbZ1Hc6CxKmDuL4hadRQmykaQ4MHFKOLCHK3HDFlf7ho1CnkdJ3A3r7xrjJblHkgALXJHCUcooHKXNhaOUReEoTTaSlAIGamkH9nDRwacnZSmBkaQUwUjybyqYZYAFk3UkKeNQn7Gs6iNJx5gniYMKTH2tsgIjSccYNQ+FdCSxrbMoZ3QW5c2dRTmLzqI82UhSDpg45R3Yw5W4YcupfcNGIs+jAu6GDXCN8QrcI0mgBa5I4ahoFI5K5sJR0aJwVCIbSSoCA7WSA3u46ODTk7KiwEhSkWAk+TcVTF9gwWQdSXwd6jNqqo8knWKeJA4qMPW1NIGRpFOMmodCOpLY1ln4GZ2Fv7mz8LPoLPzJRhI/YOL4O7CHK3HD+ql9w0YgzyMAd8MGusZ4APdIEmSBK1I4Ao3CEWQuHIEWhSOIbCQJBAZqkAN7uOjg05MyUGAkCSQYSf5NBTMYWDBZR5Jgh/qMIaqPJJ1jniQOKjD1tUIERpLOMWoeCulIYltnEWp0FpXNnUWoRWdRmWwkCQUmTmUH9nAlbthQtW/YcOR5VMHdsEGuMV6FeyQJtsAVKRxVjcJRzVw4qloUjmpkI0lVYKBWc2APFx18elJWFRhJqhKMJP+mglkdWDBZR5LqDvUZa6g+knSJeZI4qMDU16ohMJJ0iVHzUEhHEts6i5pGZ1HL3FnUtOgsapGNJDWBiVPLgT1ciRu2pto3bBjyPGrjbthg1xivzT2ShFjgihSOOkbhqGsuHHUsCkddspGkDjBQ6zqwh4sOPj0p6wiMJHUIRpJ/U8GsByyYrCNJPYf6jPVVH0m6xjxJHFRg6mvVFxhJusaoeSikI4ltnUUDo7NoaO4sGlh0Fg3JRpIGwMRp6MAersQN20DtGzYUeR6NcDdsiGuMN+IeSUItcEUKR2OjcDQxF47GFoWjCdlI0hgYqE0c2MNFB5+elI0FRpLGBCPJv6lgNgUWTNaRpKlDfcZmqo8k3WKeJA4qMPW1mgmMJN1i1DwU0pHEts6iudFZtDB3Fs0tOosWZCNJc2DitHBgD1fihm2u9g0bgjyPlrgbNtQ1xltyjyRhFrgihaOVUThamwtHK4vC0ZpsJGkFDNTWDuzhooNPT8pWAiNJK4KR5N9UMNsACybrSNLGoT5jW9VHku4xTxIHFZj6Wm0FRpLuMWoeCulIYltn0c7oLNqbO4t2Fp1Fe7KRpB0wcdo7sIcrccO2U/uGDUaeRwfcDRvmGuMduEeScAtckcLR0SgcncyFo6NF4ehENpJ0BAZqJwf2cNHBpydlR4GRpCPBSPJvKpidgQWTdSTp7FCfsYvqI0mPmCeJgwpMfa0uAiNJjxg1D4V0JLGts+hqdBbdzJ1FV4vOohvZSNIVmDjdHNjDlbhhu6p9wwYhz6M77oYNd43x7twjSYQFrkjh6GEUjp7mwtHDonD0JBtJegADtacDe7jo4NOTsofASNKDYCT5NxXMMGDBZB1JwhzqM4arPpL0jHmSOKjA1NcKFxhJesaoeSikI4ltnUWE0VlEmjuLCIvOIpJsJIkAJk6kA3u4EjdshNo3bCDyPKJwN2yEa4xHcY8kkRa4IoUj2igcvcyFI9qicPQiG0migYHay4E9XHTw6UkZLTCSRBOMJP+mgtkbWDBZR5LeDvUZ+6g+koTFPEkcVGDqa/URGEnCYtQ8FNKRxLbOoq/RWfQzdxZ9LTqLfmQjSV9g4vRzYA9X4obtq/YNG4A8j/64GzbSNcb7c48kURa4IoVjgFE4BpoLxwCLwjGQbCQZAAzUgQ7s4aKDT0/KAQIjyQCCkeTfVDAHAQsm60gyyKE+42DVR5LwmCeJgwpMfa3BAiNJeIyah0I6ktjWWQwxOouh5s5iiEVnMZRsJBkCTJyhDuzhStywQ9S+Yf2R5zEMd8NGucb4MO6RJNoCV6RwDDcKxwhz4RhuUThGkI0kw4GBOsKBPVx08OlJOVxgJBlOMJL8mwrmSGDBZB1JRjrUZxyl+kgSEfMkcVCBqa81SmAkiYhR81BIRxLbOovRRmcxxtxZjLboLMaQjSSjgYkzxoE9XIkbdrTaN6wf8jxewN2w0a4x/gL1SBLka4ErUjheNArHS+bC8aJF4XiJbCR5ERioLzmwh4sOPj0pXxQYSV4kGEn+TQXzZWDBZB1JXnaozzhW9ZEkMuZJ4qACU19rrMBIEhmj5qFwjiT2dRavGJ3FOHNn8YpFZzGObCR5BZg44xzYw5W4YV9R+4aFnsd4WJEI8nWN8fHcI4lmgStSOCYYheNVc+GYYFE4XiUbSSYAA/VVB/Zw0cGnJ+UEgZFkAsFI8m8qmBOBBZN1JJnoUJ9xkuojSVTMk8RBBaa+1iSBkSQqRs1DIR1JbOssJhudxRRzZzHZorOYQjaSTAYmzhQH9nAlbtjJat+wvsjzeA13w2quMf4a90jiZ4ErUjimGoXjdXPhmGpROF4nG0mmAgP1dQf2cNHBpyflVIGRZCrBSPJvKphvAAsm60jyhkN9xjdVH0miY54kDiow9bXeFBhJomPUPBTSkcS2zmKa0VlMN3cW0yw6i+lkI8k0YOJMd2APV+KGnab0DRsajTyPt3A3rJ9rjL/FPZL4W+CKFI4ZRuF421w4ZlgUjrfJRpIZwEB924E9XHTw6Uk5Q2AkmUEwkvybCuZMYMFkHUlmOtRnfEf1kaRXzJPEQQWmvtY7AiNJrxg1D4V0JLGts5hldBbvmjuLWRadxbtkI8ksYOK868AersQNO0vtGzYKeR7v4W5Yf9cYf497JAmwwBUpHLONwjHHXDhmWxSOOWQjyWxgoM5xYA8XHXx6Us4WGElmE4wk/6aC+T6wYLKOJO871Gecq/pI0jvmSeKgAlNfa67ASNI7Rs1DsbOzOAHrLHxt+8WtD4zOYp65s5hnQxdxAthFfABMknkOmYNE36ofABOF9ZZBJJ0044fIW0avaBldIP8qwHzd+3kG3L32KjLQlXe+QxB4PvB6ewo/H3eC2gJgpZL6hguAM8rTb7gAfK3zJUFIgCvvQskkWAhPgpCAhcAkWESQBIvgSRASsEjxQX2BsW/0HLNA4dh5+oOeiV4Dfr8+Mdi4kdpzceCeU5DsuQRwzylJ9lwSuOdUJHsuBdxzapI9lwbuOQ3JnssA95yWZM9lgXtOR7LncsA9pyfZc3ngnjOQ7LkCcM8ZSfZcEbjnTCR7rgTcc2aSPfsC95yFZM8acM9ZSfbsB9xzNpI9+wP3nJ1kzwHAPecg2XMgcM85SfYcBNxzLpI9BwP3nJtkzyHAPech2XMocM95SfZcGbjnfCR7rgLcc36SPVcF7rkAyZ6rAfdckGTP1YF7LkSy5xrAPRcm2XNN4J6LkOy5FnDPRUn2XBu452Ike64D3HNxkj3XBe65BMme6wH3XJJkz/WBey5FsucGwD2XJtlzQ+Cey5DsuRFwz2VJ9twYuOdyJHtuAtxzeZI9NwXuuQLJnpsB91yRZM/NgXuuRLLnFsA9+5LsuSVwzxrJnlsB9+xHsufWwD37k+y5DXDPASR7bgvccyDJntsB9xxEsuf2wD0Hk+y5A3DPISR77gjccyjJnjsB91yZZM+dgXuuQrLnLsA9VyXZc1fgnquR7LkbcM/VSfbcHbjnGiR77gHcc02SPfcE7rkWyZ7DgHuuTbLncOCe65DsOQK457oke44E7rkeyZ6jgHuuT7LnaOCeG5DsuRdwzw1J9twbuOdGJHvuA9xzY5I99wXuuQnJnvsB99yUZM/9gXtuRrLnAcA9NyfZ80DgnluQ7HkQcM8tSfY8GLjnViR7HgLcc2uSPQ8F7rkNyZ6HAffclmTPw4F7bkey5xHAPbcn2fNI4J47kOx5FHDPHUn2PBq4504kex4D3HNnkj2/ANxzF5I9vwjcc1eSPb8E3HM3kj2/DNxzd5I9jwXuuQfJnl8B7rknyZ7HAfccRrLn8cA9h5PseQJwzxEke34VuOdIkj1PBO45imTPk4B7jibZ82TgnnuR7HkKcM/A/17Z//3HSNI4n3TGevp/k6FmCp9nftD/fYo7PvgzQzPeJWC8R8B4n4DxAQHjQwLGRwSMjwkYfydg1BdUnTEJAWNSAsZkBIzJCRhTEDCmJGBMRcCYmoAxDQFjWgLGdASM6QkYMxAwZiRgzETAmJmAMQsBY1YCxmwEjNkJGHMQMOYkYMxFwJibgDEPAWNeAsZ8BIz5CRgLEDAWJGAsRMBYmICxCAFjUQLGYgSMxQkYSxAwliRgLEXAWJqAsQwBY1kCxnIEjOUJGCsQMFYkYKxEwOhLwKgRMPoRMPoTMAYQMAYSMAYRMAYTMIYQMIYSMFYmYKxCwFiVgLEaAWN1AsYaBIw1CRhrETDWJmCsQ8BYl4CxHgFjfQLGBgSMDQkYGxEwNiZgbELA2JSAsRkBY3MCxhYEjC0JGFsRMLYmYGxDwNiWgLEdAWN7AsYOBIwdCRg7ETB2JmDsQsDYlYCxGwFjdwLGHgSMPQkYwwgYwwkYIwgYIwkYowgYowkYexEw9iZg7EPA2JeAsR8BY38CxgEEjAMJGAcRMA4mYBxCwDiUgHEYAeNwAsYRBIwjCRhHETCOJmAcQ8D4AgHjiwSMLxEwvkzAOJaA8RUCxnEEjOMJGCcQML5KwDiRgHESAeNkAsYpBIyvETBOJWB8nYDxDQLGNwkYpxEwTidgfIuAcQYB49sEjDMJGN8hYJxFwPguAeN7BIyzCRjnEDC+T8A4l4DxAwLGeQSMHxIwzidgXEDAuJCAcREB42ICxiUEjEsJGJcRMC4nYFxBwLiSgHEVAeNqAsY1BIxrCRjXETCuJ2DcQMC4kYBxEwHjZgLGLQSMWwkYtxEwfkTAuJ2AcQcB404Cxl0EjLsJGPcQMH5MwPgJAWMMAeNeAsZ9BIz7CRg/JWA8QMDoIGCMJWCMI2A8SMAYT8B4iIAxgYAxkYDxMAHjZwSMRwgYPydg/IKA8SgB45cEjMcIGL8iYDxOwHiCgPEkAeMpAsbTBIxnCBjPEjCeI2A8T8D4NQHjNwSMFwgYLxIwfkvAeImA8TIB43cEjN8TMP5AwPgjAeMVAsafCBivEjD+TMD4CwHjrwSM1wgYfyNgvE7AeIOA8SYB4y0CxtsEjHcIGO8SMN4jYLxPwPiAgPEhAeMjAsbHBIy/EzD6JFWfMQkBY1ICxmQEjMkJGFMQMKYkYExFwJiagDENAWNaAsZ0BIzpCRgzEDBmJGDMRMCYmYAxCwFjVgLGbASM2QkYcxAw5iRgzEXAmJuAMQ8BY14CxnwEjPkJGAsQMBYkYCxEwFiYgLEIAWNRAsZiBIzFCRhLEDCWJGAsRcBYmoCxDAFjWQLGcgSM5QkYKxAwViRgrETA6EvAqBEw+hEw+hMwBhAwBhIwBhEwBhMwhhAwhhIwViZgrELAWJWAsRoBY3UCxhoEjDUJGGsRMNYmYKxDwFiXgLEeAWN9AsYGBIwNCRgbETA2JmBsQsDYlICxGQFjcwLGFgSMLQkYWxEwtiZgbEPA2JaAsR0BY3sCxg4EjB0JGDsRMHYmYOxCwNiVgLEbAWN3AsYeBIw9CRjDCBjDCRgjCBgjCRijCBijCRh7ETD2JmDsQ8DYl4CxHwFjfwLGAQSMAwkYBxEwDiZgHELAOJSAcRgB43ACxhEEjCMJGEcRMI4mYBxDwPgCAeOLBIwvETC+TMA4loDxFQLGcQSM4wkYJxAwvkrAOJGAcRIB42QCxikEjK8RME4lYHydgPENAsY3CRinETBOJ2B8i4BxBgHj2wSMMwkY3yFgnEXA+C4B43sEjLMJGOcQML5PwDiXgPEDAsZ5BIwfEjDOJ2BcQMC4kIBxEQHjYgLGJQSMSwkYlxEwLidgXEHAuJKAcRUB42oCxjUEjGsJGNcRMK4nYNxAwLiRgHETAeNmAsYtBIxbCRi3ETB+RMC4nYBxBwHjTgLGXQSMuwkY9xAwfkzA+AkBYwwB414Cxn0EjPsJGD8lYDxAwOggYIwlYIwjYDxIwBhPwHiIgDGBgDGRgPEwAeNnBIxHCBg/J2D8goDxKAHjlwSMxwgYvyJgPE7AeIKA8SQB4ykCxtMEjGcIGM8SMJ4jYDxPwPg1AeM3BIwXCBgvEjB+S8B4iYDxMgHjdwSM3xMw/kDA+CMB4xUCxp8IGK8SMP5MwPgLAeOvBIzXCBh/I2C8TsB4g4DxJgHjLQLG2wSMdwgY7xIw3iNgvE/A+ICA8SEB4yMCxscEjL8TMPokU58xCQFjUgLGZASMyQkYUxAwpiRgTEXAmJqAMQ0BY1oCxnQEjOkJGDMQMGYkYMxEwJiZgDELAWNWAsZsBIzZCRhzEDDmJGDMRcCYm4AxDwFjXgLGfASM+QkYCxAwFiRgLETAWJiAsQgBY1ECxmIEjMUJGEsQMJYkYCxFwFiagLEMAWNZAsZyBIzlCRgrEDBWJGCsRMDoS8CoETD6ETD6EzAGEDAGEjAGETAGEzCGEDCGEjBWJmCsQsBYlYCxGgFjdQLGGgSMNQkYaxEw1iZgrEPAWJeAsR4BY30CxgYEjA0JGBsRMDYmYGxCwNiUgLEZAWNzAsYWBIwtCRhbETC2JmBsQ8DYloCxHQFjewLGDgSMHQkYOxEwdiZg7ELA2JWAsRsBY3cCxh4EjD0JGMMIGMMJGCMIGCMJGKMIGKMJGHsRMPYmYOxDwNiXgLEfAWN/AsYBBIwDCRgHETAOJmAcQsA4lIBxGAHjcALGEQSMIwkYRxEwjiZgHEPA+AIB44sEjC8RML5MwDiWgPEVAsZxBIzjCRgnEDC+SsA4kYBxEgHjZALGKQSMrxEwTiVgfJ2A8Q0CxjcJGKcRME4nYHyLgHEGAePbBIwzCRjfIWCcRcD4LgHjewSMswkY5xAwvk/AOJeA8QMCxnkEjB8SMM4nYFxAwLiQgHERAeNiAsYlBIxLCRiXETAuJ2BcQcC4koBxFQHjagLGNQSMawkY1xEwridg3EDAuJGAcRMB42YCxi0EjFsJGLcRMH5EwLidgHEHAeNOAsZdBIy7CRj3EDB+TMD4CQFjDAHjXgLGfQSM+wkYPyVgPEDA6CBgjCVgjCNgPEjAGE/AeIiAMYGAMZGA8TAB42cEjEcIGD8nYPyCgPEoAeOXBIzHCBi/ImA8TsB4goDxJAHjKQLG0wSMZwgYzxIwniNgPE/A+DUB4zcEjBcIGC8SMH5LwHiJgPEyAeN3BIzfEzD+QMD4IwHjFQLGnwgYrxIw/kzA+AsB468EjNcIGH8jYLxOwHiDgPEmAeMtAsbbBIx3CBjvEjDeI2C8T8D4gIDxIQHjIwLGxwSMvxMw+iRXnzEJAWNSAsZkBIzJCRhTEDCmJGBMRcCYmoAxDQFjWgLGdASM6QkYMxAwZiRgzETAmJmAMQsBY1YCxmwEjNkJGHMQMOYkYMxFwJibgDEPAWNeAsZ8BIz5CRgLEDAWJGAsRMBYmICxCAFjUQLGYgSMxQkYSxAwliRgLEXAWJqAsQwBY1kCxnIEjOUJGCsQMFYkYKxEwOhLwKgRMPoRMPoTMAYQMAYSMAYRMAYTMIYQMIYSMFYmYKxCwFiVgLEaAWN1AsYaBIw1CRhrETDWJmCsQ8BYl4CxHgFjfQLGBgSMDQkYGxEwNiZgbELA2JSAsRkBY3MCxhYEjC0JGFsRMLYmYGxDwNiWgLEdAWN7AsYOBIwdCRg7ETB2JmDsQsDYlYCxGwFjdwLGHgSMPQkYwwgYwwkYIwgYIwkYowgYowkYexEw9iZg7EPA2JeAsR8BY38CxgEEjAMJGAcRMA4mYBxCwDiUgHEYAeNwAsYRBIwjCRhHETCOJmAcQ8D4AgHjiwSMLxEwvkzAOJaA8RUCxnEEjOMJGCcQML5KwDiRgHESAeNkAsYpBIyvETBOJWB8nYDxDQLGNwkYpxEwTidgfIuAcQYB49sEjDMJGN8hYJxFwPguAeN7BIyzCRjnEDC+T8A4l4DxAwLGeQSMHxIwzidgXEDAuJCAcREB42ICxiUEjEsJGJcRMC4nYFxBwLiSgHEVAeNqAsY1BIxrCRjXETCuJ2DcQMC4kYBxEwHjZgLGLQSMWwkYtxEwfkTAuJ2AcQcB404Cxl0EjLsJGPcQMH5MwPgJAWMMAeNeAsZ9BIz7CRg/JWA8QMDoIGCMJWCMI2A8SMAYT8B4iIAxgYAxkYDxMAHjZwSMRwgYPydg/IKA8SgB45cEjMcIGL8iYDxOwHiCgPEkAeMpAsbTBIxnCBjPEjCeI2A8T8D4NQHjNwSMFwgYLxIwfkvAeImA8TIB43cEjN8TMP5AwPgjAeMVAsafCBivEjD+TMD4CwHjrwSM1wgYfyNgvE7AeIOA8SYB4y0CxtsEjHcIGO8SMN4jYLxPwPiAgPEhAeMjAsbHBIy/EzD6pFCfMQkBY1ICxmQEjMkJGFMQMKYkYExFwJiagDENAWNaAsZ0BIzpCRgzEDBmJGDMRMCYmYAxCwFjVgLGbASM2QkYcxAw5iRgzEXAmJuAMQ8BY14CxnwEjPkJGAsQMBYkYCxEwFiYgLEIAWNRAsZiBIzFCRhLEDCWJGAsRcBYmoCxDAFjWQLGcgSM5QkYKxAwViRgrETA6EvAqBEw+hEw+hMwBhAwBhIwBhEwBhMwhhAwhhIwViZgrELAWJWAsRoBY3UCxhoEjDUJGGsRMNYmYKxDwFiXgLEeAWN9AsYGBIwNCRgbETA2JmBsQsDYlICxGQFjcwLGFgSMLQkYWxEwtiZgbEPA2JaAsR0BY3sCxg4EjB0JGDsRMHYmYOxCwNiVgLEbAWN3AsYeBIw9CRjDCBjDCRgjCBgjCRijCBijCRh7ETD2JmDsQ8DYl4CxHwFjfwLGAQSMAwkYBxEwDiZgHELAOJSAcRgB43ACxhEEjCMJGEcRMI4mYBxDwPgCAeOLBIwvETC+TMA4loDxFQLGcQSM4wkYJxAwvkrAOJGAcRIB42QCxikEjK8RME4lYHydgPENAsY3CRinETBOJ2B8i4BxBgHj2wSMMwkY3yFgnEXA+C4B43sEjLMJGOcQML5PwDiXgPEDAsZ5BIwfEjDOJ2BcQMC4kIBxEQHjYgLGJQSMSwkYlxEwLidgXEHAuJKAcRUB42oCxjUEjGsJGNcRMK4nYNxAwLiRgHETAeNmAsYtBIxbCRi3ETB+RMC4nYBxBwHjTgLGXQSMuwkY9xAwfkzA+AkBYwwB414Cxn0EjPsJGD8lYDxAwOggYIwlYIwjYDxIwBhPwHiIgDGBgDGRgPEwAeNnBIxHCBg/J2D8goDxKAHjlwSMxwgYvyJgPE7AeIKA8SQB4ykCxtMEjGcIGM8SMJ4jYDxPwPg1AeM3BIwXCBgvEjB+S8B4iYDxMgHjdwSM3xMw/kDA+CMB4xUCxp8IGK8SMP5MwPgLAeOvBIzXCBh/I2C8TsB4g4DxJgHjLQLG2wSMdwgY7xIw3iNgvE/A+ICA8SEB4yMCxscEjL8TMPqkVJ8xCQFjUgLGZASMyQkYUxAwpiRgTEXAmJqAMQ0BY1oCxnQEjOkJGDMQMGYkYMxEwJiZgDELAWNWAsZsBIzZCRhzEDDmJGDMRcCYm4AxDwFjXgLGfASM+QkYCxAwFiRgLETAWJiAsQgBY1ECxmIEjMUJGEsQMJYkYCxFwFiagLEMAWNZAsZyBIzlCRgrEDBWJGCsRMDoS8CoETD6ETD6EzAGEDAGEjAGCTBKcAYDOXW2rD7P/sB/38dH/bNPQsCYlIAxGQFjcgLGFASMKQkYUxEwpiZgTEPAmJaAMR0BY3oCxgwEjBkJGDMRMGYmYMwCZLSjJ89K8E2zETBmJ2DMQcCYk4AxFwFjbgLGPASMeQkY8xEw5idgLEDAWJCAsRABY2ECxiIEjEUJGIsBGe3oyUMI/hlJKAFjZQLGKgSMVQkYqxEwVidgrEHAWJOAsRYBY20CxjoEjHUJGOsRMNYnYGxAwNiQgLER+HdXUvtY/6C/g3dd77p2rgtbOzBA9HfRGqck+Aa+T2pFMh/rH8zfIyhQZt3gEKF1Rb93UmMd/btnN/7vxQ4fnyXOZ6nzWeZ8ljufFc5npfNZ5XxWO581zmet81nnfNY7nw3OZ6Pz2eR8NjufLc5nq/PZ5niy5kcO42+SzPir/jdJbXq3xOLdUot3yyzeLbd4t8Li3UqLd6ss3q22eLfG4t1ai3frLN6tt3i3weLdRot3myzebbZ4t8Xi3VaLd9ss3ukHVNj5V/2X7vRfxkrhEhi/mzISXZx6L1S/IepFwBhNwBhFwBhJwBhBwBhOwBhGwNiTgLEHAWN3AsZuBIxdCRi7EDB2JmDsRMDYkYCxAwFjewLGdgSMbQkY2xAwtiZgbEXA2JKAsQUBY3MCxmYEjE0JGJsQMJZcpD5jCQLG4gSMxQgYixIwFiFgLEzAWIiAsSABYwECxvwEjPkIGPMSMOYhYMxNwJiLgDEnAWMOAsbsBIzZCBizEjBmIWDMTMCYiYAxIwFjBgLG9ASM6QgY0xIwpiFgvETA+C0B40UCxgsEjN8QMH5NwHiegPEcAeNZAsYzBIynCRhPETCeJGA8QcB4nIDxKwLGYwSMXxIwHiVg/IKA8XMCxiMEjJ8RMB4mYEwkYEwgYDxEwBhPwHiQgDGOgHHxYvUZFxEwLiRgXEDAOJ+A8UMCxnkEjB8QMM4lYHyfgHEOAeNsAsb3CBjfJWCcRcD4DgHjTALGtwkYZxAwvkXAOJ2AcRoB45sEjG8QML5OwDiVgPE1AsYpBIyTCRgnETD2XKI+Yw8Cxu4EjN0IGLsSMHYhYOxMwNiJgLEjAWMHAsb2BIztCBjbEjC2IWBsTcDYioCxJQFjCwLG5gSMzQgYmxIwNiFgbEzA2IiAsSEBYwMCxvoEjPUIGOsSMNYhYCy4VH3GAgSM+QkY8xEw5iVgzEPAmJuAMRcBY04CxhwEjNkJGLMRMGYlYMxCwJiZgDETAWNGAsYMBIzpCRjTETCmJWBMQ8CYmoAxFQFjSgLGFASMyQkYkxEwJiVgTELAeJaA8QwB42kCxlMEjCcJGE8QMB4nYPyKgPEYAeOXBIxHCRi/IGD8nIDxCAHjZwSMhwkYEwkYEwgYDxEwxhMwHiRgjCNgjCVgdBAwHiBg/JSAcT8B4z4Cxr0EjDEEjHOXqc/4PgHjHALG2QSM7xEwvkvAOIuA8R0CxpkEjG8TMM4gYHyLgHE6AeM0AsY3CRjfIGB8nYBxKgHjawSMUwgYJxMwTiJgnEjA+CoB4wQCxvEEjOMIGF8hYBxLwPgyAWPH5eozdiBgbE/A2I6AsS0BYxsCxtYEjK0IGFsSMLYgYGxOwNiMgLEpAWMTAsbGBIyNCBgbEjA2IGCsT8BYj4CxLgFjHQLG2gSMtQgYaxIw1iBgrE7AWI2AsSoBYxUCxpwr1GfMQcCYnYAxGwFjVgLGLASMmQkYMxEwZiRgzEDAmJ6AMR0BY1oCxjQEjKkJGFMRMKYkYExBwJicgDEZAWNSAsYkBIw+BIy/E8zXjwkYHxEwPiRgfEDAeJ+A8R4B4zGC+vglAeNRAsYvCBg/J2A8QsD4GQHjYQLGRALGBALGQwSM8QSMBwkY4wgYYwkYHQSMBwgYPyVg3E/AuI+AcS8BYwwB4ycEjB8TMO4hYNxNwLiLgHEnAeMOAsbtBIwzV6rP+DYB4wwCxrcIGKcTME4jYHyTgPENAsbXCRinEjC+RsA4hYBxMgHjJALGiQSMrxIwTiBgHE/AOI6A8RUCxrEEjC8TML5EwPgiAeMLBIxjCBhHEzCOImAcScA4goCx5Sr1GVsQMDYnYGxGwNiUgLEJAWNjAsZGBIwNCRgbEDDWJ2CsR8BYl4CxDgFjbQLGWgSMNQkYaxAwVidgrEbAWJWAsQoBY2UCxlACxhACxmACxiACxkACxgACRn8Cxoyr1WfMQMCYnoAxHQFjWgLGNASMqQkYUxEwpiRgTEHAmJyAMRkBY1ICxiQEjD4EjL8T9I+PCRgfETA+JGB8QMB4n4DxHgHjXQLGOwSMtwkYbxEw3iRgvEHAeJ2A8TcCxkSC/jGBgPEQAWM8AeNBAsY4AsZYAkYHAeMBAsZPCRj3EzDuI2DcS8AYQ8D4CQHjxwSMewgYdxMw7iJg3EnAuIOAcTsB40cEjNsIGLcSMG4hYNxMwLiJgHEjAeMGAsbX16jPOJWA8TUCxikEjJMJGCcRME4kYHyVgHECAeN4AsZxBIyvEDCOJWB8mYDxJQLGFwkYXyBgHEPAOJqAcRQB40gCxhEEjMMJGIcRMA4lYBxCwDiYgHEQAeNAAsYBBIwN16rP2ICAsT4BYz0CxroEjHUIGGsTMNYiYKxJwFiDgLE6AWM1AsaqBIxVCBgrEzCGEjCGEDAGEzAGETAGEjAGEDD6EzD6ETBqBIy+BIyVCBgrEjBWIGAsT8BYjoAx5Tr1GVMQMCYnYExGwJiUgDEJAaMPAePvBPXxMQHjIwLGhwSMDwgY7xMw3iNgvEvAeIeA8TYB4y0CxpsEjDcIGK8TMP5GwHiNgPFXAsZfCBh/JmC8SsD4EwHjFQLGHwkYDxDM158SMO4nYNxHwLiXgDGGgPETAsaPCRj3EDDuJmDcRcC4k4BxBwHjdgLGjwgYtxEwbiVg3ELAuJmAcRMB40YCxg0EjOsJGNcRMK4lYFxDwLiagHEVAeNKAsYVBIwT1qvPOJ6AcRwB4ysEjGMJGF8mYHyJgPFFAsYXCBjHEDCOJmAcRcA4koBxBAHjcALGYQSMQwkYhxAwDiZgHETAOJCAcQABY38Cxn4EjH0JGPsQMPYmYOxFwBhNwBhFwFhzg/qMNQgYqxMwViNgrErAWIWAsTIBYygBYwgBYzABYxABYyABYwABoz8Box8Bo0bA6EvAWImAsSIBYwUCxvIEjOUIGMsSMJYhYCxNwFiKgLEkAWMJAsbiBIzFCBgfEzA+ImB8SMD4gIDxPgHjPQLGuwSMdwgYbxMw3iJgvEnAeIOA8ToB428EjNcIGH8lYPyFgPFnAsarBIw/ETBeIWD8kYDxBwLG7wkYvyNgvEzAeImA8VsCxosEjBcIGPdsVJ9xNwHjLgLGnQSMOwgYtxMwfkTAuI2AcSsB4xYCxs0EjJsIGDcSMG4gYFxPwLiOgHEtAeMaAsbVBIyrCBhXEjCuIGBcTsC4jIBxKQHjEgLGxQSMiwgYFxIwLiBgfGGT+oxjCBhHEzCOImAcScA4goBxOAHjMALGoQSMQwgYBxMwDiJgHEjAOICAsT8BYz8Cxr4EjH0IGHsTMPYiYIwmYIwiYIwkYIwgYAwnYAwjYOxJwNiDgLE7AWM3AsaQzeozBhMwBhEwBhIwBhAw+hMw+hEwagSMvgSMlQgYKxIwViBgLE/AWI6AsSwBYxkCxtIEjKUIGEsSMJYgYCxOwFiMgLEoAWMRAsbCBIyFCBgLEjAWIGDMT8CYj4DxNgHjLQLGmwSMNwgYrxMw/kbAeI2A8VcCxl8IGH8mYLxKwPgTAeMVAsYfCRh/IGD8noDxOwLGywSMlwgYvyVgvEjAeIGA8RsCxq8JGM8TMJ4jYDxLwHiGgPE0AeMpAsatW9Rn3ELAuJmAcRMB40YCxg0EjOsJGNcRMK4lYFxDwLiagHEVAeNKAsYVBIzLCRiXETAuJWBcQsC4mIBxEQHjQgLGBQSM8wkYPyRgnEfA+AEB41wCxvcJGOcQMM4mYBy6VX3GIQSMgwkYBxEwDiRgHEDA2J+AsR8BY18Cxj4EjL0JGHsRMEYTMEYRMEYSMEYQMIYTMIYRMPYkYOxBwNidgLEbAWNXAsYuBIydCRg7ETB2JGDsQMDYnoCxHQGj7zb1GSsRMFYkYKxAwFiegLEcAWNZAsYyBIylCRhLETCWJGAsQcBYnICxGAFjUQLGIgSMhQkYCxEwFiRgLEDAmJ+AMR8BY14CxjwEjLkJGHMRMOYkYMxBwJidgDEbAeMvBIw/EzBeJWD8iYDxCgHjjwSMPxAwfk/A+B0B42UCxksEjN8SMF4kYLxAwPgNAePXBIznCRjPETCeJWA8Q8B4moDxFAHjSQLGEwSMxwkYvyJgPEbA+CUB41ECxi8IGNd+pD7jGgLG1QSMqwgYVxIwriBgXE7AuIyAcSkB4xICxsUEjIsIGBcSMC4gYJxPwPghAeM8AsYPCBjnEjC+T8A4h4BxNgHjewSM7xIwziJgfIeAcSYB49sEjDMIGN8iYOy7XX3GPgSMvQkYexEwRhMwRhEwRhIwRhAwhhMwhhEw9iRg7EHA2J2AsRsBY1cCxi4EjJ0JGDsRMHYkYOxAwNiegLEdAWNbAsY2BIytCRhbETC2JGBsQcDYnICxGQFj6R3qM5YiYCxJwFiCgLE4AWMxAsaiBIxFCBgLEzAWImAsSMBYgIAxPwFjPgLGvASMeQgYcxMw5iJgzEnAmIOAMTsBYzYCxqwEjFkIGDMTMGYiYMxIwJiBgDE9AWM6AsYVBIzLCRiXETAuJWBcQsC4mIBxEQHjQgLGBQSM8wkYPyRgnEfA+AEB41wCxvcJGOcQMM4mYHxPgNEHy+hd17uud13vuv/frotbW4vW74dCPtY/mL+Hn5/MukGBMusGhwitKxQfUt/Xm3/edb3retf1rutd17uud10114X/+zcF/QaQMzCJy5rbHcaHSGb8VX9R2PQ3Tgr+UPrf4+la/r5BAQFRwX5Rmr8W5usXGh4S6BsQGB4UooVogSGBkX4h/v5RIQEhwaHhocG+oVqAf5QWHRjqH20stsOB/TBPv8MO4zskdz4ZXL6B5HdxDSAFvov29P/wwQfjH2u7ftedjid/3WUOyl0WQZmc5OP/w7X8jLW0ncBk2SUUFOZK6i7nTlxSa3+VwOgbYLuD4QbQol2/xW4j6faYk05/kcIEgK54e4DB/TEwaFy/w8cW3yGZYOD80+8QFa3/RPntBn7TPcCA9ibif2E+k4ifGIkYY05E/X/Ib3oXY0NyxgADaa9Qcu4lS85PgN80RijIzXGE5HR3rX0OXPK5xtE+l3Y/tY91kfLBxtUz/wwCXQD3AWPDdV7cby5O+oskMpvw0zehr58MHJD7YAkdHbQfGNyfCs2yn7qMTxKBpvgZRSDP6IDQGR14Dt+AHrOARSLQAlekS3IYXVKsS92Bf5j9Qt2Kw6KTi3XpYNAd3H4jOZHfJRaY7EaCRiO/dyxwv3FCcRDncubYgqz937d0OPA5UbRyEmi3iY71faZY93XvR3sa6ynA31G1i+3pZOIA5k0s8ByAcRdop4LYDfgGT445MtoCV0TAHzQu13hzlx9vIeDRYzbAW/0hzQ8Cgzle6CDRBfogcOTTgyLBBx50f/z82Tfwde8HknTSjIeQjFYVDT2K7Ra4WZGS2vEnI6ivez8akhH5/RywghRl2z/aTTBulkTzzZJocbOkxID8AcRwkO7eeAnAPSa6rOUX5hcY6RseFOZcKjwgIjQ4Ojg6PCQ0KNwvMsLXL8w/PDjMuUCYn39IcIh/SIRvaGB0UGCYb0B0WKBfaEBYEKJ9swpW9O2ZAL45JJSEHi/oX3v4/zg3/uA6DORi7YwOE3RGn6E7o0w+/+kKXH+UbunEgkuTmCONpf/zT4lc/1TQEed3+dz5fOF8jjqfL53PMefzlfM57nxOOJ+TzueU8zntfM44n7PO55zzOe98vnY+3zifC87novP51vlccj6Xnc93zud75/OD8/nR+VxxPj85n6vO52dzl6GDpDa9+9zi3RcW745avPvS4t0xi3dfWbw7bvHuhMW7kxbvTlm8O23x7ozFu7MW785ZvDtv8e5ri3ffWLy7YPHuosW7by3eXbJ4d9ni3XcW7763ePeDxbsfLd5dsXj3k8W7qxbvfjbeuf4UNv5a0/irr3s/zxQXd2/CIzBh6Kt9DlpL3+MXkLWefK+jwK76S3fXCvjj22vH3FvL1+Ucta/cWcvvmZjQjv/ztXxN8aWd+IdrBUX/V6xqJ//ZWiEWca+d+idrhVjmkHb6768V/Cf5qJ35u2sF/2lua2f/3lp+f1EntHN/Z63gv6w52vnnXyvif9Qv7evnXSv4f9ZC7ZvnW8v3OeqqduF51vJ9rhqtXfzfawU+Z73Xvv1fawU8992hXfrLtQKi/8Y9pF3+q7WC/9adpn3352uF/M37Ufv+T9YKjf7bd632g/Vavv/g3tZ+tFrL9x/1ANqV/15L+4f9hPaTea3If9ybaFefXcvfjT5H+xk4kNk5SEInYIsfzNr2D5K/OL/Lr87nmvP5zflcdz43nM9N53PL+dx2Pnecz13nc8/53Hc+D5zPQ+fzyPk8dj6/60NhrHNd55PU+SRzPsmdTwrnk9L5pHI+qZ1PGueT1vmkcz7pY32ebfh/sRgCfrV4d83i3W8W765bvLth8e6mxbtbFu9uW7y7Y/HursW7exbv7lu8e2Dx7qHFu0cW7x5bvPvd4p1+UOZ3SSzeJbV4l8ziXXKLdyks3qW0eJfK4l1qi3dpLN6ltXiXzuJd+lj5QfIz4CD5C3CQ/BU4SF4DDpK/AQfJ68BB8gZwkLwJHCRvAQfJ28BB8g5wkLwLHCTvAQfJ+8BB8gFwkHwIHCQfAQfJx8BB8nfgIKnfe/9zreccJJP877Wee5BM+r/W+huDZLJY3CCZPBY3SKaIxQ2SKWNxg2SqWNwgmToWN0imicUNkmljcYNkuljcIJk+FjtI2vRny0T/PSfIP3eYxIUzg3nY0l8kkdmEn74JfX30L8sh/7BjhljcWhljsYf29Iz0dQv7WP+5JXTg6d9D/75JBM/M180fH4sfN9e2/IW6TLFP/prZnDT6/3Be6AAUTpo/Jq1MwKTJHCsTGEnB3w+55ywWe/6na7rGZRYjLvVCkdElNl1/0ImdCbyXpz9ZYwWB9cXNAeIufFZcIGvZgMEm9Q2zxf558fun62cDF4M/O+N/+KNlNvaNPOdssUBO49d4kfGTXairyf4XXc3TH/TlirhsjE+sWeCKdCE5jEKY09yF5Iz9j79++oP+8xmZY3FdQw5gUOYUOkh0ocwh1N2gOXPBOIMCJTlzwzif/ffIoznz4Dh99Zw+4fOff1D7wQIfH/289G+h/330/3eaGvY8+k9Sg8f8g9mv4H/XNVZ9xrxIRhtl2F8WUV/3fsRkWD7zjZpPWIblU1SGGf+ug6h8wBs6P7BNdj2j/DbKsHyGDEO7BKTAzBcrk8Q+mG9p2dIWMFraguYELCAs1vSPlZzkMN1ttwsAk7mgUJChEwu550JCkq6QByRdASFJVzhWELiwgKQrDAzkIopLOv0bFhGQdEUUl3QFjX0jz7mIgKRDxk9RIUlX1AOSDnHZ2C3pihmFsLi5oylug6QrCOwaigGDsjiJpCsGTB5WOVIwVn3GEqRy5Jn/AiSLHClprmQlheVISbXlSERJYGUshYtkP9czKmWjHCmpsBx5+i+9LRkrk8Q+mG9p2UqUNlqJMuYELC0sR0oqKkesDtPdNqc0MJnLCAUZOrGQey4rJEfKekCOlBaSI+ViBYHLCciRcsChubzickT/huUF5Eh5xeVIGWPfyHMuLyBHkPFTQUiOVPCAHEFcNnbLkYpGIaxk7mgq2SBHygC7horAoKxEIkcqeuWIViZWfUZfUjni77omixzRzJVME5YjmtpyJEwDVkY/XCQ/M1v42ShHNPXlSJQWK5PEPphvadlK+ButRIA5Af2F5YimthyJ0oBtjj8wmQOEggydWMg9BwrJkUAPyBF/ITkSFCsIHCQgR4KAQ3Ow4nJE/4bBAnIkWHE5EmDsG3nOwQJyBBk/IUJyJMQDcgRx2dgtR0KNQljZ3NFUtkGOBAC7hlBgUFYmkSOhXjmiBcSqz1iFVI4EuK7JIkeqmitZVWE5UlVtORJSFVgZq+EiOcD1jKrZKEeqqi9HIqvGyiSxD+ZbWrYS1Y1WooY5AasLy5GqasuRyKrANqc6MJlrCAUZOrGQe64pJEdqekCOVBeSI7ViBYFrCciRWsChubbickT/hrUF5EhtxeVIDWPfyHOuLSBHkPFTR0iO1PGAHEFcNnbLkbpGIaxn7mjq2SBHagC7hrrAoKxHIkfqeuWIViNWfcb6pHLkL/9FQ77u/YjJkQbmStZAWI40UFuOBDUAVsaGuEgOdD2jhjbKkQbqy5GIBrEySeyD+ZaWrUQjo5VobE7ARsJypIHaciSiAbDNaQRM5sZCQYZOLOSemwjJkSYekCONhORI01hB4KYCcqQpcGhuprgc0b9hMwE50kxxOdLY2DfynJsJyBFk/DQXkiPNPSBHEJeN3XKkhVEIW5o7mpY2yJHGwK6hBTAoW5LIkRZeOaI1jlWfsRWpHAlyXZNFjrQ2V7LWwnKktdpyJKA1sDK2wUVykOsZtbFRjrRWX46Et46VSWIfzLe0bCXaGq1EO3MCthWWI63VliPhrYFtTltgMrcTCjJ0YiH33F5IjrT3gBxpKyRHOsQKAncQkCMdgENzR8XliP4NOwrIkY6Ky5F2xr6R59xRQI4g46eTkBzp5AE5grhs7JYjnY1C2MXc0XSxQY60A3YNnYFB2YVEjnT2yhGtXaz6jF1J5Uiw65oscqSbuZJ1E5Yj3dSWI37dgJWxOy6Sg13PqLuNcqSb+nIkrFusTBL7YL6lZSvRw2glepoTsIewHOmmthwJ6wZsc3oAk7mnUJChEwu55zAhORLmATnSQ0iOhMcKAocLyJFw4NAcobgc0b9hhIAciVBcjvQ09o085wgBOYKMn0ghORLpATmCuGzsliNRRiGMNnc00TbIkZ7AriEKGJTRJHIkyitHtJ6x6jP2IpUjf/nfxfZ170dMjvQ2V7LewnKkt9pyxLc3sDL2wUVyiOsZ9bFRjvRWX46E9o6VSWIfzLe0bCX6Gq1EP3MC9hWWI73VliOhvYFtTl9gMvcTCjJ0YiH33F9IjvT3gBzpKyRHBsQKAg8QkCMDgEPzQMXliP4NBwrIkYGKy5F+xr6R5zxQQI4g42eQkBwZ5AE5grhs7JYjg41COMTc0QyxQY70A3YNg4FBOYREjgz2yhGtX6z6jENJ5Uio65oscmSYuZINE5Yjw5SWI1FRw4CVcTgukkNdz2i4jXJkmPpyJGRYrEwS+2C+pWUrMcJoJUaaE3CEsBwZprYcCRkGbHNGAJN5pFCQoRMLuedRQnJklAfkyAghOTI6VhB4tIAcGQ0cmscoLkf0bzhGQI6MUVyOjDT2jTznMQJyBBk/LwjJkRc8IEcQl43dcuRFoxC+ZO5oXrJBjowEdg0vAoPyJRI58qJXjmgjY9VnfJlUjoS5rskiR8aaK9lYYTkyVm05EjEWWBlfwUVymOsZvWKjHBmrvhwJHhsrk8Q+mG9p2UqMM1qJ8eYEHCcsR8aqLUeCxwLbnHHAZB4vFGToxELueYKQHJngATkyTkiOvBorCPyqgBx5FTg0T1RcjujfcKKAHJmouBwZb+wbec4TBeQIMn4mCcmRSR6QI4jLxm45MtkohFPMHc0UG+TIeGDXMBkYlFNI5MhkrxzRxseqz/gaqRwJd12TRY5MNVeyqcJyZKraciRsKrAyvo6L5HDXM3rdRjkyVX05EjQ1ViaJfTDf0rKVeMNoJd40J+AbwnJkqtpyJGgqsM15A5jMbwoFGTqxkHueJiRHpnlAjrwhJEemxwoCTxeQI9OBQ/NbissR/Ru+JSBH3lJcjrxp7Bt5zm8JyBFk/MwQkiMzPCBHEJeN3XLkbaMQzjR3NDNtkCNvAruGt4FBOZNEjrztlSPam7HqM75DKkciXNdkkSOzzJVslrAcmaW2HAmZBayM7+IiOcL1jN61UY7MUl+OBM6KlUliH8y3tGwl3jNaidnmBHxPWI7MUluOBM4CtjnvAZN5tlCQoRMLuec5QnJkjgfkyHtCcuT9WEHg9wXkyPvAoXmu4nJE/4ZzBeTIXMXlyGxj38hznisgR5Dx84GQHPnAA3IEcdnYLUfmGYXwQ3NH86ENcmQ2sGuYBwzKD0nkyDyvHNFmx6rPOJ9UjkS6rskiRxaYK9kCYTmyQG05ErQAWBkX4iI50vWMFtooRxaoL0cCFsTKJLEP5ltathKLjFZisTkBFwnLkQVqy5GABcA2ZxEwmRcLBRk6sZB7XiIkR5Z4QI4sEpIjS2MFgZcKyJGlwKF5meJyRP+GywTkyDLF5chiY9/Ic14mIEeQ8bNcSI4s94AcQVw2dsuRFUYhXGnuaFbaIEcWA7uGFcCgXEkiR1Z45Yi2OFZ9xlWkciTKdU0WObLaXMlWC8uR1WrLkYDVwMq4BhfJUa5ntMZGObJafTnivzpWJol9MN/SspVYa7QS68wJuFZYjqxWW474rwa2OWuBybxOKMjQiYXc83ohObLeA3JkrZAc2RArCLxBQI5sAA7NGxWXI/o33CggRzYqLkfWGftGnvNGATmCjJ9NQnJkkwfkCOKysVuObDYK4RZzR7PFBjmyDtg1bAYG5RYSObLZK0e0dbHqM24llSPRrmuyyJFt5kq2TViObFNbjvhtA1bGj3CRHO16Rh/ZKEe2qS9HnjkzX/d+nkliH8y3tGwlthutxA5zAm4XliPb1JYjiAT8o83ZDkzmHUJBhk4s5J53CsmRnR6QI9uF5MiuWEHgXQJyZBdwaN6tuBzRv+FuATmyW3E5ssPYN/KcdwvIEWT87BGSI3s8IEcQl43dcuRjoxB+Yu5oPrFBjuwAdg0fA4PyExI58rFXjmg7YtVnjOGUI5qv65oscmSvuZLtFZYje9WWI757gZVxXywuuFzPaJ+NcmSv+nJE2xsrk8Q+mG9p2UrsN1qJT80JuF9YjuxVW45oe4Ftzn5gMn8qFGToxELu+YCQHDngATmyX0iOOGIFgR0CcsQBHJpjFZcj+jeMFZAjsYrLkU+NfSPPOVZAjiDjJ05IjsR5QI4gLhu75chBoxDGmzuaeBvkyKfAruEgMCjjSeTIQa8c0T6NVZ/xEKkc+cvg9XXvR0yOJJgrWYKwHElQWo5ERiUAK2Mibp7SXM8o0UY5kqC+HPFNiJVJYh/Mt7RsJQ4brcRn5gQ8LCxHEtSWI74JwDbnMDCZPxMKMnRiIfd8REiOHPGAHDksJEc+jxUE/lxAjnwOHJq/UFyO6N/wCwE58oXicuQzY9/Ic/5CQI4g4+eokBw56gE5grhs7JYjXxqF8Ji5ozlmgxz5DNg1fAkMymMkcuRLrxzRPotVn/ErUjni57omixw5bq5kx4XlyHG15UjEcWBlPIGbp/xcz+iEjXLkuPJyJCr6eKxMEvtgvqVlK3HSaCVOmRPwpLAcOa60HHn2MN1tc04Ck/mUUJChEwu559NCcuS0B+TISSE5ciZWEPiMgBw5AxyazyouR/RveFZAjpxVXI6cMvaNPOezAnIEGT/nhOTIOQ/IEcRlY7ccOW8Uwq/NHc3XNsiRU8Cu4TwwKL8mkSPnvXJEOxWrPuM3pHLE33VNFjlywVzJLgjLkQtqy5GwC8DKeBE3Tz0zW1y0UY5cUF+ORF2IlUliH8y3tGwlvjVaiUvmBPxWWI5cUFuORF0AtjnfApP5klCQoRMLuefLQnLksgfkyLdCcuS7WEHg7wTkyHfAofl7xeWI/g2/F5Aj3ysuRy4Z+0ae8/cCcgQZPz8IyZEfPCBHEJeN3XLkR6MQXjF3NFdskCOXgF3Dj8CgvEIiR370yhHtUqz6jD+RypEA1zVZ5MhVcyW7KixHrqotR0KuAivjz7h5KsD1jH62UY5cVV+ORF6NlUliH8y3tGwlfjFaiV/NCfiLsBy5qrYcibwKbHN+ASbzr0JBhk4s5J6vCcmRax6QI78IyZHfYgWBfxOQI78Bh+brissR/RteF5Aj1xWXI78a+0ae83UBOYKMnxtCcuSGB+QI4rKxW47cNArhLXNHc8sGOfIrsGu4CQzKWyRy5KZXjmi/xqrPeJtUjgS6rskiR+6YK9kdYTlyR205EnQHWBnv4uapQNczumujHLmjvhyJuBMrk8Q+mG9p2UrcM1qJ++YEvCcsR+6oLUci7gDbnHvAZL4vFGToxELu+YGQHHngATlyT0iOPIwVBH4oIEceAofmR4rLEf0bPhKQI48UlyP3jX0jz/mRgBxBxs9jITny2ANyBHHZ2C1Hfn9aCON8nu1o9BeFTQBoOXIf2DX8jixqcRxy5HevHNHux6rPmCQOyGijHAlyXZNFjiQ1VzL9haQc0ddXWI4EJI3DcSWLwwWX6xkli7NPjujfQ3E5Ep40TiaJfTDf0rKVSB735K8pzAmo/w+SckT/WArLkXBAAv7R5iQHJnMKoSBDJxZyzynjZORIyjj75Uhy8F6e/qSKEwTWF0fLkVS4/kpLDQw2qW+YOg4vR1Ije1QfvBxJYewbec6p4/ByBBk/aYBn4lqs0sTZL0cQl43dciStUQjTmTuadDbIkRTAriEtMCjTkciRtMDkYZUjKeLUZ0xPKkeCXddkkSMZzJUsg7AcyaC2HPHLAKyMGXHzVLDrGWW0UY5kUF+OhGWIk0liH8y3tGwlMhmtRGZzAmYSliMZ1JYjYRmAbU4mYDJnFgoydGIh95xFSI5k8YAcySQkR7LGCQJnFZAjWYFDczbF5Yj+DbMJyJFsisuRzMa+keecTUCOIOMnu5Acye4BOYK4bOyWIzmMQpjT3NHktEGOZAZ2DTmAQZmTRI7k8MoRLXOc+oy5SOVIiOuaLHIkt7mS5RaWI7nVliO+uYGVMQ9ungpxPaM8NsqR3OrLkdDccTJJ7IP5lpatRF6jlchnTsC8wnIkt9pyJDQ3sM3JC0zmfEJBhk4s5J7zC8mR/B6QI3mF5EiBOEHgAgJypABwaC6ouBzRv2FBATlSUHE5ks/YN/KcCwrIEWT8FBKSI4U8IEcQl43dcqSwUQiLmDuaIjbIkXzArqEwMCiLkMiRwl45ouWLU5+xKKkcCXVdk0WOFDNXsmLCcqSY0nIkIqoYsDIWx81Toa5nVNxGOVJMfTkSUixOJol9MN/SspUoYbQSJc0JWEJYjhRTW46EFAO2OSWAyVxSKMjQiYXccykhOVLKA3KkhJAcKR0nCFxaQI6UBg7NZRSXI/o3LCMgR8ooLkdKGvtGnnMZATmCjJ+yQnKkrAfkCOKysVuOlDMKYXlzR1PeBjlSEtg1lAMGZXkSOVLOK0e0knHqM1YglSNhrmuyyJGK5kpWUViOVFRbjkRUBFbGSrh5Ksz1jCrZKEcqqi9HgivGySSxD+ZbWrYSvkYroZkT0FdYjlRUW44EVwS2Ob7AZNaEggydWMg9+wnJET8PyBFfITniHycI7C8gR/yBQ3OA4nJE/4YBAnIkQHE5ohn7Rp5zgIAcQcZPoJAcCfSAHEFcNnbLkSCjEAabO5pgG+SIBuwagoBBGUwiR4K8ckTT4tRnDCGVI+Gua7LIkVBzJQsVliOhasuRsFBgZayMm6fCXc+oso1yJFR9ORIUGieTxD6Yb2nZSlQxWomq5gSsIixHQtWWI0GhwDanCjCZqwoFGTqxkHuuJiRHqnlAjlQRkiPV4wSBqwvIkerAobmG4nJE/4Y1BORIDcXlSFVj38hzriEgR5DxU1NIjtT0gBxBXDZ2y5FaRiGsbe5oatsgR6oCu4ZawKCsTSJHannliFY1Tn3GOqRyJMJ1TRY5UtdcyeoKy5G6asuRkLrAylgPN09FuJ5RPRvlSF315Uhg3TiZJPbBfEvLVqK+0Uo0MCdgfWE5UldtORJYF9jm1AcmcwOhIEMnFnLPDYXkSEMPyJH6QnKkUZwgcCMBOdIIODQ3VlyO6N+wsYAcaay4HGlg7Bt5zo0F5AgyfpoIyZEmHpAjiMvGbjnS1CiEzcwdTTMb5EgDYNfQFBiUzUjkSFOvHNEaxKnP2JxUjkS6rskiR1qYK1kLYTnSQm05EtQCWBlb4uapSNczammjHGmhvhwJaBEnk8Q+mG9p2Uq0MlqJ1uYEbCUsR1qoLUcCWgDbnFbAZG4tFGToxELuuY2QHGnjATnSSkiOtI0TBG4rIEfaAofmdorLEf0bthOQI+0UlyOtjX0jz7mdgBxBxk97ITnS3gNyBHHZ2C1HOhiFsKO5o+logxxpDewaOgCDsiOJHOnglSNa6zj1GTuRypEo1zVZ5EhncyXrLCxHOqstRwI6AytjF9w8FeV6Rl1slCOd1Zcj/p3jZJLYB/MtLVuJrkYr0c2cgF2F5UhnteWIf2dgm9MVmMzdhIIMnVjIPXcXkiPdPSBHugrJkR5xgsA9BORID+DQ3FNxOaJ/w54CcqSn4nKkm7Fv5Dn3FJAjyPgJE5IjYR6QI4jLxm45Em4UwghzRxNhgxzpBuwawoFBGUEiR8K9ckTrFqc+Y6S0HEG3o/uco8F+3Hjg5zDWQ9+Y+2CCRYt2OPCBJJBIga5tbJS5akfF/XdfDv7oflHAShsNzl505j5NBLT82gdOLhRXWOUkIkmA/n69gG1yUdyeNeD3C5SIZz3fegnIXGRN6AVcq7fQeNH7Obpjd9n7AL+Da4yrVCPskOF6bPaJ+8/6KHYfix8317Yc0foa7P3Ml31fQen89KOBOss/xrS+wKDuFydzmOhuGrnn/kJyt78H5G5fIbk7IE4QeICA3B0A7GYGKi539W84UEDuDlRc7vYz9o0854ECchcZP4OEuq9BHpC7iMvGbrk72CiEQ8ydwxAb5G4/oNwdDAzKISRyd7BX7moSHR6acSiaEX3z/Oz0QxlicYGpr5U3Fs+ZF8g4TGg0QM/4wODRhgGL5HDFvazuZIcLeKz0sTKFwV2uEcDz+KvfrkWfUx9gfFvgivxDlZHmbmnkX/x2rXvyPjpa/0Aj4/DdF/DDB48EBvKoONi3e+aPHo+y8bdrn54Zet2RQpcWKFksR4zRxogxxpw0owXlpFTSjASOLKOBSTOGRHQi9/yCkOh8wQOic7SQ6HwxThD4RQHR+SKwHXhJcdGpf8OXBETnS4qLzjHGvpHn/JKA6ETGz8tCovNlD4hOxGVjt+gcaxTCV8xdyCtx8qJzDLBrGAsMyldIROdYr+jUJDo8NOM41UXnVacUygeUiPpaJQREZwkg43gS0QkMHm08sEhOIBCdEwREZ7pYmcLgLterXtHpZ4ErIjonmrulicKic6LaojNwIjCQJ+FE5zP/GoFJNovOiXjR6TeRUHRONkaMKeakmSwsOgWSxm8icGSZDEyaKSSiE7nn14RE52seEJ2ThUTn1DhB4KkConMqsN19XXHRqX/D1wVE5+uKi84pxr6R5/y6gOhExs8bQqLzDQ+ITsRlY7fofNMohNPMXci0OHnROQXYNbwJDMppJKLzTa/o1CQ6PDTjdNVF509OKVQSKBH1tXwFRKcvkPEtEtEJDB7tLWCRnEEgOmcIiM60sTKFwV2ut72i098CV0R0zjR3SzOFRedMtUWn/0xgIL+DE53Rrmf0js2icyZedD7znX3d/PHxgSeL5Ygxyxgx3jUnzSxh0SmQNIhA/2NkmQVMmndJRCdyz+8Jic73PCA6ZwmJztlxgsCzBUTnbGC7O0dx0al/wzkConOO4qLzXWPfyHOeIyA6kfHzvpDofN8DohNx2dgtOucahfADcxfyQZy86HwX2DXMBQblBySic65XdGoSHR6acZ7qovOKUwppQImor1VFQHRWATJ+SCI6gcGjfQgskvMJROd8AdGZJlamMLjLtcArOgMscEVE50Jzt7RQWHQuVFt0aguBgbwIuJbrGS2yWXQuxIvOgIWEonOxMWIsMSfNYmHRKZA0AQuBI8tiYKAvIRGdyD0vFRKdSz0gOhcLic5lcYLAywRE5zLgrbRccdGpf8PlAqJzueKic4mxb+Q5LxcQncj4WSEkOld4QHQiLhu7RedKoxCuMnchq+LkRecSYNewEhiUq0hE50qv6NQkOjw042rVReePTilUFSgR9bXqC4jO+kDGNSSiExg82hpgkVxLIDrXCojO1LEyhcFdrnVe0RlogSsiOtebu6X1wqJzvbDodDf41gPX2iA0EmywWXSux4vOwPWEonOjMWJsMifNRmHRKZA0geuBI8tGYNJsIhGdyD1vFhKdmz0gOjcKic4tcYLAWwRE5xZgu7tVcdGpf8OtAqJzq+Kic5Oxb+Q5bxUQncj42SbU1WzzgOhEXDZ2i86PjEK43dyFbI+TF52bgF3DR8Cg3E4iOj/yik5NosNDM+5QXXT+4JRCDYASUV+rlYDobAVk3EkiOoHBo+0EFsldBKJzl4DoTBUrUxjc5drtFZ1BFrgionOPuVvaIyw69ygqOp/+uzD3AAP5Y2DBcz2jj20WnXvwojNoD6Ho/MQYMWLMSfOJsOgUSJqgPcCR5RNg0sSQiE7knvcKic69HhCdnwiJzn1xgsD7BETnPmD136+46NS/4X4B0blfcdEZY+wbec77BUQnMn4+FRKdn3pAdCIuG7tF5wGjEDrMXYgjTl50xgC7hgPAoHSQiM4DXtGpSXR4aMZY1UXn904p1BooEfW1ugqIzq5AxjgS0QkMHi0OWCQPEojOgwKiM2WsTGFwlyveKzqDLXBFROchc7d0SFh0HlJbdEYcAgZyAi4g/FzPKMFm0XkILzqDDxGKzkRjxDhsTppEYdEpkDTBh4AjSyIwaQ6TiE7knj8TEp2feUB0JgqJziNxgsBHBETnEWC7+7niolP/hp8LiM7PFRedh419I8/5cwHRiYyfL4RE5xceEJ2Iy8Zu0XnUKIRfmruQL+PkRedhYNdwFBiUX5KIzqNe0alJdHhoxmOqi87vnFKoG1Ai6mv1EhCdvYCMX5GITmDwaF8Bi+RxAtF5XEB0poiVKQzucp3wis4QC1wR0XnS3C2dFBadJ9UWnWEngYF8ChcQz/iLUzaLzpN40RlyklB0njZGjDPmpDktLDoFkibkJHBkOQ1MmjMkohO557NCovOsB0TnaSHReS5OEPicgOg8B2x3zysuOv+vAAqIzvOKi84zxr6R53xeQHQi4+drIdH5tQdEJ+KysVt0fmMUwgvmLuRCnLzoPAPsGr4BBuUFEtH5jVd0ahIdHprxouqi87JTCvUGSkR9raEConMokPFbEtEJDB7tW2CRvEQgOi8JiM7ksTKFwV2uy17RGWqBKyI6vzN3S98Ji87v1BadId8BA/l7XEAEuJ7R9zaLzu/wojP0O0LR+YMxYvxoTpofhEWnQNKEfgccWX4AJs2PJKITuecrQqLzigdE5w9CovOnOEHgnwRE50/Adveq4qJT/4ZXBUTnVcVF54/GvpHnfFVAdCLj52ch0fmzB0Qn4rKxW3T+YhTCX81dyK9x8qLzR2DX8AswKH8lEZ2/eEWnJtHhoRmvqS46Lzml0DCgRNTXellAdL4MZPyNRHQCg0f7DVgkrxOIzusCojNZrExhcJfrhld0hlngiojOm+Zu6aaw6LyptugMugkM5Ftx2EN7eka3bBadN/GiM+wmoei8bYwYd8xJc1tYdAokTdhN4MhyG5g0d0hEJ3LPd4VE510PiM7bQqLzXpwg8D0B0XkP2O7eV1x06t/wvoDovK+46Lxj7Bt5zvcFRCcyfh4Iic4HHhCdiMvGbtH50CiEj8xdyKM4edF5B9g1PAQG5SMS0fnQKzo1iQ4PzfhYddH5rVMKjQVKRH2t1wRE52tAxt9JRCcweLTfkZ3fQfVFp86IPo+ksTKFwV2uJMDzIBWd4Ra4IqIz6UGfZ7sl/YWk6Ex6UGnRGZD0IPCfJOACOcj1jPR1C/vYJzpdYwK0bnjSgzKXFihZLEeM5Aef/DWFOWn0/0FSdAokTTgg0P8YWZIDkyaFUGCgRSdyzykPyojOlAftF53JwXt5+pPqoCCwvjhadKbCBbKWGhhsUt8w9UG86EwNLgboMS6FsW/kOac+iBedyPhJAzwT12KV5qD9ohNx2dgtOtMahTCduQtJd1BedKYAdg1pgUGZTugg0YUyLTB5WEWnRIeHZkyPZkTfPBedUmgqUCLqa70jIDrfATJmEBoN0GINGDxaBmCRzEggOjMKiM4ksTKFwV2uTF7RGWGBKyI6M5u7pczCojOz2qLTLzMwkLPgAjnY9Yyy2Cw6M+NFZ0RmQtGZ1RgxspmTJquw6BRImojMwJElKzBpspGITuSeswuJzuweEJ1ZhURnjoOCwDkERGcOYLubU3HRqX/DnAKiM6fiojObsW/kOecUEJ3I+MklJDpzeUB0Ii4bu0VnbqMQ5jF3IXlsEJ3ZgF1DbmBQ5iERnbm9olOT6PDQjHlVF50XnFJoFlAi6mvNFxCd84GM+UhEJzB4tHzAIpmfQHTmFxCdPrEyhcFdrgJe0RlpgSsiOguau6WCwqKzoNqi07cgMJAL4QI5xPWMCtksOgviRWdkQULRWdgYMYqYk6awsOgUSJrIgsCRpTAwaYqQiE7knosKic6iHhCdhYVEZ7GDgsDFBERnMWC7W1xx0al/w+ICorO44qKziLFv5DkXFxCdyPgpISQ6S3hAdCIuG7tFZ0mjEJYydyGlbBCdRYBdQ0lgUJYiEZ0lvaJTk+jw0IylVRed3zil0AKgRNTXWiUgOlcBGcuQiE5g8GhlgEWyLIHoLCsgOn93yBQGd7nKeUVnlAWuiOgsb+6WyguLzvJKi86oqPLAQK6AC+RQ1zOqYLPoLI8Xnc98Z183f3x84MliOWJUNEaMSuakqSgsOgWSBhHof4wsFYFJU4lEdCL37CskOn09IDorColO7aAgsCYgOjVgu+unuOjUv6GfgOj0U1x0VjL2jTxnPwHRiYwffyHR6e8B0Ym4bOwWnQFGIQw0dyGBNojOSsCuIQAYlIEkojPAKzo1iQ4PzRikuuj82ilvVgMlor7WVgHRuRXIGEwiOoHBowUDi2QIgegMERCdjx0yhcFdrlCv6Iy2wBURnZXN3VJlYdFZWW3RGVEZGMhVcIEc5npGVWwWnZXxojO6MqHorGqMGNXMSVNVWHQKJE10ZeDIUhWYNNVIRCdyz9WFRGd1D4jOqkKis8ZBQeAaAqKzBrDdram46Py/QxcQnTUVF53VjH1Dz1lAdCLjp5aQ6KzlAdGJuGzsFp21jUJYx9yF1LFBdFYDdg21gUFZh0R01vaKTk2iw0Mz1lVddJ53ypttQImorxUjIDpjgIz1SEQnMHi0esAiWZ9AdNYXEJ2PHDKFwV2uBv960alJuJunP8+IzobmbqmhsOhsqLboDGsIDORGuEAOdz2jRjaLzoZw0an5NiQUnY2NEaOJOWkaC4tOfNI8ewDujiyNgUnThER0IvfcVEh0NvWA6GwsJDqbHRQEbiYgOpsB293miotO/Rs2FxCdzRUXnU2MfSPPubmA6ETGTwsh0dnCA6ITcdnYLTpbGoWwlbkLaWWD6GwC7BpaAoOyFYnobOkVnZpEh4dmbK266DznlDd7gRJRX+uQgOg8BGRsQyI6gcGjtQEWybYEorOtgOh86JApDO5ytfOKTomu6enPM6Kzvblbai8sOturLTpD2gMDuQMukCNcz6iDzaKzPV50au0JRWdHY8ToZE6ajsKiE580zx6AuyNLR2DSdCIRncg9dxYSnZ09IDo7ConOLgcFgbsIiM4uwHa3q+KiU/+GXQVEZ1fFRWcnY9/Ic+4qIDqR8dNNSHR284DoRFw2dovO7kYh7GHuQnrYIDo7AbuG7sCg7EEiOrt7Racm0eGhGXuqLjrPOuVNAlAi6mt9JSA6vwIyhpGITmDwaGHAIhlOIDrDBUTnA4dMYXCXK8IrOv0scEVEZ6S5W4oUFp2RaovOoEhgIEfhAjnS9YyibBadkXjR6RdJKDqjjRGjlzlpooVFJz5pnj0Ad0eWaGDS9CIRncg99xYSnb09IDqjhURnn4OCwH0ERGcfYLvbV3HRqX/DvgKis6/iorOXsW/kOfcVEJ3I+OknJDr7eUB0Ii4bu0Vnf6MQDjB3IQNsEJ29gF1Df2BQDiARnf29olOT6PDQjANVF51nnPLmOFAi6mt9IyA6vwEyDiIRncDg0QYBi+RgAtE5WEB03nfIFAZ3uYZ4Rae/Ba6I6Bxq7paGCovOoWqLzoChwEAehgvkKNczGmaz6ByKF53+QwlF53BjxBhhTprhwqITnzTPHoC7I8twYNKMIBGdyD2PFBKdIz0gOocLic5RBwWBRwmIzlHAdne04qJT/4ajBUTnaMVF5whj38hzHi0gOpHxM0ZIdI7xgOhEXDZ2i84XjEL4orkLedEG0TkC2DW8AAzKF0lE5wte0alJdHhoxpdUF52nnfLmAlAi6mv9JCA6fwIyvkwiOoHBo70MLJJjCUTnWAHRec8hUxjc5XrFKzoDLHBFROc4c7c0Tlh0jlNbdPqNAwbyeFwgR7ue0XibRec4vOgMGEcoOicYI8ar5qSZICw68Unz7AG4O7JMACbNqySiE7nniUKic6IHROcEIdE56aAg8CQB0TkJ2O5OVlx06t9wsoDonKy46HzV2DfynCcLiE5k/EwREp1TPCA6EZeN3aLzNaMQTjV3IVNtEJ2vAruG14BBOZVEdL7mFZ2aRIeHZnxdddF5yilvrgIlor7WbQHReRvI+AaJ6AQGj/YGsEi+SSA63xQQnXcdMoXBXa5pXtEZaIErIjqnm7ul6cKic7raotN3OjCQ34IFsvbMSPCWzaJzOl50Bk4nFJ0zjBHjbXPSzBAWnfikefYA3B1ZZgCT5m0S0Ync80wh0TnTA6JzhpDofOegIPA7AqLzHWC7O0tx0al/w1kConOW4qLzbWPfyHOeJSA6kfHzrpDofNcDohNx2dgtOt8zCuFscxcy2wbR+Tawa3gPGJSzSUTne17RqUl0eGjGOaqLzpNOeXMHKBH1tZLE4TmTxOEY3ycRncDg0d4HFsm5BKJzroDovOOQKQzucn3gFZ1BFrgionOeuVuaJyw65yktOiOj5gED+UOc6NRcz+hDm0XnPLzoDJpHKDrnGyPGAnPSzBcWnfikefYA3B1Z5gOTZgGJ6ETueaGQ6FzoAdE5X0h0LjooCLxIQHQuAra7ixUXnfo3XCwgOhcrLjoXGPtGnvNiAdGJjJ8lQqJziQdEJ+KysVt0LjUK4TJzF7LMBtG5ANg1LAUG5TIS0bnUKzo1iQ4PzbhcddF5wilvkgIlor5WegHRmR7IuIJEdAKDR1sBLJIrCUTnSgHRedshUxjc5VrlFZ3BFrgionO1uVtaLSw6V6stOiNWAwN5DU50+rme0RqbRedqvOgMXk0oOtcaI8Y6c9KsFRad+KR59gDcHVnWApNmHYnoRO55vZDoXO8B0blWSHRuOCgIvEFAdG4AtrsbFRed+jfcKCA6NyouOtcZ+0ae80YB0YmMn01ConOTB0Qn4rKxW3RuNgrhFnMXssUG0bkO2DVsBgblFhLRudkrOjWJDg/NuFV10XncKW8yACWivlYuAdGZC8i4jUR0AoNH2wYskh8RiM6PBETnLYdMYXCXa7tXdIZY4IqIzh3mbmmHsOjcobboDNsBDOSdONH5jL/YabPo3IEXnSE7CEXnLmPE2G1Oml3CohOfNM8egLsjyy5g0uwmEZ3IPe8REp17PCA6dwmJzo8PCgJ/LCA6Pwa2u58oLjr1b/iJgOj8RHHRudvYN/KcPxEQncj4iRESnTEeEJ2Iy8Zu0bnXKIT7zF3IPhtE525g17AXGJT7SETnXq/o1CQ6PLhzUV10fuWUN7mBElFfq6iA6CwKZPyURHQCg0f7FFgkDxCIzgMCovOmQ6YwuMvl8IrOUAtcEdEZa+6WYoVFZ6zaojMkFhjIcTjRGeB6RnE2i85YvOgMjSUUnQeNESPenDQHhUUnPmmePQB3R5aDwKSJJxGdyD0fEhKdhzwgOg8Kic6Eg4LACQKiMwHY7iYqLjr1b5goIDoTFRed8ca+keecKCA6kfFzWEh0HvaA6ERcNnaLzs+MQnjE3IUcsUF0xgO7hs+AQXmERHR+5hWdmkSHh2b8XHXRecwpb4oBJaK+VgUB0VkByPgFiegEBo/2BbBIHiUQnUcFROcNh0xhcJfrS6/oDLPAFRGdx8zd0jFh0XlMbdEZdAwYyF/hRGeg6xl9ZbPoPIYXnWHHCEXncWPEOGFOmuPCohOfNM8egLsjy3Fg0pwgEZ3IPZ8UEp0nPSA6jwuJzlMHBYFPCYjOU8B297TiolP/hqcFROdpxUXnCWPfyHM+LSA6kfFzRkh0nvGA6ERcNnaLzrNGITxn7kLO2SA6TwC7hrPAoDxHIjrPekWnJtHhoRnPqy46v3TKm4pAiaivFSIgOkOAjF+TiE5g8GhfA4vkNwSi8xsB0XndIVMY3OW64BWd4Ra4IqLzorlbuigsOi+qLToDLgID+Vuc6AxyPaNvbRadF/GiM/wioei8ZIwYl81Jc0lYdOKT5tkDcHdkuQRMmsskohO55++EROd3HhCdl4RE5/cHBYG/FxCd3wPb3R8UF536N/xBQHT+oLjovGzsG3nOPwiITmT8/CgkOn/0gOhEXDZ2i84rRiH8ydyF/GSD6LwM7BquAIPyJxLRecUrOjWJDg/NeFV10XnUKW9CgRJRX6uOgOisA2T8mUR0AoNH+xlYJH8hEJ2/CIjO3xwyhcFdrl+9ojPCAldEdF4zd0vXhEXnNbVFp981YCD/hhOdwa5n9JvNovMaXnRGXCMUndeNEeOGOWmuC4tOfNI8ewDujizXgUlzg0R0Ivd8U0h03vSA6LwuJDpvHRQEviUgOm8B293biotO/RveFhCdtxUXnTeMfSPP+baA6ETGzx0h0XnHA6ITcdnYLTrvGoXwnrkLuWeD6LwB7BruAoPyHonovOsVnZpEh4dmvK+66PzCKW/qAiWivlZzAdHZHMj4gER0AoNHewAskg8JROdDAdF5zSFTGNzleuQVnZEWuCKi87G5W3osLDofqy06fR8DA/l3nOgMcT2j320WnY/xojPyMaHo9Ik3vnG8z7NJo/8PkqITnzTPHoC7I4u+fzfX+iNpksRziE7knpPGy4jOpPH2i04f8F6e/iSLFwTWF0eLzmS4QNaSA4NN6hvqjGjRmRxcDNBjXBJj38hzTh6PF53I+EkBPBPXYqWvW9jHXtGJuGzsFp0pjUKYytyFpIqXF51J4nFdQ0pgUKYSOkh0oUwJTB5W0SnR4aEZU6MZ0TfP50550wIoEfW1OgmIzk5AxjRCowFarAGDR0sDLJJpwd9PQnTqjOjz+NUhUxjc5UoHPA9S0RllgSsiOtObu6X08bKiM328yqIzIio9MJAzwAJZC3U9owzx9orO9PFw0fnMd/Z188fHB54sliNGRmPEyGROmozCohOfNBoi0P8YWTICkyYTiehE7jmzkOjM7AHRmVFIdGaJFwTOIiA6swDb3ayKi079G2YVEJ1ZFRedmYx9I885q4DoRMZPNiHRmc0DohNx2dgtOrMbhTCHuQvJYYPozATsGrIDgzIHiejM7hWdmkSHh2bMqbroPOKUN52BElFfK1JAdEYCGXORiE5g8Gi5gEUyN4HozC0gOn9xyBQGd7nyCMVz4f8+F83XjZ9hZrHpxmrj/1uS/uPV3rISrv9wtQ+t5e0/Wm3Nn4ngf7Dazj+Xyn97tbi/EtR/c7Wv/lp2/63Vvv1f4vxvrPbb/5bwz73a788j9J9ztQzP94udz7Vavuf9JdHnWK3M8//C6f9cLfjv/PLq/1it3t/7Rdi/XK3N3/2l2r9YLezv/4Lun6426J/8su+frPbyP/vFYcvV3vinv4Rssdr7//wXmv9rtRXu/HK0abVt7v2i9TOrferuL227rAb4D27+sRrk32lvrAb610b932qwP5mlQX/5Adpr5wX3doWMtVzWdKuni3LebSOAfd1I51qvAnu7ic613gb2dzOday0A9ngLnWutA/Z5651r7Qb2enuca8UD+71DzrVOAHu+k861LgP7vu+ca90A9n43nWslOYjr/5I618oE7AEzO9cqAOwDCzrXKgfsBcs71woF9oOVnWs1APaEDZ1rtQP2he2da0UAe8NI51pDgP3hUOdarwB7xHHOtaYB+8TpzrU+APaK85xrrQL2i6uda20H9ow7nGs5gH1jrHMtwH/c+o8V9f+EK+S/IWOsqP+XEkD/qsb/W1H/F5LB/kS0c0X9z/0Bf/FQ03+9Jk+8pYtza12Yy9RgvwD65DwcuFgB/KtG/4hjt//7TC455uZ/1P6Z/L/pwNWmWw5c3bztwNX0Ow7cfXPXgbsL7zlw9/R9B66HeODA9TcPHbje65ED1xc+ft61nqNn/f351nquftonFtfrJ/nfaz33HJL0f631N2akZLG4+S15LG62TBGLm3tTxuJm8lSxOF+QOhbnMtLE4jxL2licA0oXi/NT6WNxLi6f8G8Rusun/3NvoC/8v3+Oni8ez3kI+M/R8wr9s2/0nj8D7jmfTXv2de9H2+7Afb/8uD0/86vt+S1+2RH9HfID/3lAAdx38LPzN2QLoH6xMsLXtt+QLWj8hmwh82/IFrLhN2QLAH9DtiAwAAsJHST6N2QLgn9D9ogPPOj++Pmzb+Dr3o9WIF59xsJSf4BPEtTNPx0a7MqJvm0KAJO9CLCbdC2gRWwooB8BO64iwG9aFPzH0p/3BneX+yOgTbXAFbnBixk3eHHzDV7M+ENmru+KP0dQIj+iu7d6MWBQFo/HHYCdbWURwrayhBGUJc1BWcIiKEvaUCmLAFvNEsCgLAk+XHTw6Qn49Mxc13V33yWE/3wFoisoFo/vXJC3bClv+6+VilefsbTqf0BuseNJsKMCU1+rtIBUXexQ81BIW1TbuoEyRjdQ1twNlLHoBsqStahlgIlTNh57uBK3Ypl4JbuzPxiR51FOyA2U88C/vwE4RvhZ4IoUjvJG4ahgLhzlLQpHBbIxojwwUCuADxcdfHpSlhcYI8oTjBH/poJZEVgwWUeSivHqM1ZSfSRZ4niSOMggryQwkixxqHkopCOJbZ2Fr9FZaObOwteis9DIRhJfYOJo8djDlbhhfRW9YZ/+y3yR5+EH/OUY1xj34x5J/C1wRQqHv1E4AsyFw9+icASQjST+wEANAB8uOvj0pPQXGEn8CUaSf1PBDAQWTNaRJDBefcYg1UeSpY4niYMKTH2tIIGRZKlDzUMhHUls6yyCjc4ixNxZBFt0FiFkI0kwMHFC4rGHK3HDBqt9w0YhzyMUVySe+XMLodwjSYAFrkjhqGwUjirmwlHZonBUIRtJKgMDtQr4cNHBpydlZYGRpDLBSPJvKphVgQWTdSSpGq8+YzXVR5JljieJgwpMfa1qAiPJMoeah0I6ktjWWVQ3Oosa5s6iukVnUYNsJKkOTJwa8djDlbhhq6t9w0Yiz6MmrkgEuMZ4Te6RJNACV6Rw1DIKR21z4ahlUThqk40ktYCBWht8uOjg05OylsBIUotgJPk3Fcw6wILJOpLUiVefsa7qI8lyx5PEQQWmvlZdgZFkuUPNQyEdSWzrLOoZnUV9c2dRz6KzqE82ktQDJk79eOzhStyw9dS+YSOQ59EAVyQCXWO8AfdIEmSBK1I4GhqFo5G5cDS0KByNyEaShsBAbQQ+XHTw6UnZUGAkaUgwkvybCmZjYMFkHUkax6vP2ET1kWSF40nioAJTX6uJwEiywqHmoZCOJLZ1Fk2NzqKZubNoatFZNCMbSZoCE6dZPPZwJW7YpmrfsOHI82iOKxJBrjHenHskCbbAFSkcLYzC0dJcOFpYFI6WZCNJC2CgtgQfLjr49KRsITCStCAYSf5NBbMVsGCyjiSt4tVnbK36SLLS8SRxUIGpr9VaYCRZ6VDzUEhHEts6izZGZ9HW3Fm0segs2pKNJG2AidM2Hnu4EjdsG7Vv2DDkebTDFYlg1xhvxz2ShFjgihSO9kbh6GAuHO0tCkcHspGkPTBQO4APFx18elK2FxhJ2hOMJP+mgtkRWDBZR5KO8eozdlJ9JFnleJI4qMDU1+okMJKscqh5KKQjiW2dRWejs+hi7iw6W3QWXchGks7AxOkSjz1ciRu2s9o3bCjyPLriikSIa4x35R5JQi1wRQpHN6NwdDcXjm4WhaM72UjSDRio3cGHiw4+PSm7CYwk3QhGkn9TwewBLJisI0mPePUZe6o+kqx2PEkcVGDqa/UUGElWO9Q8FNKRxLbOIszoLMLNnUWYRWcRTjaShAETJzwee7gSN2yY2jdsCPI8InBFItQ1xiO4R5IwC1yRwhFpFI4oc+GItCgcUWQjSSQwUKPAh4sOPj0pIwVGkkiCkeTfVDCjgQWTdSSJjlefsZfqI8kax5PEQQWmvlYvgZFkjUPNQyEdSWzrLHobnUUfc2fR26Kz6EM2kvQGJk6feOzhStywvdW+YYOR59EXVyTCXGO8L/dIEm6BK1I4+hmFo7+5cPSzKBz9yUaSfsBA7Q8+XHTw6UnZT2Ak6UcwkvybCuYAYMFkHUkGxKvPOFD1kWSt40nioAJTX2ugwEiy1qHmoZCOJLZ1FoOMzmKwubMYZNFZDCYbSQYBE2dwPPZwJW7YQWrfsEHI8xiCKxLhrjE+hHskibDAFSkcQ43CMcxcOIZaFI5hZCPJUGCgDgMfLjr49KQcKjCSDCUYSf5NBXM4sGCyjiTD49VnHKH6SLLO8SRxUIGprzVCYCRZ51DzUEhHEts6i5FGZzHK3FmMtOgsRpGNJCOBiTMqHnu4EjfsSLVv2EDkeYzGFYkI1xgfzT2SRFrgihSOMUbheMFcOMZYFI4XyEaSMcBAfQF8uOjg05NyjMBIMoZgJPk3FcwXgQWTdSR5MV59xpdUH0nWO54kDiow9bVeEhhJ1jvUPBTSkcS2zuJlo7MYa+4sXrboLMaSjSQvAxNnbDz2cCVu2JfVvmEDkOfxCq5IRLrG+CvcI0mUBa5I4RhnFI7x5sIxzqJwjCcbScYBA3U8+HDRwacn5TiBkWQcwUjybyqYE4AFk3UkmRCvPuOrqo8kGxxPEgcVmPparwqMJBscah4K6UhiW2cx0egsJpk7i4kWncUkspFkIjBxJsVjD1fihp2o9g3rjzyPybgiEeUa45O5R5JoC1yRwjHFKByvmQvHFIvC8RrZSDIFGKivgQ8XHXx6Uk4RGEmmEIwk/6aCORVYMFlHkqnx6jO+rvpIstHxJHFQgamv9brASLLRoeahkI4ktnUWbxidxZvmzuINi87iTbKR5A1g4rwZjz1ciRv2DbVvWD/keUzDFYlo1xifRj2SaL4WuCKFY7pRON4yF47pFoXjLbKRZDowUN8CHy46+PSknC4wkkwnGEn+TQVzBrBgso4kM+LVZ3xb9ZFkk+NJ4qACU1/rbYGRZJNDzUPhHEns6yxmGp3FO+bOYqZFZ/EO2UgyE5g478RjD1fihp2p9g0LPY9ZsCKh+brG+CzukUSzwBUpHO8aheM9c+F416JwvEc2krwLDNT3wIeLDj49Kd8VGEneJRhJ/k0FczawYLKOJLPj1Weco/pIstnxJHFQgamvNUdgJNnsUPNQSEcS2zqL943OYq65s3jforOYSzaSvA9MnLnx2MOVuGHfV/uG9UWexwe4G1ZzjfEPuEcSPwtckcIxzygcH5oLxzyLwvEh2UgyDxioH4IPFx18elLOExhJ5hGMJP+mgjkfWDBZR5L58eozLlB9JNnieJI4qMDU11ogMJJscah5KKQjiW2dxUKjs1hk7iwWWnQWi8hGkoXAxFkUjz1ciRt2odI3bFQ08jwW425YP9cYX8w9kvhb4IoUjiVG4VhqLhxLLArHUrKRZAkwUJeCDxcdfHpSLhEYSZYQjCT/poK5DFgwWUeSZfHqMy5XfSTZ6niSOKjA1NdaLjCSbHWoeSikI4ltncUKo7NYae4sVlh0FivJRpIVwMRZGY89XIkbdoXaN2wU8jxW4W5Yf9cYX8U9kgRY4IoUjtVG4VhjLhyrLQrHGrKRZDUwUNeADxcdfHpSrhYYSVYTjCT/poK5FlgwWUeStfHqM65TfSTZ5niSOKjA1NdaJzCSbHOoeSh2dhZFYZePr22/uLXe6Cw2mDuLDTZ0EUWBXcR6YJJsEDpI9K26HpgorLdMUYJbZiOSUa9oGV0g/yrAfN37eQbcvfYqMtCVd1O8IPAm4PX2FH4T7gS1zcBKJfUNNwNnlKffcDP4WudLgpAAV94tkkmwBZ4EIQFbgEmwlSAJtsKTICRgq+KD+mZj3+g5ZrOisWNnIVmMm5F8XXm3xQsCb4vHr/uR4smv7/uj+P98YNC6tg6jiGB78uvDIbb9iw22G998h3kY3W6huXfYMKAuBv7zse3AoN8Rjz1ciQTfLqC5twNvTz1WTjqfccZ6aWrwP+mcTwbnk8n5ZHE+2ZxPDueTy/nkcT75CPbgqefpDzpmn14m6I4KUJv+YNwJFkknff77B7X+n52Tr3s/2s549Rl3sYqkJUKt7+54QeDdAq3vHsVbX33fe8hb3yWEre/Hxjf/xNz6fmzR+n5iQ+u7BNj6fgwM+k8Ub3315PlYoPX9WHFx9LRwoNucJcA2J8bb5mgxBG3OXgHG//tB/9YD8jbfBzSkVofi5h8iD9ZnmF34X+EKA/a0zwSOu+exX/GC+/Q80AV3F/Abfkr6j/yWCo0rB+IFgQ8IjCsOxccVfd8O8nFlKeG4Emt88zjzuBJrMa7E2TCuLAWOK7HAoI9TfFzRkydWYFyJVfz2fFo40LfnUuC4ctA7rmgHCcaVeJZxBXmbHxIeV3zd+wnTR7NPBQpbmypJRAubr3s/YfoYuV9g323B+376k1wwGd3dcwIwxoFxo0mdBfqPFye6fD8/LTI60jfEPzQyzC88IirM2VcGREeGhgaGhQUHBgcHBIVEa35+oaF+fr5aRFREhBYYFRYdEu782/nrPwGu38/dtZDfz86xdJnQWHo4XhD4sMBY+pniY6m+78/Ix9JlhGPpEeObf24eS49YjKWf2zCWLgOOpUeAQf+54mOpnjxHBLqYI4qPpU8LB3osXQYcS7/wjqXaFwRj6VGWsRR5m3+p+Fiqj+CJAoWtneJjqa4LEgT23Z5kLD0KjPFjwBgHxo3WnmQs/Qo4lrYDjqXtScfS5UJj6fF4QeDjAmPpCcXHUn3fJ8jH0uWEY+lJ45ufMo+lJy3G0lM2jKXLgWPpSWDQn1J8LNWT56RAF3NS8bH0aeFAj6XLgWPpae9Yqp0mGEvPsIylyNv8rOJjqT6CfyVQ2DooPpbquuCYwL47koylZ4Axfg4Y48C40TqSjKXngWNpB+BY2pF0LF0hNJZ+HS8I/LXAWPqN4mOpvu9vyMfSFYRj6QXjm180j6UXLMbSizaMpSuAY+kFYNBfVHws1ZPngkAXc0HxsfRp4UCPpSuAY+m33rFU+5ZgLL3EMpYib/PLio+l+gh+XqCwdVJ8LNV1wTmBfXcmGUsvAWP8O2CMA+NG60wyln4PHEs7AcfSzqRj6UqhsfSHeEHgHwTG0h8VH0v1ff9IPpauJBxLrxjf/CfzWHrFYiz9yYaxdCVwLL0CDPqfFB9L9eS5ItDFXFF8LH1aONBj6UrgWHrVO5ZqVwnG0p9ZxlLkbf6L4mOpPoJ/L1DYuig+luq64DuBfXclGUt/Bsb4r8AYB8aN1pVkLL0GHEu7AMfSrqRj6SqhsfS3eEHg3wTG0uuKj6X6vq+Tj6WrCMfSG8Y3v2keS29YjKU3bRhLVwHH0hvAoL+p+FiqJ88NgS7mhuJj6dPCgR5LVwHH0lvesVS7RTCW3mYZS5G3+R3Fx1J9BL8mUNi6KT6W6rrgV4F9dycZS28DY/wuMMaBcaN1JxlL7wHH0m7AsbQ76Vi6WmgsvR8vCHxfYCx9oPhYqu/7AflYuppwLH1ofPNH5rH0ocVY+siGsXQ1cCx9CAz6R4qPpXryPBToYh4qPpY+LRzosXQ1cCx97B1LtccEY+nvLGMp9DY/pPZYqo/g9wQKWw/Fx1JdF9wV2HdPkrH0d2CMJwHGODButJ4kY2nSQ7ixtAdwLO1JOpauERpLkx0SBNYXR6+b/JDaY6m+7+SH/vOBQevaOpauIRxLUxjfPOUhn2dH0BSH/nss1f8/FTZBocfSNcCxNAUw6FMewh6uRIKnOITvYlIc8hHt3tzle1o40GPpGuBYmgr4DVnH0lSH1GdMLcD4fz/osRR5m6dRfCz9P+ckUNjCFB9LdV2QRGDf4SRjaWpgjKcFxjgwbrRwkrE0HXAsDQOOpeGkY+laobE0/SFB4PQCY2kGxcdSfd8ZyMfStYRjaUbjm2cyj6UZLcbSTDaMpWuBY2lGYNBnUnws1ZMno0AXk1HxsfRp4UCPpWuBY2lm71iqZSYYS7OwjKXI2zyr4mOpPoKnEyhsEYqPpbouSCuw70iSsTQLMMazAWMcGDdaJMlYmh04lkYAx9JI0rF0ndBYmuOQIHAOgbE0p+Jjqb7vnORj6TrCsTSX8c1zm8fSXBZjaW4bxtJ1wLE0FzDocys+lurJk0ugi8ml+Fj6tHCgx9J1wLE0j3cs1fIQjKV5WcZS5G2eT/GxVB/BswsUtijFx1JdF2QT2Hc0yViaFxjj+YExDowbLZpkLC0AHEujgGNpNOlYul5oLC14SBC4oMBYWkjxsVTfdyHysXQ94Vha2PjmRcxjaWGLsbSIDWPpeuBYWhgY9EUUH0v15Cks0MUUVnwsfVo40GPpeuBYWtQ7lmpFCcbSYixjKfI2L674WKqP4AUEClsvxcdSXRfkF9h3b5KxtBgwxksAYxwYN1pvkrG0JHAs7QUcS3uTjqUbhMbSUocEgUsJjKWlFR9L9X2XJh9LNxCOpWWMb17WPJaWsRhLy9owlm4AjqVlgEFfVvGxVE+eMgJdTBnFx9KnhQM9lm4AjqXlvGOpVo5gLC3PMpYib/MKio+l+gheUqCw9VF8LNV1QQmBffclGUvLA2O8IjDGgXGj9SUZSysBx9I+wLG0L+lYulFoLPU9JAjsKzCWaoqPpfq+NfKxdCPhWOpnfHN/81jqZzGW+tswlm4EjqV+wKD3V3ws1ZPHT6CL8VN8LH1aONBj6UbgWBrgHUu1AIKxNJBlLEXe5kGKj6X6CF5JoLD1U3ws1XVBRYF99ycZSwOBMR4MjHFg3Gj9ScbSEOBY2g84lvYnHUs3CY2loYcEgUMFxtLKio+l+r4rk4+lmwjH0irGN69qHkurWIylVW0YSzcBx9IqwKCvqvhYqidPFYEuporiY+nTwoEeSzcBx9Jq3rFUq0YwllZnGUuRt3kNxcdSfQQPEShsAxQfS3VdECyw74EkY2l1YIzXBMY4MG60gSRjaS3gWDoAOJYOJB1LNwuNpbUPCQLXFhhL6yg+lur7rkM+lm4mHEvrGt+8nnksrWsxltazYSzdDBxL6wKDvp7iY6mePHUFupi6io+lTwsHeizdDBxL63vHUq0+wVjagGUsRd7mDRUfS/URvJZAYRuk+Fj6f7pAYN+DScbSBsAYbwSMcWDcaINJxtLGwLF0EHAsHUw6lm4RGkubHBIEbiIwljZVfCzV992UfCzdQjiWNjO+eXPzWNrMYixtbsNYugU4ljYDBn1zxcdSPXmaCXQxzRQfS58WDvRYugU4lrbwjqVaC4KxtCXLWIq8zVspPpbqI3hjgcI2RPGxVNcFjQT2PZRkLG0JjPHWwBgHxo02lGQsbQMcS4cAx9KhpGPpVqGxtO0hQeC2AmNpO8XHUn3f7cjH0q2EY2l745t3MI+l7S3G0g42jKVbgWNpe2DQd1B8LNWTp71AF9Ne8bH0aeFAj6VbgWNpR+9YqnUkGEs7sYylyNu8s+JjqT6CtxEobMMUH0t1XdBaYN/DScbSTsAY7wKMcWDcaMNJxtKuwLF0GHAsHU46lm4TGku7HRIE7iYwlnZXfCzV992dfCzdRjiW9jC+eU/zWNrDYiztacNYug04lvYABn1PxcdSPXl6CHQxPRQfS58WDvRYug04loZ5x1ItjGAsDWcZS5G3eYTiY6k+gncVKGwjFB9LdV3QRWDfI0nG0nBgjEcCYxwYN9pIkrE0CjiWjgCOpSPBY6l5UkA3FXrdjgLGol67IwWmJh+Ln3+4tmZ+4fp9ow32XubpQ/8fPjG96+Xy4VgOxs2L39eUiFo0sCj2Eup20M0Ocs+9/2LPf3dt19jsbcTr33FbyO+C2MvTnz6HBIH7PMeo9nf/Pn2AidtX2JMhvmHf5/CDf/fv0xdcDNAFupexb+Q59wVoA/8ILco3LCjCcDtRyPjpBzwT12Klr1vD50mx+jM3ij6/JimVuLj+qxux2LpIp9PfKKoDzJ3OAJfNPP1Bj1JSH9/dbqY/MFkGCAUFuoD3ByZ1ciNW0rmw1kzxbCyhHdkdH+xFIcF4l4DxHgHjfQLGBwSMDwkYHxEwPiZg/J2AUV9QdcYkBIxJCRiTETAmJ2BMQcCYkoAxFQFjagLGNASMaQkY0xEwpidgzEDAmJGAMRMBY2YCxiwEjFkJGLMRMGYnYMxBwJiTgDEXAWNuAsY8BIx5CRjzETDmJ2AsQMBYkICxEAFjYQLGIgSMRQkYixEwFidgLEHAWJKAsRQBY2kCxjIEjGUJGMsRMJYnYKxAwFiRgLESAaMvAaNGwOhHwOhPwBhAwBhIwBhEwBhMwBhCwBhKwFiZgLEKAWNVAsZqBIzVCRhrEDDWJGCsRcBYm4CxDgFjXQLGegSM9QkYGxAwNiRgbETA2JiAsQkBY1MCxmYEjM0JGFsQMLYkYGxFwNiagLENAWNbAsZ2BIztCRg7EDB2JGDsRMDYmYCxCwFjVwLGbgSM3QkYexAw9iRgDCNgDCdgjCBgjCRgjCJgjCZg7EXA2JuAsQ8BY18Cxn4EjP0JGAcQMA4kYBxEwDiYgHEIAeNQAsZhBIzDCRhHEDCOJGAcRcA4moBxDAHjCwSMLxIwvkTA+DIB41gCxlcIGMcRMI4nYJxAwPgqAeNEAsZJBIyTCRinEDC+RsA4lYDxdQLGNwgY3yRgnEbAOJ2A8S0CxhkEjG8TMM4kYHyHgHEWAeO7BIzvETDOJmCcQ8D4PgHjXALGDwgY5xEwfkjAOJ+AcQEB40ICxkUEjIsJGJcQMC4lYFxGwLicgHEFAeNKAsZVBIyrCRjXEDCuJWBcR8C4noBxAwHjRgLGTQSMmwkYtxAwbiVg3EbA+BEB43YCxh0EjDsJGHcRMO4mYNxDwPgxAeMnBIwxBIx7CRj3ETDuJ2D8lIDxAAGjg4AxloAxjoDxIAFjPAHjIQLGBALGRALGwwSMnxEwHiFg/JyA8QsCxqMEjF8SMB4jYPyKgPE4AeMJAsaTBIynCBhPEzCeIWA8S8B4joDxPAHj1wSM3xAwXiBgvEjA+C0B4yUCxssEjN8RMH5PwPgDAeOPBIxXCBh/ImC8SsD4MwHjLwSMvxIwXiNg/I2A8ToB4w0CxpsEjLcIGG8TMN4hYLxLwHiPgPE+AeMDAsaHBIyPCBgfEzD+TsDok1R9xiQEjEkJGJMRMCYnYExBwJiSgDEVAWNqAsY0BIxpCRjTETCmJ2DMQMCYkYAxEwFjZgLGLASMWQkYsxEwZidgzEHAmJOAMRcBY24CxjwEjHkJGPMRMOYnYCxAwFiQgLEQAWNhAsYiBIxFCRiLETAWJ2AsQcBYkoCxFAFjaQLGMgSMZQkYyxEwlidgrEDAWJGAsRIBoy8Bo0bA6EfA6E/AGEDAGEjAGETAGEzAGELAGErAWJmAsQoBY1UCxmoEjNUJGGsQMNYkYKxFwFibgLEOAWNdAsZ6BIz1CRgbEDA2JGBsRMDYmICxCQFjUwLGZgSMzQkYWxAwtiRgbEXA2JqAsQ0BY1sCxnYEjO0JGDsQMHYkYOxEwNiZgLELAWNXAsZuBIzdCRh7EDD2JGAMI2AMJ2CMIGCMJGCMImCMJmDsRcDYm4CxDwFjXwLGfgSM/QkYBxAwDiRgHETAOJiAcQgB41ACxmEEjMMJGEcQMI4kYBxFwDiagHEMAeMLBIwvEjC+RMD4MgHjWALGVwgYxxEwjidgnEDA+CoB40QCxkkEjJMJGKcQML5GwDiVgPF1AsY3CBjfJGCcRsA4nYDxLQLGGQSMbxMwziRgfIeAcRYB47sEjO8RMM4mYJxDwPg+AeNcAsYPCBjnETB+SMA4n4BxAQHjQgLGRQSMiwkYlxAwLiVgXEbAuJyAcQUB40oCxlUEjKsJGNcQMK4lYFxHwLiegHEDAeNGAsZNBIybCRi3EDBuJWDcRsD4EQHjdgLGHQSMOwkYdxEw7iZg3EPA+DEB4ycEjDEEjHsJGPcRMO4nYPyUgPEAAaODgDGWgDGOgPEgAWM8AeMhAsYEAsZEAsbDBIyfETAeIWD8nIDxCwLGowSMXxIwHiNg/IqA8TgB4wkCxpMEjKcIGE8TMJ4hYDxLwHiOgPE8AePXBIzfEDBeIGC8SMD4LQHjJQLGywSM3xEwfk/A+AMB448EjFcIGH8iYLxKwPgzAeMvBIy/EjBeI2D8jYDxOgHjDQLGmwSMtwgYbxMw3iFgvEvAeI+A8T4B4wMCxocEjI8IGB8TMP5OwOiTTH3GJASMSQkYkxEwJidgTEHAmJKAMRUBY2oCxjQEjGkJGNMRMKYnYMxAwJiRgDETAWNmAsYsBIxZCRizETBmJ2DMQcCYk4AxFwFjbgLGPASMeQkY8xEw5idgLEDAWJCAsRABY2ECxiIEjEUJGIsRMBYnYCxBwFiSgLEUAWNpAsYyBIxlCRjLETCWJ2CsQMBYkYCxEgGjLwGjRsDoR8DoT8AYQMAYSMAYRMAYTMAYQsAYSsBYmYCxCgFjVQLGagSM1QkYaxAw1iRgrEXAWJuAsQ4BY10CxnoEjPUJGBsQMDYkYGxEwNiYgLEJAWNTAsZmBIzNCRhbEDC2JGBsRcDYmoCxDQFjWwLGdgSM7QkYOxAwdiRg7ETA2JmAsQsBY1cCxm4EjN0JGHsQMPYkYAwjYAwnYIwgYIwkYIwiYIwmYOxFwNibgLEPAWNfAsZ+BIz9CRgHEDAOJGAcRMA4mIBxCAHjUALGYQSMwwkYRxAwjiRgHEXAOJqAcQwB4wsEjC8SML5EwPgyAeNYAsZXCBjHETCOJ2CcQMD4KgHjRALGSQSMkwkYpxAwvkbAOJWA8XUCxjcIGN8kYJxGwDidgPEtAsYZBIxvEzDOJGB8h4BxFgHjuwSM7xEwziZgnEPA+D4B41wCxg8IGOcRMH5IwDifgHEBAeNCAsZFBIyLCRiXEDAuJWBcRsC4nIBxBQHjSgLGVQSMqwkY1xAwriVgXEfAuJ6AcQMB40YCxk0EjJsJGLcQMG4lYNxGwPgRAeN2AsYdBIw7CRh3ETDuJmDcQ8D4MQHjJwSMMQSMewkY9xEw7idg/JSA8QABo4OAMZaAMY6A8SABYzwB4yECxgQCxkQCxsMEjJ8RMB4hYPycgPELAsajBIxfEjAeI2D8ioDxOAHjCQLGkwSMpwgYTxMwniFgPEvAeI6A8TwB49cEjN8QMF4gYLxIwPgtAeMlAsbLBIzfETB+T8D4AwHjjwSMVwgYfyJgvErA+DMB4y8EjL8SMF4jYPyNgPE6AeMNAsabBIy3CBhvEzDeIWC8S8B4j4DxPgHjAwLGhwSMjwgYHxMw/k7A6JNcfcYkBIxJCRiTETAmJ2BMQcCYkoAxFQFjagLGNASMaQkY0xEwpidgzEDAmJGAMRMBY2YCxiwEjFkJGLMRMGYnYMxBwJiTgDEXAWNuAsY8BIx5CRjzETDmJ2AsQMBYkICxEAFjYQLGIgSMRQkYixEwFidgLEHAWJKAsRQBY2kCxjIEjGUJGMsRMJYnYKxAwFiRgLESAaMvAaNGwOhHwOhPwBhAwBhIwBhEwBhMwBhCwBhKwFiZgLEKAWNVAsZqBIzVCRhrEDDWJGCsRcBYm4CxDgFjXQLGegSM9QkYGxAwNiRgbETA2JiAsQkBY1MCxmYEjM0JGFsQMLYkYGxFwNiagLENAWNbAsZ2BIztCRg7EDB2JGDsRMDYmYCxCwFjVwLGbgSM3QkYexAw9iRgDCNgDCdgjCBgjCRgjCJgjCZg7EXA2JuAsQ8BY18Cxn4EjP0JGAcQMA4kYBxEwDiYgHEIAeNQAsZhBIzDCRhHEDCOJGAcRcA4moBxDAHjCwSMLxIwvkTA+DIB41gCxlcIGMcRMI4nYJxAwPgqAeNEAsZJBIyTCRinEDC+RsA4lYDxdQLGNwgY3yRgnEbAOJ2A8S0CxhkEjG8TMM4kYHyHgHEWAeO7BIzvETDOJmCcQ8D4PgHjXALGDwgY5xEwfkjAOJ+AcQEB40ICxkUEjIsJGJcQMC4lYFxGwLicgHEFAeNKAsZVBIyrCRjXEDCuJWBcR8C4noBxAwHjRgLGTQSMmwkYtxAwbiVg3EbA+BEB43YCxh0EjDsJGHcRMO4mYNxDwPgxAeMnBIwxBIx7CRj3ETDuJ2D8lIDxAAGjg4AxloAxjoDxIAFjPAHjIQLGBALGRALGwwSMnxEwHiFg/JyA8QsCxqMEjF8SMB4jYPyKgPE4AeMJAsaTBIynCBhPEzCeIWA8S8B4joDxPAHj1wSM3xAwXiBgvEjA+C0B4yUCxssEjN8RMH5PwPgDAeOPBIxXCBh/ImC8SsD4MwHjLwSMvxIwXiNg/I2A8ToB4w0CxpsEjLcIGG8TMN4hYLxLwHiPgPE+AeMDAsaHBIyPCBgfEzD+TsDok0J9xiQEjEkJGJMRMCYnYExBwJiSgDEVAWNqAsY0BIxpCRjTETCmJ2DMQMCYkYAxEwFjZgLGLASMWQkYsxEwZidgzEHAmJOAMRcBY24CxjwEjHkJGPMRMOYnYCxAwFiQgLEQAWNhAsYiBIxFCRiLETAWJ2AsQcBYkoCxFAFjaQLGMgSMZQkYyxEwlidgrEDAWJGAsRIBoy8Bo0bA6EfA6E/AGEDAGEjAGETAGEzAGELAGErAWJmAsQoBY1UCxmoEjNUJGGsQMNYkYKxFwFibgLEOAWNdAsZ6BIz1CRgbEDA2JGBsRMDYmICxCQFjUwLGZgSMzQkYWxAwtiRgbEXA2JqAsQ0BY1sCxnYEjO0JGDsQMHYkYOxEwNiZgLELAWNXAsZuBIzdCRh7EDD2JGAMI2AMJ2CMIGCMJGCMImCMJmDsRcDYm4CxDwFjXwLGfgSM/QkYBxAwDiRgHETAOJiAcQgB41ACxmEEjMMJGEcQMI4kYBxFwDiagHEMAeMLBIwvEjC+RMD4MgHjWALGVwgYxxEwjidgnEDA+CoB40QCxkkEjJMJGKcQML5GwDiVgPF1AsY3CBjfJGCcRsA4nYDxLQLGGQSMbxMwziRgfIeAcRYB47sEjO8RMM4mYJxDwPg+AeNcAsYPCBjnETB+SMA4n4BxAQHjQgLGRQSMiwkYlxAwLiVgXEbAuJyAcQUB40oCxlUEjKsJGNcQMK4lYFxHwLiegHEDAeNGAsZNBIybCRi3EDBuJWDcRsD4EQHjdgLGHQSMOwkYdxEw7iZg3EPA+DEB4ycEjDEEjHsJGPcRMO4nYPyUgPEAAaODgDGWgDGOgPEgAWM8AeMhAsYEAsZEAsbDBIyfETAeIWD8nIDxCwLGowSMXxIwHiNg/IqA8TgB4wkCxpMEjKcIGE8TMJ4hYDxLwHiOgPE8AePXBIzfEDBeIGC8SMD4LQHjJQLGywSM3xEwfk/A+AMB448EjFcIGH8iYLxKwPgzAeMvBIy/EjBeI2D8jYDxOgHjDQLGmwSMtwgYbxMw3iFgvEvAeI+A8T4B4wMCxocEjI8IGB8TMP5OwOiTUn3GJASMSQkYkxEwJidgTEHAmJKAMRUBY2oCxjQEjGkJGNMRMKYnYMxAwJiRgDETAWNmAsYsBIxZCRizETBmJ2DMQcCYk4AxFwFjbgLGPASMeQkY8xEw5idgLEDAWJCAsRABY2ECxiIEjEUJGIsRMBYnYCxBwFiSgLEUAWNpAsYyBIxlCRjLETCWJ2CsQMBYkYCxEgGjLwGjRsDoR8DoT8AYQMAYSMAYJMAowRkM5NTZsvo8+wP/fR8f9c8+CQFjUgLGZASMyQkYUxAwpiRgTEXAmJqAMQ0BY1oCxnQEjOkJGDMQMGYkYMxEwJiZgDELkNGOnjwrwTfNRsCYnYAxBwFjTgLGXASMuQkY8xAw5iVgzEfAmJ+AsQABY0ECxkIEjIUJGIsQMBYlYCwGZLSjJw8h+GckoQSMlQkYqxAwViVgrEbAWJ2AsQYBY00CxloEjLUJGOsQMNYlYKxHwFifgLEBAWNDAsZG4N9dSe1j/YP+Dt51vevauS5s7cAA0d9Fa5yS4Bv4PqkVyXysfzB/j2B/oXUDZdYN8pP7Fk9+V03/0b97pPF/Dzzk4zPI+Qx2PkOcz1DnM8z5DHc+I5zPSOczyvmMdj5jnM8LzudF5/OS83nZ+Yx1Pq84n3HOZ7zzmeB8XnU+E53PJOcz2flMcT6vOZ+pzud15/OG83nT+UxzPtOdz1vOZ4bzedv5zHQ+7zifWc7nXefznvOZ7XzmOJ/3nc9c5/OB85nnfD50PvOdzwLns9D5LHI+i53PEuez1Pkscz7Lnc8K57PS+axyPqudzxrns9b5rHM+653PBuez0flscj6bnc8W57PV+WxzPh85n+3OZ4fz2el8djmf3c5nj/P52Pl84nxinM9e57PP+ex3Pp86nwPOx+F8Yp1PnPM56Hzinc8h55PgfBKdz2Hn85nzOeJ8Pnc+Xxx6ciZHDxmHlMz4q35IqU3vBlm8G2zxbojFu6EW74ZZvBtu8W6ExbuRFu9GWbwbbfFujMW7FyzevWjx7iWLdy9bvBtr8e4Vi3fjLN6Nt3g3weLdqxbvJlq8m2TxbrLFuykW716zeDfV4t3rFu/esHj3psW7aRbvplu8e8vi3QyLd29bvJtp8e4di3ezLN69a/HuPYt3sy3ezbF4977Fu7kW7z6weDfP4t2HFu/mW7xbYPFuocW7RRbvFlu8W2LxbqnFu2UW75ZbvFth8W6lxbtVFu9WW7xbY/FurcW7dRbv1lu822DxbqPFu00W7zZbvNti8W6rxbttFu8+sni33eLdDot3Oy3e7bJ4t9vi3R6Ldx9bvPvE4l2Mxbu9Fu/2Wbzbb/HuU4t3ByzeOSzexVq8i7N4d9DiXbzFu0MW7xIs3iVavDts8e4zi3dHLN59bvHuC4t3+gVf2PlX/Zfe9V+G1n+x3Mf43343dcRJjL/WNP7q696P1nuh+kKiFwFjNAFjFAFjJAFjBAFjOAFjGAFjTwLGHgSM3QkYuxEwdiVg7ELA2JmAsRMBY0cCxg4EjO0JGNsRMLYlYGxDwNiagLEVAWNLAsYWBIzNCRibETA2JWBsQsBYcpH6jCUIGIsTMBYjYCxKwFiEgLEwAWMhAsaCBIwFCBjzEzDmI2DMS8CYh4AxNwFjLgLGnASMOQgYsxMwZiNgzErAmIWAMTMBYyYCxowEjBkIGNMTMKYjYExLwJiGgPESAeO3BIwXCRgvEDB+Q8D4NQHjeQLGcwSMZwkYzxAwniZgPEXAeJKA8QQB43ECxq8IGI8RMH5JwHiUgPELAsbPCRiPEDB+RsB4mIAxkYAxgYDxEAFjPAHjQQLGOALGxYvVZ1xEwLiQgHEBAeN8AsYPCRjnETB+QMA4l4DxfQLGOQSMswkY3yNgfJeAcRYB4zsEjDMJGN8mYJxBwPgWAeN0AsZpBIxvEjC+QcD4OgHjVALG1wgYpxAwTiZgnETA2HOJ+ow9CBi7EzB2I2DsSsDYhYCxMwFjJwLGjgSMHQgY2xMwtiNgbEvA2IaAsTUBYysCxpYEjC0IGJsTMDYjYGxKwNiEgLExAWMjAsaGBIwNCBjrEzDWI2CsS8BYh4Cx4FL1GQsQMOYnYMxHwJiXgDEPAWNuAsZcBIw5CRhzEDBmJ2DMRsCYlYAxCwFjZgLGTASMGQkYMxAwpidgTEfAmJaAMQ0BY2oCxlQEjCkJGFMQMCYnYExGwJiUgDEJAeNZAsYzBIynCRhPETCeJGA8QcB4nIDxKwLGYwSMXxIwHiVg/IKA8XMCxiMEjJ8RMB4mYEwkYEwgYDxEwBhPwHiQgDGOgDGWgNFBwHiAgPFTAsb9BIz7CBj3EjDGEDDOXaY+4/sEjHMIGGcTML5HwPguAeMsAsZ3CBhnEjC+TcA4g4DxLQLG6QSM0wgY3yRgfIOA8XUCxqkEjK8RME4hYJxMwDiJgHEiAeOrBIwTCBjHEzCOI2B8hYBxLAHjywSMHZerz9iBgLE9AWM7Asa2BIxtCBhbEzC2ImBsScDYgoCxOQFjMwLGpgSMTQgYGxMwNiJgbEjA2ICAsT4BYz0CxroEjHUIGGsTMNYiYKxJwFiDgLE6AWM1AsaqBIxVCBhzrlCfMQcBY3YCxmwEjFkJGLMQMGYmYMxEwJiRgDEDAWN6AsZ0BIxpCRjTEDCmJmBMRcCYkoAxBQFjcgLGZASMSQkYkxAw+hAw/k4wXz8mYHxEwPiQgPEBAeN9AsZ7BIzHCOrjlwSMRwkYvyBg/JyA8QgB42cEjIcJGBMJGBMIGA8RMMYTMB4kYIwjYIwlYHQQMB4gYPyUgHE/AeM+Asa9BIwxBIyfEDB+TMC4h4BxNwHjLgLGnQSMOwgYtxMwzlypPuPbBIwzCBjfImCcTsA4jYDxTQLGNwgYXydgnErA+BoB4xQCxskEjJMIGCcSML5KwDiBgHE8AeM4AsZXCBjHEjC+TMD4EgHjiwSMLxAwjiFgHE3AOIqAcSQB4wgCxpar1GdsQcDYnICxGQFjUwLGJgSMjQkYGxEwNiRgbEDAWJ+AsR4BY10CxjoEjLUJGGsRMNYkYKxBwFidgLEaAWNVAsYqBIyVCRhDCRhDCBiDCRiDCBgDCRgDCBj9CRgzrlafMQMBY3oCxnQEjGkJGNMQMKYmYExFwJiSgDEFAWNyAsZkBIxJCRiTEDD6EDD+TtA/PiZgfETA+JCA8QEB430CxnsEjHcJGO8QMN4mYLxFwHiTgPEGAeN1AsbfCBgTCfrHBALGQwSM8QSMBwkY4wgYYwkYHQSMBwgYPyVg3E/AuI+AcS8BYwwB4ycEjB8TMO4hYNxNwLiLgHEnAeMOAsbtBIwfETBuI2DcSsC4hYBxMwHjJgLGjQSMGwgYX1+jPuNUAsbXCBinEDBOJmCcRMA4kYDxVQLGCQSM4wkYxxEwvkLAOJaA8WUCxpcIGF8kYHyBgHEMAeNoAsZRBIwjCRhHEDAOJ2AcRsA4lIBxCAHjYALGQQSMAwkYBxAwNlyrPmMDAsb6BIz1CBjrEjDWIWCsTcBYi4CxJgFjDQLG6gSM1QgYqxIwViFgrEzAGErAGELAGEzAGETAGEjAGEDA6E/A6EfAqBEw+hIwViJgrEjAWIGAsTwBYzkCxpTr1GdMQcCYnIAxGQFjUgLGJASMPgSMvxPUx8cEjI8IGB8SMD4gYLxPwHiPgPEuAeMdAsbbBIy3CBhvEjDeIGC8TsD4GwHjNQLGXwkYfyFg/JmA8SoB408EjFcIGH8kYDxAMF9/SsC4n4BxHwHjXgLGGALGTwgYPyZg3EPAuJuAcRcB404Cxh0EjNsJGD8iYNxGwLiVgHELAeNmAsZNBIwbCRg3EDCuJ2BcR8C4loBxDQHjagLGVQSMKwkYVxAwTlivPuN4AsZxBIyvEDCOJWB8mYDxJQLGFwkYXyBgHEPAOJqAcRQB40gCxhEEjMMJGIcRMA4lYBxCwDiYgHEQAeNAAsYBBIz9CRj7ETD2JWDsQ8DYm4CxFwFjNAFjFAFjzQ3qM9YgYKxOwFiNgLEqAWMVAsbKBIyhBIwhBIzBBIxBBIyBBIwBBIz+BIx+BIwaAaMvAWMlAsaKBIwVCBjLEzCWI2AsS8BYhoCxNAFjKQLGkgSMJQgYixMwFiNgfEzA+IiA8SEB4wMCxvsEjPcIGO8SMN4hYLxNwHiLgPEmAeMNAsbrBIy/ETBeI2D8lYDxFwLGnwkYrxIw/kTAeIWA8UcCxh8IGL8nYPyOgPEyAeMlAsZvCRgvEjBeIGDcs1F9xt0EjLsIGHcSMO4gYNxOwPgRAeM2AsatBIxbCBg3EzBuImDcSMC4gYBxPQHjOgLGtQSMawgYVxMwriJgXEnAuIKAcTkB4zICxqUEjEsIGBcTMC4iYFxIwLiAgPGFTeozjiFgHE3AOIqAcSQB4wgCxuEEjMMIGIcSMA4hYBxMwDiIgHEgAeMAAsb+BIz9CBj7EjD2IWDsTcDYi4AxmoAxioAxkoAxgoAxnIAxjICxJwFjDwLG7gSM3QgYQzarzxhMwBhEwBhIwBhAwOhPwOhHwKgRMPoSMFYiYKxIwFiBgLE8AWM5AsayBIxlCBhLEzCWImAsScBYgoCxOAFjMQLGogSMRQgYCxMwFiJgLEjAWICAMT8BYz4CxtsEjLcIGG8SMN4gYLxOwPgbAeM1AsZfCRh/IWD8mYDxKgHjTwSMVwgYfyRg/IGA8XsCxu8IGC8TMF4iYPyWgPEiAeMFAsZvCBi/JmA8T8B4joDxLAHjGQLG0wSMpwgYt25Rn3ELAeNmAsZNBIwbCRg3EDCuJ2BcR8C4loBxDQHjagLGVQSMKwkYVxAwLidgXEbAuJSAcQkB42ICxkUEjAsJGBcQMM4nYPyQgHEeAeMHBIxzCRjfJ2CcQ8A4m4Bx6Fb1GYcQMA4mYBxEwDiQgHEAAWN/AsZ+BIx9CRj7EDD2JmDsRcAYTcAYRcAYScAYQcAYTsAYRsDYk4CxBwFjdwLGbgSMXQkYuxAwdiZg7ETA2JGAsQMBY3sCxnYEjL7b1GesRMBYkYCxAgFjeQLGcgSMZQkYyxAwliZgLEXAWJKAsQQBY3ECxmIEjEUJGIsQMBYmYCxEwFiQgLEAAWN+AsZ8BIx5CRjzEDDmJmDMRcCYk4AxBwFjdgLGbASMvxAw/kzAeJWA8ScCxisEjD8SMP5AwPg9AeN3BIyXCRgvETB+S8B4kYDxAgHjNwSMXxMwnidgPEfAeJaA8QwB42kCxlMEjCcJGE8QMB4nYPyKgPEYAeOXBIxHCRi/IGBc+5H6jGsIGFcTMK4iYFxJwLiCgHE5AeMyAsalBIxLCBgXEzAuImBcSMC4gIBxPgHjhwSM8wgYPyBgnEvA+D4B4xwCxtkEjO8RML5LwDiLgPEdAsaZBIxvEzDOIGB8i4Cx73b1GfsQMPYmYOxFwBhNwBhFwBhJwBhBwBhOwBhGwNiTgLEHAWN3AsZuBIxdCRi7EDB2JmDsRMDYkYCxAwFjewLGdgSMbQkY2xAwtiZgbEXA2JKAsQUBY3MCxmYEjKV3qM9YioCxJAFjCQLG4gSMxQgYixIwFiFgLEzAWIiAsSABYwECxvwEjPkIGPMSMOYhYMxNwJiLgDEnAWMOAsbsBIzZCBizEjBmIWDMTMCYiYAxIwFjBgLG9ASM6QgYVxAwLidgXEbAuJSAcQkB42ICxkUEjAsJGBcQMM4nYPyQgHEeAeMHBIxzCRjfJ2CcQ8A4m4DxPQFGHyyjd13vut51vev+f7subm0tWr8fCvlY/2D+Hn5+MusG+wutGyizbpDQd5D6vt78867rXde7rndd77redb3rqrku/N+/Keg3gJyBSVzW/PKQ8SGSGX/VXxQ2/Y2Tgj+U/vd4upa/b1BAQFSwX5Tmr4X5+oWGhwT6BgSGB4VoIVpgSGCkX4i/f1RIQEhwaHhosG+oFuAfpUUHhvpHG4sdO4T9ME+/wzHjOyR3PhlcvoHkd3ENIAW+i/b0//DBB+Mfa7t+168OPfnrcXNQHrcIyuQkH/8fruVnrKV9BUyW40JBYa6k7nJ+hUtq7a8SGP5vVj/EcANo0a7f4oSRdCfNSae/SGECQFe8k8DgPgUMGtfvcMriOyQTDJx/+h2iovWfKL8TwG96EhjQ3kT8L8xnEvG0kYhnzImo/w/5Te/O2JCcZ4CBdFYoOc+SJedp4Dc9IxTk5jhCcrq71rlDuORzjaNzLu1+ah/rIuWDjatn/lkBugCeA8aG67x43lyc9BdJZDbhp29CXz8ZOCDPwRI6Oug8MLi/Fpplv3YZnyQCTfEzikCe0TdCZ/TNc/gG9JgFLBKBFrgiXdIFo0u66FJ34B/mvFC3csGik7vo0sGgO7jzRnIiv8tFYLIbCRqN/N4Xgfv9VigOvnU5c2xB1v7vW144hM+Jl6okgXab6Fg/Z4p1X/d+tKexngL8HVW72J5OJheAeXMReA7AuAu0U0GcAHyDJ8ccGW2BKyLgLxmX62Vzl3/ZQsCjx2yAt/pDml8CBvNloYNEF+hLwJFPD4oEH3jQ/fHzZ9/A170fSNJJM36HZLSqaOhR7ITAzYqU1Bf+ZAT1de9HQzIiv98FWEGKsu0f7X5v3Cw/mG+WHyxulpQYkD+AGA7S3Rvve+Aef3BZyy/MLzDSNzwozLlUeEBEaHB0cHR4SGhQuF9khK9fmH94cJhzgTA//5DgEP+QCN/QwOigwDDfgOiwQL/QgLAgRPtmFazo2/N78M0hoST0eEH/2sP/x7nxB9ePQC7WzuhHgs7oCrozyuTzn67A9Ufplk4suDSJOdJY+j//lMj1TwX95PwuV53Pz87nF+fzq/O55nx+cz7Xnc8N53PT+dxyPredzx3nc9f53HM+953PA+fz0Pk8cj6Pnc/vevfgzL4kziep80nmfJI7nxTOJ6XzSeV8UjufNAk+z3YZOkhq07urFu9+tnj3i8W7Xy3eXbN495vFu+sW725YvLtp8e6WxbvbFu/uWLy7a/HunsW7+xbvHli8e2jx7pHFu8cW7363eKcfrPldEot3SS3eJbN4l9ziXQqLdykt3qWyeJfa4l0a453rT2HjrzWNv/q69/NMcXH3JvwJJgx9taugtfQ9/gxZ68n3+gXYVf/q7loBf3x77Zp7a/m6nKP2mztr+T0TE9r1f76Wrym+tBv/cK2g6P+KVe3mP1srxCLutVv/ZK0QyxzSbv/9tYL/JB+1O393reA/zW3t7t9by+8v6oR27++sFfyXNUe7//xrRfyP+qU9eN61gv9nLdQePt9avs9RV7VHz7OW73PVaO3x/14r8Dnrvfb7/1or4LnvDk2/n/98rYDov3EPaUn+aq3gv3WnaUn/fK2Qv3k/asn+ZK3Q6L9912rJrdfy/Qf3tpbCai3ff9QDaCn/ey3tH/YTWirzWpH/uDfRUj+7lr8bfY6WJgE3kNk5SEInYIsfzNr2D5JpneeZzvmkdz4ZnE9G55PJ+WR2PlmcT1bnk835ZHc+OZxPTueTy/nkdj55nE9e55PP+eR3PgWcT0HnU8j5FHY+RZxPUedTzPkUdz4lnE9J51PK+ZQ2D5JpLYaAdBbv0lu8y2DxLqPFu0wW7zJbvMti8S6rxbtsFu+yW7zLYfEup8W7XBbvclu8y2PxLq/Fu3wW7/JbvCtg8a6gxbtCFu8KW7wrYvGuqMW7Yhbvilu8K2HxrqTFu1IW70rbMEheAQ6SaRNwg2Q60Fr6HtND1nryvTK4v9Yfg2RGd9dyGSQzubfWM4NkZnfWMg2SWf75Wv81SGb9h2tZDZLZ/tlaloNk9n+y1p8Mkjn+/lp/Okjm/Ltr/cUgmevvrfWXg2Tuv7PW/xgk8zz/Wv9zkMz7vGs9xyCZ7/nWeq5BMv/zrPWcg2SB/73Wcw+SBf/XWn9jkCwEHCQLAwfJIsBBsihwkCwGHCSLAwfJEsBBsiRwkCwFHCRLgwdJm/5smei/5wT55w6TuHCWMQ9b+oskMpvw0zehr4/+ZTnkH3Ysk4Bbq2wC9tCenpG+bmEf6z+3hA48/XucEfijDWfUti6Wv1BXLuHJX8ubk0b/H84LHYDCSfPHpFUOmDTlE2QCIyn4+yH3XMFiz/90Tde4rGDEpV4oMrrEpusPOrHLgffy9KdigiCwvrg5QNyFr4gLZK0SMNikvmGlhD8vfv90/UrgYvBnZ/wPf7Tyxr6R51wpAchp/BovMn58hboa37/oap7+oC9XxGVjfGLNAlekC9GMQuhn7kL8Ev7jr5/+oP98Rnmgn9WAQekndJDoQqkJdTdoTn8YZ5CfHoNnff7zDxY/WOAscjt9fBJinJwJT/7faWrY8+g/SQ0e8w9mv3K/qi3RGaMZA5CMNsqbv0x6X/d+xORNoPkGCBSWN4GKyhvjz+ZHBQJvlCBgW+d6RkE2yptAQ96gZ1+kcAtMkEliH8y3tGzBgo0WLMScgMHCIkj/WMlJDtPd9jAYmMwhQkGGTizknkOFpFKoB6RSsJBUqpwgCFxZQCpVBgZyFcWlkv4NqwhIpSqKS6UQY9/Ic64iIJWQ8VNVSCpV9YBUQlw2dkulakYhrG7uaKrbIJVCgF1DNWBQVieRStWAycMqR0IS1GesQSpHnvkvFrLIkZrmSlZTWI7UVFuORNQEVsZauEj2cz2jWjbKkZoKy5Gn/5LWmgkySeyD+ZaWrURto5WoY07A2sJypKaicsTqMN1tc2oDk7mOUJChEwu557pCcqSuB+RIbSE5Ui9BELiegBypBxya6ysuR/RvWF9AjtRXXI7UMfaNPOf6AnIEGT8NhORIAw/IEcRlY7ccaWgUwkbmjqaRDXKkDrBraAgMykYkcqShV45odRLUZ2xMKkf8XddkkSNNzJWsibAcaaK2HAlrAqyMTXGR/Mxs0dRGOdJEfTkS1SRBJol9MN/SspVoZrQSzc0J2ExYjjRRW45ENQG2Oc2AydxcKMjQiYXccwshOdLCA3KkmZAcaZkgCNxSQI60BA7NrRSXI/o3bCUgR1opLkeaG/tGnnMrATmCjJ/WQnKktQfkCOKysVuOtDEKYVtzR9PWBjnSHNg1tAEGZVsSOdLGK0e05gnqM7YjlSMBrmuyyJH25krWXliOtFdbjoS0B1bGDrhIDnA9ow42ypH26suRyPYJMknsg/mWlq1ER6OV6GROwI7CcqS92nIksj2wzekITOZOQkGGTizknjsLyZHOHpAjHYXkSJcEQeAuAnKkC3Bo7qq4HNG/YVcBOdJVcTnSydg38py7CsgRZPx0E5Ij3TwgRxCXjd1ypLtRCHuYO5oeNsiRTsCuoTswKHuQyJHuXjmidUpQn7EnqRwJdF2TRY6EmStZmLAcCVNbjgSFAStjOC6SA13PKNxGORKmvhyJCEuQSWIfzLe0bCUijFYi0pyAEcJyJExtORIRBmxzIoDJHCkUZOjEQu45SkiORHlAjkQIyZHoBEHgaAE5Eg0cmnspLkf0b9hLQI70UlyORBr7Rp5zLwE5goyf3kJypLcH5AjisrFbjvQxCmFfc0fT1wY5EgnsGvoAg7IviRzp45UjWmSC+oz9SOVIkOuaLHKkv7mS9ReWI/3VliMB/YGVcQAukoNcz2iAjXKkv/pyJLx/gkwS+2C+pWUrMdBoJQaZE3CgsBzpr7YcCe8PbHMGApN5kFCQoRMLuefBQnJksAfkyEAhOTIkQRB4iIAcGQIcmocqLkf0bzhUQI4MVVyODDL2jTznoQJyBBk/w4TkyDAPyBHEZWO3HBluFMIR5o5mhA1yZBCwaxgODMoRJHJkuFeOaIMS1GccSSpHgl3XZJEjo8yVbJSwHBmlthzxGwWsjKNxkRzsekajbZQjo9SXI2GjEmSS2AfzLS1biTFGK/GCOQHHCMuRUWrLkbBRwDZnDDCZXxAKMnRiIff8opAcedEDcmSMkBx5KUEQ+CUBOfIScGh+WXE5on/DlwXkyMuKy5EXjH0jz/llATmCjJ+xQnJkrAfkCOKysVuOvGIUwnHmjmacDXLkBWDX8AowKMeRyJFXvHJEeyFBfcbxpHIkxHVNFjkywVzJJgjLkQlqyxHfCcDK+CoukkNcz+hVG+XIBPXlSOiEBJkk9sF8S8tWYqLRSkwyJ+BEYTkyQW05EjoB2OZMBCbzJKEgQycWcs+TheTIZA/IkYlCcmRKgiDwFAE5MgU4NL+muBzRv+FrAnLkNcXlyCRj38hzfk1AjiDjZ6qQHJnqATmCuGzsliOvG4XwDXNH84YNcmQSsGt4HRiUb5DIkde9ckSblKA+45ukciTUdU0WOTLNXMmmCcuRaUrLkaioacDKOB0XyaGuZzTdRjkyTX05EjItQSaJfTDf0rKVeMtoJWaYE/AtYTkyTW05EjIN2Oa8BUzmGUJBhk4s5J7fFpIjb3tAjrwlJEdmJggCzxSQIzOBQ/M7issR/Ru+IyBH3lFcjsww9o0853cE5AgyfmYJyZFZHpAjiMvGbjnyrlEI3zN3NO/ZIEdmALuGd4FB+R6JHHnXK0e0GQnqM84mlSNhrmuyyJE55ko2R1iOzFFbjkTMAVbG93GRHOZ6Ru/bKEfmqC9HguckyCSxD+ZbWrYSc41W4gNzAs4VliNz1JYjwXOAbc5cYDJ/IBRk6MRC7nmekByZ5wE5MldIjnyYIAj8oYAc+RA4NM9XXI7o33C+gByZr7gc+cDYN/Kc5wvIEWT8LBCSIws8IEcQl43dcmShUQgXmTuaRTbIkQ+AXcNCYFAuIpEjC71yRPsgQX3GxaRyJNx1TRY5ssRcyZYIy5ElasuRsCXAyrgUF8nhrme01EY5skR9ORK0JEEmiX0w39KylVhmtBLLzQm4TFiOLFFbjgQtAbY5y4DJvFwoyNCJhdzzCiE5ssIDcmSZkBxZmSAIvFJAjqwEDs2rFJcj+jdcJSBHVikuR5Yb+0ae8yoBOYKMn9VCcmS1B+QI4rKxW46sMQrhWnNHs9YGObIc2DWsAQblWhI5ssYrR7TlCeozriOVIxGua7LIkfXmSrZeWI6sV1uOhKwHVsYNuEiOcD2jDTbKkfXqy5HA9QkySeyD+ZaWrcRGo5XYZE7AjcJyZL3aciRwPbDN2QhM5k1CQYZOLOSeNwvJkc0ekCMbheTIlgRB4C0CcmQLcGjeqrgc0b/hVgE5slVxObLJ2DfynLcKyBFk/GwTkiPbPCBHEJeN3XLkI6MQbjd3NNttkCObgF3DR8Cg3E4iRz7yyhFtU4L6jDtI5Uik65oscmSnuZLtFJYjO9WWI0E7gZVxFy6SI13PaJeNcmSn+nIkYGeCTBL7YL6lZSux22gl9pgTcLewHNmpthwJ2Alsc3YDk3mPUJChEwu554+F5MjHHpAju4XkyCcJgsCfCMiRT4BDc4zickT/hjECciRGcTmyx9g38pxjBOQIMn72CsmRvR6QI4jLxm45ss8ohPvNHc1+G+TIHmDXsA8YlPtJ5Mg+rxzR9iSoz/gpqRyJcl2TRY4cMFeyA8Jy5IDaciTgALAyOnCRHOV6Rg4b5cgB9eWI/4EEmST2wXxLy1Yi1mgl4swJGCssRw6oLUf8DwDbnFhgMscJBRk6sZB7PigkRw56QI7ECsmR+ARB4HgBORIPHJoPKS5H9G94SECOHFJcjsQZ+0ae8yEBOYKMnwQhOZLgATmCuGzsliOJRiE8bO5oDtsgR+KAXUMiMCgPk8iRRK8c0eIS1Gf8jFSORLuuySJHjpgr2RFhOXJEbTnidwRYGT/HRXK06xl9bqMcOaK+HHnmzHzd+3kmiX0w39KylfjCaCWOmhPwC2E5ckRtOYJIwD/anC+AyXxUKMjQiYXc85dCcuRLD8iRL4TkyLEEQeBjAnLkGHBo/kpxOaJ/w68E5MhXisuRo8a+kef8lYAcQcbPcSE5ctwDcgRx2dgtR04YhfCkuaM5aYMcOQrsGk4Ag/IkiRw54ZUj2tEE9RlPccoRzdd1TRY5ctpcyU4Ly5HTassR39PAyngmARdcrmd0xkY5clp9OaKdTpBJYh/Mt7RsJc4arcQ5cwKeFZYjp9WWI9ppYJtzFpjM54SCDJ1YyD2fF5Ij5z0gR84KyZGvEwSBvxaQI18Dh+ZvFJcj+jf8RkCOfKO4HDln7Bt5zt8IyBFk/FwQkiMXPCBHEJeN3XLkolEIvzV3NN/aIEfOAbuGi8Cg/JZEjlz0yhHtXIL6jJdI5chfBq+vez9icuSyuZJdFpYjl5WWI5FRl4GV8TvcPKW5ntF3NsqRy+rLEd/LCTJJ7IP5lpatxPdGK/GDOQG/F5Yjl9WWI76XgW3O98Bk/kEoyNCJhdzzj0Jy5EcPyJHvheTIlQRB4CsCcuQKcGj+SXE5on/DnwTkyE+Ky5EfjH0jz/knATmCjJ+rQnLkqgfkCOKysVuO/GwUwl/MHc0vNsiRH4Bdw8/AoPyFRI787JUj2g8J6jP+SipH/FzXZJEj18yV7JqwHLmmthyJuAasjL/h5ik/1zP6zUY5ck15ORIVfS1BJol9MN/SspW4brQSN8wJeF1YjlxTWo48e5jutjnXgcl8QyjI0ImF3PNNITly0wNy5LqQHLmVIAh8S0CO3AIOzbcVlyP6N7wtIEduKy5Hbhj7Rp7zbQE5goyfO0Jy5I4H5AjisrFbjtw1CuE9c0dzzwY5cgPYNdwFBuU9Ejly1ytHtBsJ6jPeJ5Uj/q5rssiRB+ZK9kBYjjxQW46EPQBWxoe4eeqZ2eKhjXLkgfpyJOpBgkwS+2C+pWUr8choJR6bE/CRsBx5oLYciXoAbHMeAZP5sVCQoRMLueffheTI7x6QI4+E5IhPoiCwvjhajuhrmtf6p5GcJFFtOaJ/Q50RLUeS4L6hiBx5bOwbec5JEvFyBBk/SYFn4lqs9HUL+9grRx4TypFkRiFMnujzbEeTPFFejjwGdg3JgEGZPFHmINGFMhkweVjlCK7Dk2NMgbx4bJQjAa5rssiRlOZKljJRVo7o6yssR0JSAitjqkRccLmeUapE++SI/j0UlyORKRNlktgH8y0tW4nURiuRxpyA+v8gKUf0j6WwHIkEJOAfbU5qYDKnEQoydGIh95w2UUaOpE20X46kBu/l6U+6REHgdAJyJB1waE6vuBzRv2F6ATmSXnE5ksbYN/Kc0wvIEWT8ZBCSIxk8IEcQl43dciSjUQgzmTuaTDbIkTTAriEjMCgzkciRjF45oqVJVJ8xM6kcCXRdk0WOZDFXsizCciSL2nIkKAuwMmbFzVOBrmeU1UY5kkV9ORKRJVEmiX0w39KylchmtBLZzQmYTViOZFFbjkRkAbY52YDJnF0oyNCJhdxzDiE5ksMDciSbkBzJmSgInFNAjuQEDs25FJcj+jfMJSBHcikuR7Ib+0aecy4BOYKMn9xCciS3B+QI4rKxW47kMQphXnNHk9cGOZId2DXkAQZlXhI5kscrR7Tsieoz5iOVI0Gua7LIkfzmSpZfWI7kV1uOBOQHVsYCuHkqyPWMCtgoR/KrL0fC8yfKJLEP5ltathIFjVaikDkBCwrLkfxqy5Hw/MA2pyAwmQsJBRk6sZB7LiwkRwp7QI4UFJIjRRIFgYsIyJEiwKG5qOJyRP+GRQXkSFHF5UghY9/Icy4qIEeQ8VNMSI4U84AcQVw2dsuR4kYhLGHuaErYIEcKAbuG4sCgLEEiR4p75YhWKFF9xpKkciTYdU0WOVLKXMlKCcuRUmrLEb9SwMpYGjdPBbueUWkb5Ugp9eVIWKlEmST2wXxLy1aijNFKlDUnYBlhOVJKbTkSVgrY5pQBJnNZoSBDJxZyz+WE5Eg5D8iRMkJypHyiIHB5ATlSHjg0V1BcjujfsIKAHKmguBwpa+wbec4VBOQIMn4qCsmRih6QI4jLxm45UskohL7mjsbXBjlSFtg1VAIGpS+JHKnklSNa2UT1GTVSORLiuiaLHPEzVzI/YTnip7Yc8fUDVkZ/3DwV4npG/jbKET/15UioX6JMEvtgvqVlKxFgtBKB5gQMEJYjfmrLkVA/YJsTAEzmQKEgQycWcs9BQnIkyANyJEBIjgQnCgIHC8iRYODQHKK4HNG/YYiAHAlRXI4EGvtGnnOIgBxBxk+okBwJ9YAcQVw2dsuRykYhrGLuaKrYIEcCgV1DZWBQViGRI5W9ckQLTFSfsSqpHAl1XZNFjlQzV7JqwnKkmtJyJCKqGrAyVsfNU6GuZ1TdRjlSTX05ElItUSaJfTDf0rKVqGG0EjXNCVhDWI5UU1uOhFQDtjk1gMlcUyjI0ImF3HMtITlSywNypIaQHKmdKAhcW0CO1AYOzXUUlyP6N6wjIEfqKC5Hahr7Rp5zHQE5goyfukJypK4H5AjisrFbjtQzCmF9c0dT3wY5UhPYNdQDBmV9EjlSzytHtJqJ6jM2IJUjYa5rssiRhuZK1lBYjjRUW45ENARWxka4eSrM9Ywa2ShHGqovR4IbJsoksQ/mW1q2Eo2NVqKJOQEbC8uRhmrLkeCGwDanMTCZmwgFGTqxkHtuKiRHmnpAjjQWkiPNEgWBmwnIkWbAobm54nJE/4bNBeRIc8XlSBNj38hzbi4gR5Dx00JIjrTwgBxBXDZ2y5GWRiFsZe5oWtkgR5oAu4aWwKBsRSJHWnrliNYkUX3G1qRyJNx1TRY50sZcydoIy5E2asuRsDbAytgWN0+Fu55RWxvlSBv15UhQm0SZJPbBfEvLVqKd0Uq0NydgO2E50kZtORLUBtjmtAMmc3uhIEMnFnLPHYTkSAcPyJF2QnKkY6IgcEcBOdIRODR3UlyO6N+wk4Ac6aS4HGlv7Bt5zp0E5AgyfjoLyZHOHpAjiMvGbjnSxSiEXc0dTVcb5Eh7YNfQBRiUXUnkSBevHNHaJ6rP2I1UjkS4rskiR7qbK1l3YTnSXW05EtIdWBl74OapCNcz6mGjHOmuvhwJ7J4ok8Q+mG9p2Ur0NFqJMHMC9hSWI93VliOB3YFtTk9gMocJBRk6sZB7DheSI+EekCM9heRIRKIgcISAHIkADs2RissR/RtGCsiRSMXlSJixb+Q5RwrIEWT8RAnJkSgPyBHEZWO3HIk2CmEvc0fTywY5EgbsGqKBQdmLRI5Ee+WIFpaoPmNvUjkS6bomixzpY65kfYTlSB+15UhQH2Bl7IubpyJdz6ivjXKkj/pyJKBPokwS+2C+pWUr0c9oJfqbE7CfsBzpo7YcCegDbHP6AZO5v1CQoRMLuecBQnJkgAfkSD8hOTIwURB4oIAcGQgcmgcpLkf0bzhIQI4MUlyO9Df2jTznQQJyBBk/g4XkyGAPyBHEZWO3HBliFMKh5o5mqA1ypD+waxgCDMqhJHJkiFeOaP0T1WccRipHolzXZJEjw82VbLiwHBmuthwJGA6sjCNw81SU6xmNsFGODFdfjvgPT5RJYh/Mt7RsJUYarcQocwKOFJYjw9WWI/7DgW3OSGAyjxIKMnRiIfc8WkiOjPaAHBkpJEfGJAoCjxGQI2OAQ/MLissR/Ru+ICBHXlBcjowy9o085xcE5Agyfl4UkiMvekCOIC4bu+XIS0YhfNnc0bxsgxwZBewaXgIG5cskcuQlrxzRRiWqzzhWWo6g29FzztHgPG488LtgrIe+Mc/BBIsWfeEQPpAEEinQtY19xVy1X0n8774c/NH9XgFW2nHg7EVn7tNEQMuvc+DkQnHtrpJEJAnQ3288sE1+CbdnDfj9AiXiWc+38QIyF1kTxgPXmiA0Xkx4ju7YXfZXgd/BNcZVqhF2yHA9Nl9N/M/6KHYfix8317Yc0SYa7JPMl/1EQen89KOBOss/xrSJwKCelChzmOhuGrnnyUJyd7IH5O5EIbk7JVEQeIqA3J0C7GZeU1zu6t/wNQG5+5ricneSsW/kOb8mIHeR8TNVqPua6gG5i7hs7Ja7rxuF8A1z5/CGDXJ3ElDuvg4MyjdI5O7rXrmrSXR4aMY30YzomydNgo9PmQRcYOprBSTgOQOAjNOERgP0jA8MHm0asEhOV9zL6k52uoDHKp0gUxjc5XoLeB5/9du16HN6FRjfFrgi/1BlhrlbmvEXv13rnryPjtY/0IxEfPcF/PDBM4CB/HYi7Ns980eP37bxt2ufnhl63RlClxYoWSxHjJnGiPGOOWlmCspJqaSZARxZZgKT5h0S0Ync8ywh0TnLA6JzppDofDdREPhdAdH5LrAdeE9x0al/w/cEROd7iovOd4x9I8/5PQHRiYyf2UKic7YHRCfisrFbdM4xCuH75i7k/UR50fkOsGuYAwzK90lE5xyv6NQkOjw041zVRWdqp7wJBEpEfa0aAqKzBpDxAxLRCQwe7QNgkZxHIDrnCYjOUgkyhcFdrg+9otPPAldEdM43d0vzhUXnfLVFZ+B8YCAvwInOZ/41AgtsFp3z8aLTbz6h6FxojBiLzEmzUFh0CiSN33zgyLIQmDSLSEQncs+LhUTnYg+IzoVConNJoiDwEgHRuQTY7i5VXHTq33CpgOhcqrjoXGTsG3nOSwVEJzJ+lgmJzmUeEJ2Iy8Zu0bncKIQrzF3IikR50bkI2DUsBwblChLRudwrOjWJDg/NuFJ10ZlKlzdAiaiv1VhAdDYGMq4iEZ3A4NFWAYvkagLRuVpAdJZMkCkM7nKt8YpOfwtcEdG51twtrRUWnWvVFp3+a4GBvA4nOqNdz2idzaJzLV50PvOdfd388fGBJ4vliLHeGDE2mJNmvbDoFEgaRKD/MbKsBybNBhLRidzzRiHRudEDonO9kOjclCgIvElAdG4CtrubFRed+jfcLCA6NysuOjcY+0ae82YB0YmMny1ConOLB0Qn4rKxW3RuNQrhNnMXsi1RXnRuAHYNW4FBuY1EdG71ik5NosNDM36kuuhM6ZQ3TYASUV+rnYDobAdk3E4iOoHBo20HFskdBKJzh4DoLJEgUxjc5drpFZ0BFrgionOXuVvaJSw6d6ktOrVdwEDeDVzL9Yx22yw6d+FFZ8AuQtG5xxgxPjYnzR5h0SmQNAG7gCPLHmCgf0wiOpF7/kRIdH7iAdG5R0h0xiQKAscIiM4Y4K20V3HRqX/DvQKic6/iovNjY9/Ic94rIDqR8bNPSHTu84DoRFw2dovO/UYh/NTchXyaKC86PwZ2DfuBQfkpiejc7xWdmkSHh2Y8oLroTOGUN+2BElFfq6eA6OwJZHSQiE5g8GgOYJGMJRCdsQKis3iCTGFwlyvOKzoDLXBFROdBc7d0UFh0HhQWne4G30HgWvFCI0G8zaLzIF50Bh4kFJ2HjBEjwZw0h4RFp0DSBB4EjiyHgEmTQCI6kXtOFBKdiR4QnYeEROfhREHgwwKi8zCw3f1McdGpf8PPBETnZ4qLzgRj38hz/kxAdCLj54hQV3PEA6ITcdnYLTo/NwrhF+Yu5ItEedGZAOwaPgcG5RckovNzr+jUJDo8NONR1UVncqe8CQNKRH2tfgKisx+Q8UsS0QkMHu1LYJE8RiA6jwmIzmIJMoXBXa6vvKIzyAJXRHQeN3dLx4VF53FFRefTfxfmcWAgnwAWPNczOmGz6DyOF51BxwlF50ljxDhlTpqTwqJTIGmCjgNHlpPApDlFIjqRez4tJDpPe0B0nhQSnWcSBYHPCIjOM8Dqf1Zx0al/w7MCovOs4qLzlLFv5DmfFRCdyPg5JyQ6z3lAdCIuG7tF53mjEH5t7kK+TpQXnaeAXcN5YFB+TSI6z3tFpybR4aEZv1FddCZzypv+QImorzVSQHSOBDJeIBGdwODRLgCL5EUC0XlRQHQWTZApDO5yfesVncEWuCKi85K5W7okLDovqS06Iy4BA/kyLiD8XM/oss2i8xJedAZfIhSd3xkjxvfmpPlOWHQKJE3wJeDI8h0wab4nEZ3IPf8gJDp/8IDo/E5IdP6YKAj8o4Do/BHY7l5RXHTq3/CKgOi8orjo/N7YN/KcrwiITmT8/CQkOn/ygOhEXDZ2i86rRiH82dyF/JwoLzq/B3YNV4FB+TOJ6LzqFZ2aRIeHZvxFddGZ1ClvRgElor7WeAHROR7I+CuJ6AQGj/YrsEheIxCd1wREZ5EEmcLgLtdvXtEZYoErIjqvm7ul68Ki87raojPsOjCQb+AC4hl/ccNm0XkdLzpDrhOKzpvGiHHLnDQ3hUWnQNKEXAeOLDeBSXOLRHQi93xbSHTe9oDovCkkOu8kCgLfERCdd4Dt7l3FRaf+De8KiM67iovOW8a+ked8V0B0IuPnnpDovOcB0Ym4bOwWnfeNQvjA3IU8SJQXnbeAXcN9YFA+IBGd972iU5Po8NCMD1UXnUmc8mYCUCLqa70pIDrfBDI+IhGdwODRHgGL5GMC0flYQHQWTpApDO5y/e4VnaEWuCKi0+ewz7Pdkv5CUnTq6yssOkN0PnfX+uM/IHQYtscA1zPS1y3sY5/odI0J0LqhPodlLi0fDKfliJH08JO/JjMnjf4/SIpOgaQJBQT6HyNLUmDSJBMKDLToRO45+WEZ0Zn8sP2iMyl4L09/UhwWBNYXR4vOFLhA1lICg03qG6Y8jBedKcHFAD3GJTP2jTznlIfxohMZP6mAZ+JarFIdtl90Ii4bu0VnaqMQpjF3IWkOy4vOZMCuITUwKNMIHSS6UKYGJg+r6JTo8NCMadGM6JvHxylvpgElor7WbAHRORvImE5oNECLNWDwaOmARTI9+PtJiM70h/HnUShBpjC4y5UBeB6kojPMAldEdGY0d0sZhUVnRrVFZ1BGYCBnOow9tKdnlMlm0ZkRLzrDMhKKzszGiJHFnDSZhUWnQNKEZQSOLJmBSZOFRHQi95xVSHRm9YDozCwkOrMdFgTOJiA6swHb3eyKi079G2YXEJ3ZFRedWYx9I885u4DoRMZPDiHRmcMDohNx2dgtOnMahTCXuQvJZYPozALsGnICgzIXiejM6RWdmkSHh2bMrbro/N0pheYAJaK+1mIB0bkYyJiHRHQCg0fLAyySeQlEZ14B0VkwQaYwuMuVzys6wy1wRURnfnO3lF9YdOZXW3QG5AcGcgFcIAe5nlEBm0VnfrzoDM9PKDoLGiNGIXPSFBQWnQJJE54fOLIUBCZNIRLRidxzYSHRWdgDorOgkOgsclgQuIiA6CwCbHeLKi469W9YVEB0FlVcdBYy9o0856ICohMZP8WERGcxD4hOxGVjt+gsbhTCEuYupIQNorMQsGsoDgzKEiSis7hXdGoSHR6asaTqovOxUwotAUpEfa11AqJzHZCxFInoBAaPVgpYJEsTiM7SAqKzQIJMYXCXq4xXdEZY4IqIzrLmbqmssOgsq7bo9CsLDORyuEAOdj2jcjaLzrJ40RlRllB0ljdGjArmpCkvLDoFkiaiLHBkKQ9MmgokohO554pCorOiB0RneSHRWemwIHAlAdFZCdju+iouOvVv6CsgOn0VF50VjH0jz9lXQHQi40cTEp2aB0Qn4rKxW3T6GYXQ39yF+NsgOisAuwY/YFD6k4hOP6/o1CQ6PDRjgOqi85FTCq0HSkR9rR0ConMHkDGQRHQCg0cLBBbJIALRGSQgOvMnyBQGd7mCvaIz0gJXRHSGmLulEGHRGaK26PQNAQZyKC6QQ1zPKNRm0RmCF52RIYSis7IxYlQxJ01lYdEpkDSRIcCRpTIwaaqQiE7knqsKic6qHhCdlYVEZ7XDgsDVBERnNWC7W11x0al/w+oCorO64qKzirFv5DlXFxCdyPipISQ6a3hAdCIuG7tFZ02jENYydyG1bBCdVYBdQ01gUNYiEZ01vaJTk+jw0Iy1VRedD51SaCdQIuprfSogOj8FMtYhEZ3A4NHqAItkXQLRWVdAdOZLkCkM7nLV84rOKAtcEdFZ39wt1RcWnfWVFp1RUfWBgdwAF8ihrmfUwGbRWR8vOp/5zr5u/vj4wJPFcsRoaIwYjcxJ01BYdAokDSLQ/xhZGgKTphGJ6ETuubGQ6GzsAdHZUEh0NjksCNxEQHQ2Aba7TRUXnfo3bCogOpsqLjobGftGnnNTAdGJjJ9mQqKzmQdEJ+KysVt0NjcKYQtzF9LCBtHZCNg1NAcGZQsS0dncKzo1iQ4PzdhSddH5wCmFDgAlor7WZwKi8zMgYysS0QkMHq0VsEi2JhCdrQVEZ94EmcLgLlcbr+iMtsAVEZ1tzd1SW2HR2VZt0RnRFhjI7XCBHOZ6Ru1sFp1t8aIzui2h6GxvjBgdzEnTXlh0CiRNdFvgyNIemDQdSEQncs8dhURnRw+IzvZCorPTYUHgTgKisxOw3e2suOjUv2FnAdHZWXHR2cHYN/KcOwuITmT8dBESnV08IDoRl43dorOrUQi7mbuQbjaIzg7ArqErMCi7kYjOrl7RqUl0eGjG7qqLzvtOKXQEKBH1tU4JiM5TQMYeJKITGDxaD2CR7EkgOnsKiM48CTKFwV2usH+96NQk3M3Tn2dEZ7i5WwoXFp3haovOsHBgIEfgAjnc9YwibBad4XDRqfmGE4rOSGPEiDInTaSw6MQnzbMH4O7IEglMmigS0Yncc7SQ6Iz2gOiMFBKdvQ4LAvcSEJ29gO1ub8VFp/4NewuIzt6Ki84oY9/Ic+4tIDqR8dNHSHT28YDoRFw2dovOvkYh7GfuQvrZIDqjgF1DX2BQ9iMRnX29olOT6PDQjP1VF533nFLoNFAi6mtdEhCdl4CMA0hEJzB4tAHAIjmQQHQOFBCduRNkCoO7XIO8olOia3r684zoHGzulgYLi87BaovOkMHAQB6CC+QI1zMaYrPoHIwXndpgQtE51BgxhpmTZqiw6MQnzbMH4O7IMhSYNMNIRCdyz8OFROdwD4jOoUKic8RhQeARAqJzBLDdHam46NS/4UgB0TlScdE5zNg38pxHCohOZPyMEhKdozwgOhGXjd2ic7RRCMeYu5AxNojOYcCuYTQwKMeQiM7RXtGpSXR4aMYXVBedd51S6DJQIupr/SogOn8FMr5IIjqBwaO9CCySLxGIzpcERGeuBJnC4C7Xy17R6WeBKyI6x5q7pbHConOs2qIzaCwwkF/BBXKk6xm9YrPoHIsXnX5jCUXnOGPEGG9OmnHCohOfNM8egLsjyzhg0ownEZ3IPU8QEp0TPCA6xwmJzlcPCwK/KiA6XwW2uxMVF536N5woIDonKi46xxv7Rp7zRAHRiYyfSUKic5IHRCfisrFbdE42CuEUcxcyxQbROR7YNUwGBuUUEtE52Ss6NYkOD834muqi845TCl0DSkR9rfsCovM+kHEqiegEBo82FVgkXycQna8LiM6cCTKFwV2uN7yi098CV0R0vmnult4UFp1vqi06A94EBvI0XCBHuZ7RNJtF55t40en/JqHonG6MGG+Zk2a6sOjEJ82zB+DuyDIdmDRvkYhO5J5nCInOGR4QndOFROfbhwWB3xYQnW8D292ZiotO/RvOFBCdMxUXnW8Z+0ae80wB0YmMn3eEROc7HhCdiMvGbtE5yyiE75q7kHdtEJ1vAbuGWcCgfJdEdM7yik5NosNDM76nuui87ZRCD4ASUV8rRSKeM0UijnE2iegEBo82G1gk5xCIzjkCojNHgkxhcJfrfa/oDLDAFRGdc83d0lxh0TlXbdHpNxcYyB/gAjna9Yw+sFl0zsWLzoC5hKJznjFifGhOmnnCohOfNM8egLsjyzxg0nxIIjqRe54vJDrne0B0zhMSnQsOCwIvEBCdC4Dt7kLFRaf+DRcKiM6FiovOD419I895oYDoRMbPIiHRucgDohNx2dgtOhcbhXCJuQtZYoPo/BDYNSwGBuUSEtG52Cs6NYkOD824VHXRecsphVICJaK+VmYB0ZkZyLiMRHQCg0dbBiySywlE53IB0Zk9QaYwuMu1wis6Ay1wRUTnSnO3tFJYdK5UW3T6rgQG8ipYIGvPjASrbBadK/GiM3AloehcbYwYa8xJs1pYdOKT5tkDcHdkWQ1MmjUkohO557VConOtB0TnaiHRue6wIPA6AdG5DtjurldcdOrfcL2A6FyvuOhcY+wbec7rBUQnMn42CInODR4QnYjLxm7RudEohJvMXcgmG0TnGmDXsBEYlJtIROdGr+jUJDo8NONm1UXnTacUygKUiPpa+QREZz4g4xYS0QkMHm0LsEhuJRCdWwVEZ7YEmcLgLtc2r+gMssAVEZ0fmbulj4RF50dKi87IqI+AgbwdJzo11zPabrPo/AgvOoM+IhSdO4wRY6c5aXYIi0580jx7AO6OLDuASbOTRHQi97xLSHTu8oDo3CEkOncfFgTeLSA6dwPb3T2Ki079G+4REJ17FBedO419I895j4DoRMbPx0Ki82MPiE7EZWO36PzEKIQx5i4kxgbRuRPYNXwCDMoYEtH5iVd0ahIdHppxr+qi84ZTCuUHSkR9rZICorMkkHEfiegEBo+2D1gk9xOIzv0CojNrgkxhcJfrU6/oDLbAFRGdB8zd0gFh0XlAbdEZcQAYyA6c6PRzPSOHzaLzAF50Bh8gFJ2xxogRZ06aWGHRiU+aZw/A3ZElFpg0cSSiE7nng0Ki86AHRGeskOiMPywIHC8gOuOB7e4hxUWn/g0PCYjOQ4qLzjhj38hzPiQgOpHxkyAkOhM8IDoRl43dojPRKISHzV3IYRtEZxywa0gEBuVhEtGZ6BWdmkSHh2b8THXRed0phUoBJaK+liYgOjUg4xES0QkMHu0IsEh+TiA6PxcQnVkSZAqDu1xfeEVniAWuiOg8au6WjgqLzqNqi86wo8BA/hInOp/xF1/aLDqP4kVnyFFC0XnMGDG+MifNMWHRiU+aZw/A3ZHlGDBpviIRncg9HxcSncc9IDqPCYnOE4cFgU8IiM4TwHb3pOKiU/+GJwVE50nFRedXxr6R53xSQHQi4+eUkOg85QHRibhs7Badp41CeMbchZyxQXR+BewaTgOD8gyJ6DztFZ2aRIeHZjyruuj8zSmF/IASUV+rqoDorApkPEciOoHBo50DFsnzBKLzvIDozJwgUxjc5fraKzpDLXBFROc35m7pG2HR+Y3aojPkG2AgX8CJzoD/x95bQFl1ZWvbBIJLgOAuwbVwJ1jw4BLcJbi7uzsEDQ4BAgECBEsgaA5QVUCwAMHdHYL9c986ff/q8+3z3O6buevuNWjGeAd979vPZJ0z137XmjukOnSPLoXxi86L+i86C1408EXnZe+IccX3obns8ItO/Yfmnxvwd0eWy4oPzRVDXnRqfuarDr3ovPp/8KLzskMvOq8dcXDB1xx40XlN8bp73eUvOq3v8LoDLzqvu/xF5xXv59bs83UHXnRq7p8bDr3ovPF/8KJT47AJ6xedN71BeMv3FnIrDF50XlG8NdxU3JS3DHnRefM/LzoDnLjhaa/xtttfdD6Ul0JFFV8iWrXKOvCis6ziGu8Y8qJTcfME3FEMybsGvOi868CLzk8OORMMf3dd9/7zorOpzXIdedF53/e2dN/hF5333f2iM999xY38QO9FZ97QPXoQxi867+u/6Gx638AXnQ+9I8Yj34fmocMvOvUfmn9uwN8dWR4qPjSPDHnRqfmZHzv0ovPx/8GLzocOveh8csTBBT9x4EXnE8Xr7lOXv+i0vsOnDrzofOryF52PvJ9bs89PHXjRqbl/njn0ovPZ/8GLTo3DJqxfdD73BuEL31vIizB40flI8dbwXHFTvjDkRefz/7zoDHDihqe9xpduf9H5QF4KlVN8iWjVqu7Ai87qimt8ZciLTsXNE/BKMST/MuBF518OvOiMdciZYPi763r9nxedzWyW68iLzje+t6U3Dr/ofOPuF5153ihu5Ld6Lzrzhe7R2zB+0flG/0VnszcGvuh85x0x3vs+NO8cftGp/9D8cwP+7sjyTvGheW/Ii07Nzxwu0JkXnVbdsH7R+c6hF50fBTq4YKu49ovOjwL1QiB8oLtfdFrfobVG7Red4QN1w0B7jHvv/dyafQ4fqP+iU3P/RFDsSeiwsuqmChe2LzrfO/R+LJzOOm1vIR97gzBiYLh/voVEDHT+Red7xVvDx4qbMmKgM43UDsqPFR8eU190OnHD015jJOWDR/3kuS8vhWoovkS0ajV04EVnQ8U1Rg7U3zjWL+0Xa4qbJyCyYkhGUf7+nHjRaa1Rux8xDzkTDH93XVEV+2Hoi87mNst15EVnNN/bUrRAZ190Rgt09YvOXNEUN3J0tY0ckD90j6IHhu2LzmiB6i86m0dz6NBSelhsR4wY3hEjpu9DEyPQ2Red+g/NPzfg744sMRQfmpgObQztF52anzmWQy86Y/0fvOiMofxZ/vHrk0AHF/yJAy86P1G87sZ2+YtO6zuM7cCLztguf9EZ0/u5Nfsc24EXnZr7J45DLzrj/B+86NQ4bML6RWdcbxB+6nsL+TQMXnTGVLw1xFXclJ8a8qIz7n9edAY4ccPTXmM8t7/ovCcvhRopvkS0arVx4EVnG8U1xjfkRafi5gmIrxiSCQx40ZnAgRedMQ45Ewx/d10J//Ois4XNch150ZnI97aUyOEXnYnc/aIzZyLFjZxY70VngdA9ShzGLzoT6b/obJHIwBedSbwjRlLfhyaJwy869R+af27A3x1Zkig+NEkNedGp+ZmTOfSiM9n/wYvOJA696Ewe6OCCkzvwojO54nU3hctfdFrfYQoHXnSmcPmLzqTez63Z5xQOvOjU3D8pHXrRmfL/4EWnxmET1i86U3mDMLXvLSR1GLzoTKp4a0iluClTG/KiM9V/XnQGOHHD015jGre/6LwrL4XaKr5EtGp1c+BFZzfFNaY15EWn4uYJSKsYkp8Z8KLzMwdedEY/5Eww/N11pfvPi86WNst15EVnet/bUnqHX3Smd/WLzuYt0ytu5Ax6LzoLhu5RhjB+0Zle/0XnP33POf/mr3Dh1B8W2xEjo3fEyOT70GR0+EWn/kMToLHR/3tkyaj40GQy5EWn5mfO7NCLzsz/By86Mzr0ojNLoIMLzuLAi84sitfdrC5/0Wl9h1kdeNGZ1eUvOjN5P7dmn7M68KJTc/9kc+hFZ7b/gxedGodNWL/ozO4Nwhy+t5AcYfCiM5PirSG74qbMYciLzuz/edEZ4MQNT3uNOd3+ovOOvBTqrvgS0ao10IEXnQMV1xhgyItOxc0TEKAYkrkMeNGZy4EXndEOORMMf3dduR3az6n+374E5Pwbvyb4vtj8G9Xm/r8vSf/X1b6ze+H6v6y2xf7l7f+q2j5/L4L/F9WO+3+p/G9Xu0QvqP/Nag/4Zfe/Ve3t//Ti/N+oFv1//rk4/3K1xP/Kz9j5F6tl+Nd+Xs+/VC3vv/qzf/6FaqX+9Z8j9D9Wq/bv/Eyi/6Fa43/v5xthtQ7/7s9Kgmr9/v2fu+S32pj/zc9w8lNt1v/u50HZVlv2v/3ZUjbVNv7vf07V/1Nt99/5mVc+1YL+3s/P+qdq5//uz+IKVU3hf3Dzv6up/Ex7bzWlHxv1X9XU/s2sANW//KB6186jfLdL6a0VqubfutMNkjN3kuK9brLUmq94t1sgtVYr3u/WSK2tine8bVLrgOI976DUOqF41zspta4o3veuSq1Hine+x1LrveK9L5xkXUzFu18sqZVU8f6XTGplUrwDZpZa+RXvgQWkVhnFu+AXUquG4n2wptRqqngnbCa1OineCztLrQGKd8OBUmuc4v1wvNSarXhHnCO1VijeE1dKrU2Kd8XNUmuP4n1xr9Q6qnhnPCa1LijeGy9KLYX/cev/rmj9T7iq/G/IeCta/0sJURXvkNYPJEuoeI+0/r0/xb94GGD99Zrcgbbv4v5WXbV3mQFqfwH0v/qh8m/Ne/eKwo8a/e99/Lf/95lCPWN/83/U/p+e/9iH9LIpziG93Ix7SC/TPz2kd97EO6R3FsY/pHdOJzikd4dIeEjvfpPokN7dK/EhvXthkn+11r9wZ036r9X6l+7Tyf6VWv/iXT/5/1zrX55DUvxPtf6NGSnlIb35LdUhvdky9SG9uTfNIb2ZPO0hvfcFnx3Se5eR7pDee5b0h/TeAWU4pPd+KuMhvXdxeR3+W4R/d33WP/dWfF/4X/8cPW+g/jqve/TWmMehf/at/ZlvK37mvGH0mXP+vV8Bxz16318+vc/8T3+1PZ/NX3bU/h7yKf7zgPx630OusPwbsvm1/mJl85xh9jdkC3j/hmxB378hWzAM/oZsfsW/IVtAcQMWdKiR2n9DtoDy35ANCqe+6f77l7/vIOff+xWQP9D9ayzk1L/A5+RC/+a/HZo/9Dq1T5v8ig97YcXbZOgALRwGAXpM8cZVWPE7LeLQv/dSJAxuMprfQ1GH9lbRMPgeiih+D8UUb3ROfuaiip+5uGKtsLzFFjfwFvu59xZbwvcWWyIMQri44i32c8VNU8KQW+zn/7nFqjx0Tq+xpCm32JJqt9gWrUKvU/u0Kab4sJcy9LQpZeBpU9p72pTxPW3KhMFpU0rxtCmtuGnKGHLalP7PaaPy0Dm9xi9MOW2+UDxt/p3k/bsPgsK7g/9OR5vlOpK8Zb3JW843ect6f6BK6P9fuX8hjTW/xL+bxmUV07hcoF4DwvI6UNTA60B576as4Lspy9tsygphcEUoqnhFKK+4KSsoN1d781kP4D96Frru3/3c5R3+WQIabynLBrr7bVrF/1zbAioacG2r5PYfBtPRE7LZtTamVauSA3+BqKPHnU0x9IoaZreByt7bwJe+t4HKNreBLw27olZWfHC+DNRtrhOnYuVAV97O/nuNmv2o4tA/q6zyf/CzChXHiFw2y3UkOKp6g6Oab3BUtQmOaoaNEVUVN2o15eZqbz7roazqwBhR1YAx4kMKzOqKgWnqSFI90P1rrOH2kaSTJ+TB0dzkNRwYSTp53NkUQ0eSMLtZ1PTeLGr53ixq2twsahk2ktRUfHBqBeo214kTtqZLT9h//A/XaPajtuJfGwy9x2ubPZLktlmuI8FRxxscdX2Do45NcNQ1bCSpo7hR6yo3V3vzWQ9lHQdGkjoGjCQfUmB+pRiYpo4kXwW6f4313D6SdPaEPDhaG9OqVc+BkaSzx51NMXQkCbObRX3vzaKB782ivs3NooFhI0l9xQenQaBuc504Yeu7+4RtqdmPhnoh8U//jn5Ds0eSPDbLdSQ4GnmDo7FvcDSyCY7Gho0kjRQ3amPl5mpvPuuhbOTASNLIgJHkQwrMJoqBaepI0iTQ/Wts6vaRpIsn5MHR2phWraYOjCRdPO5siqEjSZjdLJp5bxbNfW8WzWxuFs0NG0maKT44zQN1m+vECdvM3SdsC81+tNALiTyh93gLs0eSvDbLdSQ4WnqDo5VvcLS0CY5Who0kLRU3aivl5mpvPuuhbOnASNLSgJHkQwrM1oqBaepI0jrQ/Wts4/aRpKsn5MHR2phWrTYOjCRdPe5siqEjSZjdLNp6bxZf+94s2trcLL42bCRpq/jgfB2o21wnTti27j5hm2v2o51eSOQNvcfbmT2S5LNZriPB0d4bHB18g6O9TXB0MGwkaa+4UTsoN1d781kPZXsHRpL2BowkH1JgdlQMTFNHko6B7l9jJ7ePJN08IQ+O1sa0anVyYCTp5nFnUwwdScLsZtHZe7Po4nuz6Gxzs+hi2EjSWfHB6RKo21wnTtjO7j5hm2n2o6teSOQLvce7mj2S5LdZriPB0c0bHN19g6ObTXB0N2wk6aa4UbsrN1d781kPZTcHRpJuBowkH1Jg9lAMTFNHkh6B7l9jT7ePJN09IQ+O1sa0avV0YCTp7nFnUwwdScLsZtHLe7Po7Xuz6GVzs+ht2EjSS/HB6R2o21wnTthe7j5hm2r2o49eSOQPvcf7mD2SFLBZriPB0dcbHP18g6OvTXD0M2wk6au4UfspN1d781kPZV8HRpK+BowkH1Jg9lcMTFNHkv6B7l/jALePJD08IQ+O1sa0ag1wYCTp4XFnUwwdScLsZjHQe7MY5HuzGGhzsxhk2EgyUPHBGRSo21wnTtiB7j5hC2r2Y7BeSBQIvccHmz2SFLRZriPBMcQbHEN9g2OITXAMNWwkGaK4UYcqN1d781kP5RAHRpIhBowkH1JgDlMMTFNHkmGB7l/jcLePJD09IQ+O1sa0ag13YCTp6XFnUwwdScLsZjHCe7MY6XuzGGFzsxhp2EgyQvHBGRmo21wnTtgR7j5hC2j2Y5ReSBQMvcdHmT2SNLVZriPBMdobHGN8g2O0TXCMMWwkGa24UccoN1d781kP5WgHRpLRBowkH1JgjlUMTFNHkrGB7l/jOLePJL08IQ+O1sa0ao1zYCTp5XFnUwwdScLsZjHee7OY4HuzGG9zs5hg2EgyXvHBmRCo21wnTtjx7j5h82v2Y6JeSDQNvccnmj2SNLNZriPBMckbHJN9g2OSTXBMNmwkmaS4UScrN1d781kP5SQHRpJJBowkH1JgTlEMTFNHkimB7l/jVLePJL09IQ+O1sa0ak11YCTp7XFnUwwdScLsZjHNe7OY7nuzmGZzs5hu2EgyTfHBmR6o21wnTthp7j5h82n2Y4ZeSDQLvcdnmD2SNLdZriPBMdMbHLN8g2OmTXDMMmwkmam4UWcpN1d781kP5UwHRpKZBowkH1JgfqMYmKaOJN8Eun+Ns90+kvTxhDw4WhvTqjXbgZGkj8edTTF0JAmzm8Uc781iru/NYo7NzWKuYSPJHMUHZ26gbnOdOGHnuPuEzavZj3l6IdE89B6fZ/ZI0sJmuY4Ex3xvcCzwDY75NsGxwLCRZL7iRl2g3FztzWc9lPMdGEnmGzCSfEiB+a1iYJo6knwb6P41LnT7SNLXE/LgaG1Mq9ZCB0aSvh53NsXQkSTMbhaLvDeLxb43i0U2N4vFho0kixQfnMWBus114oRd5O4TNo9mP5bohUSL0Ht8idkjSUub5ToSHEu9wbHMNziW2gTHMsNGkqWKG3WZcnO1N5/1UC51YCRZasBI8iEF5nLFwDR1JFke6P41rnD7SNLPE/LgaG1Mq9YKB0aSfh53NsXQkSTMbhYrvTeL73xvFittbhbfGTaSrFR8cL4L1G2uEyfsSnefsLk1+7FKLyRaht7jq8weSVrZLNeR4FjtDY41vsGx2iY41hg2kqxW3KhrlJurvfmsh3K1AyPJagNGkg8pML9XDExTR5LvA92/xrVuH0n6e0IeHK2NadVa68BI0t/jzqYYOpKE2c1infdm8YPvzWKdzc3iB8NGknWKD84PgbrNdeKEXefuEzaXZj/W64VEq9B7fL3RI0lATpvlOhIcG7zBsdE3ODbYBMdGw0aSDYobdaNyc7U3n/VQbnBgJNlgwEjyIQXmj4qBaepI8mOg+9e4ye0jyQBPyIOjtTGtWpscGEkGeNzZFDNHkrC7WWz23iy2+N4sNtvcLLYYNpJsVnxwtgTqNteJE3azu09Y1X78pBYSATlD7/GfzB5JAmyW60hwbPUGxzbf4NhqExzbDBtJtipu1G3KzdXefNZDudWBkWSrASPJhxSY2xUD09SRZHug+9e4w+0jyUBPyIOjtTGtWjscGEkGetzZFENHkjC7Wez03ix+9r1Z7LS5Wfxs2EiyU/HB+TlQt7lOnLA73X3C5tTsxy96J2xA6D3+i9kjSS6b5ToSHLu8wbHbNzh22QTHbsNGkl2KG3W3cnO1N5/1UO5yYCTZZcBI8iEF5q+KgWnqSPJroPvXuMftI8kgT8iDo7UxrVp7HBhJBnnc2RRDR5Iwu1ns9d4s9vneLPba3Cz2GTaS7FV8cPYF6jbXiRN2r6tP2JatNPuxX++EzRV6j+83eyTJbbNcR4LjgDc4DvoGxwGb4Dho2EhyQHGjHlRurvbmsx7KAw6MJAcMGEk+pMD8TTEwTR1Jfgt0/xo9bh9JBntCHhytjWnV8jgwkgz2uLMpho4kYXazOOS9WRz2vVkcsrlZHDZsJDmk+OAcDtRtrhMn7CF3n7AtNftxRO+EzR16jx8xeyTJY7NcR4Ij0BscQb7BEWgTHEGGjSSBihs1SLm52pvPeigDHRhJAg0YST6kwAxWDExTR5LgQPev8ajbR5IhnpAHR2tjWrWOOjCSDPG4symGjiRhdrM45r1ZHPe9WRyzuVkcN2wkOab44BwP1G2uEyfsMXefsC00+/G73gmbJ/Qe/93skSSvzXIdCY4T3uA46RscJ2yC46RhI8kJxY16Urm52pvPeihPODCSnDBgJPmQAvOUYmCaOpKcCnT/Gk+7fSQZ6gl5cLQ2plXrtAMjyVCPO5ti6EgSZjeLM96bxR++N4szNjeLPwwbSc4oPjh/BOo214kT9oy7T9jmmv04q3fC5g29x8+aPZLks1muI8Fxzhsc532D45xNcJw3bCQ5p7hRzys3V3vzWQ/lOQdGknMGjCQfUmD+qRiYpo4kfwa6f40X3D6SDPOEPDhaG9OqdcGBkWSYx51NMXQkCbObxUXvzeKS783ios3N4pJhI8lFxQfnUqBuc504YS+6+4RtptmPy3onbL7Qe/yy2SNJfpvlOhIcV7zBcdU3OK7YBMdVw0aSK4ob9apyc7U3n/VQXnFgJLliwEjyIQXmNcXANHUkuRbo/jVed/tIMtwT8uBobUyr1nUHRpLhHnc2xdCRJMxuFje8N4ubvjeLGzY3i5uGjSQ3FB+cm4G6zXXihL3h7hO2qWY/bumdsPlD7/FbZo8kBWyW60hw3PYGxx3f4LhtExx3DBtJbitu1DvKzdXefNZDeduBkeS2ASPJhxSYdxUD09SR5G6g+9d4z+0jyQhPyIOjtTGtWvccGElGeNzZFENHkjC7Wdz33iwe+N4s7tvcLB4YNpLcV3xwHgTqNteJE/a+u0/Ygpr9eKh3whYIvccfmj2SFLRZriPB8cgbHI99g+ORTXA8NmwkeaS4UR8rN1d781kP5SMHRpJHBowkH1JgPlEMTFNHkieB7l/jU7ePJCM9IQ+O1sa0aj11YCQZ6XFnUwwdScLsZvHMe7N47nuzeGZzs3hu2EjyTPHBeR6o21wnTthn7j5hC2j244XeCVsw9B5/YfZI0tRmuY4Ex0tvcLzyDY6XNsHxyrCR5KXiRn2l3FztzWc9lC8dGEleGjCSfEiB+ZdiYJo6kvwV6P41vnb7SDLKE/LgaG1Mq9ZrB0aSUR53NsXQkSTMbhZvvDeLt743izc2N4u3ho0kbxQfnLeBus114oR94+4TNr9mP97pnbBNQ+/xd2aPJM1slutIcLz3Bsd/XU1Cf4HvbYLD+i+l8lmUm0eS94ob1frsms3V3nzWQ/negZHkvQEjyYcUmB8F6QWmqSOJ3nfg3BrDa69ReyQZ7Ql5cLQ2plXL+tDaI8lojzubYuhIEmY3iwjeZPnY92ZhGb43i4+DzBpJIgTprevjIN3mOnHCWp/XxSdsPs1+RNQ7YZuF3uMRg4weSZrbLNeR4IjkDY7IvsERySY4Ihs2kkRS3KiRg3Sbq735rIfyHz0LXffvfu5Iyler/wTm3/u8URQD09SRJEqQ+9cY1e0jyRhPyIOjtTGtWlEdGEnGeNzZFENHkjC7WUTzJkt035tFNJubRXTDRpJoig9O9CDd5jpxwkZz9wmbV7MfMfRO2Oah93gMs0eSFjbLdSQ4YnqDI5ZvcMS0CY5Yho0kMRU3aqwg3eZqbz7roYzpwEgS04CR5EMKzE8UA9PUkeSTIPevMbbbR5KxnpAHR2tjWrViOzCSjPW4symGjiRhdrOI402WuL43izg2N4u4ho0kcRQfnLhBus114oSN4+4TNo9mPz7VO2FbhN7jn5o9krS0Wa4jwRHPGxzxfYMjnk1wxDdsJImnuFHjB+k2V3vzWQ9lPAdGkngGjCQfUmAmUAxMU0eSBEHuX2NCt48k4zwhD47WxrRqJXRgJBnncWdTDB1JwuxmkcibLIl9bxaJbG4WiQ0bSRIpPjiJg3Sb68QJm8jdJ2xuzX4k0TthW4be40nMHkla2SzXkeBI6g2OZL7BkdQmOJIZNpIkVdyoyYJ0m6u9+ayHMqkDI0lSA0aSDykwkysGpqkjSfIg968xhdtHkvGekAdHa2NatVI4MJKM97izKYaOJGF2s0jpTZZUvjeLlDY3i1SGjSQpFR+cVEG6zXXihE3p7hM2l2Y/UuudsK1C7/HURo8kuXLaLNeR4EjjDY60vsGRxiY40ho2kqRR3Khpg3Sbq735rIcyjQMjSRoDRpIPKTA/UwxMU0eSz4Lcv8Z0bh9JJnhCHhytjWnVSufASDLB486mmDmShN3NIr03WTL43izS29wsMhg2kqRXfHAyBOk214kTNr27T1jVfmRUC4lcOUPv8YxmjyQBNst1JDgyeYMjs29wZLIJjsyGjSSZFDdq5iDd5mpvPuuhzOTASJLJgJHkQwrMLIqBaepIkiXI/WvM6vaRZKIn5MHR2phWrawOjCQTPe5siqEjSZjdLLJ5kyW7780im83NIrthI0k2xQcne5Buc504YbO5+4TNqdmPHHonbEDoPZ7D7JEkl81yHQmOnN7gCPANjpw2wRFg2EiSU3GjBgTpNld781kPZU4HRpKcBowkH1Jg5lIMTFNHklxB7l9jbrePJJM8IQ+O1sa0auV2YCSZ5HFnUwwdScLsZpHHmyx5fW8WeWxuFnkNG0nyKD44eYN0m+vECZvH1Sdsi1aa/cind8LmCr3H85k9kuS2Wa4jwZHfGxwFfIMjv01wFDBsJMmvuFELBOk2V3vzWQ9lfgdGkvwGjCQfUmAWVAxMU0eSgkHuX2Mht48kkz0hD47WxrRqFXJgJJnscWdTDB1JwuxmUdibLEV8bxaFbW4WRQwbSQorPjhFgnSb68QJW9jdJ2xLzX4U1Tthc4fe40XNHkny2CzXkeAo5g2O4r7BUcwmOIobNpIUU9yoxYN0m6u9+ayHspgDI0kxA0aSDykwP1cMTFNHks+D3L/GEm4fSaZ4Qh4crY1p1SrhwEgyxePOphg6koTZzaKkN1lK+d4sStrcLEoZNpKUVHxwSgXpNteJE7aku0/YFpr9KK13wuYJvcdLmz2S5LVZriPBUcYbHF/4BkcZm+D4wrCRpIziRv0iSLe52pvPeijLODCSlDFgJPmQArOsYmCaOpKUDXL/Gsu5fSSZ6gl5cLQ2plWrnAMjyVSPO5ti6EgSZjeL8t5kqeB7syhvc7OoYNhIUl7xwakQpNtcJ07Y8u4+YZtr9qOi3gmbN/Qer2j2SJLPZrmOBEclb3BU9g2OSjbBUdmwkaSS4katHKTbXO3NZz2UlRwYSSoZMJJ8SIH5pWJgmjqSfBnk/jVWcftIMs0T8uBobUyrVhUHRpJpHnc2xdCRJMxuFlW9yVLN92ZR1eZmUc2wkaSq4oNTLUi3uU6csFXdfcI20+xHdb0TNl/oPV7d7JEkv81yHQmOGt7gqOkbHDVsgqOmYSNJDcWNWjNIt7nam896KGs4MJLUMGAk+ZACs5ZiYJo6ktQKcv8aa7t9JJnuCXlwtDamVau2AyPJdI87m2LoSBJmN4s63mSp63uzqGNzs6hr2EhSR/HBqRuk21wnTtg67j5hm2r24yu9EzZ/6D3+ldkjSQGb5ToSHPW8wVHfNzjq2QRHfcNGknqKG7V+kG5ztTef9VDWc2AkqWfASPIhBWYDxcA0dSRpEOT+NTZ0+0gywxPy4GhtTKtWQwdGkhkedzbF0JEkzG4WjbzJ0tj3ZtHI5mbR2LCRpJHig9M4SLe5Tpywjdx9whbU7EcTvRO2QOg93sTskaSgzXIdCY6m3uBo5hscTW2Co5lhI0lTxY3aLEi3udqbz3oomzowkjQ1YCT5kAKzuWJgmjqSNA9y/xpbuH0kmekJeXC0NqZVq4UDI8lMjzubYuhIEmY3i5beZGnle7NoaXOzaGXYSNJS8cFpFaTbXCdO2JbuPmELaPajtd4JWzD0Hm9t9kjS1Ga5jgRHG29wtPUNjjY2wdHWsJGkjeJGbRuk21ztzWc9lG0cGEnaGDCSfEiB+bViYJo6knwd5P41tnP7SDLLE/LgaG1Mq1Y7B0aSWR53NsXQkSTMbhbtvcnSwfdm0d7mZtHBsJGkveKD0yFIt7lOnLDt3X3C5tfsR0e9E7Zp6D3e0eyRpJnNch0Jjk7e4OjsGxydbIKjs2EjSSfFjdo5SLe52pvPeig7OTCSdDJgJPmQArOLYmCaOpJ0CXL/Gru6fST5xhPy4GhtTKtWVwdGkm887myKoSNJmN0sunmTpbvvzaKbzc2iu2EjSTfFB6d7kG5znThhu7n7hM2n2Y8eeidss9B7vIfZI0lzm+U6Ehw9vcHRyzc4etoERy/DRpKeihu1V5Buc7U3n/VQ9nRgJOlpwEjyIQVmb8XANHUk6R3k/jX2cftIMtsT8uBobUyrVh8HRpLZHnc2xdCRJMxuFn29ydLP92bR1+Zm0c+wkaSv4oPTL0i3uU6csH3dfcLm1exHf70TtnnoPd7f7JGkhc1yHQmOAd7gGOgbHANsgmOgYSPJAMWNOjBIt7nam896KAc4MJIMMGAk+ZACc5BiYJo6kgwKcv8aB7t9JJnjCXlwtDamVWuwAyPJHI87m2LoSBJmN4sh3mQZ6nuzGGJzsxhq2EgyRPHBGRqk21wnTtgh7j5h82j2Y5jeCdsi9B4fZvZI0tJmuY4Ex3BvcIzwDY7hNsExwrCRZLjiRh0RpNtc7c1nPZTDHRhJhhswknxIgTlSMTBNHUlGBrl/jaPcPpLM9YQ8OFob06o1yoGRZK7HnU0xdCQJs5vFaG+yjPG9WYy2uVmMMWwkGa344IwJ0m2uEyfsaHefsLk1+zFW74RtGXqPjzV7JGlls1xHgmOcNzjG+wbHOJvgGG/YSDJOcaOOD9Jtrvbmsx7KcQ6MJOMMGEk+pMCcoBiYpo4kE4Lcv8aJbh9J5nlCHhytjWnVmujASDLP486mGDqShNnNYpI3WSb73iwm2dwsJhs2kkxSfHAmB+k214kTdpK7T9hcmv2YonfCtgq9x6cYPZLkzmmzXEeCY6o3OKb5BsdUm+CYZthIMlVxo04L0m2u9uazHsqpDowkUw0YST6kwJyuGJimjiTTg9y/xhluH0nme0IeHK2NadWa4cBIMt/jzqaYOZKE3c1ipjdZZvneLGba3CxmGTaSzFR8cGYF6TbXiRN2prtPWNV+fKMWErlzht7j35g9kgTYLNeR4JjtDY45vsEx2yY45hg2ksxW3KhzgnSbq735rIdytgMjyWwDRpIPKTDnKgamqSPJ3CD3r3Ge20eSBZ6QB0drY1q15jkwkizwuLMpho4kYXazmO9NlgW+N4v5NjeLBYaNJPMVH5wFQbrNdeKEne/uEzanZj++1TthA0Lv8W/NHkly2SzXkeBY6A2ORb7BsdAmOBYZNpIsVNyoi4J0m6u9+ayHcqEDI8lCA0aSDykwFysGpqkjyeIg969xidtHkm89IQ+O1sa0ai1xYCT51uPOphg6koTZzWKpN1mW+d4sltrcLJYZNpIsVXxwlgXpNteJE3apq0/Y5q00+7Fc74TNFXqPLzd7JMlts1xHgmOFNzhW+gbHCpvgWGnYSLJCcaOuDNJtrvbmsx7KFQ6MJCsMGEk+pMD8TjEwTR1Jvgty/xpXuX0kWegJeXC0NqZVa5UDI8lCjzubYuhIEmY3i9XeZFnje7NYbXOzWGPYSLJa8cFZE6TbXCdO2NXuPmFbavbje70TNnfoPf692SNJHpvlOhIca73Bsc43ONbaBMc6w0aStYobdV2QbnO1N5/1UK51YCRZa8BI8iEF5g+KgWnqSPJDkPvXuN7tI8kiT8iDo7UxrVrrHRhJFnnc2RRDR5Iwu1ls8CbLRt+bxQabm8VGw0aSDYoPzsYg3eY6ccJucPcJ20KzHz/qnbB5Qu/xH80eSfLaLNeR4NjkDY7NvsGxySY4Nhs2kmxS3Kibg3Sbq735rIdykwMjySYDRpIPKTC3KAamqSPJliD3r/Ent48kiz0hD47WxrRq/eTASLLY486mGDqShNnNYqs3Wbb53iy22twsthk2kmxVfHC2Bek214kTdqu7T9jmmv3YrnfC5g29x7ebPZLks1muI8GxwxscO32DY4dNcOw0bCTZobhRdwbpNld781kP5Q4HRpIdBowkH1Jg/qwYmKaOJD8HuX+Nv7h9JFniCXlwtDamVesXB0aSJR53NsXQkSTMbha7vMmy2/dmscvmZrHbsJFkl+KDsztIt7lOnLC73H3CNtPsx696J2y+0Hv8V7NHkvw2y3UkOPZ4g2Ovb3DssQmOvYaNJHsUN+reIN3mam8+66Hc48BIsseAkeRDCsx9ioFp6kiyL8j9a9zv9pFkqSfkwdHamFat/Q6MJEs97myKoSNJmN0sDniT5aDvzeKAzc3ioGEjyQHFB+dgkG5znThhD7j7hG2q2Y/f9E7Y/KH3+G9mjyQFbJbrSHB4vMFxyDc4PDbBcciwkcSjuFEPBek2V3vzWQ+lx4GRxGPASPIhBeZhxcA0dSQ5HOT+NR5x+0iyzBPy4GhtTKvWEQdGkmUedzbF0JEkzG4Wgd5kCfK9WQTa3CyCDBtJAhUfnKAg3eY6ccIGuvuELajZj2C9E7ZA6D0ebPZIUtBmuY4Ex1FvcBzzDY6jNsFxzLCR5KjiRj0WpNtc7c1nPZRHHRhJjhowknxIgXlcMTBNHUmOB7l/jb+7fSRZ7gl5cLQ2plXrdwdGkuUedzbF0JEkzG4WJ7zJctL3ZnHC5mZx0rCR5ITig3MySLe5TpywJ9x9whbQ7McpvRO2YOg9fsrskaSpzXIdCY7T3uA44xscp22C44xhI8lpxY16Jki3udqbz3ooTzswkpw2YCT5kALzD8XANHUk+SPI/Ws86/aRZIUn5MHR2phWrbMOjCQrPO5siqEjSZjdLM55k+W8783inM3N4rxhI8k5xQfnfJBuc504Yc+5+4TNr9mPP/VO2Kah9/ifZo8kzWyW60hwXPAGx0Xf4LhgExwXDRtJLihu1ItBus3V3nzWQ3nBgZHkggEjyYcUmJcUA9PUkeRSkPvXeNntI8lKT8iDo7UxrVqXHRhJVnrc2RRDR5Iwu1lc8SbLVd+bxRWbm8VVw0aSK4oPztUg3eY6ccJecfcJm0+zH9f0Tthmoff4NbNHkuY2y3UkOK57g+OGb3BctwmOG4aNJNcVN+qNIN3mam8+66G87sBIct2AkeRDCsybioFp6khyM8j9a7zl9pHkO0/Ig6O1Ma1atxwYSb7zuLMpho4kYXazuO1Nlju+N4vbNjeLO4aNJLcVH5w7QbrNdeKEve3uEzavZj/u6p2wzUPv8btmjyQtbJbrSHDc8wbHfd/guGcTHPcNG0nuKW7U+0G6zdXefNZDec+BkeSeASPJhxSYDxQD09SR5EGQ+9f40O0jySpPyIOjtTGtWg8dGElWedzZFENHkjC7WTzyJstj35vFI5ubxWPDRpJHig/O4yDd5jpxwj5y9wmbR7MfT/RO2Bah9/gTs0eSljbLdSQ4nnqD45lvcDy1CY5nho0kTxU36rMg3eZqbz7roXzqwEjy1ICR5EMKzOeKgWnqSPI8yP1rfOH2kWS1J+TB0dqYVq0XDowkqz3ubIqhI0mY3SxeepPlle/N4qXNzeKVYSPJS8UH51WQbnOdOGFfuvuEza3Zj7/0TtiWoff4X2aPJK1slutIcLz2Bscb3+B4bRMcbwwbSV4rbtQ3QbrN1d581kP52oGR5LUBI8mHFJhvFQPT1JHkrQEjyTu3jyRrPCEPjtbGtGq9c2AkWeNxZ1MMHUnC7Gbx/h/JEhzun28R721uFtZ/KZXPotw8krxXfHCsz67ZXCdO2PfuPmFzafbjo2C1E7ZV6D3+UbDJI0menDbLdSQ4wgeH/B7BNzgswzc4IgSbNZKED9bbqBGCdZurvfmsh/IfPQtd9+9+7vDBeqe43ef+T2D+e5/3Y8XANHUk+TjY/WuMqL1G7ZHke0/Ig6O1Ma1a1ofWHkm+97izKWaOJGF3s4jkvVlE9r1ZRLK5WUQ2bCSJpHiziBys21wnTljr87r4hFXtRxS1kMiTM/Qej2L2SBJgs1xHgiOqNzii+QZHVJvgiGbYSBJVcaNGC9Ztrvbmsx7KqA6MJFENGEk+pMCMrhiYpo4k0YPdv8YYbh9J1npCHhytjWnViuHASLLW486mGDqShNnNIqb3ZhHL92YR0+ZmEcuwkSSm4oMTK1i3uU6csDHdfcLm1OzHJ3onbEDoPf6J2SNJLpvlOhIcsb3BEcc3OGLbBEccw0aS2IobNU6wbnO1N5/1UMZ2YCSJbcBI8iEFZlzFwDR1JIkb7P41fur2kWSdJ+TB0dqYVq1PHRhJ1nnc2RRDR5Iwu1nE894s4vveLOLZ3CziGzaSxFN8cOIH6zbXiRM2nqtP2GatNPuRQO+EzRV6jycweyTJbbNcR4IjoTc4EvkGR0Kb4Ehk2EiSUHGjJgrWba725rMeyoQOjCQJDRhJPqTATKwYmKaOJImD3b/GJG4fSX7whDw4WhvTqpXEgZHkB487m2LoSBJmN4uk3ptFMt+bRVKbm0Uyw0aSpIoPTrJg3eY6ccImdfcJ21KzH8n1Ttjcofd4crNHkjw2y3UkOFJ4gyOlb3CksAmOlIaNJCkUN2rKYN3mam8+66FM4cBIksKAkeRDCsxUioFp6kiSKtj9a0zt9pFkvSfkwdHamFat1A6MJOs97myKoSNJmN0s0nhvFml9bxZpbG4WaQ0bSdIoPjhpg3Wb68QJm8bdJ2wLzX58pnfC5gm9xz8zeyTJa7NcR4IjnTc40vsGRzqb4Ehv2EiSTnGjpg/Wba725rMeynQOjCTpDBhJPqTAzKAYmKaOJBmC3b/GjG4fSTZ4Qh4crY1p1crowEiywePOphg6koTZzSKT92aR2fdmkcnmZpHZsJEkk+KDkzlYt7lOnLCZ3H3CNtfsRxa9EzZv6D2exeyRJJ/Nch0Jjqze4MjmGxxZbYIjm2EjSVbFjZotWLe52pvPeiizOjCSZDVgJPmQAjO7YmCaOpJkD3b/GnO4fSTZ6Al5cLQ2plUrhwMjyUaPO5ti6EgSZjeLnN6bRYDvzSKnzc0iwLCRJKfigxMQrNtcJ07YnO4+YZtp9iOX3gmbL/Qez2X2SJLfZrmOBEdub3Dk8Q2O3DbBkcewkSS34kbNE6zbXO3NZz2UuR0YSXIbMJJ8SIGZVzEwTR1J8ga7f4353D6S/OgJeXC0NqZVK58DI8mPHnc2xdCRJMxuFvm9N4sCvjeL/DY3iwKGjST5FR+cAsG6zXXihM3v7hO2qWY/CuqdsPlD7/GCZo8kBWyW60hwFPIGR2Hf4ChkExyFDRtJCilu1MLBus3V3nzWQ1nIgZGkkAEjyYcUmEUUA9PUkaRIsPvXWNTtI8kmT8iDo7UxrVpFHRhJNnnc2RRDR5Iwu1kU894sivveLIrZ3CyKGzaSFFN8cIoH6zbXiRO2mLtP2IKa/fhc74QtEHqPf272SFLQZrmOBEcJb3CU9A2OEjbBUdKwkaSE4kYtGazbXO3NZz2UJRwYSUoYMJJ8SIFZSjEwTR1JSgW7f42l3T6SbPaEPDhaG9OqVdqBkWSzx51NMXQkCbObRRnvzeIL35tFGZubxReGjSRlFB+cL4J1m+vECVvG3SdsAc1+lNU7YQuG3uNlzR5Jmtos15HgKOcNjvK+wVHOJjjKGzaSlFPcqOWDdZurvfmsh7KcAyNJOQNGkg8pMCsoBqapI0mFYPevsaLbR5ItnpAHR2tjWrUqOjCSbPG4symGjiRhdrOo5L1ZVPa9WVSyuVlUNmwkqaT44FQO1m2uEydsJXefsPk1+/Gl3gnbNPQe/9LskaSZzXIdCY4q3uCo6hscVWyCo6phI0kVxY1aNVi3udqbz3ooqzgwklQxYCT5kAKzmmJgmjqSVAt2/xqru30k+ckT8uBobUyrVnUHRpKfPO5siqEjSZjdLGp4bxY1fW8WNWxuFjUNG0lqKD44NYN1m+vECVvD3SdsPs1+1NI7YZuF3uO1zB5Jmtss15HgqO0Njjq+wVHbJjjqGDaS1FbcqHWCdZurvfmsh7K2AyNJbQNGkg8pMOsqBqapI0ndYPev8Su3jyRbPSEPjtbGtGp95cBIstXjzqYYOpKE2c2invdmUd/3ZlHP5mZR37CRpJ7ig1M/WLe5Tpyw9dx9wubV7EcDvRO2eeg93sDskaSFzXIdCY6G3uBo5BscDW2Co5FhI0lDxY3aKFi3udqbz3ooGzowkjQ0YCT5kAKzsWJgmjqSNA52/xqbuH0k2eYJeXC0NqZVq4kDI8k2jzubYuhIEmY3i6bem0Uz35tFU5ubRTPDRpKmig9Os2Dd5jpxwjZ19wmbR7MfzfVO2Bah93hzs0eSljbLdSQ4WniDo6VvcLSwCY6Who0kLRQ3astg3eZqbz7roWzhwEjSwoCR5EMKzFaKgWnqSNIq2P1rbO32kWS7J+TB0dqYVq3WDowk2z3ubIqhI0mY3SzaeG8WbX1vFm1sbhZtDRtJ2ig+OG2DdZvrxAnbxt0nbG7Nfnytd8K2DL3HvzZ7JGlls1xHgqOdNzja+wZHO5vgaG/YSNJOcaO2D9Ztrvbmsx7Kdg6MJO0MGEk+pMDsoBiYpo4kHYLdv8aObh9JdnhCHhytjWnV6ujASLLD486mGDqShNnNopP3ZtHZ92bRyeZm0dmwkaST4oPTOVi3uU6csJ3cfcLm0uxHF70TtlXoPd7F6JEkb06b5ToSHF29wdHNNzi62gRHN8NGkq6KG7VbsG5ztTef9VB2dWAk6WrASPIhBWZ3xcA0dSTpHuz+NfZw+0iy0xPy4GhtTKtWDwdGkp0edzbFzJEk7G4WPb03i16+N4ueNjeLXoaNJD0VH5xewbrNdeKE7enuE1a1H73VQiJvztB7vLfZI0mAzXIdCY4+3uDo6xscfWyCo69hI0kfxY3aN1i3udqbz3oo+zgwkvQxYCT5kAKzn2JgmjqS9At2/xr7u30k+dkT8uBobUyrVn8HRpKfPe5siqEjSZjdLAZ4bxYDfW8WA2xuFgMNG0kGKD44A4N1m+vECTvA3SdsTs1+DNI7YQNC7/FBZo8kuWyW60hwDPYGxxDf4BhsExxDDBtJBitu1CHBus3V3nzWQznYgZFksAEjyYcUmEMVA9PUkWRosPvXOMztI8kvnpAHR2tjWrWGOTCS/OJxZ1MMHUnC7GYx3HuzGOF7sxhuc7MYYdhIMlzxwRkRrNtcJ07Y4a4+YZu20uzHSL0TNlfoPT7S7JEkt81yHQmOUd7gGO0bHKNsgmO0YSPJKMWNOjpYt7nam896KEc5MJKMMmAk+ZACc4xiYJo6kowJdv8ax7p9JNnlCXlwtDamVWusAyPJLo87m2LoSBJmN4tx3pvFeN+bxTibm8V4w0aScYoPzvhg3eY6ccKOc/cJ21KzHxP0Ttjcoff4BLNHkjw2y3UkOCZ6g2OSb3BMtAmOSYaNJBMVN+qkYN3mam8+66Gc6MBIMtGAkeRDCszJioFp6kgyOdj9a5zi9pFktyfkwdHamFatKQ6MJLs97myKoSNJmN0spnpvFtN8bxZTbW4W0wwbSaYqPjjTgnWb68QJO9XdJ2wLzX5M1zth84Te49PNHkny2izXkeCY4Q2Omb7BMcMmOGYaNpLMUNyoM4N1m6u9+ayHcoYDI8kMA0aSDykwZykGpqkjyaxg96/xG7ePJL96Qh4crY1p1frGgZHkV487m2LoSBJmN4vZ3pvFHN+bxWybm8Ucw0aS2YoPzpxg3eY6ccLOdvcJ21yzH3P1Tti8off4XLNHknw2y3UkOOZ5g2O+b3DMswmO+YaNJPMUN+r8YN3mam8+66Gc58BIMs+AkeRDCswFioFp6kiyINj9a/zW7SPJHk/Ig6O1Ma1a3zowkuzxuLMpho4kYXazWOi9WSzyvVkstLlZLDJsJFmo+OAsCtZtrhMn7EJ3n7DNNPuxWO+EzRd6jy82eyTJb7NcR4JjiTc4lvoGxxKb4Fhq2EiyRHGjLg3Wba725rMeyiUOjCRLDBhJPqTAXKYYmKaOJMuC3b/G5W4fSfZ6Qh4crY1p1VruwEiy1+POphg6koTZzWKF92ax0vdmscLmZrHSsJFkheKDszJYt7lOnLAr3H3CNtXsx3d6J2z+0Hv8O7NHkgI2y3UkOFZ5g2O1b3CssgmO1YaNJKsUN+rqYN3mam8+66Fc5cBIssqAkeRDCsw1ioFp6kiyJtj9a/ze7SPJPk/Ig6O1Ma1a3zswkuzzuLMpho4kYXazWOu9WazzvVmstblZrDNsJFmr+OCsC9ZtrhMn7Fp3n7AFNfvxg94JWyD0Hv/B7JGkoM1yHQmO9d7g2OAbHOttgmODYSPJesWNuiFYt7nam896KNc7MJKsN2Ak+ZACc6NiYJo6kmwMdv8af3T7SLLfE/LgaG1Mq9aPDowk+z3ubIqhI0mY3Sw2eW8Wm31vFptsbhabDRtJNik+OJuDdZvrxAm7yd0nbAHNfmzRO2ELht7jW8weSZraLNeR4PjJGxxbfYPjJ5vg2GrYSPKT4kbdGqzbXO3NZz2UPzkwkvxkwEjyIQXmNsXANHUk2Rbs/jVud/tIcsAT8uBobUyr1nYHRpIDHnc2xdCRJMxuFju8N4udvjeLHTY3i52GjSQ7FB+cncG6zXXihN3h7hM2v2Y/ftY7YZuG3uM/mz2SNLNZriPB8Ys3OHb5BscvNsGxy7CR5BfFjborWLe52pvPeih/cWAk+cWAkeRDCszdioFp6kiyO9j9a/zV7SPJQU/Ig6O1Ma1avzowkhz0uLMpho4kYXaz2OO9Wez1vVnssblZ7DVsJNmj+ODsDdZtrhMn7B53n7D5NPuxT++EbRZ6j+8zeyRpbrNcR4Jjvzc4DvgGx36b4Dhg2EiyX3GjHgjWba725rMeyv0OjCT7DRhJPqTAPKgYmKaOJAeD3b/G39w+kvzmCXlwtDamVes3B0aS3zzubIqhI0mY3Sw83pvFId+bhcfmZnHIsJHEo/jgHArWba4TJ6zH3SdsXs1+HNY7YZuH3uOHzR5JWtgs15HgOOINjkDf4DhiExyBho0kRxQ3amCwbnO1N5/1UB5xYCQ5YsBI8iEFZpBiYJo6kgQFu3+NwW4fSTyekAdHa2NatYIdGEk8Hnc2xdCRJMxuFke9N4tjvjeLozY3i2OGjSRHFR+cY8G6zXXihD3q7hM2j2Y/juudsC1C7/HjZo8kLW2W60hw/O4NjhO+wfG7TXCcMGwk+V1xo54I1m2u9uazHsrfHRhJfjdgJPmQAvOkYmCaOpKcDHb/Gk+5fSQ55Al5cLQ2plXrlAMjySGPO5ti6EgSZjeL096bxRnfm8Vpm5vFGcNGktOKD86ZYN3mOnHCnnb3CZtbsx9/6J2wLUPv8T/MHkla2SzXkeA46w2Oc77BcdYmOM4ZNpKcVdyo54J1m6u9+ayH8qwDI8lZA0aSDykwzysGpqkjyflg96/xT7ePJIc9IQ+O1sa0av3pwEhy2OPOphg6koTZzeKC92Zx0fdmccHmZnHRsJHkguKDczFYt7lOnLAX3H3C5tLsxyW9E7ZV6D1+yeiRJF9Om+U6EhyXvcFxxTc4LtsExxXDRpLLihv1SrBuc7U3n/VQXnZgJLlswEjyIQXmVcXANHUkuRrs/jVec/tIcsQT8uBobUyr1jUHRpIjHnc2xcyRJOxuFte9N4sbvjeL6zY3ixuGjSTXFR+cG8G6zXXihL3u7hNWtR831UIiX87Qe/ym2SNJgM1yHQmOW97guO0bHLdsguO2YSPJLcWNejtYt7nam896KG85MJLcMmAk+ZAC845iYJo6ktwJdv8a77p9JAn0hDw4WhvTqnXXgZEk0OPOphg6koTZzeKe92Zx3/dmcc/mZnHfsJHknuKDcz9Yt7lOnLD33H3C5tTsxwO9EzYg9B5/YPZIkstmuY4Ex0NvcDzyDY6HNsHxyLCR5KHiRn0UrNtc7c1nPZQPHRhJHhowknxIgflYMTBNHUkeB7t/jU/cPpIEeUIeHK2NadV64sBIEuRxZ1MMHUnC7Gbx1HuzeOZ7s3hqc7N4ZthI8lTxwXkWrNtcJ07Yp64+YQu20uzHc70TNlfoPf7c7JEkt81yHQmOF97geOkbHC9sguOlYSPJC8WN+jJYt7nam896KF84MJK8MGAk+ZAC85ViYJo6krwKdv8a/3L7SBLsCXlwtDamVesvB0aSYI87m2LoSBJmN4vX3pvFG9+bxWubm8Ubw0aS14oPzptg3eY6ccK+dvcJ21KzH2/1Ttjcoff4W7NHkjw2y3UkON55g+O9b3C8swmO94aNJO8UN+r7YN3mam8+66F858BI8s6AkeRDCsxwR/UC09SRRO87cG6NH2mvUXskOeoJeXC0NuZ/3TSP6o8kRz3ubEpY3iyKqd0scobZX9wKfzTk9whHw/3zLcL6f6TyWYB2ehdTvEWEP6q3mSMcdaaR2qdqeMUHxdRTRuOhc3qNH2ueMlaixQq1SNpgOf/er39a+N+7XrXIG3q9EY86uOCIisfbPxYfUa+DAZEUk8qp79Bao1Za/eM7jKR8rJv3EBTIE3q9kZ18CCKrPwQF8kRWfAiiGPAQRFF/CArkiaI8cGhfKSJ5P7f2HBPJpXvHCpJo4ezng3DK34HVq+iO/hn5mjpTN39+h+rmcaZu3nwOfb95Hfoecjm03oIO1XXq+3VqvQ71zf6fAKi/XKkcqFcrqmIQWzV0D8icAR3lRVLZQOV3DfLqo6PiC6pOHr1+RHP5heAf/dC+EHRU/A6jO/Cm2YnnuKbicxzD4ec459/5FRCSWdGP6u/HykU/cvR5yfl3fgWE5Gs0Bz73l8qf+x+/Ptb8/PINdFZ8rmMq7nHFfRPgVC+0/3pPrH8alOS/2zRXnnwt8+bM17JAwQItC+ZvlTd/zuZN5d1M/px5mjfL2axZnnw5cwfkbtUsf66czXIVlD+2YMu8zf/rnxv80/f3d2s59f1p53V9xbz+xOV5bZ1NsRzIrSouz2vrHI3pwOeuakhed1HM69iKe1xx3wRUNSSv4yjmdRXFvK5qSF43U8zruC7Pa+tsiuNAblVzeV5b52hsBz53dUPyuqtiXn+quMcV901AdUPyOp5iXldTzOvqhuR1W8W8ju/yvLbOpngO5FYNl+e1dY5+6sDnrmlIXndTzOsEintccd8E1DQkrxMq5nUNxbyuaUhed1bM60Quz2vrbEroQG7VcnleW+doAgc+d21D8rq7Yl4nVtzjivsmoLYheZ1EMa9rKeZ1bUPyupdiXid1eV5bZ1MSB3Krjsvz2jpHEzvwuesaktc9FPM6meIeV9w3AXUNyevkinldRzGv6xqS1wMV8zqFy/PaOpuSO5BbX7k8r61zNJkDn7ueIXndUzGvUyruccV9E1DPkLxOpZjXXynmdT1D8nqEYl6ndnleW2dTKgdyq77L89o6R1M68LkbGJLXvRTzOo3iHlfcNwENDMnrtIp5XV8xrxsYktfjFfP6M5fntXU2pXUgtxq6PK+tczSNA5+7kSF53Vsxr9Mp7nHFfRPQyJC8Tq+Y1w0V87qRIXk9TTGvM7g8r62zKb0DudXY5XltnaPpHPjcTQzJ6z6KeZ1RcY8r7puAJobkdSbFvG6smNdNDMnrOYp5ndnleW2dTZkcyK2mLs9r6xzN6MDnbmZIXvdVzOssintccd8ENDMkr7Mq5nVTxbxuZkheL1LM62wuz2vrbMrqQG41d3leW+doFgc+dwtD8rqfYl5nV9zjivsmoIUheZ1DMa+bK+Z1C0PyeqViXud0eV5bZ1MOB3Krpcvz2jpHszvwuVsZktf9FfM6QHGPK+6bgFaG5HUuxbxuqZjXrQzJ63WKeZ3b5XltnU25HMit1i7Pa+scDXDgc7cxJK8HKOZ1HsU9rrhvAtoYktd5FfO6tWJetzEkrzcr5nU+l+e1dTbldSC32ro8r61zNI8Dn/trQ/J6oGJe51fc44r7JuBrQ/K6gGJet1XM668Nyeudinld0OV5bZ1NBRzIrXYuz2vrHM3vwOdub0heD1LM60KKe1xx3wS0NySvCyvmdTvFvG5vSF7vVczrIi7Pa+tsKuxAbnVweV5b52ghBz53R0PyerBiXhdV3OOK+yagoyF5XUwxrzso5nVHQ/L6kGJeF3d5XltnUzEHcquTy/PaOkeLOvC5OxuS10MU8/pzxT2uuG8COhuS1yUU87qTYl53NiSvjynmdUmX57V1NpVwILe6uDyv/+scdeBzdzUkr4cq5nUpxT2uuG8CuhqS16UV87qLYl53NSSvzyjmdRmX57V1NpV2ILe6uTyvrXO0lAOfu7sheT1MMa+/UNzjivsmoLsheV1WMa+7KeZ1d0Py+qJiXpdzeV5bZ1NZB3Krh8vz2jpHv3Dgc/c0JK+HK+Z1ecU9rrhvAnoaktcVFPO6h2Je9zQkr28o5nVFl+e1dTZVcCC3erk8r61ztLwDn7u3IXk9QjGvKynuccV9E9DbkLyurJjXvRTzurcheX1fMa+/dHleW2dTZQdyq4/L89o6Rys58Ln7GpLXIxXzuoriHlfcNwF9Dcnrqop53Ucxr/saktfPFPO6msvz2jqbqjqQW/1cntfWOVrFgc/d35C8HqWY19UV97jivgnob0he11DM636Ked3fkLx+o5jXNV2e19bZVMOB3Brg8ry2ztHqDnzugYbk9WjFvK6luMcV903AQEPyurZiXg9QzOuBhuR1hCC9WnVcntfW2VTbgdwa5PK8ts7RWg587sGG5PUYxbyuq7jHFfdNwGBD8vorxbwepJjXgw3J62iKeV3P5XltnU1fOZBbQ1ye19Y5WteBzz3UkLweq5jX9RX3uOK+CRhqSF43UMzrIYp5PdSQvI6jmNcNXZ7X1tnUwIHcGubyvLbO0foOfO7hhuT1OMW8bqS4xxX3TcBwQ/K6sWJeD1PM6+GG5HUixbxu4vK8ts6mxg7k1giX57V1jjZy4HOPNCSvxyvmdVPFPa64bwJGGpLXzRTzeoRiXo80JK9TKuZ1c5fntXU2NXMgt0a5PK+tc7SpA597tCF5PUExr1so7nHFfRMw2pC8bqmY16MU83q0IXmdXjGvW7k8r62zqaUDuTXG5XltnaMtHPjcYw3J64mKed1acY8r7puAsYbkdRvFvB6jmNdjDcnrbIp53dbleW2dTW0cyK1xLs9r6xxt7cDnHm9IXk9SzOuvFfe44r4JGG9IXrdTzOtxink93pC8zqOY1+1dntfW2dTOgdya4PK8ts7Rrx343BMNyevJinndQXGPK+6bgImG5HVHxbyeoJjXEw3J68KKed3J5XltnU0dHcitSS7Pa+sc7eDA555sSF5PUczrzop7XHHfBEw2JK+7KOb1JMW8nmxIXpdUzOuuLs9r62zq4kBuTXF5XlvnaGcHPvdUQ/J6qmJed1Pc44r7JmCqIXndXTGvpyjm9VRD8rq8Yl73cHleW2dTdwdya5rL89o6R7s58LmnG5LX0xTzuqfiHlfcNwHTDcnrXop5PU0xr6cbktdVFfO6t8vz2jqbejmQWzNcntfWOdrTgc8905C8nq6Y130U97jivgmYaUhe91XM6xmKeT3TkLyuo5jX/Vye19bZ1NeB3Jrl8ry2ztE+DnzubwzJ6xmKed1fcY8r7puAbwzJ6wGKeT1LMa+/MSSvGynm9UCX57V1Ng1wILdmuzyvrXO0vwOfe44heT1TMa8HKe5xxX0TMMeQvB6smNezFfN6jiF53VIxr4e4PK+ts2mwA7k11+V5bZ2jgxz43PMMyetZink9VHGPK+6bgHmG5PUwxbyeq5jX8wzJ6/aKeT3c5XltnU3DHMit+S7Pa+scHerA515gSF5/o5jXIxT3uOK+CVhgSF6PVMzr+Yp5vcCQvO6mmNejXJ7X1tk00oHc+tbleW2doyMc+NwLDcnr2Yp5PVpxjyvum4CFhuT1GMW8/lYxrxcaktd9FfN6rMvz2jqbxjiQW4tcntfWOTragc+92JC8nqOY1+MU97jivglYbEhej1fM60WKeb3YkLweopjXE1ye19bZNN6B3Fri8ry2ztFxDnzupYbk9VzFvJ6ouMcV903AUkPyepJiXi9RzOulhuT1aMW8nuzyvLbOpkkO5NYyl+e1dY5OdOBzLzckr+cp5vUUxT2uuG8ClhuS11MV83qZYl4vNySvJynm9TSX57V1Nk11ILdWuDyvrXN0igOfe6UheT1fMa+nK+5xxX0TsNKQvJ6hmNcrFPN6pSF5PVMxr2e6PK+ts2mGA7n1ncvz2jpHpzvwuVcZktcLFPN6luIeV9w3AasMyetvFPP6O8W8XmVIXs9XzOvZLs9r62z6xoHcWu3yvLbO0VkOfO41huT1t4p5PUdxjyvum4A1huT1XMW8Xq2Y12sMyeulink9z+V5bZ1Ncx3Ire9dntfWOTrHgc+91pC8XqiY1/MV97jivglYa0heL1DM6+8V83qtIXm9WjGvv3V5Xltn0wIHcmudy/PaOkfnO/C5fzAkrxcp5vVCxT2uuG8CfjAkrxcp5vU6xbz+wZC83qCY14tdntfW2bTIgdxa7/K8ts7RhQ587g2G5PVixbxeorjHFfdNwAZD8nqpYl6vV8zrDYbk9VbFvF7m8ry2zqalDuTWRpfntXWOLnHgc/9oSF4vUczr5Yp7XHHfBPxoSF6vUMzrjYp5/aMheb1LMa9XujyvrbNphQO5tcnleW2do8sd+NybDcnrpYp5/Z3iHlfcNwGbDcnrVYp5vUkxrzcbktcHFPN6tcvz2jqbVjmQW1tcntfWOfqdA5/7J0PyepliXq9R3OOK+ybgJ0Py+nvFvN6imNc/GZLXgYp5vdbleW2dTd87kFtbXZ7X1jm6xoHPvc2QvF6umNfrFPe44r4J2GZIXv+gmNdbFfN6myF5fUIxr9e7PK+ts+kHB3Jru8vz2jpH1znwuXcYktcrFPN6g+IeV9w3ATsMyeuNinm9XTGvdxiS1+cU8/pHl+e1dTZtdCC3dro8r61zdIMDn/tnQ/J6pWJeb1Lc44r7JuBnQ/J6s2Je71TM658Nyesrinm9xeV5bZ1Nmx3IrV9cntfWObrJgc+9y5C8/k4xr39S3OOK+yZglyF5vVUxr39RzOtdhuT1bcW83ubyvLbOpq0O5NZul+e1dY7+5MDn/tWQvF6lmNfbFfe44r4J+NWQvN6hmNe7FfP6V0Py+pFiXu90eV5bZ9MOB3Jrj8vz2jpHtzvwufcakterFfP6Z8U9rrhvAvYakte/KOb1HsW83mtIXr9UzOtdLs9r62z6xYHc2ufyvLbO0Z8d+Nz7DcnrNYp5vVtxjyvum4D9huT1r4p5vU8xr/cbktfvFfN6j8vz2jqbfnUgtw64PK+tc3S3A5/7oCF5/b1iXu9V3OOK+ybgoCF5vU8xrw8o5vVBQ/I6UrDifcvleW2dTfscyK3fXJ7X1jm614HP7TEkr9cq5vUBxT2uuG8CPIbk9UHFvP5NMa89huR1TMW8/s3leW2dTQcdyK1DLs9r6xw94MDnPmxIXq9TzGuP4h5X3DcBhw3J60OKeX1IMa8PG5LX8RTz+rDL89o6mw45kFtHXJ7X1jnqceBzBxqS1z8o5vURxT2uuG8CAg3J60DFvD6imNeBhuR1UsW8DnJ5XltnU6ADuRXk8ry2ztEjDnzuYEPyer1iXgcr7nHFfRMQbEheH1XM6yDFvA42JK/TKOb1MZfntXU2HXUgt466PK+tczTYgc99zJC83qCY18cV97jivgk4Zkhe/66Y10cV8/qYIXmdSTGvT7g8r62z6XcHcuu4y/PaOkePO/C5fzckrzcq5vVJxT2uuG8Cfjckr08p5vVxxbz+3ZC8zqmY16ddntfW2XTKgdw64fK8ts7Rkw587pOG5PWPinl9RnGPK+6bgJOG5PUfinl9QjGvTxqS1/kV8/qsy/PaOpv+cCC3Trk8r61z9IwDn/u0IXm9STGvzynuccV9E3DakLw+r5jXpxTz+rQheV1MMa//dHleW2fTeQdy64zL89o6R8858Ln/MCSvNyvm9QXFPa64bwL+MCSvLyrm9RnFvP7DkLwuo5jXl1ye19bZdNGB3Drr8ry2ztELDnzuc4bk9RbFvL6suMcV903AOUPy+opiXp9VzOtzhuR1JcW8vuryvLbOpisO5NZ5l+e1dY5eduBz/2lIXv+kmNfXFPe44r4J+NOQvL6umNfnFfP6T0PyuoZiXt9weV5bZ9N1B3Lrgsvz2jpHrznwuS8aktdbFfP6puIeV9w3ARcNyetbinl9QTGvLxqS1/UU8/q2y/PaOptuOZBbl1ye19Y5etOBz33ZkLzeppjXdxT3uOK+CbhsSF7fVczrS4p5fdmQvG6qmNf3XJ7X1tl014HcuuLyvLbO0TsOfO6rhuT1dsW8vq+4xxX3TcBVQ/L6gWJeX1HM66uG5HUbxbx+6PK8ts6mBw7k1jWX57V1jt534HNfNySvdyjm9SPFPa64bwKuG5LXjxXz+ppiXl83JK87Keb1E5fntXU2PXYgt264PK+tc/SRA5/7piF5vVMxr58q7nHFfRNw05C8fqaY1zcU8/qmIXndUzGvn7s8r62z6ZkDuXXL5XltnaNPHfjctw3J658V8/qF4h5X3DcBtw3J65eKeX1LMa9vG5LXAxTz+pXL89o6m146kFt3XJ7X1jn6woHPfdeQvP5FMa//Utzjivsm4K4hef1aMa/vKOb1XUPyerhiXr9xeV5bZ9NrB3Lrnsvz2jpH/3Lgc983JK93Keb1W8U9rrhvAu4bktfvFPP6nmJe3zckr8cp5vV7l+e1dTa9cyC3Hrg8r61z9K0Dn/uhIXm9WzGvwx3TW5fivgl4aEhef3RML68fKOb1Q0PyeqpiXoc/5u68ts4ma79o59Yjl+e1dY6Gc+BzPzYkr39VzOsIintccd8EPDYkrz9WzOtHinn92JC8nq2Y1xFdntfW2fSxA7n1xOV5bZ2jERz43E8Nyes9inkdSXGPK+6bgKeG5HVkxbx+opjXTw3J64WKeR3F5XltnU2RHcitZy7Pa+scjeTA535uSF7vVczrqIp7XHHfBDw3JK+jKeb1M8W8fm5IXq9QzOvoLs9r62yK5kBuvXB5XlvnaFQHPvdLQ/J6n2Jex1Dc44r7JuClIXkdUzGvXyjm9UtD8nqtYl7HcnleW2dTTAdy65XL89o6R2M48Ln/MiSv9yvm9SeKe1xx3wT8ZUhex1bM61eKef2XIXm9STGv47g8r62zKbYDufXa5XltnaOfOPC53xiS1wcU8zqu4h5X3DcBbwzJ608V8/q1Yl6/MSSvdyjmdTyX57V1Nn3qQG69dXleW+doXAc+9ztD8vqgYl7HV9zjivsm4J0heZ1AMa/fKub1O0Pyeo9iXid0eV5bZ1MCB3Lrvcvz2jpH4zvwucMVMyOvf1PM60SKe1xx3wQ41QvtvE6smNfvFfPaqe9PO689inmdxOV5bZ1NiR3IrY+KuTuvrXM0kQOfO7whee1RzOukintccd8EhDckr5Mp5nXo7+/v1gpvSF4fVczr5C7Pa+tsSuZAbkVweV5b52hSBz73x4bk9SHFvE6huMcV903Ax4bkdUrFvI6gmNcfG5LXpxXzOpXL89o6m1I6kFsRXZ7X1jmawoHPHcmQvD6smNepFfe44r4JiGRIXqdRzOuIinkdyZC8vqCY12ldntfW2ZTGgdyK7PK8ts7R1A587iiG5PURxbz+THGPK+6bgCiG5HU6xbyOrJjXUQzJ6+uKeZ3e5XltnU3pHMitqC7Pa+sc/cyBzx3NkLwOVMzrDIp7XHHfBEQzJK8zKuZ1VMW8jmZIXt9TzOtMLs9r62zK6EBuRXd5XlvnaAYHPncMQ/I6SDGvMyvuccV9ExDDkLzOopjX0RXzOoYhef1UMa+zujyvrbMpiwO5FdPleW2do5kd+NyxDMnrYMW8zqa4xxX3TUAsQ/I6u2Jex1TM61iG5PVrxbzO4fK8ts6m7A7k1icuz2vrHM3mwOeObUheH1XM65yKe1xx3wTENiSvAxTz+hPFvNb8/qz9Gz3Uc2z98s3tnH/vV4CV2wGKe9HKbmtvh9NdZ87wob6DXN76uY95v5wI3t8tY7DP/y+39/9n0penfTjnOvYv12r+P9QKyK33ef9rg8cI1Re7X//qn/U/rTt0TdWDUWrnUvxOQj/seXw3eJ5j/5wG4cLpJ+u/8WEC/qcPk+eY3rryHlPbDDlDf6d5QwWEU99pbsXvQfM7zfdvfKf/058V+jvN5/1O7U6wf/zSfggrRXLmtMnvPW0K+D6M+W1OmwL/wmbK+fd+/dMH/bsbIL/iyVDgPyeD76+A/A6dDAV9N2PBMDgZ8iueDAUVU6yQQydDoTA4GQoofg+a32lhh06GwqFCM0qo79P6v++L3nn/84NQ//mh9/fwof671i3lH35u738uIr8XFRU7Zl//Uaiaj0P95yc29fOHql/A+5+LW9+JqMQx3hM5/96vgCKKfSyuWKukcsDHChc2N4OSDoVwqWMOLrjUMf26pRU3g1Ofu7QDLw/Chfql/bAWVfxOP1esVcbQh7WMQw/rF8ccXPAXDjysZV3+sFqfu6xhD2uRY+4M03LKmz6qt9/lQt1iiob6z1GLh/xuqXio///nNv+d8vL/qyCq6N3j/6hdxE/tf9y+/pX/TiX5vbLoy2POPJulvXtU+59YVTmmu9+11+fU566q/E9m//FL+4V3McVns5ryZ9b+hxDW86nZF+uZrOLA3qmu/Mxof48VlL/Hyg59jzWOOXPWaj+DJRSfwZoufwatvCmuuEYrc6o7sHdqufwZLOZ9w6L5PdZw4Husbcj5r90fzTtvHYe/w5x/79d/7Z2aDuydui7/3FZf6jrwub9y+ecu5n2zq/2567k8K6y+WGvUnrUV+x1QTzF36jt0f9L+J0PPFXtRX/H7a2Doi0XNdYdeb8NjDi64oQMvFhu5/MWi9bkbHfv/v2Cluo5cWIt4Dw2tetaFo9YxB/51KsVajQ0NgMYOBUCTYw4uuIkDAdDU5QFgfe6mhgRAUQcCoLYDAfBMsVYzQwOgmUMB0PyYgwtu7kAAtHB5AFifu4VDAeDEbaqpA2NjS5ePy9Z4Ut+Bz93K5Z/b2pctHfjcrV3+msDqS2sHXikq9jugtWKuWd/fP/4FwtoRQ35/IXopeiX6S/Ra9Eb0NlzIP9p+7/3iPxKFF0UQfSyKKIokiiyKIooqiiaKLoohiimKJfpEFFsURxRX9Kkonii+KIEooSiRKLEoiSipKJkouSiFKKUolSi1KI0oregzUTpRelEGUUZRJlFmURZRVlE2UXZRDpH1wQNEuUS5RXlEeUX5RPlFBUQFRYVEhUVFREVFxUTFRZ+LSohKikqJSovKiL4QlRWVE5UXVRBVFFUSVRZ9KaoiqiqqJqouqiGqKaolqi2qI6or+kpUT1Rf1EDUUNRI1FjURNRU1EzUXGT97dOWolai1qI2orair0XtRO1FHUQdRZ1EnUVdRF1F3UTdRT1EPUW9RL1FfUR9Rf1E/UUDRANFg0SDRUNEQ0XDRMNFI0QjRaNEo0VjRGNF40TjRRNEE0WTRJNFU0RTRdNE00UzRDNFs0TfiGaL5ojmiuaJ5osWiL4VLRQtEi0WLREtFS0TLRetEK0UfSdaJVotWiP6XrRWtE70g2i9aINoo+hH0SbRZtEW0U+iraJtou2iHaKdop9Fv4h2iXaLfhXtEe0V7RPtFx0QHRT9JvKIDokOi46IAkVBomDRUdEx0XHR76ITopOiU6LTojOiP0RnRedE50V/ii6ILoouiS6Lroiuiq6JrotuiG6Kbolui+6I7oruie6LHogeih6JHoueiJ6Knomei16IXopeif4SvRa9Eb0VvRO9F1kB+ZEovCiC6GNRRFEkUWRRFFFUUTRRdFEMUUxRLNEnotiiOKK4ok9F8UTxRQlECUWJRIlFSURJRclEyUUpRClFqUSpRWlEaUWfidKJ0osyiDKKMokyi7KIsoqyibKLcoisf/clQJRLlFuUR5RXlE+UX1RAVFBUSFRYVERUVFRMVFz0uaiEqKSolKi0qIzoC1FZUTlReVEFUUVRJVFl0ZeiKqKqomqi6qIaopqiWqLaojqiuqKvRPVE9UUNRA1FjUSNRU1ETUXNRM1FLUQtRa1ErUVtRG1FX4vaidqLOog6ijqJOou6iLqKuom6i3qIeop6iXqL+oj6ivqJ+osGiAaKBokGi4aIhoqGiYaLRohGikaJRovGiMaKxonGiyaIJoomiSaLpoimiqaJpotmiGaKZom+Ec0WzRHNFc0TzRctEH0rWihaJFosWiJaKlomWi5aIVop+k60SrRatEb0vWitaJ3oB9F60QbRRtGPok2izaItop9EW0XbRNtFO0Q7RT+LfhHtEu0W/SraI9or2ifaLzogOij6TeQRHRIdFh0RBYqCRMGio6JjouOi30UnRCdFp0SnRWdEf4jOis6Jzov+FF0QXRRdEl0WXRFdFV0TXRfdEN0U3RLdFt0R3RXdE90XPRA9FD0SPRY9ET0VPRM9F70QvRS9Ev0lei16I3oreid6L7L+OcBHovCiCKKPRRFFkUSRRVFEUUXRRNFFMUQxRbFEn4hii+KI4oo+FcUTxRclECUUJRIlFiURJRUlEyUXpRClFKUSpRalEaUVfSZKJ0ovyiDKKMokyizKIsoqyibKLsohyikKEOUS5RblEeUV5RPlFxUQFRQVEhUWFREVFRUTFRd9LiohKikqJSotKiP6QlRWVE5UXlRBVFFUSVRZ9KWoiqiqqJqouqiGqKaolqi2qI6orugrUT1RfVEDUUNRI1FjURNRU1EzUXNRC1FLUStRa1EbUVvR16J2ovaiDqKOok6izqIuoq6ibqLuoh6inqJeot6iPqK+on6i/qIBooGiQaLBoiGioaJhouGiEaKRolGi0aIxorGicaLxogmiiaJJosmiKaKpommi6aIZopmiWaJvRLNFc0RzRfNE80ULRN+KFooWiRaLloiWipaJlotWiFaKvhOtEq0WrRF9L1orWif6QbRetEG0UfSjaJNos2iL6CfRVtE20XbRDtFO0c+iX0S7RLtFv4r2iPaK9on2iw6IDop+E3lEh0SHRUdEgaIgUbDoqOiY6Ljod9EJ0UnRKdFp0RnRH6KzonOi86I/RRdEF0WXRJdFV0RXRddE10U3RDdFt0S3RXdEd0X3RPdFD0QPRY9Ej0VPRE9Fz0TPRS9EL0WvRH+JXoveiN6K3oneRwgZGj4ShRdFEH0siiiKJIosiiKKKoomii6KIYopiiX6RBRbFEcUV/SpKJ4oviiBKKEokSixKIkoqSiZKLkohSilKJUotSiNKK3oM1E6UXpRBlFGUSZRZlEWUVZRNlF2UQ6R9UYuQJRLlFuUR5RXlE+UX1RAVFBUSFRYVERUVFRMVFz0uaiEqKSolKi0qIzoC1FZUTlReVEFUUVRJVFl0ZeiKqKqomqi6qIaopqiWqLaojqiuqKvRPVE9UUNRA1FjUSNRU1ETUXNRM1FLUQtRa1ErUVtRG1FX4vaidqLOog6ijqJOou6iLqKuom6i3qIeop6iXqL+oj6ivqJ+osGiAaKBokGi4aIhoqGiYaLRohGikaJRovGiMaKxonGiyaIJoomiSaLpoimiqaJpotmiGaKZom+Ec0WzRHNFc0TzRctEH0rWihaJFosWiJaKlomWi5aIVop+k60SrRatEb0vWitaJ3oB9F60QbRRtGPok2izaItop9EW0XbRNtFO0Q7RT+LfhHtEu0W/SraI9or2ifaLzogOij6TeQRHRIdFh0RBYqCRMGio6JjouOi30UnRCdFp0SnRWdEf4jOis6Jzov+FF0QXRRdEl0WXRFdFV0TXRfdEN0U3RLdFt0R3RXdE90XPRA9FD0SPRY9ET0VPRM9F70QvRS9Ev0lei16I3oreid6Lwon7wo+EoUXRRB9LIooiiSKLIoiiiqKJoouiiGKKYol+kQUWxRHFFf0qSieKL4ogSihKJEosSiJKKkomSi5KIUopSiVKLUojSit6DNROlF6UQZRRlEmUWZRFlFWUTZRdlEOUU5RgCiXKLcojyivKJ8ov6iAqKCokKiwqIioqKiYqLjoc1EJUUlRKVFpURnRF6KyonKi8qIKooqiSqLKoi9FVURVRdVE1UU1RDVFtSKGvIOpI6or+kpUT1Rf1EDUUNRI1FjURNRU1EzUXNRC1FLUStRa1EbUVvS1qJ2ovaiDqKOok6izqIuoq6ibqLuoh6inqJeot6iPqK+on6i/aIBooGiQaLBoiGioaJhouGiEaKRolGi0aIxorGicaLxogmiiaJJosmiKaKpommi6aIZopmiW6BvRbNEc0VzRPNF80QLRt6KFokWixaIloqWiZaLlohWilaLvRKtEq0VrRN+L1orWiX4QrRdtEG0U/SjaJNos2iL6SbRVtE20XbRDtFP0s+gX0S7RbtGvoj2ivaJ9ov2iA6KDot9EHtEh0WHREVGgKEgULDoqOiY6LvpddEJ0UnRKdFp0RvSH6KzonOi86E/RBdFF0SXRZdEV0VXRNdF10Q3RTdEt0W3RHdFd0T3RfdED0UPRI9Fj0RPRU9Ez0XPRC9FL0SvRX6LXojeit6J3oveicJHk+ReFF0UQfSyKKIokiiyKIooqiiaKLoohiimKJfpEFFsURxRX9Kkonii+KIEooSiRKLEoiSipKJkouSiFKKUolSi1KI0oregzUTpRelEGUUZRJlFmURZRVlE2UXZRDlFOUYAolyi3KI8oryifKL+ogKigqJCosKiIqKiomKi49ZMpRCVEJUWlRKVFZURfiMqKyonKiyqIKoqsn2bxItz//8v7CiWc9yoVzvuVhoscLuRf6Lb+9aNo4UJ+rIj1EyJihgv5B4ifiGKL4ojiij4VxRPFFyUQJRQlEiUWJRElFSUTJRelEKUUpRKlFqURpRV9JkonSi/KIMooyiTKLMoiyirKJsouymG9vxZZf788l/X+WZRHlFeUT5RfVEBUUFRIVFhURFRUVExU3PtOvYSopKiUqLSojOgLUVlROVF5UQVRRVElUWXRl6IqoqqiaqLqohqimqJa1vtrUR1RXdFXonqi+qIGooaiRqLGoiaipqJmouaiFqKWolai1qI2orair0XtRO1FHUQdRZ1EnUVdRF1F3UTdRT1EPUW9RL1FfUR9Rf1E/UUDRANFg8KF/GCAIaKhomGi4aIRopGiUaLRojGisaJxovGiCaKJokmiyaIpoqmiaaLpohmimaJZom9Es0VzRHNF80TzRQtE34oWihaJFouWiJaKlomWi1aIVoq+E60SrRatEX0vWitaJ/pBtF60QbRR9KNok2izaIvoJ9FW0TbRdtEO0U7Rz6JfRLtEu0W/ivaI9or2ifaLDogOin4TeUSHRIdFR0SBoiBRsOioyPpHp8dFv4tOiE6KTolOi86I/hCdFZ0TnRf9Kboguii6JLosuiK6Kromui66IbopuiW6Lbojuiu6Fy7kBzdYP7DB+kEN1g9ZeBwu5IcqWH/ryPqLB9Y/K/zHr4rZ/v//bGWA9eveb4sXHujf8W2o/1q4r73eoelB+1eObtoitNfZ68W/WiJxF8+KMqG9rsD1Bq4/eIOg5gjgxoE3BWrOAm4+eAuh5nLg1oC3DmpuAm47eD9Dzb3AecAL9nrhw8WOVW9vu32hvRvw592Dmk/Aew413wAXPrJ/L2Jk/zWjAxcHvHhQMwlwqcBL7/XsvuuswGWHteQBrhB4RaFmKeDKg1cJalYHri549aFmU+Bag9cB+tATuD6wlkHAjQBvNNScCNx08GZBzfnALQFvOdRcA9wG8LZBH34Fbh+s5RBwR8H7HWr+AdxF8K5AzVvAPQDvMdR8Cdw78CJFCfndrg+xovjn4kTxv5aEwCUHLxXUTA9cVvByQM28wBUGrxjULA1cBfCqQx/qAdcQ1tIcuLbgtYeaXYHrDV4/qDkEuFHgjYWak4GbCd4C6MNy4L6DtawDbhN4P0HNn4HbC94BqHkEuOPgnYSa54C7DN5t6MNj4J7BWl4D91FU/97HUf3XjAZcbPA+hZqJgUsJXhqomRG47ODl83p2fSgGXAlYS1ngKoNXFWrWBq4BeI2hZkvg2oHXEWp2B64veEOhD2OBmwBrmQbcbPDmQc3FwK0EbzXUXA/cFvC2Qc1dwO0HLxD6cBK4M7CWC8BdA+8m1LwP3FPwXkDNt8BFiObfixTNf80YwMUFL4nXs+tDGuDSwVqyABcAXh6oWQi4z8ErBTXLA1cFvOpQsy5wjcBrBX3oCFwXWEsv4AaANxhqjgRuPHiToOYM4OaCtwBqLgVuFXgboA/bgNsJa9kD3G/gHYaax4A7Dd5ZqHkJuBvg3YaaD4F7Dt476EOk6P65KNH9ryUHeHmhZn7gigJXArzSULMCcFXBqwM1GwLXHLxWULM9cF3B6wE1+wE3BLzhUHMscJPBm+n17PbgGvjzNkDNn8DbDjV3A3cAPA/UDAbuJHhnoOYF4K6Bdwe+60fAPYG1vALuPXjhY/ivGSWGfy4WeHGgZkLgkoOXCmqmBy4reLm8nl0fCgNXDNZSGrgK4FWGmjWA+wq8BlCzGXBtwGsHNbsA1wu8QdCHUcCNhbVMBm4meLOh5rfALQNvJdRcC9yP4G2BmjuB2wPeIejDceBOwlrOAXcZvGtQ8w5wj8B7CjX/Au6//vKTHy9CTP81owL3CXgJvZ5dH1IClwbWkhG47OAFQM38wBUF73Oo+QVwlcCrAjVrAVcfvObQh3bAdYS1dAeuL3gDoOYw4MaANx5qTgXuG/DmQs1FwK0Abx30YQtw22Atu4DbD95vUDMIuBPgnYaafwJ3FbwbUPMecE/Aew19iBDLPxcplv+1xAAuLnjxoWZS4FKD9xnUzAxcTvByQ82CwBUHr6zXs+tDFeCqw1rqAtcIvKZQszVwHcDrDDV7AtcfvEFQcwRw48CbBn2YC9wCWMtS4FaB9z3U3AjcVvB2QM1fgTsI3iGoeRS4U+BdgD7cAO42rOUhcM/BewU13wMX8RP/XpRP/NeMBVw88BJCzeTApQUvi9ez60Nu4PLBWooAVxK8MlCzInDVwKsJNesB1wS85lCzLXCdwOsFfRgE3FBYy2jgJoI3BWrOAm4+eAuh5nLg1oC3DmpuAm47eHugD4eAOwJreQXee6j5UWz/XOTY/rno4MWCmvGASwJeaqiZAbhs4OWEmvmAKwJecahZBriK4H0JNWsCVw+8Jl7P9u8uw5/XH2oOBW8E1BwH3BTwpkPNOcAtBG8J1PwOuHXgbYLvejtwO2Ete4D7DbzDUPMYcKfBOws1LwF3A7zbUPMhcM/BewN9iBjHPxcljv+1xAIuHngJoWZy4NKClx5qZgUuF3h5oWZh4EqAV97r2fWhGnA1YS31gGsCXnOo2Ra4TuB1hZq9gRsI3hCoOQq4CeDNgD7MB24hrGU5cGvAWwc1NwG3HbyfoeZe4DzgHYGax4E7A94l6MMt4O7CWh4D9xK811Dzo7j+ucjgRYvrv2Zs4BKAlxhqpgQuHXjZvJ5dH/ICVwDWUgy40uCVhZqVgasBXm2o2QC4ZuC1hJrtgOsCXh/owxDghsNaxgI3GbxpUHM2cN+CtxhqrgRuLXjroeYW4HaCtw/6cAS4YFjLSeDOgXcBal4D7g5496HmU+D+Au8t1IzwqX8uKnhxvJ5dHxIDl+xT/2tJA1xG8LJAzQDg8oNXCGp+DtwX4JWHmlWAqwVeQ+hDS+DawFo6AtcdvF5QcwBww8AbCTXHAzcVvBlQcy5wi8D7DvqwHrgfYS3bgNsF3h6o+RtwQeAdg5qngfsTvEtQ8wZw98B7Bn14C9x//WAgP2uJFM8/FwO8T6BmfOCSgpcCan4GXGbwskHN3MAVBK+E17PrQ3ngKsFaqgNXF7z6ULMpcK3B+xpqdgauJ3h9oOYg4EaANwH6MAO4WbCWX8E7CDU9wAUD9zt4p6DmeeCugHcbaj4E7jl4r6Dme+AixvfvRYnvv2Ys4OKBlxBqJgcuLXiZvJ7dHiwOf14ZqFkRvC+hZk3g6oHXEGo2B64teO2hZlfgeoM3EL7r4cCNhLWMB24qeDOg5lzgFoG3FGquAu4H8DZCza3A/QLePuhDIHBHYS2ngDsP3kWoeR24u+A9gJrPgHsN3juo+XEC/1w08OJ6Pbs+JAEueQL/a0kLXCbwskLNXMAVAK8w1CwBXFnwKkDNqsDVBq8R9KEVcG1hLZ2A6wFeb6g5ELjh4I2CmhOAmwbeTKg5D7jF4K2CPmwAbhOsZTtwu8HbCzU9wAWDdxxqngHuAniXoeZN4O6D9xz68A64jxL6X0vkhP65mODFhpoJgEsGXkqomQ64LOBlh5p5gCsEXkmvZ9eHCsBVhrXUAO4r8BpAzWbAtQGvHdTsAlwv8PpCzcHAjQRvIvRhJnCzYS3fArcMvJVQcy1wP4K3BWruBG4PePuh5mHgjoH3B/ThMnDXYC13gHsE3lOo+Rdw//VDvf14ERL5rxkVuE/Aiws1EwGXArz0Xs+uD9mBC4C15AeuKHifQ80vgKsEXhWoWQu4+uA1gpotgPsavK7Qh77ADYC1DANuDHjjoeZU4L4Bby7UXATcCvBWQc0fgNsM3s/Qh/3A/QZrCQLuBHinoeafwF0F7wbUvAfcE/CeQ803wIVP7N+L5vXs+hAXuPiJ/a8lKXCpwfsMamYGLid4uaFmQeCKg1cSapYD7kvwakMfGgHXBNYyDrwpUHMacLOBmw/eQqi5HLg14G2EmluB+wW8X6HmQeACwTsKNU8Bdx68i1DzOnB3wXsMezBKEv9/Xqwk/mvGAy8h1EwOXFrw0kPNrMDlAi8v1CwMXAnwyno9u++6MnBVYC21gKsPXiOo2QK4r8HrADW7AdcHvP5Qcyhwo8GbCH2YBdwcWMtC4JaD9x3UXAfcJvB+gpo/A7cXvANQ8whwx8E7C324Atx1WMtd4B6D9wxqvgbuo6T+vY+T+q8ZDbjY4H0KNRMDlxK8DF7Prg85gMsFaykAXDHwSkDNssBVBq8q1KwNXAPwGkPNlsC1A68b9KEfcANhLcOBGwveBKg5DbjZ4M2DmouBWwneaqi5Hrgt4P0CfTgAnAfWEgzcSfDOQM0LwF0D7ybUvA/cU/BeQM23wEVI5t+L7vXs+vApcAmS+V9LMuDSgJcOamYBLgC8PFCzEHCfg1cKapYHrgp4daAPjYFrBmtpA1xH8LpAzV7ADQBvMNQcCdx48CZBzRnAzQVvCfRhNXBrYS0/ArcNvJ1Qcw9wv4F3GGoeA+40eGeh5iXgboD3APrwAri/YC3/9T9Y6oeLBF7U5P5rfgJcfPASQc0UwH0GXgaomQ243OAV9np2fSgF3BewlkrAVQevFtSsD1xT8FpAza+B6wxeN6jZB7hB4I2CPkwCbiqs5RvgFoC3CGquAO578H6AmpuB2wHeL1BzH3CHwDsOfTgL3J+wlqvA3QbvHtR8Atwr8N5AzfAp/HNRwIuewn/NOMAlBC+l17PrQwbgMsFaaoJXD2o2AK4ZcK3Aaws1OwHXA7z+UHMocKPBGwc1pwA3C7w5UHMhcMvB+w5qrgNuE3jbYQ8ehT/vFNQ8D95FqHkduLvgPYCaz4B7Dd47qPlxSv9cNPBiez277zoBcIlS+l9LCuA+Ay8D1MwGXG7w8kHNIsCVBK8M1KwIXDXw6kAfmgDXHNbSFrhO4HWFmr2BGwjeEKg5CrgJ4E2GmjOBmwfeUujDGuDWwVo2AbcdvJ+h5l7gPOAdgZrHgTsD3jmoeRm4m+A9hD68BO41rOWjVP65yOBFS+W/ZmzgEoCXGGqmBC4deBmhZnbg8oBXxOvZ9aE0cGVhLZWBqwFebajZALhm4LWEmu2A6wJed6jZF7jB4I32enZ9mAzcNFjLbOC+BW8x1FwJ3Frw1kPNLcDtBG8X1NwP3GHwfvd6dn04B9wFWMs14O6Adx9qPgXuL/DeQs0Iqf1zUcGLkdp/zbjAJQIvldez60NG4LLAWgKAyw9eIaj5OXBfgFcealYBrhZ4daFmI+BagNce+tAduF6wlgHADQNvJNQcD9xU8GZAzbnALQJvKdRcBdwP4P0EfdgF3B5Yy2/ABYF3DGqeBu5P8C5BzRvA3QPvIdR8Dtwb8D5OE/K7XR9ipPHPfZLG/1riA5cUvBRQ8zPgMoOXDWrmBq4geEWgZkngyoFXFfpQF7j6sJamwLUG72uo2Rm4nuD1gZqDgBsB3mioORG46eDNgz4sBW4FrOV74DaCtxlq7gDuV/D2Qc1DwB0F73eo+QdwF8G7CX14CNxjWEvytP69tGn910wHXBbgcoCXC2oWAK4YeGWgZkXgqoFXE2rWA64JeM2hZlvgOoHXFWr2Bm4geMO9nt0enAN/3kKouRy876DmOuA2gfcT1PwZuL3gHYCaR4A7Dt4Z+K4vAHcJ1nIDuHvgPYSaz4F7A957qBnxM/9cdPBifea/ZjzgkoCXyuvZ9SETcFlhLbmAKwBeYahZAriy4FWAmlWBqw3eV1CzMXAtwesAfegBXG9Yy0DghoM3CmpOAG4aeDOh5jzgFoO3DGquBm49eFuhD7uB2wtr8QAXDN5xqHkGuAvgXYaaN4G7D94jqPkCuLfgRUwX8rtdH2Km88/FTud/LQmASwZeSqiZDrgs4GWHmnmAKwReUahZCrjy4FWDPnwFXANYSzPg2oDXDmp2Aa4XeH2h5mDgRoI3BmpOAm4GePOhD8uAWwlrWQvcj+BtgZo7gdsD3n6oeRi4Y+CdgJpngbsE3i3owyPgnsJa/gIuXHr/XoT0/mtGBe4T8OJCzUTApQAvNdTMAFw28PJ6Pbs+FAXuc1jLF8BVAq8K1KwFXH3wGkHNFsB9DV4HqNkNuD7gDYE+jAFuPKxlKnDfgDcXai4CbgV4q6DmD8BtBm8r1PwFuH3gHYE+nADuNKzlT+CugncDat4D7gl4z6HmG+DCZ/DvRczgv2Z04OKAl9jr2fUhNXCfwVoyA5cTvNxQsyBwxcErCTXLAfcleNWgZh3gGoLXEvrQAbjOsJaewPUHbxDUHAHcOPAmQs3pwM0Bbz7UXALcd+Cthz5sBW47rOU6eHeh5n3gngL3ErzXUPOjjP65yODFyui/ZjzgkoCXHGqmBS4TeFmhZi7gCoBXGGqWAK4seJW9nt0ebA5/Xluo2Qm8rlCzN3ADwRsCNUcBNwG8yVBzJnDzwFsM3/VK4FbBWn4AbjN4W6HmL8DtA+8g1AwE7nfwTkHN88BdAe8W9OExcM9gLa+B+yiTf+/jTP5rRgMuNnifQs3EwKUELw3UzAhcdvDyeT27PhQDrgSspSxwlcGrCjVrA9cAvMZQsyVw7cDrCDW7A9cXvKHQh7HATYC1TANuNnjzoOZi4FaCtxpqrgduC3jboOYu4PaDFwh9OAncGVjLBeCugXcTat4H7il4L6DmW+AiZPbvRcrsv2YM4OKCl8Tr2fUhDXDpYC1ZgAsALw/ULATc5+CVgprlgasCXnWoWRe4RuC1gj50BK4LrKUXcAPAGww1RwI3HrxJUHMGcHPBWwA1lwK3CrwN0IdtwO2EtewB7jfwDkPNY8CdBu8s1LwE3A3wbkPNh8A9B+8d9CFSFv9c1Cz+1/IJcPHBSwQ1UwD3GXgZoGY24HKDlw9qFgGuJHgVvJ5dH6oDVwvWUh+4puC1gJpfA9cZvG5Qsw9wg8AbCjVHAzcRvJnQhwXALYK1rADue/B+gJqbgdsB3i9Qcx9wh8ALhJq/A/cHeJehD7eBuwdreQLcK/DeQM3wWf1zUcCLntV/zTjAJQQvCdRMBVx68LJ7Pbs+5AOuIKylOHBlwCsHNb8EriZ4daBmQ+Cag9cKarYHrit4faEPQ4EbDmtZB94mqLkFuJ3A7QZvL9T0ABcM3imoeR64K+Bdh5p3gXsM3jOo+Rq4j7L59z7O5r9mNOBig5fA69ntwazw5+WCmgXAKww1SwBXFrwKULMqcLXB+wpqNgauJXjt4LvuAlw3WEsf4AaBNxRqjgZuInhToOYs4OaDtxBqLgduDXgboA/bgfsZ1rIXOA94R6DmceDOgHcOal4G7iZ4d6DmI+BegPce+hA5u38uWnb/a4kNXALwEkPNlMClAy8j1MwOXB7w8kPNosCVAq+i17PrQw3gasNaGgDXDLyWULMdcF3A6w41+wI3GLxhUHMMcJPAmwV9+Ba4xbCWlcCtBW891NwC3E7wdkHN/cAdBi8Iap4A7ix4V6APd4C7D2t5Ctxf4L2FmhFy+Oeighcjh/+acYFLBF5SqJkauAzg5fB6dn3ID1whWMvnwH0BXnmoWQW4WuDVhZqNgGsBXmuo2QG4buD1gz4MA24krGU8cFPBmwE15wK3CLylUHMVcD+AtxFqbgXuF/AOQB+CgDsGazkN3J/gXYKaN4C7B95DqPkcuDfgvYeaEXP656KD96nXs+tDUuBS5PS/ls+AywxeNqiZG7iC4BWBmiWBKwdeRahZDbg64DWGPrQG7mtYS2fgeoLXB2oOAm4EeKOh5kTgpoM3C2rOB24JeKuhDxuB2wxr2QHcr+Dtg5qHgDsK3u9Q8w/gLoJ3BWreAu4BeC+gD++BCx/gfy1RAvxzscCLAzUTApccvFRQMz1wWcHLATXzAlcYvFJez64PFYGrDGvpDd5AqDkYuJHAjQVvAtScBtxs8BZCzeXArQFvHdTcBNx28H6GmnuB84B3BGoeB+4MeBdgDz6DP+811Pwol3/v41z+a0YDLjZ4n0LNxMClBC8N1MwIXHbw8ng9u++6EHBFYC0lgSsHXkWoWQ24OuDVg5pNgGsFXluo2Qm4HuD1gz4MB24UrGUCcNPAmwk15wG3GLxlUHM1cOvB+xFqbgNuF3gHoQ/BwB2HtZwB7gJ4l6HmTeDug/cIar4A7i144XL7rxkpt38uBnjxvJ5dH5IBlxLWkg64LOBlh5p5gCsEXlGoWQq48uBVgprVgasLXhPoQxvg2sFaugDXC7y+UHMwcCPBGwM1JwE3A7xvoOYC4JaCtwb68CNwW2AtO4HbA95+qHkYuGPgnYCaZ4G7BN5VqHkbuIfgvYQ+hMvjn4uQx/9aogL3CXhxoWYi4FKAlxpqZgAuG3g5oWY+4IqAV9rr2fWhEnBVYC21gKsPXiOo2QK4r8HrADW7AdcHvP5Qcyhwo8GbDH34Bri5sJZFwK0AbxXU/AG4zeBthZq/ALcPvINQMxC438E7B324CtwNWMs94J6A9xxqvgEufF7/XsS8/mtGBy4OePGgZhLgUoGX0evZ9SEncLlhLQWBKw5eSahZDrgvwasGNesA1xC8JlCzFXDtwesOfegP3CBYywjgxoE3EWpOB24OePOh5hLgvgNvDdTcANxP4O2CPhwE7hCs5Shwp8D7A2peBO46eLeg5gPgnoH3Emq+A+7jfP69GF7Prg/xgEuQz/9aSoBXFmqWB64KcDXAqw01GwDXDLy2ULMTcD3A6w01BwI3HLxRUHMCcNPAmwk15wG3GLyVsAd/hj9vL9T0gHcEah4H7gx456DmZeBugncHaj4C7gV4b+G7jpDfPxcxv/+1RAcuDnjxoGYS4FKBlxZqZgIuB3i5oGYB4IqBV9rr2fWhMnBVYS21gWsAXmOo2RK4duB1hJrdgesL3gCoOQy4MeBNgT7MBm4erGUxcCvBWw011wO3BbxtUHMXcPvB+w1qBgF3Arzz0IdrwN2EtdwH7il4L6DmW+AiFPDvRSrgv2YM4OKCFx9qJgUuNXiZvJ5dHwKAywNrKQTc5+CVgprlgasCXnWoWRe4RuA1hZqtgesAXg/owwDgBsNaRgI3HrxJUHMGcHPBWwA1lwK3CrzvoeZG4LaCtxv68Btwh2Etx4A7Dd5ZqHkJuBvg3YaaD4F7Dt4rqPkeuIgF/XsxvZ5dH+IDl6ig/7WkAO4z8DJAzWzA5QYvH9QsAlxJ8MpAzYrAVQPvK+hDU+BawFq+Bq4zeN2gZh/gBoE3FGqOBm4ieFOg5izg5oO3DPrwPXA/wFo2A7cDvF+g5j7gDoEXCDV/B+4P8M5DzSvA3QLvEfThFXBvYC3hC/nnooAXvZD/mnGASwheEqiZCrj04GWCmjmAywteUa9n14cywJWDtXwJXE3w6kDNhsA1B68V1GwPXFfwekDNfsANAW8M9GEKcNNhLXOAWwjeEqj5HXDrwNsANX8C7mfwdkPNA8AdAe8E9OE8cBdgLdEK+/diF/ZfMy5wiYBLBl5KqJkOuCzg5YKaBYArBl4JqFkWuMrgVYWatYFrAF5jqNkSuHbgdfF6dntwFPx5E6DmNPBmQs15wC0GbxnUXA3cevB+hJrbgNsF3n74rg8DFwhr+R24P8A7DzWvAHcLvLtQ8zFwL8F7DTU/KuKfiwxeTK9n14cEwCUu4n8tKYFLB15GqJkduDzg5YeaRYErBd4XULMScNXBqwd9aAZcS1hLO+C6gNcdavYFbjB4w6DmGOAmgTcVan4D3ALwlkMf1gK3HtayBbid4O2CmvuBOwxeENQ8AdxZ8P6EmleBuw3eY+jDX8C9hbVEKOqfiwpejKL+a8YFLhF4SaFmauAygJcZauYELh94xbyeXR++AK48rKUKcLXAqws1GwHXArzWULMDcN3A6wk1+wM3FLyx0IepwM2AtcwFbhF4S6HmKuB+AG8j1NwK3C/g/Qo1DwIXCN5J6MOfwF2CtdwA7h54D6Hmc+DegPceakYs5p+LDl6sYv5rxgMuCXhpvJ5dHzIDlw3Wkhu4guAVgZolgSsHXkWoWQ24OuDVg5pNgGsFXkfoQ0/g+sBaBgE3ArzRUHMicNPBmwU15wO3BLzlUHMNcBvA2wZ9+BW4fbCWQ8AdBe93qPkHcBfBuwI1bwH3ALzHUPMlcO/Ai1Q85He7PsQq7p+LU9z/WhIClxy8VFAzPXBZwcsBNfMCVxi8YlCzNHAVwKsOfagHXENYS3Pg2oLXHmp2Ba43eP2g5hDgRoE3FmpOBm4meAugD8uBWwlrOQ7eGah5FrhLwF0D7ybUvA/cU/BeQ82PPvfPRQYv2uf+a8YGLgF4iaFmSuDSgZcRamYHLg94hbye3R6sCn9ebajZALzGULMlcO3A6wg1uwPXF7wBUHMYcGPAm+T17L7rGcDNgrXMB24JeMuh5hrgNoC3CWpuB243eHuhpge4YPBOej27PlwA7jKs5SZw98F7BDVfAPcWvHAl/NeMVMI/FwO8T6BmfOCSgpfW69n1IQtw2WEteYArBF5RqFkKuPLgVYKa1YGrC159qNkUuNbgdYI+9AKuL6xlMHAjwRsDNScBNwO8b6DmAuCWgrcCan4P3EbwtkMf9gC3H9ZyGLhj4J2AmmeBuwTeVah5G7iH4D2Bmq+Aew9e5JIhv9v14ZOS/rm4Jf2vJRFwKcBLDTUzAJcNvJxQMx9wRcArDjXLAFcRvBrQh/rANYK1tADua/A6QM1uwPUBrz/UHArcaPDGQc0pwM0C71vowwrgVsFafgBuM3hboeYvwO0D7yDUDATud/BOQc3zwF0B7w704Qlwz2Etb4ALX8q/F7GU/5rRgYsDXjyomQS4VOClhZqZgMsBXn6vZ9eH4sCVhLWUA+5L8KpBzTrANQSvCdRsBVx78DpBzR7A9QNvGPRhHHATYS3TgZsD3nyouQS478BbAzU3APcTeNuh5m7gDoAXBH04BdwfsJaLwF0H7xbUfADcM/BeQs13wH1c2r8XubT/mjGB+xS8pF7Prg9pgUsPa8kKXC7w8kLNwsCVAK801KwAXFXwakDNr4BrDF5r6EMn4LrAWuaBtxhqLgVuFXBrwVsPNbcAtxO8vVDTA1wweMeh5hngLoB3GWreBO4+eI+g5gvg3oIXwft/2e3BxGX8/3kpy/ivmQ68jFAzO3B5wMsPNYsCVwq8L6BmJeCqg1cXvutGwDWBtbQCrj14naBmD+D6gTcQag4Hbix4E6DmNOBmg/ct9GElcKthLeuB2wLeNqi5C7j94P0GNYOAOwHeaaj5J3BXwbsLfXgK3AtYy1vgInzh34v0hf+aMYCLC158qJkUuNTgfQY1MwOXE7wCXs+uD58DVwrWUh64KuBVh5p1gWsEXlOo2Rq4DuB1hpo9gesP3nDow3jgJsFaZgA3F7wFUHMpcKvA+x5qbgRuK3g7oOavwB0ELxj6cBq4s7CWS8DdAO821HwI3HPwXkHN98BFLOvfi1LWf81YwMUDL5nXs+vDZ8BlgLVkAy43ePmgZhHgSoJXBmpWBK4aeDWhZj3gmoDXBvrQGbhusJY+wA0CbyjUHA3cRPCmQM1ZwM0HbyHUXA7cGvB+hD7sAO4XWMs+4A6BFwg1fwfuD/DOQ80rwN0C7y7UfAzcS/DClQv5za4PUcr556KX87+WOMAlBC8J1EwFXHrwMkHNHMDlBa8A1CwGXGnwKkEfagJXB9bSELjm4LWCmu2B6wpeD6jZD7gh4A2HmmOBmwzeN9CHhcAtgbV8B9w68DZAzZ+A+xm83VDzAHBHwAuGmieBOwfeVejDXeAewFqeAfcavHdQ8+Py/rlo4MUs77/mp8AlBi8Z1EwDXEbwcno9uz4UAK4QrKUleO2gZgfgugHXC7y+UHMwcCPBmwA1pwE3G7x5UHMxcCvBWw011wO3BbxtUHMXcPvBOwx78DL8eTeh5n3wHkHNF8C9BS9cBf81I1Xwz8UA7xOoGR+4pOCl9np233UG4DLBWnIAlxe8AlCzGHClwSsLNSsDVwO82lCzAXDNwGsDfegCXHdYS1/gBoM3DGqOAW4SeFOh5jfALQBvEdRcAdz34G2CPuwEbhesZT9wh8ELgpongDsL3p9Q8ypwt8G7BzWfAPcKvI8qhvxu14eoFf1zMSr6X0tc4BKBlxRqpgYuA3iZoWZO4PKBVxBqFgeuDHiVoQ+1gKsLa2kEXAvwWkPNDsB1A68n1OwP3FDwRkDNccBNAW829GERcEthLauA+wG8jVBzK3C/gPcr1DwIXCB4R6HmKeDOg3cN+nAPuIewlufAvQHvPdSMWMk/Fx28WJX814wHXBLwkkPNtMBlAi/A69n1oSBwRWAtJYErB15FqFkNuDrg1YOaTYBrBV5bqNkJuB7gDYA+jABuNKxlInDTwZsFNecDtwS85VBzDXAbwNsENbcDtxu836APR4H7HdbyB3AXwbsCNW8B9wC8x1DzJXDvwPuosv+akSv752KCF9/r2fUhOXCpYC3pgcsKXg6omRe4wuAVg5qlgasAXmWoWQO4r8BrCn1oC1x7WEtX4HqD1w9qDgFuFHhjoeZk4GaCNxtqfgvcMvC+hz5sAu4nWMvPwO0F7wDUPALccfBOQs1zwF0G7xrUvAPcI/BeQR8++tI/F+FL/2vJDl4eqJkPuCLAfQ5eKahZHrgq4NWGmg2AawZeS6jZDrgu4HWHmn2BGwzeMKg5BrhJ4M3wenZ7cDX8eeuh5hbwtkHNXcDtB+83qBkE3AnwTkPNP4G7Ct5t+K4fAvcY1vISuHfgfVTFf83IVfxzMcGLDTUTAJcMvJRQMx1wWcAL8Hp2fSgEXFFYSyngyoNXCWpWB64uePWhZlPgWoP3NdTsDFxP8AZCH0YCNwbWMgm4GeB9AzUXALcUvBVQ83vgNoK3GWruAO5X8DzQh2PAnYC1nAXuEnhXoeZt4B6C9wRqvgLuPXjhq/qvGaWqfy4WeAm8nl0fUgCXGtaSAbhs4OWEmvmAKwJecahZBriK4H0JNWsCVw+8ZtCHr4HrAGvpBlwf8PpDzaHAjQZvHNScAtws8OZAzYXALQdvLfRhM3BbYS2/ALcPvINQMxC438E7BTXPA3cFvOtQ8y5wj8H7C/oQvpp/LmI1/2uJDlwc8OJBzSTApQIvLdTMBFwO8HJBzQLAFQPvC69n14cvgasGa6kDXEPwmkDNVsC1B68T1OwBXD/wBkLN4cCNBW8q9GEOcPNhLUuA+w68NVBzA3A/gbcdau4G7gB4HqgZDNxJ8P6EPlwH7has5QFwz8B7CTXfAfdxdf9e5Or+a8YE7lPwEkDNZMClAS+z17PrQy7g8sJaCgNXArzSULMCcFXBqwE1vwKuMXjNoGYb4DqC1xP6MBC4IbCWUcBNAG8y1JwJ3DzwvoWay4BbDd5aqPkjcNvA+xX64AHuMKzlBXhvoeZ74CLW8M9FBS9GDf814wKXCLyUUDMdcFnAyw418wBXCLyiULMUcOXBqwQ1qwNXF7xGXs9uD3aHP68v1BwM3jCoOQa4SeBNhZrfALcAvEVQcwVw34O3Eb7rrcBth7XsBu4AeB6oGQzcSfDOQM0LwF0D7ybUvA/cU/D+gj5EqOmfi1TT/1piABcXvPhQMylwqcH7DGpmBi4neLmhZkHgioNX1uvZ9aEKcNVhLXWBawReU6jZGrgO4HWGmj2B6w/eIKg5Arhx4E2DPswFbgGsZSlwq8D7HmpuBG4reDug5q/AHQTvENQ8Ctwp8C5AH24AdxvW8hC45+C9gprvgYtYy78XpZb/mrGAiwdeQqiZHLi04GXxenZ9yA1cPlhLEeBKglcGalYErhp4NaFmPeCagNccarYFrhN4vaAPg4AbCmsZDdxE8KZAzVnAzQdvIdRcDtwa8NZBzU3AbQdvD/ThEHCBsJbfgfsDvPNQ8wpwt8C7CzUfA/cSvNdQ86Pa/rnI4H3i9ez6kBC4JLX9ryUVcOnBywQ1cwCXF7wCULMYcKXBKws1KwNXA7z60IfmwLWCtbQHrit4PaBmP+CGgDccao4FbjJ406DmbOC+BW8F9GEdcBtgLT8B9zN4u6HmAeCOgBcMNU8Cdw68C1DzGnB3wHsCfXgN3DtYy8d1/HPRwItZx3/NT4FLDF4yqJkGuIzgZYGaAcDlB6+417PrQ1ngKsBaqgJXG7yvoGZj4FqC1wZqdgSuO3i9oOYA4IaBNw76MA24GbCWXeDth5oHgQsE7hh4J6DmWeAugXcTat4H7il4L6DmW+Ai1PXvRarrv2YM4OKCFx9qJgUuNXgZvJ7dHiwKf14pqFkevEpQszpwdcGrDzWbAtcavK+hZmfgeoLXH77rocANh7WMBW4yeNOg5mzgvgVvMdRcCdxa8NZDzS3A7QRvD/ThMHBBsJYTwJ0F70+oeRW42+Ddg5pPgHsF3huoGf4r/1wU8GJ7Pbs+JAIu6Vf+15IauAzgZYaaOYHLB15BqFkcuDLglYOaXwJXE7wG0IcWwLWGtXQArht4PaFmf+CGgjcCao4Dbgp406HmHOAWgrcS+vADcBthLVuB+wW8X6HmQeACwTsKNU8Bdx68i1DzOnB3wXsKfXgD3HtYS8R6/rno4MWq579mPOCSgJccaqYFLhN4WaFmLuAKgPe517PrQzngKsJaqgFXB7x6ULMJcK3Aaws1OwHXA7zeUHMgcMPBGw99mA7cLFjLfOCWgLccaq4BbgN4m6DmduB2g7cXanqACwbvNPThInBXYC23gHsA3mOo+RK4d+B9VN9/zcj1/XMxwYsNNRMAlwy8z7yeXR+yApcD1pIXuMLgFYOapYGrAF5lqFkDuK/AawA1mwHXBrzO0IfewPWDtQwBbhR4Y6HmZOBmgjcban4L3DLwVkLNtcD9CN4O6MNe4A7AWo4Adxy8k1DzHHCXwbsGNe8A9wi8p1DzL+DCNfDvRfF6dn2IDdynDfyvJTFwKcFLAzUzApcdvAComR+4ouB9DjW/AK4SeDWhDw2AawRrGQPeJKg5BbhZwM0FbwHUXArcKvDWQ80twO0EbxfU3A/cYfCCoOYJ4M6C9yfUvArcbfAewh6M1ND/nxejof+accGLDzWTApcavM+gZmbgcoKXG2oWBK44eGW8nt13XRG4yrCWGsB9BV4DqNkMuDbgtYOaXYDrBV5fqDkYuJHgjYc+zADuG1jLAuCWgrcCan4P3EbwNkPNHcD9Ct4+qHkIuKPgnYE+XALuKqzlNnAPwXsCNV8B9x688I3814zSyD8XC7w4UDMhcMnBS+f17PqQDbicsJZ8wBUBrzjULANcRfC+hJo1gasHXkOo2Ry4tuB1gT70Aa4/rGUocKPBGwc1pwA3C7w5UHMhcMvB+w5qrgNuE3g7oQ/7gDsIawkE7nfwTkHN88BdAe861LwL3GPwnkHN18B91Ni/F9Xr2fUhDnDxGvtfSxLgUoGXFmpmAi4HeLmgZgHgioFXAmqWBa4yeLWgDw2BawJraQVce/A6Qc0ewPUDbyDUHA7cWPAmQM1pwM0GbxH04Tvg1sBaNgD3E3jboeZu4A6A54GawcCdBO8M1LwA3DXw7kEfngH3EtbyDriPm/j3IjfxXzMmcJ+ClwBqJgMuDXjpoGYW4ALAK+j17PpQArjSsJYKwFUFrwbU/Aq4xuA1g5ptgOsIXheo2Qu4AeCN8Hp2fZgA3GRYy0zg5oH3LdRcBtxq8NZCzR+B2wbeTqi5B7jfwDvq9ez6cAa4c7CWy8DdBO8O1HwE3Avw/oKa4Zr65yKBF7Wp/5qfABcfvORez64P6YDLAGupDl5dqFkPuCbAtQCvNdTsAFw38PpCzcHAjQRvDNScBNwM8L6BmguAWwreCqj5PXAbwdsKezAI/rwTUPMseH9CzavA3QbvHtR8Atwr8N5AzfDN/HNRwIvl9ey+63jAJWjmfy3JgEsDXjqomQW4APDyQM1CwH0OXimoWR64KuDVgj40Aq4prKU1cB3A6ww1ewLXH7xBUHMEcOPAmwg1pwM3B7zF0IdVwH0Pa9kI3FbwdkDNX4E7CN4hqHkUuFPg/QE1LwJ3Hbz70IfnwL2CtbwHLmJz/16U5v5rxgIuHngJoWZy4NKClx5qZgUuF3iFvJ5dH0oCVwbWUhG4auDVhJr1gGsCXnOo2Ra4TuB1hZq9gRsI3kjow0TgpsBaZgE3H7yFUHM5cGvAWwc1NwG3HbyfoeZe4DzgHYM+/AHceVjLFeBugXcXaj4G7iV4r6HmRy38c5HBi9bCf83YwCUAL4XXs+tDeuAywVpyAJcXvAJQsxhwpcErCzUrA1cDvNpQswFwzcD7GvrQFbgesJZ+wA0BbzjUHAvcZPCmQc3ZwH0L3mKouRK4teBthj78DNxuWMsB4I6AFww1TwJ3DrwLUPMacHfAuw81nwL3F3jhW3p/t+lDtJb+uZgt/a/lU+ASg5cMaqYBLiN4WaBmAHD5wSsENT8H7gvwvoQ+1AbuK1hLY+BagtcGanYErjt4vaDmAOCGgTcSao4Hbip4c6APi4FbBmtZDdx68H6EmtuA2wXeHqj5G3BB4B2DmqeB+xO869CH+8A9hLUkbeXfS93Kf820wGUCLht4OaFmPuCKgFcKapYHrgp41aFmXeAagdcUarYGrgN4naFmT+D6gzfU69ntwW/gz1sANZeCtwJqfg/cRvA2Q80dwP0K3j6oeQi4o+Cdgu/6PHAXYC3XgLsD3n2o+RS4v8B7CzUjtPbPRQUvRmv/NeMClwi8FF7Prg8ZgMsMa8kJXD7wCkLN4sCVAa8c1PwSuJrg1YGaDYFrDl476EM34HrCWvoDNxS8EVBzHHBTwJsONecAtxC8JVDzO+DWgbcF+vALcL/CWg4CFwjeUah5Crjz4F2EmteBuwveA6j5DLjX4EVoE/K7XR+it/HPxWrjfy3xgEsCXnKomRa4TOBlhZq5gCsAXmGoWQK4suBVgT7UAa4erKUJcK3Aaws1OwHXA7zeUHMgcMPBGwU1JwA3Dby50IclwC2HtawBbgN4m6DmduB2g7cXanqACwbvONQ8A9wF8G5AHx4A9xjW8hK4d+B91NZ/zcht/XMxwYsNNRMAlwy8lFAzHXBZwMvt9ez6UBi4YrCW0sBVAK8y1KwB3FfgNYCazYBrA147qNkFuF7gDYI+jAJuLKxlMnAzwZsNNb8Fbhl4K6HmWuB+BG8L1NwJ3B7wDkEfjgN3EtZyDrjL4F2DmneAewTeU6j5F3DhvvbvRfjaf82owH0CXkKvZ9eHlMClgbVkBC47eAFQMz9wRcH7HGp+AVwl8KpAzVrA1QevOfShHXAdYS3dgesL3gCoOQy4MeCNh5pTgfsGvLlQcxFwK8BbB33YAtxWWMsJqHnO65V6e67sD1NHZgztxWnnv2Y88BKCl7yd/z8vbzv/n68AeMOh5pR2/j/7Sqj5DGqGb+/fK9jef81iXs/274BAzZFQcxx4k+HP+xb+vNNQ8zx4l+HPewR/XuYO/mvmAG9UB/9/3hjgxgF3ALjjHfx/hhPAnQLvCtS8BtwN8J5AzWfAvQAvQkf/NSN29M9FBu9TqBkfuITgpYWa6YDLAF5uqJkXuPzglYKaZYArC14NqFkLuDrgNYeaLYFrDV43qNkDuF7gDYOaI4AbBd40qDkDuFngLYGay4BbAd5GqLkJuC3g7YGa+4A7AN5xqHkCuFPgXYGa14C7Ad4t8O6Adw+8B+A9Au8JeM/AewHeK/Beg/cWvPfgfdTJvxcBvIjgRfZ6dn3P7vW+/S7FpqRXw9cL7eUALyd4AeDlAi83eHnAywtePvDyg1cAvILgFQKvMHhFwCsKXjHwioP3OXglwCsJXinwSoNXBrwvwCsLXjnwyoNXAbyK4FUCrzJ4X4JXBbyq4FUDrzp4NcCrCV4t8GqDVwe8uuB9BV498OqD1wC8huA1Aq8xeE3Aawpec/BagtcavLbgtQOvA3idwOsCXjfweoDXC7w+4PUDbwB4g8AbAt4w8EaANwq8MeCNA28CeJPAmwLeNPBmgDcLvNngzQVvPnjfgrcIvCXgLQPvCHiB4AWBFwzeUfCOgXccvN/BOwHeSfBOgXcavDPg/QHeWfDOgXcevD/BuwDeRfAugXcZvCvgXQXvGnjXwbsB3k3wboF3G7w74N0F7x5498F7AN5D8B6B9xi8J+A9Be8ZeM/BewHeS/BegfcXeK/BewPeW/DegfcevHCd/XvhwfsYvEjgRQEvGngxwIsFXmzw4oIXD7wE4CUCLwl4ycBLAV4q8NKA9xl46cHLCF5m8LKClx28nODlAi8PePnAKwBeIfCKgFcMvM/BKwleafDag9cBvI7gdQKvM3hdwOsKXjfwuoPXA7ye4PUCrzd4fcDrC14/8PqDNwC8geANAm8weEPAGwreMPCGgzcCvJHgjQJvNHhjwBsL3jjwxoM3AbyJ4E0CbzJ4U8CbCt408KaDNwO8meDNAu8b8GaDNwe8ueDNA28+eAvA+xa8ReAtAW8ZeCvA+w681eB9D9468NaDtxG8TeBtAW8reNvB2wneL+DtBm8PePvAOwDeb+AdAu8IeEHgHQXvOHgnwDsF3hnwzoJ3HrwL4F0C7wp40bv492KAFxO8WOB9Al5s8OKAFxe8T8GLB1588BKAlxC8ROAlBi8JeEnBSwZecvBSgJcSvFTgpQYvDXhpwfsMvHTgpQcvA3gZwcsEXmbwsoCXFbxs4GUHLwd4OcELAC8XeLnBywNeXvDygZcfvALgFQSvEHiFwSsCXlHwioH3OXglwSsN3hfglQOvAniVwPsSvKrgVQevJni1wasLXj3wGoDXCLwm4DUDrwV4rcBrA97X4LUHryN4ncHrCl538HqC1xu8vuD1B28geIPBGwreKvBWg7cGvO/BWwveOvB+AG89eBvA2wjej+BtAm8zeFvA+wm8reBtA287eDvA2wnez+D9At4u8HaD9yt4e8DbC94+8PaDdwC8g+D9Bp4HvEPgHQbvCHiB4AWBFwzeUfCOgXccvN/BOwHeSfBOgXcavDPg/QHeWfDOgXcevAvgXQLvCnjXwLsB3i3w7oB3D7wH4D0C7wl4z8B7Ad4r8F6D9xa89+B91NW/FwG8iOBFBi8qeNHBiwneJ+DFAe9T8OKDlxC8xOAlBS85eCnBSw1eefAqgFcRvErgVQbvS/CqgFcVvGrgVQevBng1wasFXm3w6oBXF7yvwKsHXn3wGoDXELxG4DUGrwl4TcFrBl5z8FqA1xK8VuC1Bq8NeG3B+xq8duC1B68DeB3B6wReZ/C6gNcVvG7gdQevB3g9wesFXm/w+oDXF7x+4PUHbyB4g8EbCt5w8EaCNxq8seCNB28ieJPBmwredPBmgvcNeHPAmwfeAvAWgrcYvKXgLQdvJXirwFsD3lrwfgBvA3g/grcZvJ/A2wbeDvB+Bm8XeDfBuwXebfDugHcXvHvg3QfvAXgPwXsE3mPwnoD3FLxn4D0H7wV4L8F7Bd5f4L0G7w14b8F7B9578MJ18+99BF548CKA9zF4EcGLBF5k8KKAFxW8aOBFBy8GeDHBiwXeJ+DFBi8OeHHB+xS8eODFBy8BeAnBSwReYvCSgJcUvOTgpQQvNXhpwUsHXgbwMoGXBbxs4OUALwC83ODlBS8/eAXBKwxeUfCKg1cCvFLglQGvLHjlwasIXmXwqoBXDbwa4NUCrw54X4FXH7yG4DUGbxR4o8EbA95Y8MaBNx68CeBNBG8SeJPBmwLeVPCmgTcdvBngzQRvFnjfgDcbvDngzQVvHnjzwVsA3rfgLQRvEXiLwVsC3lLwloG3HLwV4K0E7zvwVoG3Grw14H0P3lrw1oH3A3jrwdsA3kbwfgRvE3ibwdsC3k/gbQVvG3g7wPsZvF3g/QreXvD2g3cQPA94h8ELBC8YvGPg/Q7eSfBOg/cHeOfA+xO8i+BdBu8qeNfBuwnebfDugncfvIfgPQbvKXjPwXsJ3l/gvQHvHXjpu/v3MoCXEbxM4GUGLwt4WcHLBl528HKAlxO8APBygZcbvDzg5QUvH3j5wSsAXkHwCoFXGLwi4BUFrxh4xcH7HLwS4JUErxR4pcErA94X4JUFrxx45cGrAF5F8CqBVxm8L8GrAl5V8KqBVx28GuDVBK8WeLXBqwNeXfC+Aq8+eA3BawxeU/Cag9cSvNbgtQWvHXgdwOsEXhfwuoHXA7xe4PUBrx94A8AbBN4Q8IaBNwK8UeCNAW8ceBPAmwTeFPCmgTcDvFngzQZvLnjzwdsH3n7wDoB3ELzfwPOAdwi8w+AdAS8QvCDwgsE7Ct4x8I6D9zt4J8A7Cd4p8E6Ddwa8P8A7C9458M6D9yd4F8C7CN4l8C6DdwW8q+BdA+86eDfAuwneLfBug3cHvLvg3QPvPngPwHsI3iPwHoP3BLyn4D0D7zl4L8B7Cd5f4L0B7x144Xr498KD9zF4kcCLAl408GKAFwu82ODFBS8eeAnASwReEvCSgZcCvFTgpQHvM/DSg5cRvMzgZQUvO3g5wcsFXh7w8oFXALxC4BUBrwV4LcFrBV5r8NqA1xa8r8FrB1578DqA1xG8TuB1Bq8LeF3B6wZed/B6gNcTvF7g9QavD3h9wesHXn/wBoA3ELxB4A0Gbwh4Q8EbBt5w8EaANxK8UeCNBm8MeGPBGwfeePAmgDcRvEngTQZvCnhTwZsG3nTwZoA3E7xZ4M0Gby5488H7FrxF4C0Bbxl4K8D7DrzV4H0P3jrw1oO3EbxN4G0Bbyt428HbCd4v4O0Gbw94+8A7AN5v4B0C7wh4QeAdBe84eCfAOwXeGfDOghehp3/vY/AighcJvMjgRQEvKnjRwIsOXgzwYoIXC7xPwIsNXhzw4oL3KXjxwIsPXgLwEoKXCLzE4CUBLyl4ycBLDl4K8FKClwq81OClAS8teJ+Blw689OBlAC8jeJnAywxeFvCygpcNvOzg5QAvJ3gB4OUCLzd4ecDLC14+8AqAVwi8IuAVA+9z8EqCVxq8L8ArB14F8CqB9yV4VcGrDl5N8GqDVxe8euA1AK8ReE3AawZeC/BagdcGvK/Baw9eR/A6g9cVvO7g9QSvN3h9wVsM3hLwloK3DLzl4K0AbyV434G3CrzV4K0B73vw1oK3DrwfwFsP3gbwNoL3I3ibwNsM3hbwfgJvK3jbwNsO3g7wdoL3M3i/gLcLvN3g/QreHvD2grcPvP3gHQDvIHi/gecB7xB4h8E7Al4geEHgBYN3FLxj4B0H73fwToB3Crwz4J0F7zx4F8C7BN4V8K6BdwO8W+DdAe8eeA/AewTeE/CegfcCvFfgvQbvLXjvwfuol38vAngRwYsMXlTwooMXE7xPwIsD3qfgxQcvIXiJwSsBXknwSoFXGrwy4H0BXlnwyoFXHrwK4FUErxJ4lcH7Erwq4FUFrxp41cGrAV5N8GqBVxu8OuDVBe8r8OqBVx+8BuA1BK8ReI3BawJeU/CagdccvBbgtQSvFXitwWsDXlvwvgavHXjtwesAXkfwOoHXGbwu4HUFrxt43cHrCV5v8PqC1x+8geANBm8oeMPBGwneaPDGgjcevIngTQZvKnjTwZsJ3jfgzQFvHngLwFsI3mLwloK3HLyV4K0Cbw14a8H7AbwN4P0I3mbwfgLvIniXwLsM3hXwroJ3Dbzr4N0A7yZ4t8C7Dd4d8O6Cdw+8++A9AO8heI/AewzeE/CegvcMvOfgvQDvJXivwPsLvNfgvQHvLXjvwHsPXrje/r2PwAsPXgTwPgYvIniRwIsMXhTwooIXDbzo4MUALyZ4scD7BLzY4MUBLy54n4IXH7yE4CUGLyl4ycFLCV5q8NKClw68DOBlAi8LeNnAywFeAHi5wcsLXn7wCoJXGLyi4BUHrwR4pcArA15Z8MqDVxG8yuBVAa8aeDXAqwVeHfAGgTcYvCHgDQVvGHjDwRsB3kjwRoE3Grwx4I0Fbxx448GbAN5E8CaBNxm8KeBNBW8aeNPBmwHeTPBmgfcNeLPBmwPeXPDmgTcfvAXgfQveQvAWgbcYvCXgLQVvGXjLwVsB3krwvgNvFXirwVsD3vfgrQVvHXg/gLcevA3g/QjeZvB+Am8beDvA+xm8XeD9Ct5e8PaDdxA8D3iHwQsELxi8Y+D9Dt5J8E6D9wd458D7E7yL4F0G7yp418G7Cd5t8O6Cdx+8h+A9Bu8peM/BS9HHv5cSvFTgpQYvDXhpwfsMvHTgpQcvA3gZwcsEXmbwsoCXFbxs4GUHLwd4OcELAC8XeLnBywNeXvDygZcfvALgFQSvEHiFwSsCXlHwioFXHLzPwSsBXknwSoFXGrwy4H0BXlnwyoFXHrwK4FUErxJ4lcH7Erwq4FUFrxp4NcCrBV4d8L4Crz54DcFrDF5T8JqD1xK81uC1Ba8deB3A6wReF/C6gdcDvF7g9QGvH3gDwBsE3hDwhoE3ArxR4I0Bbxx4E8CbBN4U8KaBN4OesX4hv4cPFztWvb3t9oX2Gni9+FdLJO7iWVEmtNcauK+B6wFcb+CGATcSuCnATQfuW+AWA/c9cD8Atx24n4H7DbjDwJ0C7g/grgF3E7gnwD0H7qP+/rmP+/vnPgEuLnDJgUsFXBbgsgNXELgiwJUFrgJwtYCrC1xz4FoB1wW47sANAm4ocBOAmwzcXOAWAPcdcGuA2wLcNuD2AXcQuOPAnQTuEnBXgXsA3GPg3gIXboB/LvoA/1ws4BIDlwy4DMBlBi4vcAWAKwXcF8BVA64mcI2BawZcB+A6A9cPuIHAjQFuPHCzgJsD3DLgVgK3EbjNwO0Gbi9wQcAdA+48cBeBuwPcfeBeAfcGuMgD/XPRBvrn4gOXCLi0wKUHLgC4PMAVB64kcJWBqwpcfeAaAdcWuPbA9QKuL3AjgBsN3DTgZgK3CLilwK0DbgNwO4HbBdwh4AKBOwPcOeBuAHcbuGfAvQQuwiD/XKRB/rk4wMUDLiVwaYDLBlxO4AoDVwy48sBVAq4OcPWAawlcG+C6AdcTuCHADQduEnBTgZsP3ELgVgO3FritwO0A7gBwHuBOAHcauCvAXQfuEXBPgXsPXPjB/rmYg/1zsYFLClwK4DIBlxW4/MAVAq4McOWAqwFcbeCaAtcCuE7AdQVuAHCDgRsH3ETgZgM3D7gVwK0CbhNwPwG3B7j9wB0F7nfgLgB3Gbh7wD0E7jVw74CLOsQ/F2OIfy4hcEmASwdcRuByA5cPuBLAlQauCnDVgWsIXBPg2gHXEbg+wPUHbhRwY4GbAdw3wC0Bbjlw64H7EbhfgPsVuCPABQN3Frg/gbsF3F3gXgD3F3ARh/rnogz1z30KXALgUgP3GXA5gMsFXFHgPgeuInBfAvcVcA2Aaw3c18D1AK43cMOAGwncFOCmA/ctcIuB+x64H4DbDtzPwP0G3GHgTgH3B3DXgLsJ3BPgngP30TD/3MfD/HOfABcXuOTApQIuC3DZgSsIXBHgygJXAbhawNUFrjlwrYDrAlx34AYBNxS4CcBNBm4ucAuA+w64NcBtAW4bcPuAOwjcceBOAncJuKvAPQDuMXBvgQs33D8Xfbh/LhZwiYFLBlwG4DIDlxe4AsCVAu4L4KoBVxO4xsA1A64DcJ2B6wfcQODGADceuFnAzQFuGXArgdsI3GbgdgO3F7gg4I4Bdx64i8DdAe4+cK+AewNc5BH+uWgj/HPxgUsEXFrg0gMXAFwe4IoDVxK4ysBVBa4+cI2Aawtce+B6AdcXuBHAjQZuGnAzgVsE3FLg1gG3AbidwO0C7hBwgcCdAe4ccDeAuw3cM+BeAhdhpH8u0kj/XBzg4gGXErg0wGUDLidwhYErBlx54CoBVwe4esC1BK4NcN2A6wncEOCGAzcJuKnAzQduIXCrgVsL3FbgdgB3ADgPcCeAOw3cFeCuA/cIuKfAvQcu/Cj/XMxR/rnYwCUFLgVwmYDLClx+4AoBVwa4csDVAK42cE2BawFcJ+C6AjcAuMHAjQNuInCzgZsH3ArgVgG3CbifgNsD3H7gjgL3O3AXgLsM3D3gHgL3Grh3wEUd7Z+LMdo/lxC4JMClAy4jcLmBywdcCeBKA1cFuOrANQSuCXDtgOsIXB/g+gM3CrixwM0A7hvglgC3HLj1wP0I3C/A/QrcEeCCgTsL3J/A3QLuLnAvgPsLuIhj/HNRxvjnPgUuAXCpgfsMuBzA5QKuKHCfA1cRuC+B+wq4BsC1Bu5r4HoA1xu4YcCNBG4KcNOB+xa4xcB9D9wPwG0H7mfgfgPuMHCngPsDuGvA3QTuCXDPgftorH/u47H+uU+AiwtccuBSAZcFuOzAFQSuCHBlgasAXC3g6gLXHLhWwHUBrjtwg4AbCtwE4CYDNxe4BcB9B9wa4LYAtw24fcAdBO44cCeBuwTcVeAeAPcYuLfAhRvnn4s+zj8XC7jEwCUDLgNwmYHLC1wB4EoB9wVw1YCrCVxj4JoB1wG4zsD1A24gcGOAGw/cLODmALcMuJXAbQRuM3C7gdsLXBBwx4A7D9xF4O4Adx+4V8C9AS7yeP9ctPH+ufjAJQIuLXDpgQsALg9wxYErCVxl4KoCVx+4RsC1Ba49cL2A6wvcCOBGAzcNuJnALQJuKXDrgNsA3E7gdgF3CLhA4M4Adw64G8DdBu4ZcC+BizDBPxdpgn8uDnDxgEsJXBrgsgGXE7jCwBUDrjxwlYCrA1w94FoC1wa4bsD1BG4IcMOBmwTcVODmA7cQuNXArQVuK3A7gDsAnAe4E8CdBu4KcNeBewTcU+DeAxd+on8u5kT/XGzgkgKXArhMwGUFLj9whYArA1w54GoAVxu4psC1AK4TcF2BGwDcYODGATcRuNnAzQNuBXCrgNsE3E/A7QFuP3BHgfsduAvAXQbuHnAPgXsN3Dvgok7yz8WY5J9LCFwS4NIBlxG43MDlA64EcKWBqwJcdeAaAtcEuHbAdQSuD3D9gRsF3FjgZgD3DXBLgFsO3HrgfgTuF+B+Be4IcMHAnQXuT+BuAXcXuBfA/QVcxMn+uSiT/XOfApcAuNTAfQZcDuByAVcUuM+Bqwjcl8B9BVwD4FoD9zVwPYDrDdww4EYCNwW46cB9C9xi4L4H7gfgtgP3M3C/AXcYuFPA/QHcNeBuAvcEuOfAfTTFP/fxFP/cJ8DFBS45cKmAywJcduAKAlcEuLLAVQCuFnB1gWsOXCvgugDXHbhBwA0FbgJwk4GbC9wC4L4Dbg1wW4DbBtw+4A4Cdxy4k8BdAu4qcA+AewzcW+DCTfXPRZ/qn4sFXGLgkgGXAbjMwOUFrgBwpYD7ArhqwNUErjFwzYDrAFxn4PoBNxC4McCNB24WcHOAWwbcSuA2ArcZuN3A7QUuCLhjwJ0H7iJwd4C7D9wr4N4AF3mafy7aNP9cfOASAZcWuPTABQCXB7jiwJUErjJwVYGrD1wj4NoC1x64XsD1BW4EcKOBmwbcTOAWAbcUuHXAbQBuJ3C7gDsEXCBwZ4A7B9wN4G4D9wy4l8BFmO6fizTdPxcHuHjApQQuDXDZgMsJXGHgigFXHrhKwNUBrh5wLYFrA1w34HoCNwS44cBNAm4qcPOBWwjcauDWArcVuB3AHQDOA9wJ4E4DdwW468A9Au4pcO+BCz/DPxdzhn8uNnBJgUsBXCbgsgKXH7hCwJUBrhxwNYCrDVxT4FoA1wm4rsANAG4wcOOAmwjcbODmAbcCuFXAbQLuJ+D2ALcfuKPA/Q7cBeAuA3cPuIfAvQbuHXBRZ/rnYsz0zyUELglw6YDLCFxu4PIBVwK40sBVAa46cA2BawJcO+A6AtcHuP7AjQJuLHAzgPsGuCXALQduPXA/AvcLcL8CdwS4YODOAvcncLeAuwvcC+D+Ai7iLP9clFn+uU+BSwBcauA+Ay4HcLmAKwrc58BVBO5L4L4CrgFwrYH7GrgewPUGbhhwI4GbAtx04L4FbjFw3wP3A3DbgfsZuN+AOwzcKeD+AO4acDeBewLcc+A++sY/9/E3/rlPgIsLXHLgUgGXBbjswBUErghwZYGrAFwt4OoC1xy4VsB1Aa47cIOAGwrcBOAmAzcXuAXAfQfcGuC2ALcNuH3AHQTuOHAngbsE3FXgHgD3GLi3wIWb7Z+LPts/Fwu4xMAlAy4DcJmBywtcAeBKAfcFcNWAqwlcY+CaAdcBuM7A9QNuIHBjgBsP3Czg5gC3DLiVwG0EbjNwu4HbC1wQcMeAOw/cReDuAHcfuFfAvQEu8hz/XLQ5/rn4wCUCLi1w6YELAC4PcMWBKwlcZeCqAlcfuEbAtQWuPXC9gOsL3AjgRgM3DbiZwC0Cbilw64DbANxO4HYBdwi4QODOAHcOuBvA3QbuGXAvgYsw1z8Xaa5/Lg5w8YBLCVwa4LIBlxO4wsAVA648cJWAqwNcPeBaAtcGuG7A9QRuCHDDgZsE3FTg5gO3ELjVwK0FbitwO4A7AJwHuBPAnQbuCnDXgXsE3FPg3gMXfp5/LuY8/1xs4JIClwK4TMBlBS4/cIWAKwNcOeBqAFcbuKbAtQCuE3BdgRsA3GDgxgE3EbjZwM0DbgVwq4DbBNxPwO0Bbj9wR4H7HbgLwF0G7h5wD4F7Ddw74KLO98/FmO+fSwhcEuDSAZcRuNzA5QOuBHClgasCXHXgGgLXBLh2wHUErg9w/YEbBdxY4GYA9w1wS4BbDtx64H4E7hfgfgXuCHDBwJ0F7k/gbgF3F7gXwP0FXMQF/rkoC/xznwKXALjUwH0GXA7gcgFXFLjPgasI3JfAfQVcA+BaA/c1cD2A6w3cMOBGAjcFuOnAfQvcYuC+B+4H4LYD9zNwvwF3GLhTwP0B3DXgbgL3BLjnwH30rX/u42/9c58AFxe45MClAi4LcNmBKwhcEeDKAlcBuFrA1QWuOXCtgOsCXHfgBgE3FLgJwE0Gbi5wC4D7Drg1wG0Bbhtw+4A7CNxx4E4Cdwm4q8A9AO4xcG+BC7fQPxd9oX8uFnCJgUsGXAbgMgOXF7gCwJUC7gvgqgFXE7jGwDUDrgNwnYHrB9xA4MYANx64WcDNAW4ZcCuB2wjcZuB2A7cXuCDgjgF3HriLwN0B7j5wr4B7A1zkRf65aIv8c/GBSwRcWuDSAxcAXB7gigNXErjKwFUFrj5wjYBrC1x74HoB1xe4EcCNBm4acDOBWwTcUuDWAbcBuJ3A7QLuEHCBwJ0B7hxwN4C7Ddwz4F4CF2Gxfy7SYv9cHODiAZcSuDTAZQMuJ3CFgSsGXHngKgFXB7h6wLUErg1w3YDrCdwQ4IYDNwm4qcDNB24hcKuBWwvcVuB2AHcAOA9wJ4A7DdwV4K4D9wi4p8C9By78Ev9czCX+udjAJQUuBXCZgMsKXH7gCgFXBrhywNUArjZwTYFrAVwn4LoCNwC4wcCNA24icLOBmwfcCuBWAbcJuJ+A2wPcfuCOAvc7cBeAuwzcPeAeAvcauHfARV3qn4ux1D+XELgkwKUDLiNwuYHLB1wJ4EoDVwW46sA1BK4JcO2A6whcH+D6AzcKuLHAzQDuG+CWALccuPXA/QjcL8D9CtwR4IKBOwvcn8DdAu4ucC+A+wu4iMv8c1GW+ec+BS4BcKmB+wy4HMDlAq4ocJ8DVxG4L4H7CrgGwLUG7mvgegDXG7hhwI0Ebgpw04H7FrjFwH0P3A/AbQfuZ+B+A+4wcKeA+wO4a8DdBO4JcM+B+2i5f+7j5f65T4CLC1xy4FIBlwW47MAVBK4IcGWBqwBcLeDqAtccuFbAdQGuO3CDgBsK3ATgJgM3F7gFwH0H3BrgtgC3Dbh9wB0E7jhwJ4G7BNxV4B4A9xi4t8CFW+Gfi77CPxcLuMTAJQMuA3CZgcsLXAHgSgH3BXDVgKsJXGPgmgHXAbjOwPUDbiBwY4AbD9ws4OYAtwy4lcBtBG4zcLuB2wtcEHDHgDsP3EXg7gB3H7hXwL0BLvJK/1y0lf65+MAlAi4tcOmBCwAuD3DFgSsJXGXgqgJXH7hGwLUFrj1wvYDrC9wI4EYDNw24mcAtAm4pcOv+P/buAkyqsm8D+GzCLgu7dAoYgKLoJiyKitLd3d0pjcLSIUiHICBYgBKSioCgiIWNiQGKgIKKSCjl947fnN17H5773kFmQN935rq4gPn/7uf0c2LOnBG5dSK3TeR2iNzbIveuyH0ucl+K3GGR+1HkTonc7yIXsoLnwlfwXHaRyyVyRUTuBpErJXKxIneXyN0jctVErqbINRG55iLXSeS6itwDIjdI5EaJ3FiRmyZyM0Vukcg9LnLPitxqkXtR5LaK3Osi95bIfSxyn4ncdyJ3SOR+FbmTIvenyAWv5LmsK3kuRuQKilxhkbtF5G4TuTIid6fIVRK5qiLXQOQai1w7kesocn1Err/IPSRyKSL3sMg9InKPitxjIveMyK0UuY0i94LIvSpyu0XuA5HbK3LfiNy3IveTyB0XuXMid1HkIp7luahneS6vyBUQuWIid7PIJYhcaZG7T+Qqilwdkasvcq1Erq3I9RC53iI3VOQeFLkJIjdZ5OaI3HyRe0Lknha550Vug8i9LHKviNw7Ive+yO0Tua9F7geROyZyZ0TurMiFPcdzmZ/juZwil0fkrhe5m0TuDpGLF7m7Ra68yNUQudoi10zkWopcF5HrLnIDRW6IyI0RufEiN0PkZovcEpFbJnKrRG6tyL0kcttF7k2R2yNyn4rcFyL3vcgdEbnfRO60yAWt4rnQVTwXLXI5RO46kSsqcreK3O0iV1bkyolcFZGrLnKNRK6pyHUQuc4i10/kBojcSJEbLXJTRW66yC0UucUit0LknhO5zSK3ReReE7k3RO4jkftE5A6I3EGR+0XkTojcBZFzrea5LKt5LpvI5Re5QiJXQuRKilySyCWLXAWRqyxy9USuoci1Ebn2ItdL5PqK3HCRGyFyk0RuisjNE7kFIveUyC0XufUit0nkdorcLpF7T+Q+FLmvRG6/yB0VuZ9F7g+ROy9ymdbwXOQansstcvlE7kaRKy5ycSKXKHL3itz9IldL5OqKXAuRay1y3USup8gNFrlhIjdO5CaK3CyRmytyS0XuSZFbI3LrRG6byO0QubdF7l2R+1zkvhS5wyL3o8idErnfRS5kLc+Fr+W57CKXS+SKiNwNIldK5GJF7i6Ru0fkqolcTZFrInLNRa6TyHUVuQdEbpDIjRK5sSI3TeRmitwikXtc5J4VudUi96LIbRW510XuLZH7WOQ+E7nvRO6QyP0qcidF7k+RC36e57I+z3MxIldQ5AqL3C0id5vIlRG5O0WukshVFbkGItdY5NqJXEeR6yNy/UXuIZFLEbmHRe4RkXtU5B4TuWdEbqXIbRS5F0TuVZHbLXIfiNxekftG5L4VuZ9E7rjInRO5iyIXsY7notbxXF6RKyByxUTuZpFLELnSInefyFUUuToiV1/kWolcW5HrIXK9RW6oyD0ochNEbrLIzRG5+SL3hMg9LXLPi9wGkXtZ5F4RuXdE7n2R2ydyX4vcDyJ3TOTOiNxZkQtbz3OZ1/NcTpHLI3LXi9xNIneHyMWL3N0iV17kaohcbZFrJnItRa6LyHUXuYEiN0TkxojceJGbIXKzRW6JyC0TuVUit1bkXhK57SL3psjtEblPRe4Lkfte5I6I3G8id1rkgjbwXOgGnosWuRwid53IFRW5W0XudpErK3LlRK6KyFUXuUYi11TkOohcZ5HrJ3IDRG6kyI0WuakiN13kForcYpFbIXLPidxmkdsicq+J3Bsi95HIfSJyB0TuoMj9InInRO6CyLk28lyWjTyXTeTyi1whkSshciVFLknkkkWugshVFrl6ItdQ5NqIXHuR6yVyfUVuuMiNELlJIjdF5OaJ3AKRe0rklovcepHbJHI7RW6XyL0nch+K3Fcit1/kjorczyL3h8idF7lMm3guchPP5Ra5fCJ3o8gVF7k4kUsUuXtF7n6RqyVydUWuhci1FrluItdT5AaL3DCRGydyE0VulsjNFbmlIvekyK0RuXUit03kdojc2yL3rsh9LnJfitxhkftR5E6J3O8iF7KZ58I381x2kcslckVE7gaRKyVysSJ3l8jdI3LVRK6myDURueYi10nkuorcAyI3SORGidxYkZsmcjNFbpHIPS5yz4rcapF7UeS2itzrIveWyH0scp+J3Hcid0jkfhW5kyL3p8gFv8BzWV/guRiRKyhyhUXuFpG7TeTKiNydIldJ5KqKXAORayxy7USuo8j1Ebn+IveQyKWI3MMi94jIPSpyj4ncMyK3UuQ2itwLIveqyO0WuQ9Ebq/IfSNy34rcTyJ3XOTOidxFkYt4keeiXuS5vCJXQOSKidzNIpcgcqVF7j6RqyhydUSuvsi1Erm2ItdD5HqL3FCRe1DkJojcZJGbI3LzRe4JkXta5J4XuQ0i97LIvSJy74jc+yK3T+S+FrkfRO6YyJ0RubMiF7aF5zJv4bmcIpdH5K4XuZtE7g6Rixe5u0WuvMjVELnaItdM5FqKXBeR6y5yA0VuiMiNEbnxIjdD5GaL3BKRWyZyq0Rurci9JHLbRe5Nkdsjcp+K3Bci973IHRG530TutMgFvcRzoS/xXLTI5RC560SuqMjdKnK3i1xZkSsnclVErrrINRK5piLXQeQ6i1w/kRsgciNFbrTITRW56SK3UOQWi9wKkXtO5DaL3BaRe03k3hC5j0TuE5E7IHIHRe4XkTshchdEzrWV57Js5blsIpdf5AqJXAmRKylySSKXLHIVRK6yyNUTuYYi10bk2otcL5HrK3LDRW6EyE0SuSkiN0/kFojcUyK3XOTWi9wmkdspcrtE7j2R+1DkvhK5/SJ3VOR+Frk/RO68yGXaxnOR23gut8jlE7kbRa64yMWJXKLI3Sty94tcLZGrK3ItRK61yHUTuZ4iN1jkhoncOJGbKHKzRG6uyC0VuSdFbo3IrRO5bSK3Q+TeFrl3Re5zkftS5A6L3I8id0rkfhe5kO08F76d57KLXC6RKyJyN4hcKZGLFbm7RO4ekasmcjVFronINRe5TiLXVeQeELlBIjdK5MaK3DSRmylyi0TucZF7VuRWi9yLIrdV5F4XubdE7mOR+0zkvhO5QyL3q8idFLk/RS74ZZ7L+jLPxYhcQZErLHK3iNxtIldG5O4UuUoiV1XkGohcY5FrJ3IdRa6PyPUXuYdELkXkHha5R0TuUZF7TOSeEbmVIrdR5F4QuVdFbrfIfSBye0XuG5H7VuR+ErnjIndO5C6KXMQOnovawXN5Ra6AyBUTuZtFLkHkSovcfSJXUeTqiFx9kWslcm1FrofI9Ra5oSL3oMhNELnJIjdH5OaL3BMi97TIPS9yG0TuZZF7ReTeEbn3RW6fyH0tcj+I3DGROyNyZ0UubCfPZd7JczlFLo/IXS9yN4ncHSIXL3J3i1x5kashcrVFrpnItRS5LiLXXeQGitwQkRsjcuNFbobIzRa5JSK3TORWidxakXtJ5LaL3Jsit0fkPhW5L0Tue5E7InK/idxpkQt6hedCX+G5aJHLIXLXiVxRkbtV5G4XubIiV07kqohcdZFrJHJNRa6DyHUWuX4iN0DkRorcaJGbKnLTRW6hyC0WuRUi95zIbRa5LSL3msi9IXIfidwnIndA5A6K3C8id0LkLoic61Wey/Iqz2UTufwiV0jkSohcSZFLErlkkasgcpVFrp7INRS5NiLXXuR6iVxfkRsuciNEbpLITRG5eSK3QOSeErnlIrde5DaJ3E6R2yVy74nchyL3lcjtF7mjIvezyP0hcudFLtMunovcxXO5RS6fyN0ocsVFLk7kEkXuXpG7X+RqiVxdkWshcq1FrpvI9RS5wSI3TOTGidxEkZslcnNFbqnIPSlya0RunchtE7kdIve2yL3rqVW48GWVtTPH34y1Jgd5brqozRO1xaL2lKg9J2rrRW2LqO0UtTdE7T1R+0TUvhK1g6J2VNROiNofoub6ntcyiVo2UcstaoVE7UZRKylqcaKWLGr3ilplUaslag1FrYWotRe1bqLWV9QGi9oIURsnalNEbZaoLRC1naL2hqi9J2qfiNpXonZQ1I6K2glR+0PUXId4LZOoZRO13KJWSNRuFLWSohYnasmidq+oVRa1WqLWUNRaiFp7Uesman1FbbCojRC1caI2RdRmidoCUVsqastFbY2obRK1baK2S9TeFrUPRe0PUXMd5rVMopZN1HKLWiFRu1HUSopanKgli9q9olZZ1GqJWkNRayFq7UWtm6j1FbXBojZC1MaJ2hRRmyVqC0RtqagtF7U1orZJ1LaJ2i5Re1vUPhS1z0Vtv6gdFrWfRe2UqJ0XtZAjvBYpanGilixq94paZVGrJWoNRa2FqLUXtW6i1lfUBovaCFEbJ2pTRG2WqC0QtaWitlzU1ojaJlHbJmq7RO1tUftQ1D4Xtf2idljUfha1U6J2XtRCfuC1SFHLLmr5RK2IqBUXtVKilihqd4na/aLWTdT6itpgURshauNEbYqozRK1BaK2VNSWi9oaUdskattEbZeovS1qH4ra56K2X9QOi9rPonZK1M6LWsiPvBYpatlFLZ+oFRG14qJWStQSRe0uUbtf1KqJWl1RayJqrUWtk6j1FLUHRG2YqC0TtRWitlbUNovadlF7TdT2iNpHovaFqB0QtSOi9ouonRa1C6IWepTXsohaDlHLL2pFRa2EqN0uakmiVk7UKohadVGrJ2pNRa2NqHUWtV6iNkDUhovaaFGbJGrTRW2eqC0WtadE7TlRWy9q+0TtW1H7QdSOi9oZUbsoamHHeC1K1HKKWgFRu17Ubha1O0SttKjdLWoVRa2GqNUXtWai1lbUuohab1EbKGoPitoYUZssajNEbb6oLRG1p0VtlahtELWXRO0VUXtT1N4XtU9F7WtR+17Ujolarp94raCo3SBqt4harKiVEbV7RK2SqNUUtQai1lzU2olaV1HrI2qDRO0hURsrag+L2kxRe1TUHhe1Z0RttahtFLWtovaqqL0lah+I2mei9o2oHRK1n0TtpKidE7Xgn3ktQtRiRC2vqBUWtWKiVkvUGopaC1FrL2rdRK2vqA0WtRGiNk7UpojaLFFbIGpLRW25qK0RtU2itk3Udona26L2oah9Lmr7Re2wqP0saqdE7byohfzCa5Gill3U8olaEVErLmqlRC1R1O4StftFrZqo1RW1JqLWWtTGi9pUUZstagtFbZmorRC1taK2WdS2i9prorZH1D4StS9E7YCoHRG1X0TttKhdELXQ47yWRdRyiFp+USsqaiVE7XZRSxK1cqJWQdSqi1o9UWsqam1ErbOo9RK1AaI2XNRGi9okUZsuavNE7WVR2y1q74jaXlHbJ2rfitoPonZc1M6I2kVRC/uV16JELaeoFRC160XtZlG7Q9RKi9rdolZR1GqIWn1RayZqbUWti6j1FrWBovagqI0RtcmiNkPU5ovaElF7WtRWidoGUXtJ1F4RtTdF7X1R+0PUXCd4LZOoZRO13KJWSNRuFLWSohYnasmidq+oVRa1WqLWUNRaiFp7Uesman1FbbCojRC1caI2RdRmidoCUVsqastFbY2obRK1baK2S9TeFrUPRe1zUdsvaodF7WdROyVq50Ut5DdeixS1BFG7U9TuE7WqolZH1BqLWitR6yhqPUStv6gNFbUUUZsgao+I2hxRe0zUnhC1laL2vKi9IGovi9puUXtH1PaK2j5R+1bUfhC146J2RtQuilrYSV6LErWcolZA1K4XtZtF7Q5RKy1qd4taRVHrJWoDRG24qI0WtUmiNl3U5onaYlF7StSeE7X1orZF1HaK2hui9p6ofSJqX4naQVE7KmonRO0PUXOd4rVMopZN1HKLWiFRu1HUSopanKgli9q9olZZ1GqJWkNRayFq7UWtm6j1FbXBojZC1J4WtVWitkHUXhK1V0TtTVF7X9Q+FbWvRe17UTsmar+J2llRCzrNa5lFLVrU8ojadaJ2k6jdKmrxolZW1MqLWhVRqy1qjUStpah1ELXuotZP1IaI2khRGy9qU0VttqgtFLVlorZC1NaK2mZR+0bUDonaT6J2UtTOiVrwGV6LELUYUcsraoVFrZio3SZqCaJ2p6jdJ2pVRa2OqDUWtVai1lHUeohaf1EbKmopojZB1B4RtTmi9pioPSFqK0XteVF7QdReFrXdovaOqO0VtX2i9q2o/SBqx0Ut3++8VkTUiotaKVFLFLW7RO1+UasmanVFrYmotRa1TqLWU9QeELVhojZK1CaK2jRRmytqi0TtSVF7VtTWidqLorZD1F4XtXdF7WNR+1LUvhO1H0XtV1H7XdT+FLXwP3gtq6jlErWConaDqN0iavVFrZmotRW1LqLWW9QGitqDojZG1CaL2gxRmy9qS0TtaVFbJWobRO0lUXtF1N4UtfdF7VNR+1rUvhe1Y6L2m6idFbWgs7yWWdSiRS2PqF0najeJ2q2iFi9qZUWtvKhVEbXaotZI1FqKWgdRmyJqs0RtgagtFbXlorZG1DaJ2jZR2yVqb4vah6L2uajtF7XDovazqJ0StfOiFnKO1yJFLbuo5RO1IqJWXNRKiVqiqN0laveLWjVRqytqTUSttah1ErWeovaAqA0TtVGiNlHUponaXFFbJGq7Re0dUdsravtE7VtR+0HUjovaGVG7KGph53ktStRyiloBUbte1G4WtTtErbSo3S1qFUWthqjVF7VmotZW1LqIWm9RGyhqD4raGFGbLGozRG2+qC0RtadFbZWobRC1l0TtFVF7U9TeF7VPRe1PUQu/wGtZRS2XqBUUtRtE7RZRixW1MqJ2j6hVErWaotZA1JqLWjtR6ypqfURtkKg9JGpjRe1hUZspao+K2uOi9oyorRa1jaK2VdReFbW3RO0DUftM1L4RtUOi9pOonRS1c6IWfJHXIkQtRtSSRe1eUassarVEraGotRC19qLWTdT6itpgURshauNEbYqozRK1BaK2VNSWi9oaUdskattEbZeovS1qH4ra56K2X9QOi9rPonZK1M6LWsifvBYpatlFLZ+oFRG14qJWStQSRe0uUbtf1KqJWj9RGyJqI0VtvKhNFbXZorZQ1JaJ2gpRWytqm0Vtu6i9Jmp7RO0jUftC1A6I2hFR+0XUTovaBVELdQXRWhZRyyFq+UWtqKiVELXbRS1J1MqJWgVRqy5q9UStqai1EbXOotZL1AaI2nBRGy1qz4raOlF7UdR2iNrrovauqH0sal+K2nei9qOo/Spqv4van6IWHsRrWUUtl6gVFLUbRO0WUYsVtTKido+oVRK1mqLWQNSai1o7Uesqan1EbZCoPSRqY0XtYVGbKWqPitrjovaMqK0WtY2itlXUvhe1Y6L2m6idFbWgYF7LLGrRopZH1K4TtZtE7VZRixe1sqJWXtSqiFptUWskai1FrYOodRe1fqI2RNRGitp4UZsqarNFbaGoLRO1FaK2VtQ2i9p2UXtN1PaI2kei9oWoHRC1I6L2i6idFrUiIbxWXNRKiVqiqN0laveLWjVRqytqTUSttah1ErWeovaAqA0TtVGiNlHUponaXFFbJGpPitqzorZO1F4UtR2i9rqovStqH4val6L2naj9KGq/itrvovanqIWHiuNdUcslagVF7QZRu0XUYkWtqai1EbXOotZL1AaI2nBRGy1qk0RtuqjNE7XFovaUqD0nautFbYuo7RS1N0TtPVH7RNS+ErWDonZU1E6I2h+i5grjtUyilk3UcotaIVG7UdRKilqcqCWL2r2iVlnUaolaQ1FrIWrtRa2bqM0QtfmitkTUnha1VaK2QdReErVXRO1NUXtf1D4Vta9F7XtROyZqv4naWVELCue1zKIWLWp5RO06UbtJ1G4VtXhRKytq5UWtiqjVFrVGotZS1DqIWndR6ydqQ0RtpKiNF7WpojZb1BaK2jJRe0vUPhC1z0TtG1E7JGo/idpJUTsnasGZeC1C1GJELa+oFRa1YqJ2m6gliNqdonafqFUVtTqi1ljUWolaR1HrIWr9RW2oqKWI2gRRe0TU5ojaY6L2hKitFLXnRe0FUXtZ1HaL2juitlfU9olaaGZeyyJqOUQtv6gVFbUSona7qCWJWjlRqyBq1UWtnqg1FbU2otZZ1HqJ2gBRGy5qo0VtkqhNF7V5orZY1J4StedEbb2obRG1naL2hqi9J2qfiNpXonZQ1I6K2glR+0PUXBG8lknUsolablG7R9QqiVpNUWsgas1FrZ2odRW1PqI2SNQeErWxovawqM0UtUdF7XFRe0bUVovaRlHbKmqvitpbovaBqH0mat+I2iFR+0nUToraOVELjhTHu6IWI2p5Ra2wqBUTtdtELUHU7hS1+0StqqjVEbUhojZS1MaL2lRRmy1qC0VtmaitELW1orZZ1LaL2muitkfUPhK1L0TtgKgdEbVfRO20qF0QtdAs4nhX1HKIWn5RKypqJUTtdlFLErVyolZB1KqLWj1RaypqbUSts6j1ErUBojZc1EaL2iRRWytqm0Vtu6i9Jmp7RO0jUftC1A6I2hFR+0XUTovaBVELjRLbn6jlELX8olZU1EqI2u2iliRq5UStgqhVF7V6otZU1NqIWmdR6yVqA0RtuKiNFrVJojZd1OaJ2mJRe0rUnhO19aK2RdR2itoRUftF1E6L2gVRC80qtj9RyyFq+UWtqKiVELXbRS1J1MqJWgVRqy5q9UStqai1EbXOotZL1AaI2nBRGy1qk0TtEU9tyYrCGwseDG6OtY2e2tuz39u9fGK7jlg74KnlPnhf/n5vPVMJa997amfLjjjaaETunlg74alVuPBllbUzx9+MtdNiXH4XuZBsfPoiRa1+Nj68tiLXVeQGidxwkZskco+I3GMit1Tk1ojcBpF7ReReF7mPRe4LkTsicj+J3DmRc0XzXLZonsspcteLXHGRSxS5siJXReRqilxzkWsjcr1Err/IpYjcOJGbJXLzRe5pkXtW5F4Uue0it0fkPhC5b0TuoMidELkzIhcWI/rIGJ7LJ3LXidytIhcrcveIXAWRqydyjUWuo8h1E7nBIvegyE0WuWkit0jknhK5DSK3VeTeErkPRW6/yB0RudMid1HkorLzXK7sPHeDyJUUuWSRKy9ytUWusch1FLmeIjdM5EaL3HSRmy9yT4vcapHbKnK7RO5DkftC5I6I3HGRuyhy4Tl4LlcOniskciVFLl7kyotcVZFrLHKtRa6nyA0QudEiN1nk5ovc4yK3WuQ2idwukdsjcl+I3Lcid1zkfhe58Jw8ly0nzxUSuZtELl7k7hS5qiJX31OznVM2EbmWItda1NqKWmcxvF6iNkTURonhjRe5aSI3W+QWidwykXtW5NaK3Isit13kXhe5PSL3sch9IXLfidwRkftV5E6L3J8iF5qL57Lm4rkcIldQ5IqK3C0id7vIlRG5ciJXSeSqi1wDkWsqcu1ErrPI9RG5ASL3kMiNFrmHRW66yD0qcotF7hmRe07kNorcFpF7VeTeELkPRO4TkftG5A6K3E8id0LkzomcKzfPReTmuWwil1fkColcMZErKXIJIpcscveJXGWRqyNyDUWulci1F7keItdX5IaK3AiRmyByU0RujsgtELknRG65yD0vcptE7mWR2yVy74jchyK3T+T2i9wPIvezyJ0RufMiF5aH5yLz8FxOkcsncteLXHGRu0PkEkXubpG7X+RqiFxdkWsmcq1FrovI9RS5gSI3TOTGiNxEkZshcnNFbonIPSlyq0Runci9JHI7RO5NkXtX5D4VuS9F7nuR+1HkfhO530UuKC/PhefluWiRyyVy14ncDSJ3q8jFilxZkbtH5KqIXE2RayRyzUWug8h1Fbl+IjdI5EaK3FiRmypyM0Vuocg9LnIrRG61yG0Wua0i95rIvSVyH4ncZyJ3QOQOidwvIndS5C6IXHA+nsuSj+diRC6/yBUWuRIid5vIJYncnSJXQeSqilw9kWsscm1ErqPI9RK5/iI3XORSRG6SyD0icvNE7jGRe0rkVorcepF7QeR2itxukXtP5PaK3Fci963I/SBqJzy1MnOemX/jwnfSXdv+TdROitopUTstamdE7XdR+0PUzoraOVE7L2oXRO2iqP0paq78vBYkasGiFiJqoaIWJmrhopZJ1DKLWoSoRYpaFlGLErWsopZN1KJFLUbUsotaDlHLKWq5RC23qOURtbyilk/U8otaAVErKGqFRO06USssakVEraioXS9qN4jajaJ2k6gVE7XiolZC1G4WtVtEraSo3Spqt4laKVG7XdTuELVYUYsTtXhRSxC1RFFLErXSolZG1JJFrayo3Slqd4laOVG7W9TuEbV7Ra28qN0naveLWgVRqyhqlUStsqhVEbWqolZN1KqLWg1RqylqtUSttqjVEbW6olZP1OqLWgNRayhqjUSt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","debug_symbols":"","file_map":{"5":{"source":"use crate::meta::derive_via;\n\n#[derive_via(derive_eq)]\n// docs:start:eq-trait\npub trait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\n// docs:start:derive_eq\ncomptime fn derive_eq(s: TypeDefinition) -> Quoted {\n    let signature = quote { fn eq(_self: Self, _other: Self) -> bool };\n    let for_each_field = |name| quote { (_self.$name == _other.$name) };\n    let body = |fields| {\n        if s.fields_as_written().len() == 0 {\n            quote { true }\n        } else {\n            fields\n        }\n    };\n    crate::meta::make_trait_impl(\n        s,\n        quote { Eq },\n        signature,\n        for_each_field,\n        quote { & },\n        body,\n    )\n}\n// docs:end:derive_eq\n\nimpl Eq for Field {\n    fn eq(self, other: Field) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for u128 {\n    fn eq(self, other: u128) -> bool {\n        self == other\n    }\n}\nimpl Eq for u64 {\n    fn eq(self, other: u64) -> bool {\n        self == other\n    }\n}\nimpl Eq for u32 {\n    fn eq(self, other: u32) -> bool {\n        self == other\n    }\n}\nimpl Eq for u16 {\n    fn eq(self, other: u16) -> bool {\n        self == other\n    }\n}\nimpl Eq for u8 {\n    fn eq(self, other: u8) -> bool {\n        self == other\n    }\n}\nimpl Eq for u1 {\n    fn eq(self, other: u1) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for i8 {\n    fn eq(self, other: i8) -> bool {\n        self == other\n    }\n}\nimpl Eq for i16 {\n    fn eq(self, other: i16) -> bool {\n        self == other\n    }\n}\nimpl Eq for i32 {\n    fn eq(self, other: i32) -> bool {\n        self == other\n    }\n}\nimpl Eq for i64 {\n    fn eq(self, other: i64) -> bool {\n        self == other\n    }\n}\n\nimpl Eq for () {\n    fn eq(_self: Self, _other: ()) -> bool {\n        true\n    }\n}\nimpl Eq for bool {\n    fn eq(self, other: bool) -> bool {\n        self == other\n    }\n}\n\nimpl<T, let N: u32> Eq for [T; N]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T]\nwhere\n    T: Eq,\n{\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0..self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B)\nwhere\n    A: Eq,\n    B: Eq,\n{\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n{\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n{\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E)\nwhere\n    A: Eq,\n    B: Eq,\n    C: Eq,\n    D: Eq,\n    E: Eq,\n{\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0)\n            & self.1.eq(other.1)\n            & self.2.eq(other.2)\n            & self.3.eq(other.3)\n            & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\npub struct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n#[derive_via(derive_ord)]\n// docs:start:ord-trait\npub trait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// docs:start:derive_ord\ncomptime fn derive_ord(s: TypeDefinition) -> Quoted {\n    let signature = quote { fn cmp(_self: Self, _other: Self) -> std::cmp::Ordering };\n    let for_each_field = |name| quote {\n        if result == std::cmp::Ordering::equal() {\n            result = _self.$name.cmp(_other.$name);\n        }\n    };\n    let body = |fields| quote {\n        let mut result = std::cmp::Ordering::equal();\n        $fields\n        result\n    };\n    crate::meta::make_trait_impl(s, quote { Ord }, signature, for_each_field, quote {}, body)\n}\n// docs:end:derive_ord\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u128 {\n    fn cmp(self, other: u128) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u16 {\n    fn cmp(self, other: u16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i16 {\n    fn cmp(self, other: i16) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else if other {\n            Ordering::less()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T]\nwhere\n    T: Ord,\n{\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0..self.len() {\n            if result == Ordering::equal() {\n                result = self[i].cmp(other[i]);\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B)\nwhere\n    A: Ord,\n    B: Ord,\n{\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n{\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n{\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E)\nwhere\n    A: Ord,\n    B: Ord,\n    C: Ord,\n    D: Ord,\n    E: Ord,\n{\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v1\n    } else {\n        v2\n    }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T\nwhere\n    T: Ord,\n{\n    if v1 > v2 {\n        v2\n    } else {\n        v1\n    }\n}\n\nmod cmp_tests {\n    use crate::cmp::{max, min};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n","path":"std/cmp.nr"},"6":{"source":"use crate::{cmp::Eq, convert::From, runtime::is_unconstrained, static_assert};\n\n/// A `BoundedVec<T, MaxLen>` is a growable storage similar to a `Vec<T>` except that it\n/// is bounded with a maximum possible length. Unlike `Vec`, `BoundedVec` is not implemented\n/// via slices and thus is not subject to the same restrictions slices are (notably, nested\n/// slices - and thus nested vectors as well - are disallowed).\n///\n/// Since a BoundedVec is backed by a normal array under the hood, growing the BoundedVec by\n/// pushing an additional element is also more efficient - the length only needs to be increased\n/// by one.\n///\n/// For these reasons `BoundedVec<T, N>` should generally be preferred over `Vec<T>` when there\n/// is a reasonable maximum bound that can be placed on the vector.\n///\n/// Example:\n///\n/// ```noir\n/// let mut vector: BoundedVec<Field, 10> = BoundedVec::new();\n/// for i in 0..5 {\n///     vector.push(i);\n/// }\n/// assert(vector.len() == 5);\n/// assert(vector.max_len() == 10);\n/// ```\npub struct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    /// Creates a new, empty vector of length zero.\n    ///\n    /// Since this container is backed by an array internally, it still needs an initial value\n    /// to give each element. To resolve this, each element is zeroed internally. This value\n    /// is guaranteed to be inaccessible unless `get_unchecked` is used.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let empty_vector: BoundedVec<Field, 10> = BoundedVec::new();\n    /// assert(empty_vector.len() == 0);\n    /// ```\n    ///\n    /// Note that whenever calling `new` the maximum length of the vector should always be specified\n    /// via a type signature:\n    ///\n    /// ```noir\n    /// fn good() -> BoundedVec<Field, 10> {\n    ///     // Ok! MaxLen is specified with a type annotation\n    ///     let v1: BoundedVec<Field, 3> = BoundedVec::new();\n    ///     let v2 = BoundedVec::new();\n    ///\n    ///     // Ok! MaxLen is known from the type of `good`'s return value\n    ///     v2\n    /// }\n    ///\n    /// fn bad() {\n    ///     // Error: Type annotation needed\n    ///     // The compiler can't infer `MaxLen` from the following code:\n    ///     let mut v3 = BoundedVec::new();\n    ///     v3.push(5);\n    /// }\n    /// ```\n    ///\n    /// This defaulting of `MaxLen` (and numeric generics in general) to zero may change in future noir versions\n    /// but for now make sure to use type annotations when using bounded vectors. Otherwise, you will receive a\n    /// constraint failure at runtime when the vec is pushed to.\n    pub fn new() -> Self {\n        let zeroed = crate::mem::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero.\n    ///\n    /// If the given index is equal to or greater than the length of the vector, this\n    /// will issue a constraint failure.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     let last = v.get(v.len() - 1);\n    ///     assert(first != last);\n    /// }\n    /// ```\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len, \"Attempted to read past end of BoundedVec\");\n        self.get_unchecked(index)\n    }\n\n    /// Retrieves an element from the vector at the given index, starting from zero, without\n    /// performing a bounds check.\n    ///\n    /// Since this function does not perform a bounds check on length before accessing the element,\n    /// it is unsafe! Use at your own risk!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn sum_of_first_three<let N: u32>(v: BoundedVec<u32, N>) -> u32 {\n    ///     // Always ensure the length is larger than the largest\n    ///     // index passed to get_unchecked\n    ///     assert(v.len() > 2);\n    ///     let first = v.get_unchecked(0);\n    ///     let second = v.get_unchecked(1);\n    ///     let third = v.get_unchecked(2);\n    ///     first + second + third\n    /// }\n    /// ```\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero.\n    ///\n    /// If the given index is equal to or greater than the length of the vector, this will issue a constraint failure.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn foo<let N: u32>(v: BoundedVec<u32, N>) {\n    ///     let first = v.get(0);\n    ///     assert(first != 42);\n    ///     v.set(0, 42);\n    ///     let new_first = v.get(0);\n    ///     assert(new_first == 42);\n    /// }\n    /// ```\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Writes an element to the vector at the given index, starting from zero, without performing a bounds check.\n    ///\n    /// Since this function does not perform a bounds check on length before accessing the element, it is unsafe! Use at your own risk!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// fn set_unchecked_example() {\n    ///     let mut vec: BoundedVec<u32, 5> = BoundedVec::new();\n    ///     vec.extend_from_array([1, 2]);\n    ///\n    ///     // Here we're safely writing within the valid range of `vec`\n    ///     // `vec` now has the value [42, 2]\n    ///     vec.set_unchecked(0, 42);\n    ///\n    ///     // We can then safely read this value back out of `vec`.\n    ///     // Notice that we use the checked version of `get` which would prevent reading unsafe values.\n    ///     assert_eq(vec.get(0), 42);\n    ///\n    ///     // We've now written past the end of `vec`.\n    ///     // As this index is still within the maximum potential length of `v`,\n    ///     // it won't cause a constraint failure.\n    ///     vec.set_unchecked(2, 42);\n    ///     println(vec);\n    ///\n    ///     // This will write past the end of the maximum potential length of `vec`,\n    ///     // it will then trigger a constraint failure.\n    ///     vec.set_unchecked(5, 42);\n    ///     println(vec);\n    /// }\n    /// ```\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    /// Pushes an element to the end of the vector. This increases the length\n    /// of the vector by one.\n    ///\n    /// Panics if the new length of the vector will be greater than the max length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    ///\n    /// v.push(1);\n    /// v.push(2);\n    ///\n    /// // Panics with failed assertion \"push out of bounds\"\n    /// v.push(3);\n    /// ```\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    /// Returns the current length of this vector\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 4> = BoundedVec::new();\n    /// assert(v.len() == 0);\n    ///\n    /// v.push(100);\n    /// assert(v.len() == 1);\n    ///\n    /// v.push(200);\n    /// v.push(300);\n    /// v.push(400);\n    /// assert(v.len() == 4);\n    ///\n    /// let _ = v.pop();\n    /// let _ = v.pop();\n    /// assert(v.len() == 2);\n    /// ```\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    /// Returns the maximum length of this vector. This is always\n    /// equal to the `MaxLen` parameter this vector was initialized with.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    ///\n    /// assert(v.max_len() == 5);\n    /// v.push(10);\n    /// assert(v.max_len() == 5);\n    /// ```\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    /// Returns the internal array within this vector.\n    ///\n    /// Since arrays in Noir are immutable, mutating the returned storage array will not mutate\n    /// the storage held internally by this vector.\n    ///\n    /// Note that uninitialized elements may be zeroed out!\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 5> = BoundedVec::new();\n    ///\n    /// assert(v.storage() == [0, 0, 0, 0, 0]);\n    ///\n    /// v.push(57);\n    /// assert(v.storage() == [57, 0, 0, 0, 0]);\n    /// ```\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    /// Pushes each element from the given array to this vector.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_array([2, 4]);\n    ///\n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the given slice to this vector.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut vec: BoundedVec<Field, 3> = BoundedVec::new();\n    /// vec.extend_from_slice(&[2, 4]);\n    ///\n    /// assert(vec.len == 2);\n    /// assert(vec.get(0) == 2);\n    /// assert(vec.get(1) == 4);\n    /// ```\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    /// Pushes each element from the other vector to this vector. The length of\n    /// the other vector is left unchanged.\n    ///\n    /// Panics if pushing each element would cause the length of this vector\n    /// to exceed the maximum length.\n    ///\n    /// ```noir\n    /// let mut v1: BoundedVec<Field, 5> = BoundedVec::new();\n    /// let mut v2: BoundedVec<Field, 7> = BoundedVec::new();\n    ///\n    /// v2.extend_from_array([1, 2, 3]);\n    /// v1.extend_from_bounded_vec(v2);\n    ///\n    /// assert(v1.storage() == [1, 2, 3, 0, 0]);\n    /// assert(v2.storage() == [1, 2, 3, 0, 0, 0, 0]);\n    /// ```\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        if is_unconstrained() {\n            for i in 0..append_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        } else {\n            let mut exceeded_len = false;\n            for i in 0..Len {\n                exceeded_len |= i == append_len;\n                if !exceeded_len {\n                    self.storage[self.len + i] = vec.get_unchecked(i);\n                }\n            }\n        }\n        self.len = new_len;\n    }\n\n    /// Creates a new vector, populating it with values derived from an array input.\n    /// The maximum length of the vector is determined based on the type signature.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array([1, 2, 3])\n    /// ```\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        static_assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    /// Pops the element at the end of the vector. This will decrease the length\n    /// of the vector by one.\n    ///\n    /// Panics if the vector is empty.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<Field, 2> = BoundedVec::new();\n    /// v.push(1);\n    /// v.push(2);\n    ///\n    /// let two = v.pop();\n    /// let one = v.pop();\n    ///\n    /// assert(two == 2);\n    /// assert(one == 1);\n    ///\n    /// // error: cannot pop from an empty vector\n    /// let _ = v.pop();\n    /// ```\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::mem::zeroed();\n        elem\n    }\n\n    /// Returns true if the given predicate returns true for any element\n    /// in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let mut v: BoundedVec<u32, 3> = BoundedVec::new();\n    /// v.extend_from_array([2, 4, 6]);\n    ///\n    /// let all_even = !v.any(|elem: u32| elem % 2 != 0);\n    /// assert(all_even);\n    /// ```\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        if is_unconstrained() {\n            for i in 0..self.len {\n                ret |= predicate(self.storage[i]);\n            }\n        } else {\n            let mut ret = false;\n            let mut exceeded_len = false;\n            for i in 0..MaxLen {\n                exceeded_len |= i == self.len;\n                if !exceeded_len {\n                    ret |= predicate(self.storage[i]);\n                }\n            }\n        }\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.map(|value| value * 2);\n    ///\n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n\n        if is_unconstrained() {\n            for i in 0..self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i < self.len() {\n                    ret.storage[i] = f(self.get_unchecked(i));\n                }\n            }\n        }\n\n        ret\n    }\n\n    /// Creates a new vector of equal size by calling a closure on each element\n    /// in this vector, along with its index.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let result = vec.mapi(|i, value| i + value * 2);\n    ///\n    /// let expected = BoundedVec::from_array([2, 5, 8, 11]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn mapi<U, Env>(self, f: fn[Env](u32, T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n\n        if is_unconstrained() {\n            for i in 0..self.len() {\n                ret.storage[i] = f(i, self.get_unchecked(i));\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i < self.len() {\n                    ret.storage[i] = f(i, self.get_unchecked(i));\n                }\n            }\n        }\n\n        ret\n    }\n\n    /// Calls a closure on each element in this vector.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let mut result = BoundedVec::<u32, 4>::new();\n    /// vec.for_each(|value| result.push(value * 2));\n    ///\n    /// let expected = BoundedVec::from_array([2, 4, 6, 8]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn for_each<Env>(self, f: fn[Env](T) -> ()) {\n        if is_unconstrained() {\n            for i in 0..self.len() {\n                f(self.get_unchecked(i));\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i < self.len() {\n                    f(self.get_unchecked(i));\n                }\n            }\n        }\n    }\n\n    /// Calls a closure on each element in this vector, along with its index.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n    /// let mut result = BoundedVec::<u32, 4>::new();\n    /// vec.for_eachi(|i, value| result.push(i + value * 2));\n    ///\n    /// let expected = BoundedVec::from_array([2, 5, 8, 11]);\n    /// assert_eq(result, expected);\n    /// ```\n    pub fn for_eachi<Env>(self, f: fn[Env](u32, T) -> ()) {\n        if is_unconstrained() {\n            for i in 0..self.len() {\n                f(i, self.get_unchecked(i));\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i < self.len() {\n                    f(i, self.get_unchecked(i));\n                }\n            }\n        }\n    }\n\n    /// Creates a new BoundedVec from the given array and length.\n    /// The given length must be less than or equal to the length of the array.\n    ///\n    /// This function will zero out any elements at or past index `len` of `array`.\n    /// This incurs an extra runtime cost of O(MaxLen). If you are sure your array is\n    /// zeroed after that index, you can use `from_parts_unchecked` to remove the extra loop.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 0], 3);\n    /// assert_eq(vec.len(), 3);\n    /// ```\n    pub fn from_parts(mut array: [T; MaxLen], len: u32) -> Self {\n        assert(len <= MaxLen);\n        let zeroed = crate::mem::zeroed();\n\n        if is_unconstrained() {\n            for i in len..MaxLen {\n                array[i] = zeroed;\n            }\n        } else {\n            for i in 0..MaxLen {\n                if i >= len {\n                    array[i] = zeroed;\n                }\n            }\n        }\n\n        BoundedVec { storage: array, len }\n    }\n\n    /// Creates a new BoundedVec from the given array and length.\n    /// The given length must be less than or equal to the length of the array.\n    ///\n    /// This function is unsafe because it expects all elements past the `len` index\n    /// of `array` to be zeroed, but does not check for this internally. Use `from_parts`\n    /// for a safe version of this function which does zero out any indices past the\n    /// given length. Invalidating this assumption can notably cause `BoundedVec::eq`\n    /// to give incorrect results since it will check even elements past `len`.\n    ///\n    /// Example:\n    ///\n    /// ```noir\n    /// let vec: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 0], 3);\n    /// assert_eq(vec.len(), 3);\n    ///\n    /// // invalid use!\n    /// let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 1], 3);\n    /// let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 2], 3);\n    ///\n    /// // both vecs have length 3 so we'd expect them to be equal, but this\n    /// // fails because elements past the length are still checked in eq\n    /// assert_eq(vec1, vec2); // fails\n    /// ```\n    pub fn from_parts_unchecked(array: [T; MaxLen], len: u32) -> Self {\n        assert(len <= MaxLen);\n        BoundedVec { storage: array, len }\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen>\nwhere\n    T: Eq,\n{\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n        if self.len == other.len {\n            self.storage == other.storage\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen> {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n\n    mod get {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test(should_fail_with = \"Attempted to read past end of BoundedVec\")]\n        fn panics_when_reading_elements_past_end_of_vec() {\n            let vec: BoundedVec<Field, 5> = BoundedVec::new();\n\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod mapi {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-mapi-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.mapi(|i, value| i + value * 2);\n            // docs:end:bounded-vec-mapi-example\n            let expected = BoundedVec::from_array([2, 5, 8, 11]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.mapi(|i, value| (i + value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 5, 8, 11]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.mapi(|_, value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod for_each {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        // map in terms of for_each\n        fn for_each_map<T, U, Env, let MaxLen: u32>(\n            input: BoundedVec<T, MaxLen>,\n            f: fn[Env](T) -> U,\n        ) -> BoundedVec<U, MaxLen> {\n            let mut output = BoundedVec::<U, MaxLen>::new();\n            let output_ref = &mut output;\n            input.for_each(|x| output_ref.push(f(x)));\n            output\n        }\n\n        #[test]\n        fn smoke_test() {\n            let mut acc = 0;\n            let acc_ref = &mut acc;\n            // docs:start:bounded-vec-for-each-example\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([1, 2, 3]);\n            vec.for_each(|value| { *acc_ref += value; });\n            // docs:end:bounded-vec-for-each-example\n            assert_eq(acc, 6);\n        }\n\n        #[test]\n        fn applies_function_correctly() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = for_each_map(vec, |value| value * 2);\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = for_each_map(vec, |value| (value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = for_each_map(vec, |value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod for_eachi {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        // mapi in terms of for_eachi\n        fn for_eachi_mapi<T, U, Env, let MaxLen: u32>(\n            input: BoundedVec<T, MaxLen>,\n            f: fn[Env](u32, T) -> U,\n        ) -> BoundedVec<U, MaxLen> {\n            let mut output = BoundedVec::<U, MaxLen>::new();\n            let output_ref = &mut output;\n            input.for_eachi(|i, x| output_ref.push(f(i, x)));\n            output\n        }\n\n        #[test]\n        fn smoke_test() {\n            let mut acc = 0;\n            let acc_ref = &mut acc;\n            // docs:start:bounded-vec-for-eachi-example\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([1, 2, 3]);\n            vec.for_eachi(|i, value| { *acc_ref += i * value; });\n            // docs:end:bounded-vec-for-eachi-example\n\n            // 0 * 1 + 1 * 2 + 2 * 3\n            assert_eq(acc, 8);\n        }\n\n        #[test]\n        fn applies_function_correctly() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = for_eachi_mapi(vec, |i, value| i + value * 2);\n            let expected = BoundedVec::from_array([2, 5, 8, 11]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = for_eachi_mapi(vec, |i, value| (i + value * 2) as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 5, 8, 11]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = for_eachi_mapi(vec, |_, value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.get_unchecked(2), 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.get(0), 1);\n            assert_eq(bounded_vec.get(1), 2);\n            assert_eq(bounded_vec.get(2), 3);\n        }\n\n        #[test(should_fail_with = \"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n        use crate::convert::From;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.get(0), 1);\n            assert_eq(bounded_vec.get(1), 2);\n        }\n    }\n\n    mod trait_eq {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty_equality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n            assert_eq(bounded_vec1, bounded_vec2);\n        }\n\n        #[test]\n        fn inequality() {\n            let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n            let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n            bounded_vec1.push(1);\n            bounded_vec2.push(2);\n\n            assert(bounded_vec1 != bounded_vec2);\n        }\n    }\n\n    mod from_parts {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn from_parts() {\n            // docs:start:from-parts\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 0], 3);\n            assert_eq(vec.len(), 3);\n\n            // Any elements past the given length are zeroed out, so these\n            // two BoundedVecs will be completely equal\n            let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 1], 3);\n            let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts([1, 2, 3, 2], 3);\n            assert_eq(vec1, vec2);\n            // docs:end:from-parts\n        }\n\n        #[test]\n        fn from_parts_unchecked() {\n            // docs:start:from-parts-unchecked\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 0], 3);\n            assert_eq(vec.len(), 3);\n\n            // invalid use!\n            let vec1: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 1], 3);\n            let vec2: BoundedVec<u32, 4> = BoundedVec::from_parts_unchecked([1, 2, 3, 2], 3);\n\n            // both vecs have length 3 so we'd expect them to be equal, but this\n            // fails because elements past the length are still checked in eq\n            assert(vec1 != vec2);\n            // docs:end:from-parts-unchecked\n        }\n    }\n}\n","path":"std/collections/bounded_vec.nr"},"16":{"source":"use crate::cmp::Eq;\nuse crate::hash::Hash;\nuse crate::ops::arith::{Add, Neg, Sub};\n\n/// A point on the embedded elliptic curve\n/// By definition, the base field of the embedded curve is the scalar field of the proof system curve, i.e the Noir Field.\n/// x and y denotes the Weierstrass coordinates of the point, if is_infinite is false.\npub struct EmbeddedCurvePoint {\n    pub x: Field,\n    pub y: Field,\n    pub is_infinite: bool,\n}\n\nimpl EmbeddedCurvePoint {\n    /// Elliptic curve point doubling operation\n    /// returns the doubled point of a point P, i.e P+P\n    pub fn double(self) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, self)\n    }\n\n    /// Returns the null element of the curve; 'the point at infinity'\n    pub fn point_at_infinity() -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    }\n\n    /// Returns the curve's generator point.\n    pub fn generator() -> EmbeddedCurvePoint {\n        // Generator point for the grumpkin curve (y^2 = x^3 - 17)\n        EmbeddedCurvePoint {\n            x: 1,\n            y: 17631683881184975370165255887551781615748388533673675138860, // sqrt(-16)\n            is_infinite: false,\n        }\n    }\n}\n\nimpl Add for EmbeddedCurvePoint {\n    /// Adds two points P+Q, using the curve addition formula, and also handles point at infinity\n    fn add(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, other)\n    }\n}\n\nimpl Sub for EmbeddedCurvePoint {\n    /// Points subtraction operation, using addition and negation\n    fn sub(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint {\n        self + other.neg()\n    }\n}\n\nimpl Neg for EmbeddedCurvePoint {\n    /// Negates a point P, i.e returns -P, by negating the y coordinate.\n    /// If the point is at infinity, then the result is also at infinity.\n    fn neg(self) -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: self.x, y: -self.y, is_infinite: self.is_infinite }\n    }\n}\n\nimpl Eq for EmbeddedCurvePoint {\n    /// Checks whether two points are equal\n    fn eq(self: Self, b: EmbeddedCurvePoint) -> bool {\n        (self.is_infinite & b.is_infinite)\n            | ((self.is_infinite == b.is_infinite) & (self.x == b.x) & (self.y == b.y))\n    }\n}\n\nimpl Hash for EmbeddedCurvePoint {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: crate::hash::Hasher,\n    {\n        if self.is_infinite {\n            self.is_infinite.hash(state);\n        } else {\n            self.x.hash(state);\n            self.y.hash(state);\n        }\n    }\n}\n\n/// Scalar for the embedded curve represented as low and high limbs\n/// By definition, the scalar field of the embedded curve is base field of the proving system curve.\n/// It may not fit into a Field element, so it is represented with two Field elements; its low and high limbs.\npub struct EmbeddedCurveScalar {\n    pub lo: Field,\n    pub hi: Field,\n}\n\nimpl EmbeddedCurveScalar {\n    pub fn new(lo: Field, hi: Field) -> Self {\n        EmbeddedCurveScalar { lo, hi }\n    }\n\n    #[field(bn254)]\n    pub fn from_field(scalar: Field) -> EmbeddedCurveScalar {\n        let (a, b) = crate::field::bn254::decompose(scalar);\n        EmbeddedCurveScalar { lo: a, hi: b }\n    }\n\n    //Bytes to scalar: take the first (after the specified offset) 16 bytes of the input as the lo value, and the next 16 bytes as the hi value\n    #[field(bn254)]\n    pub(crate) fn from_bytes(bytes: [u8; 64], offset: u32) -> EmbeddedCurveScalar {\n        let mut v = 1;\n        let mut lo = 0 as Field;\n        let mut hi = 0 as Field;\n        for i in 0..16 {\n            lo = lo + (bytes[offset + 31 - i] as Field) * v;\n            hi = hi + (bytes[offset + 15 - i] as Field) * v;\n            v = v * 256;\n        }\n        let sig_s = crate::embedded_curve_ops::EmbeddedCurveScalar { lo, hi };\n        sig_s\n    }\n}\n\nimpl Eq for EmbeddedCurveScalar {\n    fn eq(self, other: Self) -> bool {\n        (other.hi == self.hi) & (other.lo == self.lo)\n    }\n}\n\nimpl Hash for EmbeddedCurveScalar {\n    fn hash<H>(self, state: &mut H)\n    where\n        H: crate::hash::Hasher,\n    {\n        self.hi.hash(state);\n        self.lo.hash(state);\n    }\n}\n\n// Computes a multi scalar multiplication over the embedded curve.\n// For bn254, We have Grumpkin and Baby JubJub.\n// For bls12-381, we have JubJub and Bandersnatch.\n//\n// The embedded curve being used is decided by the\n// underlying proof system.\n// docs:start:multi_scalar_mul\npub fn multi_scalar_mul<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N],\n) -> EmbeddedCurvePoint\n// docs:end:multi_scalar_mul\n{\n    multi_scalar_mul_array_return(points, scalars)[0]\n}\n\n#[foreign(multi_scalar_mul)]\npub(crate) fn multi_scalar_mul_array_return<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N],\n) -> [EmbeddedCurvePoint; 1] {}\n\n// docs:start:fixed_base_scalar_mul\npub fn fixed_base_scalar_mul(scalar: EmbeddedCurveScalar) -> EmbeddedCurvePoint\n// docs:end:fixed_base_scalar_mul\n{\n    multi_scalar_mul([EmbeddedCurvePoint::generator()], [scalar])\n}\n\n/// This function only assumes that the points are on the curve\n/// It handles corner cases around the infinity point causing some overhead compared to embedded_curve_add_not_nul and embedded_curve_add_unsafe\n// docs:start:embedded_curve_add\npub fn embedded_curve_add(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    // docs:end:embedded_curve_add\n    if crate::runtime::is_unconstrained() {\n        // `embedded_curve_add_unsafe` requires the inputs not to be the infinity point, so we check it here.\n        // This is because `embedded_curve_add_unsafe` uses the `embedded_curve_add` opcode.\n        // For efficiency, the backend does not check the inputs for the infinity point, but it assumes that they are not the infinity point\n        // so that it can apply the ec addition formula directly.\n        if point1.is_infinite {\n            point2\n        } else if point2.is_infinite {\n            point1\n        } else {\n            embedded_curve_add_unsafe(point1, point2)\n        }\n    } else {\n        // In a constrained context, we also need to check the inputs are not the infinity point because we also use `embedded_curve_add_unsafe`\n        // However we also need to identify the case where the two inputs are the same, because then\n        // the addition formula does not work and we need to use the doubling formula instead.\n        // In unconstrained context, we can check directly if the input values are the same when solving the opcode, so it is not an issue.\n\n        // x_coordinates_match is true if both abscissae are the same\n        let x_coordinates_match = point1.x == point2.x;\n        // y_coordinates_match is true if both ordinates are the same\n        let y_coordinates_match = point1.y == point2.y;\n        // double_predicate is true if both abscissae and ordinates are the same\n        let double_predicate = (x_coordinates_match & y_coordinates_match);\n        // If the abscissae are the same, but not the ordinates, then one point is the opposite of the other\n        let infinity_predicate = (x_coordinates_match & !y_coordinates_match);\n        let point1_1 = EmbeddedCurvePoint {\n            x: point1.x + (x_coordinates_match as Field),\n            y: point1.y,\n            is_infinite: false,\n        };\n        let point2_1 = EmbeddedCurvePoint { x: point2.x, y: point2.y, is_infinite: false };\n        // point1_1 is guaranteed to have a different abscissa than point2:\n        // - if x_coordinates_match is 0, that means point1.x != point2.x, and point1_1.x = point1.x + 0\n        // - if x_coordinates_match is 1, that means point1.x = point2.x, but point1_1.x = point1.x + 1 in this case\n        // Because the abscissa is different, the addition formula is guaranteed to succeed, so we can safely use `embedded_curve_add_unsafe`\n        // Note that this computation may be garbage: if x_coordinates_match is 1, or if one of the input is the point at infinity.\n        let mut result = embedded_curve_add_unsafe(point1_1, point2_1);\n\n        // `embedded_curve_add_unsafe` is doing a doubling if the input is the same variable, because in this case it is guaranteed (at 'compile time') that the input is the same.\n        let double = embedded_curve_add_unsafe(point1, point1);\n        // `embedded_curve_add_unsafe` would not perform doubling, even if the inputs point1 and point2 are the same, because it cannot know this without adding some logic (and some constraints)\n        // However we did this logic when we computed `double_predicate`, so we set the result to 2*point1 if point1 and point2 are the same\n        result = if double_predicate { double } else { result };\n\n        // Same logic as above for unconstrained context, we set the proper result when one of the inputs is the infinity point\n        if point1.is_infinite {\n            result = point2;\n        }\n        if point2.is_infinite {\n            result = point1;\n        }\n\n        // Finally, we set the is_infinity flag of the result:\n        // Opposite points should sum into the infinity point, however, if one of them is point at infinity, their coordinates are not meaningful\n        // so we should not use the fact that the inputs are opposite in this case:\n        let mut result_is_infinity =\n            infinity_predicate & (!point1.is_infinite & !point2.is_infinite);\n        // However, if both of them are at infinity, then the result is also at infinity\n        result.is_infinite = result_is_infinity | (point1.is_infinite & point2.is_infinite);\n        result\n    }\n}\n\n#[foreign(embedded_curve_add)]\nfn embedded_curve_add_array_return(\n    _point1: EmbeddedCurvePoint,\n    _point2: EmbeddedCurvePoint,\n) -> [EmbeddedCurvePoint; 1] {}\n\n/// This function assumes that:\n/// The points are on the curve, and\n/// The points don't share an x-coordinate, and\n/// Neither point is the infinity point.\n/// If it is used with correct input, the function ensures the correct non-zero result is returned.\n/// Except for points on the curve, the other assumptions are checked by the function. It will cause assertion failure if they are not respected.\npub fn embedded_curve_add_not_nul(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    assert(point1.x != point2.x);\n    assert(!point1.is_infinite);\n    assert(!point2.is_infinite);\n    embedded_curve_add_unsafe(point1, point2)\n}\n\n/// Unsafe ec addition\n/// If the inputs are the same, it will perform a doubling, but only if point1 and point2 are the same variable.\n/// If they have the same value but are different variables, the result will be incorrect because in this case\n/// it assumes (but does not check) that the points' x-coordinates are not equal.\n/// It also assumes neither point is the infinity point.\npub fn embedded_curve_add_unsafe(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint,\n) -> EmbeddedCurvePoint {\n    embedded_curve_add_array_return(point1, point2)[0]\n}\n","path":"std/embedded_curve_ops.nr"},"17":{"source":"use crate::field::field_less_than;\nuse crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\npub(crate) global TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(x: Field) -> (Field, Field) {\n    // Here's we're taking advantage of truncating 128 bit limbs from the input field\n    // and then subtracting them from the input such the field division is equivalent to integer division.\n    let low = (x as u128) as Field;\n    let high = (x - low) / TWO_POW_128;\n\n    (low, high)\n}\n\npub(crate) unconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nunconstrained fn lte_hint(x: Field, y: Field) -> bool {\n    if x == y {\n        true\n    } else {\n        field_less_than(x, y)\n    }\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    // Safety: borrow is enforced to be boolean due to its type.\n    // if borrow is 0, it asserts that (alo > blo && ahi >= bhi)\n    // if borrow is 1, it asserts that (alo <= blo && ahi > bhi)\n    unsafe {\n        let borrow = lte_hint(alo, blo);\n\n        let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n        let rhi = ahi - bhi - (borrow as Field);\n\n        rlo.assert_max_bit_size::<128>();\n        rhi.assert_max_bit_size::<128>();\n    }\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        // Safety: decomposition is properly checked below\n        unsafe {\n            // Take hints of the decomposition\n            let (xlo, xhi) = decompose_hint(x);\n\n            // Range check the limbs\n            xlo.assert_max_bit_size::<128>();\n            xhi.assert_max_bit_size::<128>();\n\n            // Check that the decomposition is correct\n            assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n            // Assert that the decomposition of P is greater than the decomposition of x\n            assert_gt_limbs((PLO, PHI), (xlo, xhi));\n            (xlo, xhi)\n        }\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(\n            // Safety: already unconstrained\n            unsafe { field_less_than(b, a) },\n        );\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unsafe in unconstrained\n        unsafe {\n            field_less_than(b, a)\n        }\n    } else if a == b {\n        false\n    } else {\n        // Safety: Take a hint of the comparison and verify it\n        unsafe {\n            if field_less_than(a, b) {\n                assert_gt(b, a);\n                false\n            } else {\n                assert_gt(a, b);\n                true\n            }\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{assert_gt, decompose, gt, lte_hint, PHI, PLO, TWO_POW_128};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_lte_hint() {\n        assert(lte_hint(0, 1));\n        assert(lte_hint(0, 0x100));\n        assert(lte_hint(0x100, TWO_POW_128 - 1));\n        assert(!lte_hint(0 - 1, 0));\n\n        assert(lte_hint(0, 0));\n        assert(lte_hint(0x100, 0x100));\n        assert(lte_hint(0 - 1, 0 - 1));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"18":{"source":"pub mod bn254;\nuse crate::{runtime::is_unconstrained, static_assert};\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    /// Asserts that `self` can be represented in `bit_size` bits.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^{bit_size}`.\n    // docs:start:assert_max_bit_size\n    pub fn assert_max_bit_size<let BIT_SIZE: u32>(self) {\n        // docs:end:assert_max_bit_size\n        static_assert(\n            BIT_SIZE < modulus_num_bits() as u32,\n            \"BIT_SIZE must be less than modulus_num_bits\",\n        );\n        __assert_max_bit_size(self, BIT_SIZE);\n    }\n\n    /// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n    /// This slice will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_le_bits\n    pub fn to_le_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_le_bits\n        let bits = __to_le_bits(self);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[N - 1 - i] != p[N - 1 - i]) {\n                        assert(p[N - 1 - i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n    /// This array will be zero padded should not all bits be necessary to represent `self`.\n    ///\n    /// # Failures\n    /// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n    /// be able to represent the original `Field`.\n    ///\n    /// # Safety\n    /// The bit decomposition returned is canonical and is guaranteed to not overflow the modulus.\n    // docs:start:to_be_bits\n    pub fn to_be_bits<let N: u32>(self: Self) -> [u1; N] {\n        // docs:end:to_be_bits\n        let bits = __to_be_bits(self);\n\n        if !is_unconstrained() {\n            // Ensure that the decomposition does not overflow the modulus\n            let p = modulus_be_bits();\n            assert(bits.len() <= p.len());\n            let mut ok = bits.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bits[i] != p[i]) {\n                        assert(p[i] == 1);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bits\n    }\n\n    /// Decomposes `self` into its little endian byte decomposition as a `[u8;N]` array\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_le_bytes\n    pub fn to_le_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_le_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_le_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_le_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[N - 1 - i] != p[N - 1 - i]) {\n                        assert(bytes[N - 1 - i] < p[N - 1 - i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    /// Decomposes `self` into its big endian byte decomposition as a `[u8;N]` array of length required to represent the field modulus\n    /// This array will be zero padded should not all bytes be necessary to represent `self`.\n    ///\n    /// # Failures\n    ///  The length N of the array must be big enough to contain all the bytes of the 'self',\n    ///  and no more than the number of bytes required to represent the field modulus\n    ///\n    /// # Safety\n    /// The result is ensured to be the canonical decomposition of the field element\n    // docs:start:to_be_bytes\n    pub fn to_be_bytes<let N: u32>(self: Self) -> [u8; N] {\n        // docs:end:to_be_bytes\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        // Compute the byte decomposition\n        let bytes = self.to_be_radix(256);\n\n        if !is_unconstrained() {\n            // Ensure that the byte decomposition does not overflow the modulus\n            let p = modulus_be_bytes();\n            assert(bytes.len() <= p.len());\n            let mut ok = bytes.len() != p.len();\n            for i in 0..N {\n                if !ok {\n                    if (bytes[i] != p[i]) {\n                        assert(bytes[i] < p[i]);\n                        ok = true;\n                    }\n                }\n            }\n            assert(ok);\n        }\n        bytes\n    }\n\n    fn to_le_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            static_assert(1 < radix, \"radix must be greater than 1\");\n            static_assert(radix <= 256, \"radix must be less than or equal to 256\");\n            static_assert(radix & (radix - 1) == 0, \"radix must be a power of 2\");\n        }\n        __to_le_radix(self, radix)\n    }\n\n    fn to_be_radix<let N: u32>(self: Self, radix: u32) -> [u8; N] {\n        // Brillig does not need an immediate radix\n        if !crate::runtime::is_unconstrained() {\n            static_assert(1 < radix, \"radix must be greater than 1\");\n            static_assert(radix <= 256, \"radix must be less than or equal to 256\");\n            static_assert(radix & (radix - 1) == 0, \"radix must be a power of 2\");\n        }\n        __to_be_radix(self, radix)\n    }\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b: [u1; 32] = exponent.to_le_bits();\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32 - i] as Field) * (r * self) + (1 - b[32 - i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x `elem` {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n    /// Convert a little endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_le_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        static_assert(\n            N <= modulus_le_bytes().len(),\n            \"N must be less than or equal to modulus_le_bytes().len()\",\n        );\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n\n    /// Convert a big endian byte array to a field element.\n    /// If the provided byte array overflows the field modulus then the Field will silently wrap around.\n    pub fn from_be_bytes<let N: u32>(bytes: [u8; N]) -> Field {\n        let mut v = 1;\n        let mut result = 0;\n\n        for i in 0..N {\n            result += (bytes[N - 1 - i] as Field) * v;\n            v = v * 256;\n        }\n        result\n    }\n}\n\n#[builtin(apply_range_constraint)]\nfn __assert_max_bit_size(value: Field, bit_size: u32) {}\n\n// `_radix` must be less than 256\n#[builtin(to_le_radix)]\nfn __to_le_radix<let N: u32>(value: Field, radix: u32) -> [u8; N] {}\n\n// `_radix` must be less than 256\n#[builtin(to_be_radix)]\nfn __to_be_radix<let N: u32>(value: Field, radix: u32) -> [u8; N] {}\n\n/// Decomposes `self` into its little endian bit decomposition as a `[u1; N]` array.\n/// This slice will be zero padded should not all bits be necessary to represent `self`.\n///\n/// # Failures\n/// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n/// be able to represent the original `Field`.\n///\n/// # Safety\n/// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n/// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n/// wrap around due to overflow when verifying the decomposition.\n#[builtin(to_le_bits)]\nfn __to_le_bits<let N: u32>(value: Field) -> [u1; N] {}\n\n/// Decomposes `self` into its big endian bit decomposition as a `[u1; N]` array.\n/// This array will be zero padded should not all bits be necessary to represent `self`.\n///\n/// # Failures\n/// Causes a constraint failure for `Field` values exceeding `2^N` as the resulting slice will not\n/// be able to represent the original `Field`.\n///\n/// # Safety\n/// Values of `N` equal to or greater than the number of bits necessary to represent the `Field` modulus\n/// (e.g. 254 for the BN254 field) allow for multiple bit decompositions. This is due to how the `Field` will\n/// wrap around due to overflow when verifying the decomposition.\n#[builtin(to_be_bits)]\nfn __to_be_bits<let N: u32>(value: Field) -> [u1; N] {}\n\n#[builtin(modulus_num_bits)]\npub comptime fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub comptime fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub comptime fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub comptime fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub comptime fn modulus_le_bytes() -> [u8] {}\n\n/// An unconstrained only built in to efficiently compare fields.\n#[builtin(field_less_than)]\nunconstrained fn __field_less_than(x: Field, y: Field) -> bool {}\n\npub(crate) unconstrained fn field_less_than(x: Field, y: Field) -> bool {\n    __field_less_than(x, y)\n}\n\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    if is_unconstrained() {\n        // Safety: unconstrained context\n        unsafe {\n            field_less_than(x, y)\n        }\n    } else {\n        let x_bytes: [u8; 32] = x.to_le_bytes();\n        let y_bytes: [u8; 32] = y.to_le_bytes();\n        let mut x_is_lt = false;\n        let mut done = false;\n        for i in 0..32 {\n            if (!done) {\n                let x_byte = x_bytes[32 - 1 - i] as u8;\n                let y_byte = y_bytes[32 - 1 - i] as u8;\n                let bytes_match = x_byte == y_byte;\n                if !bytes_match {\n                    x_is_lt = x_byte < y_byte;\n                    done = true;\n                }\n            }\n        }\n        x_is_lt\n    }\n}\n\nmod tests {\n    use crate::{panic::panic, runtime};\n    use super::field_less_than;\n\n    #[test]\n    // docs:start:to_be_bits_example\n    fn test_to_be_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_be_bits();\n        assert_eq(bits, [0, 0, 0, 0, 0, 0, 1, 0]);\n    }\n    // docs:end:to_be_bits_example\n\n    #[test]\n    // docs:start:to_le_bits_example\n    fn test_to_le_bits() {\n        let field = 2;\n        let bits: [u1; 8] = field.to_le_bits();\n        assert_eq(bits, [0, 1, 0, 0, 0, 0, 0, 0]);\n    }\n    // docs:end:to_le_bits_example\n\n    #[test]\n    // docs:start:to_be_bytes_example\n    fn test_to_be_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_be_bytes();\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 0, 2]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_bytes_example\n\n    #[test]\n    // docs:start:to_le_bytes_example\n    fn test_to_le_bytes() {\n        let field = 2;\n        let bytes: [u8; 8] = field.to_le_bytes();\n        assert_eq(bytes, [2, 0, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_bytes_example\n\n    #[test]\n    // docs:start:to_be_radix_example\n    fn test_to_be_radix() {\n        // 259, in base 256, big endian, is [1, 3].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_be_radix(256);\n        assert_eq(bytes, [0, 0, 0, 0, 0, 0, 1, 3]);\n        assert_eq(Field::from_be_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_be_radix_example\n\n    #[test]\n    // docs:start:to_le_radix_example\n    fn test_to_le_radix() {\n        // 259, in base 256, little endian, is [3, 1].\n        // i.e. 3 * 256^0 + 1 * 256^1\n        let field = 259;\n\n        // The radix (in this example, 256) must be a power of 2.\n        // The length of the returned byte array can be specified to be\n        // >= the amount of space needed.\n        let bytes: [u8; 8] = field.to_le_radix(256);\n        assert_eq(bytes, [3, 1, 0, 0, 0, 0, 0, 0]);\n        assert_eq(Field::from_le_bytes::<8>(bytes), field);\n    }\n    // docs:end:to_le_radix_example\n\n    #[test(should_fail_with = \"radix must be greater than 1\")]\n    fn test_to_le_radix_1() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(1);\n        } else {\n            panic(f\"radix must be greater than 1\");\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be greater than 2\n    //#[test]\n    //fn test_to_le_radix_brillig_1() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(1);\n    //        crate::println(out);\n    //        let expected = [0; 8];\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test(should_fail_with = \"radix must be a power of 2\")]\n    fn test_to_le_radix_3() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(3);\n        } else {\n            panic(f\"radix must be a power of 2\");\n        }\n    }\n\n    #[test]\n    fn test_to_le_radix_brillig_3() {\n        // this test should only fail in constrained mode\n        if runtime::is_unconstrained() {\n            let field = 1;\n            let out: [u8; 8] = field.to_le_radix(3);\n            let mut expected = [0; 8];\n            expected[0] = 1;\n            assert(out == expected, \"unexpected result\");\n        }\n    }\n\n    #[test(should_fail_with = \"radix must be less than or equal to 256\")]\n    fn test_to_le_radix_512() {\n        // this test should only fail in constrained mode\n        if !runtime::is_unconstrained() {\n            let field = 2;\n            let _: [u8; 8] = field.to_le_radix(512);\n        } else {\n            panic(f\"radix must be less than or equal to 256\")\n        }\n    }\n\n    // TODO: Update this test to account for the Brillig restriction that the radix must be less than 512\n    //#[test]\n    //fn test_to_le_radix_brillig_512() {\n    //    // this test should only fail in constrained mode\n    //    if runtime::is_unconstrained() {\n    //        let field = 1;\n    //        let out: [u8; 8] = field.to_le_radix(512);\n    //        let mut expected = [0; 8];\n    //        expected[0] = 1;\n    //        assert(out == expected, \"unexpected result\");\n    //    }\n    //}\n\n    #[test]\n    unconstrained fn test_field_less_than() {\n        assert(field_less_than(0, 1));\n        assert(field_less_than(0, 0x100));\n        assert(field_less_than(0x100, 0 - 1));\n        assert(!field_less_than(0 - 1, 0));\n    }\n}\n","path":"std/field/mod.nr"},"22":{"source":"pub mod hash;\npub mod aes128;\npub mod array;\npub mod slice;\npub mod ecdsa_secp256k1;\npub mod ecdsa_secp256r1;\npub mod embedded_curve_ops;\npub mod field;\npub mod collections;\npub mod compat;\npub mod convert;\npub mod option;\npub mod string;\npub mod test;\npub mod cmp;\npub mod ops;\npub mod default;\npub mod prelude;\npub mod runtime;\npub mod meta;\npub mod append;\npub mod mem;\npub mod panic;\npub mod hint;\n\nuse convert::AsPrimitive;\n\n// Oracle calls are required to be wrapped in an unconstrained function\n// Thus, the only argument to the `println` oracle is expected to always be an ident\n#[oracle(print)]\nunconstrained fn print_oracle<T>(with_newline: bool, input: T) {}\n\nunconstrained fn print_unconstrained<T>(with_newline: bool, input: T) {\n    print_oracle(with_newline, input);\n}\n\npub fn println<T>(input: T) {\n    // Safety: a print statement cannot be constrained\n    unsafe {\n        print_unconstrained(true, input);\n    }\n}\n\npub fn print<T>(input: T) {\n    // Safety: a print statement cannot be constrained\n    unsafe {\n        print_unconstrained(false, input);\n    }\n}\n\npub fn verify_proof<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n) {\n    verify_proof_internal(verification_key, proof, public_inputs, key_hash, 0);\n}\n\npub fn verify_proof_with_type<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n    proof_type: u32,\n) {\n    if !crate::runtime::is_unconstrained() {\n        crate::assert_constant(proof_type);\n    }\n    verify_proof_internal(verification_key, proof, public_inputs, key_hash, proof_type);\n}\n\n#[foreign(recursive_aggregation)]\nfn verify_proof_internal<let N: u32, let M: u32, let K: u32>(\n    verification_key: [Field; N],\n    proof: [Field; M],\n    public_inputs: [Field; K],\n    key_hash: Field,\n    proof_type: u32,\n) {}\n\n// Asserts that the given value is known at compile-time.\n// Useful for debugging for-loop bounds.\n#[builtin(assert_constant)]\npub fn assert_constant<T>(x: T) {}\n\n// Asserts that the given value is both true and known at compile-time.\n// The message can be a string, a format string, or any value, as long as it is known at compile-time\n#[builtin(static_assert)]\npub fn static_assert<T>(predicate: bool, message: T) {}\n\n#[deprecated(\"wrapping operations should be done with the Wrapping traits. E.g: x.wrapping_add(y)\")]\npub fn wrapping_add<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    AsPrimitive::as_(x.as_() + y.as_())\n}\n#[deprecated(\"wrapping operations should be done with the Wrapping traits. E.g: x.wrapping_sub(y)\")]\npub fn wrapping_sub<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    //340282366920938463463374607431768211456 is 2^128, it is used to avoid underflow\n    AsPrimitive::as_(x.as_() + 340282366920938463463374607431768211456 - y.as_())\n}\n#[deprecated(\"wrapping operations should be done with the Wrapping traits. E.g: x.wrapping_mul(y)\")]\npub fn wrapping_mul<T>(x: T, y: T) -> T\nwhere\n    T: AsPrimitive<Field>,\n    Field: AsPrimitive<T>,\n{\n    AsPrimitive::as_(x.as_() * y.as_())\n}\n\n#[builtin(as_witness)]\npub fn as_witness(x: Field) {}\n\nmod tests {\n    use super::ops::arith::WrappingMul;\n\n    #[test(should_fail_with = \"custom message\")]\n    fn test_static_assert_custom_message() {\n        super::static_assert(1 == 2, \"custom message\");\n    }\n\n    #[test]\n    fn test_wrapping_mul() {\n        let zero: u128 = 0;\n        let one: u128 = 1;\n        let two_pow_64: u128 = 0x10000000000000000;\n        let u128_max: u128 = 0xffffffffffffffffffffffffffffffff;\n\n        // 1*0==0\n        assert_eq(zero, zero.wrapping_mul(one));\n\n        // 0*1==0\n        assert_eq(zero, one.wrapping_mul(zero));\n\n        // 1*1==1\n        assert_eq(one, one.wrapping_mul(one));\n\n        // 0 * ( 1 << 64 ) ==  0\n        assert_eq(zero, zero.wrapping_mul(two_pow_64));\n\n        // ( 1 << 64 ) * 0 == 0\n        assert_eq(zero, two_pow_64.wrapping_mul(zero));\n\n        // 1 * ( 1 << 64 ) == 1 << 64\n        assert_eq(two_pow_64, two_pow_64.wrapping_mul(one));\n\n        // ( 1 << 64 ) * 1 == 1 << 64\n        assert_eq(two_pow_64, one.wrapping_mul(two_pow_64));\n\n        // ( 1 << 64 ) * ( 1 << 64 ) == 1 << 64\n        assert_eq(zero, two_pow_64.wrapping_mul(two_pow_64));\n        // -1 * -1 == 1\n        assert_eq(one, u128_max.wrapping_mul(u128_max));\n    }\n}\n","path":"std/lib.nr"},"50":{"source":"use std::embedded_curve_ops::{EmbeddedCurvePoint, EmbeddedCurveScalar};\nuse std::embedded_curve_ops;\n\nglobal MAX_SHARE: u32 = 3;\nglobal SECRET_SHARE_T: u32 = 3;\nglobal MAX_DATA_LENGTH: u32 = 1344;\nglobal MAX_ISSUER_LENGTH: u32 = 100;\nglobal MAX_AUDIENCE_LENGTH: u32 = 100;\nglobal MAX_SUB_LENGTH: u32 = 100;\n\nfn bounded_vec_to_field(vec: BoundedVec<u8, 100>) -> Field {\n   let mut acc: Field = 0;\n\n   for i in 0..MAX_SUB_LENGTH {\n       if (i as u32) < vec.len {\n           let digit = vec.get_unchecked(i);\n           acc = acc * 256 + digit as Field;\n       }\n   }\n   acc\n}\n\nfn main(\n   // statement\n   pubkey_modulus_limbs: pub [u128; 18],  // RSA modulus\n   redc_params_limbs: pub [u128; 18],         // RSA reduction parameters\n   domain: pub BoundedVec<u8, MAX_AUDIENCE_LENGTH>, // Expected audience\n   issuer: pub BoundedVec<u8, MAX_ISSUER_LENGTH>,  // Expected issuer\n   g3: pub EmbeddedCurvePoint,\n   g4: pub EmbeddedCurvePoint,\n   bridge: pub EmbeddedCurvePoint,\n\n   //witness\n   data: BoundedVec<u8, MAX_DATA_LENGTH>,  // Encoded JWT token\n   signature_limbs: [u128; 18],           // RSA signature\n   base64_decode_offset: u32,                        // Base64 offset for signature\n   current_time: u64,                     // Current timestamp\n   r: Field,\n) {\n    let sub = id_token::verify(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n        domain,\n        issuer,\n        current_time\n    );\n    println(\"jwtVerified\");\n    let subField = bounded_vec_to_field(sub);\n    let subScalar = EmbeddedCurveScalar::from_field(subField);\n    let rScalar = EmbeddedCurveScalar::from_field(r);\n    let sG3 =  embedded_curve_ops::multi_scalar_mul([g3], [subScalar]);\n    let rG4 =  embedded_curve_ops::multi_scalar_mul([g4], [rScalar]);\n    let C = embedded_curve_ops::embedded_curve_add(sG3, rG4);\n    assert(C == bridge, \"Bridge Fail\");\n}\n\n\n","path":"/Users/kiagengsatriapamungkas/WebstormProjects/syra-login-fe/src/lib/zk/noir-circuits/src/main.nr"},"130":{"source":"use dep::jwt::JWT;\n\nglobal MAX_DATA_LENGTH: u32 = 1344;\nglobal MAX_SUB_LENGTH: u32 = 100;\nglobal MAX_ISSUER_LENGTH: u32 = 100;\nglobal MAX_AUDIENCE_LENGTH: u32 = 100;\nglobal MAX_NONCE_LENGTH: u32 = 32;\nglobal MAX_VALUE_LENGTH: u32 = 100;\n\npub fn verify(\n    data: BoundedVec<u8, MAX_DATA_LENGTH>,  // Encoded JWT token\n    b64_offset: u32,                        // Base64 offset for signature\n    pubkey_modulus_limbs: [u128; 18],  // RSA modulus\n    redc_params_limbs: [u128; 18],         // RSA reduction parameters\n    signature_limbs: [u128; 18],           // RSA signature\n    domain: BoundedVec<u8, MAX_AUDIENCE_LENGTH>, // Expected audience\n    issuer: BoundedVec<u8, MAX_ISSUER_LENGTH>,  // Expected issuer\n    current_time: u64                     // Current timestamp\n) -> BoundedVec<u8, MAX_SUB_LENGTH> { // Returning sub as output\n\n    let jwt = JWT::init(\n        data,\n        b64_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n    jwt.verify(); // Ensure signature is valid\n\n    jwt.assert_claim_string(\n        \"iss\".as_bytes(),\n        issuer\n    );\n\n    jwt.assert_claim_string(\n        \"aud\".as_bytes(),\n        domain\n    );\n\n    let jwt_exp: u64 = jwt.get_claim_number(\"exp\".as_bytes());\n    assert(current_time < jwt_exp, \"JWT has expired\");\n\n    let sub: BoundedVec<u8, MAX_SUB_LENGTH> = jwt.get_claim_string(\"sub\".as_bytes());\n\n    sub\n}\n","path":"/Users/kiagengsatriapamungkas/WebstormProjects/syra-login-fe/src/lib/zk/noir-circuits/id_token/src/lib.nr"},"131":{"source":"mod partial_hash;\n\nuse base64::BASE64_URL_DECODER;\nuse bignum::{params::BigNumParams, RuntimeBigNum};\nuse nodash::str_to_u64;\nuse partial_hash::partial_sha256_var_end;\nuse rsa::rsa::verify_sha256_pkcs1v15;\nuse sha256::sha256_var;\nuse string_search::{StringBody, SubString};\n\n/**\n * @brief Struct representing a JWT. Use the init functions to create an instance\n *        Currently only supports RSA 2048/SHA256 signatures\n **/\npub struct JWT<let MAX_DATA_LENGTH: u32> {\n    data: BoundedVec<u8, MAX_DATA_LENGTH>,\n    pubkey_modulus_limbs: [u128; 18],\n    redc_params_limbs: [u128; 18],\n    signature_limbs: [u128; 18],\n    partial_hash: [u32; 8],\n    full_data_length: u32,\n    base64_decode_offset: u32,\n    is_partial_hash: bool, // compile time variable used internally\n}\n\nimpl<let MAX_DATA_LENGTH: u32> JWT<MAX_DATA_LENGTH> {\n    /**\n    * @brief Initialize JWT struct\n    *\n    * @param data: Signed JWT data (base64 encoded `$header.$payload`) as byte array of ascii characters\n    * @param base64_decode_offset: The offset from which we will start base64 decoding the data.\n    *                                   Any 4x multiple from the payload start index.\n    * @param pubkey_modulus_limbs: RSA public key modulus limbs (2048-bit split into 18 limbs)\n    * @param redc_params_limbs: RSA reduction parameters limbs (2048-bit split into 18 limbs)\n    * @param signature_limbs: RSA signature limbs (2048-bit split into 18 limbs)\n    **/\n    pub fn init(\n        data: BoundedVec<u8, MAX_DATA_LENGTH>,\n        base64_decode_offset: u32,\n        pubkey_modulus_limbs: [u128; 18],\n        redc_params_limbs: [u128; 18],\n        signature_limbs: [u128; 18],\n    ) -> JWT<MAX_DATA_LENGTH> {\n        assert(data.len() <= MAX_DATA_LENGTH, \"data length is too long\");\n\n        JWT {\n            data,\n            base64_decode_offset,\n            pubkey_modulus_limbs,\n            redc_params_limbs,\n            signature_limbs,\n            // below fields are not relevant unless for partial hash\n            full_data_length: MAX_DATA_LENGTH,\n            partial_hash: [0; 8],\n            is_partial_hash: false,\n        }\n    }\n\n    /**\n    * @brief Initialize JWT with partial SHA256 hash'ed input\n    *        Since SHA hash is expensive to compute in circuit, we can optimize by pre-hashing up to a certain block outside the circuit,\n    *        and verify for correctness in the circuit. This is possible since SHA works in incremental blocks.\n    *        You can pre-hash up to the SHA-256 block from where you want to extract a claim.\n    *\n    * @param partial_data: Signed JWT data (base64 encoded `$header.$payload`) after partial hashed block\n    * @param partial_hash: The 256-bit partial hash of the `partial_data` up to a certain block\n    * @param full_data_length: The full length of the `data` (before partial SHA)\n    * @param base64_decode_offset: The offset from which we will start base64 decoding the data.\n    *                                   Trimming `offset` nubmer of bytes from the data should it base64 decode-able.\n    * @param pubkey_modulus_limbs: RSA public key modulus limbs (2048-bit split into 18 limbs)\n    * @param redc_params_limbs: RSA reduction parameters limbs\n    * @param signature_limbs: RSA signature limbs\n    **/\n    pub fn init_with_partial_hash(\n        partial_data: BoundedVec<u8, MAX_DATA_LENGTH>,\n        partial_hash: [u32; 8],\n        full_data_length: u32,\n        base64_decode_offset: u32,\n        pubkey_modulus_limbs: [u128; 18],\n        redc_params_limbs: [u128; 18],\n        signature_limbs: [u128; 18],\n    ) -> JWT<MAX_DATA_LENGTH> {\n        assert(partial_data.len() <= MAX_DATA_LENGTH, \"partial_data length is too long\");\n\n        JWT {\n            data: partial_data,\n            full_data_length,\n            partial_hash,\n            base64_decode_offset,\n            pubkey_modulus_limbs,\n            redc_params_limbs,\n            signature_limbs,\n            is_partial_hash: true,\n        }\n    }\n\n    /**\n    * @brief Verify JWT signature with RSA 2048/SHA256\n    **/\n    pub fn verify(mut self) {\n        let mut data_hash: [u8; 32] = [0; 32];\n\n        if (!self.is_partial_hash) {\n            // this is a compile time conditional\n            // Hash the data using SHA256\n            data_hash = sha256_var(self.data.storage(), self.data.len() as u64);\n        } else {\n            // Compute the full SHA256 hash with the given partial hash\n            data_hash = partial_sha256_var_end(\n                self.partial_hash,\n                self.data.storage(),\n                self.data.len() as u64,\n                self.full_data_length as u64,\n            );\n        }\n\n        // Verify RSA signature\n        let params: BigNumParams<18, 2048> =\n            BigNumParams::new(false, self.pubkey_modulus_limbs, self.redc_params_limbs);\n\n        let signature = RuntimeBigNum { params, limbs: self.signature_limbs };\n\n        assert(verify_sha256_pkcs1v15(data_hash, signature, 65537));\n    }\n\n    /**\n    * @brief Get a string claim from the JWT payload\n    *\n    * @param KEY_LENGTH: The length of the claim key\n    * @param MAX_VALUE_LENGTH: The maximum length of the claim value\n    * @param claim_key: The claim key\n    * @return: The claim value\n    **/\n    pub fn get_claim_string<let KEY_LENGTH: u32, let MAX_VALUE_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n    ) -> BoundedVec<u8, MAX_VALUE_LENGTH> {\n        self.get_claim::<KEY_LENGTH, MAX_VALUE_LENGTH>(claim_key, true)\n    }\n\n    /**\n    * @brief Assert a string claim in the JWT payload.\n    *        Refer to `get_claim_string` for details on the `KEY_LENGTH` and `MAX_VALUE_LENGTH`.\n    * @param claim_key: The claim key\n    * @param claim_value: The claim value to assert\n    **/\n    pub fn assert_claim_string<let KEY_LENGTH: u32, let MAX_VALUE_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n        claim_value: BoundedVec<u8, MAX_VALUE_LENGTH>,\n    ) {\n        let value: BoundedVec<u8, MAX_VALUE_LENGTH> =\n            self.get_claim_string::<KEY_LENGTH, MAX_VALUE_LENGTH>(claim_key);\n        assert(value == claim_value, \"incorrect value for claim\");\n    }\n\n    /**\n    * @brief Get a number (u64) claim from the JWT payload\n    *        Refer to `get_claim_string` for details on the `KEY_LENGTH` and `MAX_VALUE_LENGTH`.\n    * @param claim_key: The claim key\n    * @return: The claim value\n    **/\n    pub fn get_claim_number<let KEY_LENGTH: u32>(self, claim_key: [u8; KEY_LENGTH]) -> u64 {\n        let claim = self.get_claim::<KEY_LENGTH, 20>(claim_key, false);\n        str_to_u64(claim.storage())\n    }\n\n    /**\n    * @brief Assert a number (u64) claim in the JWT payload.\n    *        Refer to `get_claim_number` for details on the `KEY_LENGTH` and `MAX_VALUE_LENGTH`.\n    * @param claim_key: The claim key\n    * @param claim_value: The claim value to assert\n    **/\n    pub fn assert_claim_number<let KEY_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n        claim_value: u64,\n    ) {\n        let value = self.get_claim_number::<KEY_LENGTH>(claim_key);\n        assert(value == claim_value, \"incorrect value for claim\");\n    }\n\n    /**\n    * @brief Get a boolean claim from the JWT payload\n    * @param claim_key: The claim key\n    * @return: The claim value\n    **/\n    pub fn get_claim_bool<let KEY_LENGTH: u32>(self, claim_key: [u8; KEY_LENGTH]) -> bool {\n        let value = self.get_claim::<KEY_LENGTH, 5>(claim_key, false);\n        let mut is_true = true;\n        for i in 0..4 {\n            is_true = is_true & (value.storage()[i] == \"true\".as_bytes()[i]);\n        }\n        let is_false = value.storage() == \"false\".as_bytes();\n\n        assert(is_true | is_false, \"incorrect value for claim\");\n        is_true\n    }\n\n    /**\n    * @brief Assert a boolean claim in the JWT payload.\n    *        Refer to `get_claim_bool` for details on the `KEY_LENGTH` and `MAX_VALUE_LENGTH`.\n    * @param claim_key: The claim key\n    * @param claim_value: The claim value to assert\n    **/\n    pub fn assert_claim_bool<let KEY_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n        claim_value: bool,\n    ) {\n        let value = self.get_claim_bool::<KEY_LENGTH>(claim_key);\n        assert(value == claim_value, \"incorrect value for claim\");\n    }\n\n    /**\n    * @brief Internal function to get claim bytes from the JWT payload\n    **/\n    fn get_claim<let KEY_LENGTH: u32, let MAX_VALUE_LENGTH: u32>(\n        self,\n        claim_key: [u8; KEY_LENGTH],\n        is_value_quoted: bool,\n    ) -> BoundedVec<u8, MAX_VALUE_LENGTH> {\n        //Safety: extract the value in unconstrained mode, and verify later\n        let value: BoundedVec<u8, MAX_VALUE_LENGTH> = unsafe {\n            self.extract_claim_unconstrained::<KEY_LENGTH, MAX_VALUE_LENGTH>(\n                claim_key,\n                is_value_quoted,\n            )\n        };\n\n        // constrain the extracted value is present in the payload using string_search lib\n        // haystack is the base64 decoded payload;\n        let haystack = self.prepare_haystack();\n\n        // needle is the key with quotes around it - searching for just the key string might return false positives from elsewhere\n        // Note: key length is known at compile time as this lib doesn't support runtime keys\n        let mut key_with_quote: [u8; KEY_LENGTH + 2] = [0; KEY_LENGTH + 2];\n        key_with_quote[0] = 34; // ascii for quote\n        for i in 0..KEY_LENGTH {\n            key_with_quote[i + 1] = claim_key[i];\n        }\n        key_with_quote[KEY_LENGTH + 1] = 34; // ascii for quote\n\n        let mut needle: SubString<(((KEY_LENGTH + 2) + 31) / 31) * 31, (KEY_LENGTH + 2) / 31, (KEY_LENGTH + 2)> =\n            SubString::new(key_with_quote, key_with_quote.len());\n\n        let (result, position): (bool, u32) = haystack.substring_match(needle);\n        assert(result, \"key not found in the payload\");\n\n        // assert value after quoted key is a colon\n        let colon_index = position + KEY_LENGTH + 2; // +2 for the quotes around the key\n        assert(haystack.body[colon_index] == 58); // :\n\n        // assert the value is correct - string have quotes around them, numbers and booleans don't\n        let mut value_start_index = colon_index + 1; // Value starts after the colon\n        let mut index_after_value = value_start_index + value.len(); // Index after the value, quoted or otherwise\n\n        if (is_value_quoted) {\n            // adjust start index for the quotes around the value\n            value_start_index = value_start_index + 1; // Adjust for the quote before the value\n            index_after_value = index_after_value + 2; // Adjust for the quotes around the value\n\n            // assert the char before and after the value is a quote\n            assert(haystack.body[value_start_index - 1] == 34); // \"\n            assert(haystack.body[index_after_value - 1] == 34); // \"\n        }\n\n        // assert the value is correct\n        for i in 0..MAX_VALUE_LENGTH {\n            if (i < value.len()) {\n                assert(haystack.body[value_start_index + i] == value.storage()[i]);\n            }\n        }\n\n        // assert the char after the value is a comma or a closing brace (last claim in the payload)\n        let char_after_value = haystack.body[index_after_value];\n        assert((char_after_value == 44) | (char_after_value == 125)); // , or }\n\n        value\n    }\n\n    /**\n    * @brief Internal function to prepare the haystack for string search (base64 decoded payload with offset applied)\n    **/\n    fn prepare_haystack(\n        self,\n    ) -> StringBody<((((MAX_DATA_LENGTH / 4) * 3) + 31) / 31) * 31, (((MAX_DATA_LENGTH / 4) * 3) + 31) / 31, ((MAX_DATA_LENGTH / 4) * 3)> {\n        // We need to decode the payload from the payload_b64_offset; i.e. data.slice(0, base64_decode_offset)\n        let mut data_to_b64_decode: [u8; MAX_DATA_LENGTH] = [0; MAX_DATA_LENGTH];\n\n        // Conditional inside the for loop blows up the constraint size\n        // So we fill the full MAX_DATA_LENGTH (rotate on overflow) and prepare a BoundedVec with the correct length later\n        for i in 0..MAX_DATA_LENGTH {\n            data_to_b64_decode[i] =\n                self.data.storage()[(i + self.base64_decode_offset) % self.data.len()];\n        }\n\n        let data_to_decode_bv: BoundedVec<u8, MAX_DATA_LENGTH> = BoundedVec::from_parts(\n            data_to_b64_decode,\n            self.data.len() - self.base64_decode_offset,\n        );\n\n        // Decode the payload\n        let payload: BoundedVec<u8, ((MAX_DATA_LENGTH / 4) * 3)> =\n            BASE64_URL_DECODER::decode_var(data_to_decode_bv); // b64 decoded length is ceil(MAX_DATA_LENGTH / 3) * 4\n\n        // Create the haystack\n        let haystack: StringBody<((((MAX_DATA_LENGTH / 4) * 3) + 31) / 31) * 31, (((MAX_DATA_LENGTH / 4) * 3) + 31) / 31, ((MAX_DATA_LENGTH / 4) * 3)> =\n            StringBody::new(payload.storage(), payload.len());\n\n        haystack\n    }\n\n    /**\n    * @brief Unconstrained function to extract claim bytes from the JWT payload\n    **/\n    pub unconstrained fn extract_claim_unconstrained<let KEY_LENGTH: u32, let MAX_VALUE_LENGTH: u32>(\n        self,\n        key: [u8; KEY_LENGTH],\n        is_value_quoted: bool,\n    ) -> BoundedVec<u8, MAX_VALUE_LENGTH> {\n        let haystack = self.prepare_haystack();\n\n        let mut key_with_quote: [u8; KEY_LENGTH + 2] = [0; KEY_LENGTH + 2];\n        key_with_quote[0] = 34; // ascii for quote\n        for i in 0..KEY_LENGTH {\n            key_with_quote[i + 1] = key[i];\n        }\n        key_with_quote[KEY_LENGTH + 1] = 34; // ascii for quote\n\n        let mut needle: SubString<(((KEY_LENGTH + 2) + 31) / 31) * 31, (KEY_LENGTH + 2) / 31, (KEY_LENGTH + 2)> =\n            SubString::new(key_with_quote, key_with_quote.len());\n\n        let (result, position): (bool, u32) = haystack.substring_match(needle);\n        assert(result, \"key not found in the payload\");\n\n        // Get the value after the key\n        let mut value_start_idx = position + key.len() + 3; // +3 for the quote around the key and the colon\n        if (is_value_quoted) {\n            value_start_idx += 1; // +1 for the quote before the value\n        }\n\n        let mut value: BoundedVec<u8, MAX_VALUE_LENGTH> = BoundedVec::new();\n\n        for i in 0..MAX_VALUE_LENGTH {\n            let val = haystack.body[value_start_idx + i];\n            if ((val == 34) | (val == 44) | (val == 125)) {\n                break;\n            }\n            value.push(haystack.body[value_start_idx + i]);\n        }\n\n        value\n    }\n}\n\n#[test]\nfn test_verify() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n}\n\n#[test]\nfn test_verify_partial_hash() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let partial_data: BoundedVec<u8, 256> = BoundedVec::from_array([\n        106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107, 78, 69,\n        77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120, 102, 100,\n        109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85, 115, 73, 109,\n        53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84, 73,\n        122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74, 104, 98, 71, 108,\n        106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115, 73, 109, 108, 104,\n        100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78, 121, 119, 105, 89,\n        88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84, 73, 122, 76, 106,\n        81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86, 52, 99, 67, 73, 54,\n        77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 1;\n    let partial_hash = [\n        2065651337, 2814693704, 862745553, 2384319000, 1412758034, 3553265356, 3156727610,\n        4160738201,\n    ];\n    let full_data_length = 268;\n\n    let jwt = JWT::init_with_partial_hash(\n        partial_data,\n        partial_hash,\n        full_data_length,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n}\n\n#[test]\nfn test_get_claim_string() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let email: BoundedVec<u8, 100> = jwt.get_claim_string(\"email\".as_bytes());\n    let expected_email: BoundedVec<u8, 100> = BoundedVec::from_array(\"alice@test.com\".as_bytes());\n    assert(email == expected_email);\n}\n\n#[test]\nfn test_get_claim_string_partial_hash() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let partial_data: BoundedVec<u8, 256> = BoundedVec::from_array([\n        106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107, 78, 69,\n        77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120, 102, 100,\n        109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85, 115, 73, 109,\n        53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84, 73,\n        122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74, 104, 98, 71, 108,\n        106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115, 73, 109, 108, 104,\n        100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78, 121, 119, 105, 89,\n        88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84, 73, 122, 76, 106,\n        81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86, 52, 99, 67, 73, 54,\n        77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 1;\n    let partial_hash = [\n        2065651337, 2814693704, 862745553, 2384319000, 1412758034, 3553265356, 3156727610,\n        4160738201,\n    ];\n    let full_data_length = 268;\n\n    let jwt = JWT::init_with_partial_hash(\n        partial_data,\n        partial_hash,\n        full_data_length,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let email: BoundedVec<u8, 100> = jwt.get_claim_string(\"email\".as_bytes());\n    let expected_email: BoundedVec<u8, 100> = BoundedVec::from_array(\"alice@test.com\".as_bytes());\n    assert(email == expected_email);\n}\n\n#[test]\nfn test_assert_claim_string() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let value: BoundedVec<u8, 100> = BoundedVec::from_array(\"alice@test.com\".as_bytes());\n    jwt.assert_claim_string(\"email\".as_bytes(), value);\n}\n\n#[test]\nfn test_get_claim_number() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let iat: u64 = jwt.get_claim_number(\"iat\".as_bytes());\n    let expected_iat: u64 = 1737642217;\n    assert(iat == expected_iat);\n}\n\n#[test]\nfn test_assert_claim_number() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let expected_iat: u64 = 1737642217;\n    jwt.assert_claim_number(\"iat\".as_bytes(), expected_iat);\n}\n\n#[test]\nfn test_get_claim_bool() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let email_verified: bool = jwt.get_claim_bool(\"email_verified\".as_bytes());\n    assert(email_verified);\n}\n\n#[test]\nfn test_assert_claim_bool() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    jwt.assert_claim_bool(\"email_verified\".as_bytes(), true);\n}\n\n#[test]\nfn test_get_last_claim() {\n    let pubkey_modulus_limbs = [\n        484791102317025465533947056954494751,\n        689128460766062759582134715581990032,\n        810523707777777878428965619663888709,\n        184404549238669475316963116864788898,\n        93466218048229154672139102341852900,\n        584828628768888069086079532464056431,\n        97425187031931427039620311245463762,\n        26273806718910063326353308419294998,\n        788747954066548540615875263034804664,\n        889704621954975151388848797463892494,\n        311999144542197118282319553447935979,\n        569776388981460921496753063185331362,\n        903966640703701959992132828577771898,\n        159022820921763067563807580152706463,\n        503819859541011037194389727017199051,\n        1078173269124751507098806957834900664,\n        808018922828293630146825008649069450,\n        163,\n    ];\n    let redc_params_limbs = [\n        1143167338325541577958669340190596824,\n        782066667103526839077340987159104121,\n        1067845759344375818181746341911682002,\n        880124617802511701465844415806808588,\n        285259139341669707856057706066903101,\n        1230850420220071595120007854793337041,\n        243441877489860292941608721967510056,\n        821283804950244931298352888469271304,\n        265590023859021620015146340457966193,\n        955602690275722281613949658760787989,\n        704159826142581942518373637894303280,\n        313938418637521056314346970388282852,\n        296174013877567499290252280618882959,\n        127533166408087917092441034792304239,\n        486694435757811118946661778147879193,\n        742440511645057019411661928820777129,\n        106100992772450627263374716203348785,\n        6409,\n    ];\n    let signature_limbs = [\n        782421962573548264472674190647943355,\n        528649442614902878048130358901749842,\n        795671681115216636642039527621785323,\n        342055983261463759066440970886912343,\n        320943042314824191484469254030368420,\n        233931545977215775766660875366648712,\n        166738968145911552289782464945436391,\n        1280090914380823160665554635957223606,\n        225322564371992173705155119766257284,\n        1012067778676730712845356243167441596,\n        337008035250054394089555850701430953,\n        441480997772890594691718538441538925,\n        1266099611422563733802354067242028554,\n        163890419575820619684088542045789366,\n        71236811945264458762129145425586273,\n        106105739687938386497215871288359508,\n        598323717706499880526430558338637686,\n        97,\n    ];\n    let data: BoundedVec<u8, 512> = BoundedVec::from_array([\n        101, 121, 74, 104, 98, 71, 99, 105, 79, 105, 74, 83, 85, 122, 73, 49, 78, 105, 73, 115, 73,\n        110, 82, 53, 99, 67, 73, 54, 73, 107, 112, 88, 86, 67, 74, 57, 46, 101, 121, 74, 112, 99,\n        51, 77, 105, 79, 105, 74, 111, 100, 72, 82, 119, 79, 105, 56, 118, 100, 71, 86, 122, 100,\n        67, 53, 106, 98, 50, 48, 105, 76, 67, 74, 122, 100, 87, 73, 105, 79, 105, 74, 66, 81, 107,\n        78, 69, 77, 84, 73, 122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 120,\n        102, 100, 109, 86, 121, 97, 87, 90, 112, 90, 87, 81, 105, 79, 110, 82, 121, 100, 87, 85,\n        115, 73, 109, 53, 118, 98, 109, 78, 108, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73,\n        122, 77, 84, 73, 122, 73, 105, 119, 105, 90, 87, 49, 104, 97, 87, 119, 105, 79, 105, 74,\n        104, 98, 71, 108, 106, 90, 85, 66, 48, 90, 88, 78, 48, 76, 109, 78, 118, 98, 83, 73, 115,\n        73, 109, 108, 104, 100, 67, 73, 54, 77, 84, 99, 122, 78, 122, 89, 48, 77, 106, 73, 120, 78,\n        121, 119, 105, 89, 88, 86, 107, 73, 106, 111, 105, 77, 84, 73, 122, 77, 84, 73, 122, 77, 84,\n        73, 122, 76, 106, 81, 49, 78, 106, 81, 49, 78, 106, 81, 49, 78, 105, 73, 115, 73, 109, 86,\n        52, 99, 67, 73, 54, 77, 84, 99, 53, 79, 84, 107, 53, 79, 84, 107, 53, 79, 88, 48,\n    ]);\n    let base64_decode_offset = 37;\n\n    let jwt = JWT::init(\n        data,\n        base64_decode_offset,\n        pubkey_modulus_limbs,\n        redc_params_limbs,\n        signature_limbs,\n    );\n\n    jwt.verify();\n\n    let exp: u64 = jwt.get_claim_number(\"exp\".as_bytes()); // exp is the last claim in the test payload\n    let expected_exp: u64 = 1799999999;\n    assert(exp == expected_exp);\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/zkemail/noir-jwt/v0.5.0/src/lib.nr"},"134":{"source":"unconstrained fn __boundary_check<let Range: u32>(limit: u32) -> [Field; Range] {\n    let mut r: [Field; Range] = [0; Range];\n    for i in limit..Range {\n        r[i] = 1;\n    }\n    r\n}\n\n/**\n * @brief Return a size-Range array of values that describe whether an index `i` is in the range `0<=i<limit`\n * @details When evaluating variable-length loops of size `limit`, it is neccessary to iterate over a maximum bound defined at compile-time\n *          Any constraints or evaluations that occur where `i >= limit` must be discarded.\n *          This is most efficiently performed by using predicate `Field` values, where `predicate[i] = 0` if `i < limit`, otherwise `predicate[i] = 1`.\n *          This method efficiently generates such predicate values more efficiently than querying whether `i <= limit` at every iteration.\n *          Gate cost is 3 * Range\n **/\npub fn boundary_check<let Range: u32>(limit: u32) -> [Field; Range] {\n    let r = unsafe {\n        //@safety r contains claims about whether `r[i] >= limit`. the rest of this function checks this claim is correct\n        __boundary_check(limit)\n    };\n\n    let mut transition_index = 0;\n    // **\n    // We have an array of Field elements `r` such that:\n    // if i < limit, `r = 0`\n    // if i >= limit, `r = 1`\n    // We validate the predicate list `r` is correct by checking:\n    // 1. every r[i] element is 0 or 1\n    // 2. if r[i] = 1, r[i+1] must also be 1\n    // 3. if r[i] = 0 and r[i+1] = 1, then i == limit\n    // we check point 3 by tracking a `transition_index` variable, where\n    // transition_index += (1 - r[i]) * (r[i+1]) * i\n    // i.e. if r[i] == 0 and r[i+1] == 1, transition_index += i\n    //      else transition_index += 0\n    // NOTE: total constraint cost is 3 gates per iteration\n    // **\n    if Range > 0 {\n        for i in 0..Range - 1 {\n            assert_eq(r[i] * r[i], r[i]);\n            assert_eq(r[i] * r[i + 1], r[i]);\n            let idx = (r[i + 1] * (1 - r[i])) * (i as Field + 1);\n            transition_index = transition_index + idx;\n            std::as_witness(transition_index);\n        }\n        assert_eq(r[Range - 1] * r[Range - 1], r[Range - 1]);\n        transition_index = transition_index + (1 - r[Range - 1]) * limit as Field;\n        assert(transition_index == limit as Field);\n        r\n    } else {\n        [0; Range]\n    }\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir_base64/v0.4.0/src/boundary_check.nr"},"135":{"source":"use super::defaults::{\n    BASE64_ELEMENTS_PER_CHUNK, BASE64_PADDING_CHAR, BYTES_PER_CHUNK, INVALID_DECODE_VALUE,\n};\n\npub use crate::boundary_check::boundary_check;\nuse crate::tables::{\n    BASE64_DECODE_BE_TABLE, BASE64_DECODE_BE_URL_TABLE, BASE64_DECODE_BE_URL_VAR_TABLE,\n    BASE64_DECODE_BE_VAR_TABLE,\n};\n\n/// Decoder methods that use the standard Base64 Alphabet (base64) specified in RFC 4648\n/// (https://datatracker.ietf.org/doc/html/rfc4648#section-4)\npub mod Base64DecodeBE {\n    pub fn decode<let InputBytes: u32, let OutputBytes: u32>(\n        input: [u8; InputBytes],\n    ) -> [u8; OutputBytes] {\n        crate::decoder::decode::<InputBytes, OutputBytes, 1, 0>(input)\n    }\n\n    pub fn decode_var<let MaxInputBytes: u32, let MaxOutputBytes: u32>(\n        input: BoundedVec<u8, MaxInputBytes>,\n    ) -> BoundedVec<u8, MaxOutputBytes> {\n        crate::decoder::decode_var::<MaxInputBytes, MaxOutputBytes, 1, 0>(input)\n    }\n}\n\n/// Decoder methods that use the standard Base64 Alphabet (base64) specified in RFC 4648\n/// (https://datatracker.ietf.org/doc/html/rfc4648#section-4), but WITHOUT padding\npub mod Base64DecodeBENoPad {\n    pub fn decode<let InputBytes: u32, let OutputBytes: u32>(\n        input: [u8; InputBytes],\n    ) -> [u8; OutputBytes] {\n        crate::decoder::decode::<InputBytes, OutputBytes, 0, 0>(input)\n    }\n\n    pub fn decode_var<let MaxInputBytes: u32, let MaxOutputBytes: u32>(\n        input: BoundedVec<u8, MaxInputBytes>,\n    ) -> BoundedVec<u8, MaxOutputBytes> {\n        crate::decoder::decode_var::<MaxInputBytes, MaxOutputBytes, 0, 0>(input)\n    }\n}\n\n/// Decoder methods that use the URL and Filename Safe Alphabet specified in RFC 4648\n/// https://datatracker.ietf.org/doc/html/rfc4648#section-5\npub mod Base64DecodeBEUrlSafe {\n    pub fn decode<let InputBytes: u32, let OutputBytes: u32>(\n        input: [u8; InputBytes],\n    ) -> [u8; OutputBytes] {\n        crate::decoder::decode::<InputBytes, OutputBytes, 0, 1>(input)\n    }\n\n    pub fn decode_var<let MaxInputBytes: u32, let MaxOutputBytes: u32>(\n        input: BoundedVec<u8, MaxInputBytes>,\n    ) -> BoundedVec<u8, MaxOutputBytes> {\n        crate::decoder::decode_var::<MaxInputBytes, MaxOutputBytes, 0, 1>(input)\n    }\n}\n\n/// Decoder methods that use the URL and Filename Safe Alphabet specified in RFC 4648\n/// https://datatracker.ietf.org/doc/html/rfc4648#section-5, but WITH padding added\npub mod Base64DecodeBEUrlSafeWithPad {\n    pub fn decode<let InputBytes: u32, let OutputBytes: u32>(\n        input: [u8; InputBytes],\n    ) -> [u8; OutputBytes] {\n        crate::decoder::decode::<InputBytes, OutputBytes, 1, 1>(input)\n    }\n\n    pub fn decode_var<let MaxInputBytes: u32, let MaxOutputBytes: u32>(\n        input: BoundedVec<u8, MaxInputBytes>,\n    ) -> BoundedVec<u8, MaxOutputBytes> {\n        crate::decoder::decode_var::<MaxInputBytes, MaxOutputBytes, 1, 1>(input)\n    }\n}\n\n/**\n * @brief Return a human-readable error if the input is invalid Base64\n * @details We constrain the decoding to be correct by using a lookup table to decode Base64.\n *          Validation is performed by batch-checking that no lookups returned an error state.\n *          This produces unhelpful error messages so we put this sanitised check in an unconstrained fn\n **/\nunconstrained fn __validate_decoded(decoded: Field, input_byte: u8, offset: u32) {\n    assert(\n        decoded != INVALID_DECODE_VALUE,\n        f\"DecodeError: invalid symbol {input_byte}, offset {offset}.\",\n    );\n}\n\n/**\n * @brief Given a variable-sized number of Base64 encoded characters, return a *claim* about how many are padding chars\n * @note The returned value is only a claim and must be validated\n **/\nunconstrained fn __get_num_padding_chars_var<let InputElements: u32>(\n    input: BoundedVec<u8, InputElements>,\n) -> (bool, bool) {\n    let len = input.len();\n    let r1 = if len > 1 {\n        input.get(len - 2) == BASE64_PADDING_CHAR\n    } else {\n        false\n    };\n    let r2 = if len > 0 {\n        input.get(len - 1) == BASE64_PADDING_CHAR\n    } else {\n        false\n    };\n    (r1, r2)\n}\n\n/**\n * @brief Take an array of Base64 values and convert back into ASCII\n *        Each Base64 value is 6 bits. This method will produce a byte array where data is concatenated so that there are no sparse bits\n *        (e.g. encoding 4 ASCII values produces 24 bits of Base64 data = 3 bytes of output data)\n **/\nfn decode<let InputElements: u32, let OutputBytes: u32, let Pad: u1, let UseURLTable: u1>(\n    input: [u8; InputElements],\n) -> [u8; OutputBytes] {\n    let rem = OutputBytes % 3;\n    // Calculate the number of padding characters and the length of the input without padding\n    let num_padding_chars = if rem == 1 {\n        2\n    } else if rem == 2 {\n        1\n    } else {\n        0\n    };\n\n    // Assert that the output length & input length are correct\n    // Every 3 output chars will be encoded as 4 base64 input chars\n    let encoded_length = (OutputBytes + 2) / 3 * 4; // ceil(input * 4 / 3)\n    if Pad != 0 {\n        assert(\n            encoded_length == InputElements,\n            f\"DecodeError: invalid input length for specified output length. Expected {encoded_length} input elements, but got {InputElements}.\",\n        );\n        // enforce Base64 padding is valid\n        if num_padding_chars == 2 {\n            let offset = InputElements - 1;\n            assert(\n                input[offset] == BASE64_PADDING_CHAR,\n                f\"DecodeError: expected padding at offset {offset}.\",\n            );\n            let offset = InputElements - 2;\n            assert(\n                input[offset] == BASE64_PADDING_CHAR,\n                f\"DecodeError: expected padding at offset {offset}.\",\n            );\n        } else if num_padding_chars == 1 {\n            let offset = InputElements - 1;\n            assert(\n                input[InputElements - 1] == BASE64_PADDING_CHAR,\n                f\"DecodeError: expected padding at offset {offset}.\",\n            );\n        }\n    } else {\n        let expected = encoded_length - num_padding_chars;\n        assert(\n            encoded_length - num_padding_chars == InputElements,\n            f\"DecodeError: invalid input length for specified output length. Expected {expected} input elements, but got {InputElements}.\",\n        );\n    }\n\n    let mut result: [u8; OutputBytes] = [0; OutputBytes];\n    let num_chunks = (InputElements / BASE64_ELEMENTS_PER_CHUNK)\n        + (InputElements % BASE64_ELEMENTS_PER_CHUNK != 0) as u32;\n\n    // validity_check = accumulator value that we add every output from BASE64_DECODE_BE_TABLE into.\n    // Invalid error states will return a lookup value of -2^32 , which will cause `validity_check` to fail a 32-bit range check.\n    // This batch-validation technique is more efficient than asserting every returned token is valid.\n    let mut validity_check: Field = 0;\n    if num_chunks > 0 {\n        let final_chunk = num_chunks - 1;\n\n        for i in 0..final_chunk {\n            let mut slice: Field = 0;\n            for j in 0..BASE64_ELEMENTS_PER_CHUNK {\n                slice *= 64;\n                let offset = i * BASE64_ELEMENTS_PER_CHUNK + j;\n                let input_byte = input[offset];\n                let decoded = if UseURLTable == 1 {\n                    BASE64_DECODE_BE_URL_TABLE[input_byte]\n                } else {\n                    BASE64_DECODE_BE_TABLE[input_byte]\n                };\n                validity_check += decoded;\n                slice += decoded as Field;\n                unsafe {\n                    //@safety get a sensible error message out if the decoding is invalid.\n                    // Note that we *constrain* the encoding is correct by performing a range check on `validity_check`\n                    // If the decoding is invalid, `decoded = -2^{32}`. We add up all `decoded` values and apply a 32-bit range check.\n                    // Given all valid encodings are 8-bit, as long as the input length is less than 2^24 bytes, it is not possible to\n                    // underflow validity_check with an invalid encoding, and then overflow again by adding up valid encodings\n                    __validate_decoded(decoded, input_byte, offset);\n                }\n            }\n            let slice_bytes: [u8; 30] = slice.to_be_bytes();\n            for j in 0..BYTES_PER_CHUNK {\n                result[i * BYTES_PER_CHUNK + j] = slice_bytes[j];\n            }\n        }\n\n        // process the final chunk, which may contain padding\n        let base64_offset: u32 = final_chunk * BASE64_ELEMENTS_PER_CHUNK;\n        let byte_offset = final_chunk * BYTES_PER_CHUNK;\n        let base64_elements_in_final_chunk = if Pad != 0 {\n            InputElements - base64_offset - num_padding_chars\n        } else {\n            InputElements - base64_offset\n        };\n\n        // pack the base64 values into the field element\n        let mut slice: Field = 0;\n        for j in 0..base64_elements_in_final_chunk {\n            slice *= 64;\n            let offset = base64_offset + j;\n            let input_byte = input[offset];\n            let decoded = if UseURLTable == 1 {\n                BASE64_DECODE_BE_URL_TABLE[input_byte]\n            } else {\n                BASE64_DECODE_BE_TABLE[input_byte]\n            };\n            validity_check += decoded;\n            slice += decoded as Field;\n            unsafe {\n                //@safety get a sensible error message out if the decoding is invalid.\n                // Note that we *constrain* the encoding is correct by performing a range check on `validity_check`\n                // If the decoding is invalid, `decoded = -2^{32}`. We add up all `decoded` values and apply a 32-bit range check.\n                // Given all valid encodings are 8-bit, as long as the input length is less than 2^24 bytes, it is not possible to\n                // underflow validity_check with an invalid encoding, and then overflow again by adding up valid encodings\n                __validate_decoded(decoded, input_byte, offset);\n            }\n        }\n\n        // If any lookups returned an error state, this 32-bit range check will fail.\n        validity_check.assert_max_bit_size::<32>();\n        for _ in base64_elements_in_final_chunk..BASE64_ELEMENTS_PER_CHUNK {\n            slice *= 64;\n        }\n\n        let slice_bytes: [u8; 30] = slice.to_be_bytes();\n        let num_bytes_in_final_chunk = OutputBytes - byte_offset;\n        for i in 0..num_bytes_in_final_chunk {\n            result[byte_offset + i] = slice_bytes[i];\n        }\n    }\n\n    result\n}\n\n/**\n * @brief Take a variable-length vector of Base64 values and convert back into ASCII\n *        Each Base64 value is 6 bits. This method will produce a byte array where data is concatenated so that there are no sparse bits\n *        (e.g. encoding 4 ASCII values produces 24 bits of Base64 data = 3 bytes of output data)\n **/\npub fn decode_var<let InputElements: u32, let OutputBytes: u32, let Pad: u1, let UseURLTable: u1>(\n    input: BoundedVec<u8, InputElements>,\n) -> BoundedVec<u8, OutputBytes> {\n    // We don't know how many padding bytes the input string contains - we use an unconstrained fn to return a *claim* that we will later validate\n    let (has_first_padding_byte_claim, has_second_padding_byte_claim) = if (Pad == 1) {\n        unsafe {\n            //@safety get claims about whether the bytes input[input.len() - 2] and input[input.len() - 1] are padding chars\n            // we validate this later on by requiring these characters equal BASE64_PADDING_CHAR by looking up BASE64_DECODE_BE_VAR_TABLE\n            crate::decoder::__get_num_padding_chars_var::<InputElements>(input)\n        }\n    } else {\n        (false, false)\n    };\n\n    // num_padding_chars is a claim that depends on has_first_padding_byte_claim and has_second_padding_byte_claim being correct\n    let num_padding_chars: u32 = if Pad == 1 {\n        has_first_padding_byte_claim as u32 + has_second_padding_byte_claim as u32\n    } else {\n        0\n    };\n\n    let input_length = input.len();\n    let input = input.storage();\n\n    // boundary_flags = array of Field elements.\n    // if `i < input_length, boundary_flags[i] = 0`\n    // if `i >= input_length, boundary_flags[i+1] = 1`\n    // used as cheap(ish) predicates when iterating over bounded vector elements\n    let boundary_flags: [Field; InputElements] = boundary_check(input_length);\n    let mut result: [u8; OutputBytes] = [0; OutputBytes];\n\n    let max_num_chunks = (InputElements / BASE64_ELEMENTS_PER_CHUNK)\n        + (InputElements % BASE64_ELEMENTS_PER_CHUNK != 0) as u32;\n\n    let mut validity_check: Field = 0;\n    // if statement should be known at compile time\n    if max_num_chunks > 0 {\n        let final_chunk: u32 = max_num_chunks - 1;\n\n        for i in 0..final_chunk {\n            let mut slice: Field = 0;\n            for j in 0..BASE64_ELEMENTS_PER_CHUNK {\n                slice *= 64;\n                let offset = i * BASE64_ELEMENTS_PER_CHUNK + j;\n                let input_byte = input[offset];\n\n                let mut decode_index: Field = 0;\n                if Pad == 1 {\n                    let mut might_be_second_padding_char = 0;\n                    let mut might_be_first_padding_char = 0;\n                    // These if statements should not cost extra gates as the condition is known at compile time\n                    if (offset + 2 < InputElements) {\n                        might_be_first_padding_char = (1 - boundary_flags[offset])\n                            * (1 - boundary_flags[offset + 1])\n                            * boundary_flags[offset + 2];\n                        might_be_second_padding_char =\n                            (1 - boundary_flags[offset]) * (boundary_flags[offset + 1]);\n                    } else if (offset + 1 < InputElements) {\n                        // might_be_second_padding_char = (1 - boundary_flags[offset]) + (boundary_flags[offset + 1]);\n                        might_be_first_padding_char =\n                            (1 - boundary_flags[offset]) * (1 - boundary_flags[offset + 1]);\n                        might_be_second_padding_char =\n                            (1 - boundary_flags[offset]) * (boundary_flags[offset + 1]);\n                    } else // last character\n                    {\n                        might_be_first_padding_char = 0;\n                        might_be_second_padding_char = (1 - boundary_flags[offset]);\n                    }\n\n                    // Cases where we need to require a padding character is present:\n                    // Case 1: we are at byte position `input.len() - 2` and `has_first_padding_byte_claim = true`\n                    // Case 2: we are at byte position `input.len() - 1` and `has_second_padding_byte_claim = true`\n                    let require_padding = might_be_first_padding_char\n                        * has_first_padding_byte_claim as Field\n                        + (might_be_second_padding_char * has_second_padding_byte_claim as Field);\n\n                    // The `decode_index` is used to map the input Base64 character into an output decoded character.\n                    // We know `input_byte` is in the range 0-255 , so we use a size 768 lookup to handle the following 3 cases:\n                    // Case 1 (index range 0-255): No special cases. We decode the Base64 ASCII char into an ASCII char\n                    // Case 2 (index range 256-511): We have exceeded the length of the input. The only valid input is 0, which decodes to 0 (all other byte values return an error state)\n                    // Case 3 (index range 512-767): A claim has been made that a padding byte is present, and we are at the appropriate byte location to check this.\n                    //                               The only valid input is BASE64_PADDING_CHAR, which decodes to 0. All other inputs return an error state\n                    decode_index =\n                        input_byte as Field + boundary_flags[offset] * 256 + require_padding * 512;\n                } else {\n                    decode_index = input_byte as Field + boundary_flags[offset] * 256;\n                }\n                let decoded = if UseURLTable == 1 {\n                    BASE64_DECODE_BE_URL_VAR_TABLE[decode_index]\n                } else {\n                    BASE64_DECODE_BE_VAR_TABLE[decode_index]\n                };\n\n                validity_check += decoded;\n                slice += decoded;\n                unsafe {\n                    //@safety get a sensible error message out if the decoding is invalid.\n                    // Note that we *constrain* the encoding is correct by performing a range check on `validity_check`\n                    // If the decoding is invalid, `decoded = -2^{32}`. We add up all `decoded` values and apply a 32-bit range check.\n                    // Given all valid encodings are 8-bit, as long as the input length is less than 2^24 bytes, it is not possible to\n                    // underflow validity_check with an invalid encoding, and then overflow again by adding up valid encodings\n                    __validate_decoded(decoded, input_byte, offset);\n                }\n            }\n            // convert the decoded slice into bytes and populate result array\n            let slice_bytes: [u8; 30] = slice.to_be_bytes();\n            for j in 0..BYTES_PER_CHUNK {\n                result[i * BYTES_PER_CHUNK + j] = slice_bytes[j];\n            }\n        }\n        // process the final chunk\n        let base64_offset: u32 = final_chunk * BASE64_ELEMENTS_PER_CHUNK;\n        let byte_offset = final_chunk * BYTES_PER_CHUNK;\n        // might include padding characters\n        let base64_elements_in_final_chunk = InputElements - base64_offset;\n\n        // pack the base64 values into the field element\n        let mut slice: Field = 0;\n        for j in 0..base64_elements_in_final_chunk {\n            slice *= 64;\n            let offset = base64_offset + j;\n            let input_byte = input[offset];\n\n            let mut decode_index: Field = 0;\n            if Pad == 1 {\n                let mut might_be_second_padding_char = 0;\n                let mut might_be_first_padding_char = 0;\n                // These if statements should not cost extra gates as the condition is known at compile time\n                if (offset + 2 < InputElements) {\n                    might_be_first_padding_char = (1 - boundary_flags[offset])\n                        * (1 - boundary_flags[offset + 1])\n                        * boundary_flags[offset + 2];\n                    might_be_second_padding_char =\n                        (1 - boundary_flags[offset]) * (boundary_flags[offset + 1]);\n                } else if (offset + 1 < InputElements) {\n                    // might_be_second_padding_char = (1 - boundary_flags[offset]) + (boundary_flags[offset + 1]);\n                    might_be_first_padding_char =\n                        (1 - boundary_flags[offset]) * (1 - boundary_flags[offset + 1]);\n                    might_be_second_padding_char =\n                        (1 - boundary_flags[offset]) * (boundary_flags[offset + 1]);\n                } else // last character\n                {\n                    might_be_first_padding_char = 0;\n                    might_be_second_padding_char = (1 - boundary_flags[offset]);\n                }\n\n                let require_padding = might_be_first_padding_char\n                    * has_first_padding_byte_claim as Field\n                    + (might_be_second_padding_char * has_second_padding_byte_claim as Field);\n                decode_index =\n                    input_byte as Field + boundary_flags[offset] * 256 + require_padding * 512;\n            } else {\n                decode_index = input_byte as Field + boundary_flags[offset] * 256;\n            }\n            let decoded = if UseURLTable == 1 {\n                BASE64_DECODE_BE_URL_VAR_TABLE[decode_index]\n            } else {\n                BASE64_DECODE_BE_VAR_TABLE[decode_index]\n            };\n            unsafe {\n                //@safety get a sensible error message out if the decoding is invalid.\n                // Note that we *constrain* the encoding is correct by performing a range check on `validity_check`\n                // If the decoding is invalid, `decoded = -2^{32}`. We add up all `decoded` values and apply a 32-bit range check.\n                // Given all valid encodings are 8-bit, as long as the input length is less than 2^24 bytes, it is not possible to\n                // underflow validity_check with an invalid encoding, and then overflow again by adding up valid encodings\n                __validate_decoded(decoded, input_byte, offset);\n            }\n            validity_check += decoded;\n            slice += decoded as Field;\n        }\n\n        validity_check.assert_max_bit_size::<32>();\n\n        for _ in base64_elements_in_final_chunk..BASE64_ELEMENTS_PER_CHUNK {\n            slice *= 64;\n        }\n\n        let slice_bytes: [u8; 30] = slice.to_be_bytes();\n        let num_bytes_in_final_chunk = OutputBytes - byte_offset;\n        for i in 0..num_bytes_in_final_chunk {\n            result[byte_offset + i] = slice_bytes[i];\n        }\n    }\n\n    if Pad == 1 {\n        assert(input_length % 4 == 0, \"base64 encoded strings must be a multiple of 4 bytes\");\n    }\n\n    assert_eq(\n        has_first_padding_byte_claim,\n        has_second_padding_byte_claim * has_first_padding_byte_claim,\n        \"if first byte contains padding so must the second\",\n    );\n    let output_length = ((input_length * 3) / 4) - num_padding_chars;\n    BoundedVec::from_parts_unchecked(result, output_length)\n}\n\n#[test]\nfn test_decode_empty() {\n    let input: [u8; 0] = [];\n    let expected: [u8; 0] = [];\n    let result = Base64DecodeBE::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_padding() {\n    // f\n    let input: [u8; 4] = [90, 103, 61, 61];\n    let expected: [u8; 1] = [102];\n    let result = Base64DecodeBE::decode(input);\n\n    assert(result == expected);\n\n    // fo\n    let input: [u8; 4] = [90, 109, 56, 61];\n    let expected: [u8; 2] = [102, 111];\n    let result = Base64DecodeBE::decode(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: [u8; 4] = [90, 109, 57, 118];\n    let expected: [u8; 3] = [102, 111, 111];\n    let result = Base64DecodeBE::decode(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_standard_no_pad() {\n    // f\n    let input: [u8; 2] = [90, 103];\n    let expected: [u8; 1] = [102];\n    let result = Base64DecodeBENoPad::decode(input);\n\n    assert(result == expected);\n\n    // fo\n    let input: [u8; 3] = [90, 109, 56];\n    let expected: [u8; 2] = [102, 111];\n    let result = Base64DecodeBENoPad::decode(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: [u8; 4] = [90, 109, 57, 118];\n    let expected: [u8; 3] = [102, 111, 111];\n    let result = Base64DecodeBENoPad::decode(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_max_byte() {\n    let expected: [u8; 1] = [255];\n\n    let input: [u8; 4] = [47, 119, 61, 61]; // \"/w==\"\n    let result: [u8; 1] = Base64DecodeBE::decode(input);\n    assert(result == expected);\n\n    let input: [u8; 2] = [47, 119]; // \"/w\"\n    let result: [u8; 1] = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n\n    let input: [u8; 4] = [95, 119, 61, 61]; // \"_w==\"\n    let result: [u8; 1] = Base64DecodeBEUrlSafeWithPad::decode(input);\n    assert(result == expected);\n\n    let input: [u8; 2] = [95, 119]; // \"_w\"\n    let result: [u8; 1] = Base64DecodeBEUrlSafe::decode(input);\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 255, offset 0\")]\nfn test_decode_invalid() {\n    let input: [u8; 2] = [255, 255];\n    let _: [u8; 1] = Base64DecodeBENoPad::decode(input);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid input length for specified output length. Expected 3 input elements, but got 4.\")]\nfn test_decode_standard_no_pad_fail_with_padding() {\n    // test decoding / and +\n    let input: [u8; 4] = [47, 43, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_standard() {\n    // test decoding / and +\n    let input: [u8; 4] = [47, 43, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBE::decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 95, offset 0\")]\nfn test_decode_underscore_with_standard() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let _: [u8; 2] = Base64DecodeBE::decode(input);\n}\n\n#[test]\nfn test_decode_url_safe_with_pad() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBEUrlSafeWithPad::decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 47, offset 0\")]\nfn test_decode_slash_with_url_safe() {\n    // test decoding / and +\n    let input: [u8; 3] = [47, 43, 65];\n    let _: [u8; 2] = Base64DecodeBEUrlSafe::decode(input);\n}\n\n#[test]\nfn test_decode_url_safe() {\n    // test decoding _ and -\n    let input: [u8; 3] = [95, 45, 65];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBEUrlSafe::decode(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid input length for specified output length. Expected 3 input elements, but got 4.\")]\nfn test_decode_url_safe_no_pad_fail_with_padding() {\n    // test decoding _ and -\n    let input: [u8; 4] = [95, 45, 65, 61];\n    let expected: [u8; 2] = [255, 224];\n    let result: [u8; 2] = Base64DecodeBEUrlSafe::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_ascii() {\n    // base64: SGVsbG8gV29ybGQh\n    let input: [u8; 16] = [83, 71, 86, 115, 98, 71, 56, 103, 86, 50, 57, 121, 98, 71, 81, 104];\n    // \"Hello World!\"\n    let expected: [u8; 12] = [72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33];\n\n    // all configurations should decode the same way\n    let result: [u8; 12] = Base64DecodeBE::decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = Base64DecodeBEUrlSafeWithPad::decode(input);\n    assert(result == expected);\n    let result: [u8; 12] = Base64DecodeBEUrlSafe::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_utf8() {\n    // base64: 44GT44KT44Gr44Gh44Gv44CB5LiW55WM77yB\n    let input: [u8; 36] = [\n        52, 52, 71, 84, 52, 52, 75, 84, 52, 52, 71, 114, 52, 52, 71, 104, 52, 52, 71, 118, 52, 52,\n        67, 66, 53, 76, 105, 87, 53, 53, 87, 77, 55, 55, 121, 66,\n    ];\n    // non-ascii utf-8: \"Hello, World!\" in Japanese\n    let expected: [u8; 27] = [\n        227, 129, 147, 227, 130, 147, 227, 129, 171, 227, 129, 161, 227, 129, 175, 227, 128, 129,\n        228, 184, 150, 231, 149, 140, 239, 188, 129,\n    ];\n\n    // all configurations should decode the same way\n    let result: [u8; 27] = Base64DecodeBE::decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = Base64DecodeBEUrlSafeWithPad::decode(input);\n    assert(result == expected);\n    let result: [u8; 27] = Base64DecodeBEUrlSafe::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_multi_chunks() {\n    // \"The quick brown fox jumps over the lazy dog.\"\n    let expected: [u8; 44] = [\n        84, 104, 101, 32, 113, 117, 105, 99, 107, 32, 98, 114, 111, 119, 110, 32, 102, 111, 120, 32,\n        106, 117, 109, 112, 115, 32, 111, 118, 101, 114, 32, 116, 104, 101, 32, 108, 97, 122, 121,\n        32, 100, 111, 103, 46,\n    ];\n\n    let input: [u8; 60] = [\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 52, 61,\n    ];\n    let result: [u8; 44] = Base64DecodeBE::decode(input);\n    assert(result == expected);\n\n    let input: [u8; 59] = [\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 52,\n    ];\n    let result = Base64DecodeBENoPad::decode(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_with_padding() {\n    // Raw bh: GxMlgwLiypnVrE2C0Sf4yzhcWTkAhSZ5+WERhKhXtlU=\n    // Translated directly to ASCII\n    let input: [u8; 44] = [\n        71, 120, 77, 108, 103, 119, 76, 105, 121, 112, 110, 86, 114, 69, 50, 67, 48, 83, 102, 52,\n        121, 122, 104, 99, 87, 84, 107, 65, 104, 83, 90, 53, 43, 87, 69, 82, 104, 75, 104, 88, 116,\n        108, 85, 61,\n    ];\n\n    let result: [u8; 32] = Base64DecodeBE::decode(input);\n    let expected: [u8; 32] = [\n        27, 19, 37, 131, 2, 226, 202, 153, 213, 172, 77, 130, 209, 39, 248, 203, 56, 92, 89, 57, 0,\n        133, 38, 121, 249, 97, 17, 132, 168, 87, 182, 85,\n    ];\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var_empty() {\n    let input: BoundedVec<u8, 0> = BoundedVec::new();\n    let expected: BoundedVec<u8, 0> = BoundedVec::new();\n    let result = Base64DecodeBE::decode_var(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var_padding() {\n    // f\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 103, 61, 61]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102]);\n    let result = Base64DecodeBE::decode_var(input);\n    println(f\"result {result}\");\n    println(f\"expected {expected}\");\n\n    assert(result == expected);\n\n    // fo\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 109, 56, 61]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102, 111]);\n    let result = Base64DecodeBE::decode_var(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: BoundedVec<u8, 8> = BoundedVec::from_array([90, 109, 57, 118]);\n    let expected: BoundedVec<u8, 6> = BoundedVec::from_array([102, 111, 111]);\n    let result = Base64DecodeBE::decode_var(input);\n\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var_standard_no_pad() {\n    // f\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 103]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102]);\n    let result = Base64DecodeBENoPad::decode_var(input);\n\n    // fo\n    println(f\"result {result}, expected {expected}\");\n\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 109, 56]);\n\n    assert(result == expected);\n\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102, 111]);\n    let result = Base64DecodeBENoPad::decode_var(input);\n\n    assert(result == expected);\n\n    // foo\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([90, 109, 57, 118]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([102, 111, 111]);\n    let result = Base64DecodeBENoPad::decode_var(input);\n\n    assert(result == expected);\n}\n\n#[test(should_fail_with = \"DecodeError: invalid symbol 61, offset 3\")]\nfn test_decode_var_no_pad_fail_with_padding() {\n    // test decoding / and +\n    let input: BoundedVec<u8, 4> = BoundedVec::from_array([47, 43, 65, 61]);\n    let expected: BoundedVec<u8, 3> = BoundedVec::from_array([255, 224]);\n    let result = Base64DecodeBENoPad::decode_var(input);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var() {\n    // base64: \"SGVsbG8sIFdvcmxkIQ==\"\n    let input: BoundedVec<u8, 24> = BoundedVec::from_array([\n        83, 71, 86, 115, 98, 71, 56, 115, 73, 70, 100, 118, 99, 109, 120, 107, 73, 81, 61, 61,\n    ]);\n    // base64: \"SGVsbG8sIFdvcmxkIQ\"\n    let input_no_pad: BoundedVec<u8, 24> = BoundedVec::from_array([\n        83, 71, 86, 115, 98, 71, 56, 115, 73, 70, 100, 118, 99, 109, 120, 107, 73, 81,\n    ]);\n    // \"Hello, World!\"\n    let expected: BoundedVec<u8, 16> =\n        BoundedVec::from_array([72, 101, 108, 108, 111, 44, 32, 87, 111, 114, 108, 100, 33]);\n\n    // all configurations should decode the same way\n    let result = Base64DecodeBE::decode_var(input);\n    assert(result == expected);\n    let result = Base64DecodeBENoPad::decode_var(input_no_pad);\n    println(f\"result {result}, expected {expected}\");\n    assert(result == expected);\n    let result = Base64DecodeBEUrlSafeWithPad::decode_var(input);\n    assert(result == expected);\n    let result = Base64DecodeBEUrlSafe::decode_var(input_no_pad);\n    assert(result == expected);\n}\n\n#[test]\nfn test_decode_var_multi_chunks() {\n    // base64: \"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZy4=\"\n    let input: BoundedVec<u8, 64> = BoundedVec::from_array([\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 52, 61,\n    ]);\n    // base64: \"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wcyBvdmVyIHRoZSBsYXp5IGRvZy4=\"\n    let input_no_pad: BoundedVec<u8, 64> = BoundedVec::from_array([\n        86, 71, 104, 108, 73, 72, 70, 49, 97, 87, 78, 114, 73, 71, 74, 121, 98, 51, 100, 117, 73,\n        71, 90, 118, 101, 67, 66, 113, 100, 87, 49, 119, 99, 121, 66, 118, 100, 109, 86, 121, 73,\n        72, 82, 111, 90, 83, 66, 115, 89, 88, 112, 53, 73, 71, 82, 118, 90, 121, 52,\n    ]);\n    // \"The quick brown fox jumps over the lazy dog.\"\n    let expected: BoundedVec<u8, 48> = BoundedVec::from_array([\n        84, 104, 101, 32, 113, 117, 105, 99, 107, 32, 98, 114, 111, 119, 110, 32, 102, 111, 120, 32,\n        106, 117, 109, 112, 115, 32, 111, 118, 101, 114, 32, 116, 104, 101, 32, 108, 97, 122, 121,\n        32, 100, 111, 103, 46,\n    ]);\n\n    // all configurations should give the same encoding\n    let result = Base64DecodeBE::decode_var(input);\n    assert(result == expected);\n    let result = Base64DecodeBENoPad::decode_var(input_no_pad);\n    assert(result == expected);\n    let result = Base64DecodeBEUrlSafeWithPad::decode_var(input);\n    assert(result == expected);\n    let result = Base64DecodeBEUrlSafe::decode_var(input_no_pad);\n    assert(result == expected);\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir_base64/v0.4.0/src/decoder.nr"},"173":{"source":"use crate::constants::TWO_POW_120;\nuse crate::fns::{\n    expressions::evaluate_quadratic_expression,\n    unconstrained_helpers::{\n        __add_with_flags, __from_field, __neg_with_flags, __sub_with_flags, __validate_gt_remainder,\n        __validate_in_field_compute_borrow_flags,\n    },\n    unconstrained_ops::{__add, __div, __mul, __neg, __sub, __udiv_mod},\n};\nuse crate::params::BigNumParams as P;\n\n/**\n * In this file:\n *\n * conditional_select\n * assert_is_not_equal\n * eq\n * validate_in_field\n * validate_in_range\n * validate_quotient_in_range\n * validate_gt\n * neg\n * add\n * sub\n * mul\n * div\n * udiv_mod\n * udiv\n * umod\n */\n\npub(crate) fn limbs_to_field<let N: u32, let MOD_BITS: u32>(\n    _params: P<N, MOD_BITS>,\n    limbs: [u128; N],\n) -> Field {\n    if N > 2 {\n        // validate that the limbs is less than the modulus the grumpkin modulus\n        let mut grumpkin_modulus = [0; N];\n        grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n        grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n        grumpkin_modulus[2] = 0x3064;\n        validate_gt::<N, MOD_BITS>(grumpkin_modulus, limbs);\n        // validate that the limbs are in range\n        validate_in_range::<_, N, MOD_BITS>(limbs);\n    }\n    // validate the limbs sum up to the field value\n    if N < 2 {\n        limbs[0] as Field\n    } else if N == 2 {\n        validate_in_range::<_, N, MOD_BITS>(limbs);\n        (limbs[0] + limbs[1] * TWO_POW_120) as Field\n    } else {\n        // validate_in_range::<N, 254>(limbs);\n        (\n            limbs[0] as Field\n                + limbs[1] as Field * TWO_POW_120 as Field\n                + limbs[2] as Field * TWO_POW_120 as Field * TWO_POW_120 as Field\n        )\n    }\n}\n\npub(crate) fn from_field<let N: u32, let MOD_BITS: u32>(field: Field) -> [u128; N] {\n    // Safety: we check that the resulting limbs represent the intended field element\n    // we check the bit length, the limbs being max 120 bits, and the value in total is less than the field modulus\n    let result: [u128; N] = unsafe { __from_field::<N>(field) };\n    if !std::runtime::is_unconstrained() {\n        // validate the limbs are in range and the value in total is less than 2^254\n\n        // validate that the last limb is less than the modulus\n        if N > 2 {\n            // validate that the result is less than the modulus\n            let mut grumpkin_modulus = [0; N];\n            grumpkin_modulus[0] = 0x33e84879b9709143e1f593f0000001;\n            grumpkin_modulus[1] = 0x4e72e131a029b85045b68181585d28;\n            grumpkin_modulus[2] = 0x3064;\n            validate_gt::<N, MOD_BITS>(grumpkin_modulus, result);\n            // validate that the limbs are in range\n            validate_in_range::<_, N, MOD_BITS>(result);\n        }\n        // validate the limbs sum up to the field value\n        let TWO_POW_120_FIELD = TWO_POW_120 as Field;\n        let field_val = if N < 2 {\n            result[0] as Field\n        } else if N == 2 {\n            validate_in_range::<_, N, MOD_BITS>(result);\n            result[0] as Field + result[1] as Field * TWO_POW_120_FIELD\n        } else {\n            validate_in_range::<_, N, MOD_BITS>(result);\n            result[0] as Field\n                + result[1] as Field * TWO_POW_120_FIELD\n                + result[2] as Field * TWO_POW_120_FIELD * TWO_POW_120_FIELD\n        };\n        assert_eq(field_val, field);\n    }\n\n    result\n}\n\n/**\n* @brief given an input seed, generate a pseudorandom BigNum value\n* @details we hash the input seed into `modulus_bits * 2` bits of entropy,\n* which is then reduced into a BigNum value\n* We use a hash function that can be modelled as a random oracle\n* This function *should* produce an output that is a uniformly randomly distributed value modulo BigNum::modulus()\n**/\n\npub(crate) fn derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [u128; N] {\n    let mut rolling_seed: [u8; SeedBytes + 1] = [0; SeedBytes + 1];\n    for i in 0..SeedBytes {\n        rolling_seed[i] = seed[i];\n        assert_eq(rolling_seed[i], seed[i]);\n    }\n\n    let mut hash_buffer: [u8; N * 2 * 15] = [0; N * 2 * 15];\n\n    let mut rolling_hash_fields: [Field; (SeedBytes / 31) + 1] = [0; (SeedBytes / 31) + 1];\n    let mut seed_ptr = 0;\n    for i in 0..(SeedBytes / 31) + 1 {\n        let mut packed: Field = 0;\n        for _ in 0..31 {\n            if (seed_ptr < SeedBytes) {\n                packed *= 256;\n                packed += seed[seed_ptr] as Field;\n                seed_ptr += 1;\n            }\n        }\n        rolling_hash_fields[i] = packed;\n    }\n\n    let compressed =\n        std::hash::poseidon2::Poseidon2::hash(rolling_hash_fields, (SeedBytes / 31) + 1);\n    let mut rolling_hash: [Field; 2] = [compressed, 0];\n\n    let num_hashes = (240 * N) / 254 + (((30 * N) % 32) != 0) as u32;\n    for i in 0..num_hashes - 1 {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        for j in 0..30 {\n            hash_buffer[i * 30 + j] = hash[j];\n        }\n        rolling_hash[1] += 1;\n    }\n\n    {\n        let hash: Field = std::hash::poseidon2::Poseidon2::hash(rolling_hash, 2);\n        let hash: [u8; 32] = hash.to_le_bytes();\n        let remaining_bytes = 30 * N - (num_hashes - 1) * 30;\n        for j in 0..remaining_bytes {\n            hash_buffer[(num_hashes - 1) * 30 + j] = hash[j];\n        }\n    }\n\n    let num_bits = MOD_BITS * 2;\n    let num_bytes = num_bits / 8 + ((num_bits % 8) != 0) as u32;\n\n    let bits_in_last_byte = num_bits as u8 % 8;\n    let last_byte_mask = (1 as u8 << bits_in_last_byte) - 1;\n    hash_buffer[num_bytes - 1] = hash_buffer[num_bytes - 1] & last_byte_mask;\n\n    let num_bigfield_chunks = (2 * N) / (N - 1) + (((2 * N) % (N - 1)) != 0) as u32;\n    let mut byte_ptr = 0;\n\n    // we want to convert our byte array into bigfield chunks\n    // each chunk has at most N-1 limbs\n    // to determine the exact number of chunks, we need the `!=` or `>` operator which is not avaiable when defining array sizes\n    // so we overestimate at 4\n    // e.g. if N = 20, then we have 40 limbs we want to reduce, but each bigfield chunk is 19 limbs, so we need 3\n    // if N = 2, we have 4 limbs we want to reduce but each bigfield chunk is only 1 limb, so we need 4\n    // max possible number of chunks is therefore 4\n    let mut bigfield_chunks: [[u128; N]; 4] = [[0; N]; 4];\n    for k in 0..num_bigfield_chunks {\n        let mut bigfield_limbs: [u128; N] = [0; N];\n        let mut num_filled_bytes = (k * 30);\n        let mut num_remaining_bytes = num_bytes - num_filled_bytes;\n        let mut num_remaining_limbs =\n            (num_remaining_bytes / 15) + (num_remaining_bytes % 15 > 0) as u32;\n        let mut more_than_N_minus_one_limbs = (num_remaining_limbs > (N - 1)) as u32;\n        let mut num_limbs_in_bigfield = more_than_N_minus_one_limbs * (N - 1)\n            + num_remaining_limbs * (1 - more_than_N_minus_one_limbs);\n\n        for j in 0..num_limbs_in_bigfield {\n            let mut limb: u128 = 0;\n            for _ in 0..15 {\n                let need_more_bytes = (byte_ptr < num_bytes);\n                let mut byte = hash_buffer[byte_ptr];\n                limb *= (256 * need_more_bytes as u128 + (1 - need_more_bytes as u128));\n                limb += byte as u128 * need_more_bytes as u128;\n                byte_ptr += need_more_bytes as u32;\n            }\n            bigfield_limbs[num_limbs_in_bigfield - 1 - j] = limb;\n        }\n        bigfield_chunks[num_bigfield_chunks - 1 - k] = bigfield_limbs;\n    }\n\n    let mut bigfield_rhs_limbs: [u128; N] = [0; N];\n    bigfield_rhs_limbs[N - 1] = 1;\n    validate_in_range::<_, _, MOD_BITS>(bigfield_rhs_limbs);\n\n    let mut result: [u128; N] = [0; N];\n\n    for i in 0..num_bigfield_chunks {\n        let bigfield_lhs_limbs = bigfield_chunks[i];\n\n        // result = mul(params, result, bigfield_rhs_limbs);\n        result = add(params, result, bigfield_lhs_limbs);\n    }\n\n    result\n}\n\n/**\n* @brief conditional_select given the value of `predicate` return either `self` (if 0) or `other` (if 1)\n* @description should be cheaper than using an IF statement (TODO: check!)\n**/\npub(crate) fn conditional_select<let N: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n    predicate: bool,\n) -> [u128; N] {\n    let mut result: [u128; N] = lhs;\n    for i in 0..N {\n        // (lhs[i] - rhs[i]) * predicate + rhs[i]\n        // in case lhs < rhs, this will underflow so we have to do one extra multiplication to prevent it\n        result[i] = lhs[i] * predicate as u128 + rhs[i] * (1 - predicate as u128);\n    }\n    result\n}\n\n/**\n    * @brief Validate self != other\n    * @details If A == B, then A == B mod N.\n    *          We can efficiently evaluate A == B mod N where N = circuit modulus\n    *          This method is *sound*, but not *complete* (i.e. A != B but A == B mod N)\n    *          However the probability of an honest Prover being unable to satisfy this check is tiny!\n    *          (todo: compute how tiny)\n    **/\npub(crate) fn assert_is_not_equal<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) {\n    let mut l: Field = 0;\n    let mut r: Field = 0;\n    let mut modulus_mod_n: Field = 0;\n    for i in 0..N {\n        l *= TWO_POW_120 as Field;\n        r *= TWO_POW_120 as Field;\n        modulus_mod_n *= TWO_POW_120 as Field;\n        l += lhs[N - i - 1] as Field;\n        r += rhs[N - i - 1] as Field;\n        modulus_mod_n += params.modulus[N - i - 1] as Field;\n    }\n\n    // lhs can be either X mod N or P + X mod N\n    // rhs can be either Y mod N or P + Y mod N\n    // If lhs - rhs = 0 mod P then lhs - rhs = 0, P or -P mod N\n    let diff = l - r;\n    let target = diff * (diff + modulus_mod_n) * (diff - modulus_mod_n);\n    assert(target != 0, \"asssert_is_not_equal fail\");\n}\n\npub(crate) fn eq<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> bool {\n    let diff = sub::<_, MOD_BITS>(params, lhs, rhs);\n    // if self == other, possible values of `diff` will be `p` or `0`\n    // (the subtract operator constrains diff to be < ceil(log(p)))\n    // TODO: can do this more efficiently via witngen in unconstrained functions?\n    let is_equal_modulus: bool = diff == params.modulus;\n    let is_equal_zero: bool = diff.all(|elem| elem == 0);\n    is_equal_modulus | is_equal_zero\n}\n\npub(crate) fn is_zero<let N: u32, let MOD_BITS: u32>(val: [u128; N]) -> bool {\n    val.all(|limb| limb == 0)\n}\n\npub(crate) fn validate_in_field<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) {\n    // N.B. need to combine with validate_in_range if `self` limbs have not been range constrained\n    let mut p_minus_self: [Field; N] = [0; N];\n    let modulus: [u128; N] = params.modulus;\n    for i in 0..N {\n        p_minus_self[i] = (modulus[i] as Field - val[i] as Field);\n    }\n    let borrow_flags = unsafe { __validate_in_field_compute_borrow_flags(params, val) };\n    p_minus_self[0] += (borrow_flags[0] as Field * TWO_POW_120 as Field);\n    for i in 1..N - 1 {\n        p_minus_self[i] +=\n            (borrow_flags[i] as Field * TWO_POW_120 as Field - borrow_flags[i - 1] as Field);\n    }\n    p_minus_self[N - 1] -= (borrow_flags[N - 2] as Field);\n    validate_in_range::<_, _, MOD_BITS>(p_minus_self);\n}\n\n/**\n* @brief Validate a BigNum instance is correctly range constrained to contain no more than Params::modulus_bits()\n**/\npub(crate) fn validate_in_range<T, let N: u32, let MOD_BITS: u32>(limbs: [T; N])\nwhere\n    T: Into<Field>,\n{\n    for i in 0..(N - 1) {\n        limbs[i].into().assert_max_bit_size::<120>();\n    }\n\n    limbs[N - 1].into().assert_max_bit_size::<MOD_BITS - ((N - 1) * 120)>();\n}\n\n/**\n* @brief validate quotient produced from `evaluate_quadratic_expression` is well-formed\n* @description because the inputs into evaluate_quadratic_expression may cause the quotient to extend beyond `Params::modulus_bits`.\n*              We allow the quotient to extend 6 bits beyond Params::modulus_bits()\n*              Why is this?\n*              several factors:    1. quotient * modulus , limbs cannot overflow field boundary (254 bits)\n*                                  2. in `evaluate_quadratic_expression`, we require that for `expression - quotient * modulus`,\n*                                     limbs cannot exceed 246 bits (246 magic number due to a higher number adding extra range check gates)\n*              because of factor 2 and the fact that modulus limbs are 120 bits, quotient limbs cannot be >126 bits\n*\n*              Note: doesn't this mean that final_limb_bits should be constrained to be 126 bits, not modulus_bits() - ((N - 1) * 120) + 6?\n*              TODO: think about this more! we want the range constraint we apply to be as small as allowable as this is more efficient\n**/\npub(crate) fn validate_quotient_in_range<let N: u32, let MOD_BITS: u32>(limbs: [u128; N]) {\n    for i in 0..(N) {\n        (limbs[i] as Field).assert_max_bit_size::<120>();\n    }\n    // Note: replace magic number 6 with definition\n    (limbs[N - 1] as Field).assert_max_bit_size::<MOD_BITS - ((N - 1) * 120) + 6>();\n}\n\n// validate that lhs - rhs does not underflow i.e. lhs > rhs\npub(crate) fn validate_gt<let N: u32, let MOD_BITS: u32>(lhs: [u128; N], rhs: [u128; N]) {\n    // so we do... p - x - r = 0 and there might be borrow flags\n    // a - b = r\n    // p + a - b - r = 0\n\n    let (result, carry_flags, borrow_flags) = unsafe { __validate_gt_remainder(lhs, rhs) };\n    validate_in_range::<_, _, MOD_BITS>(result);\n\n    let mut addend: [Field; N] = [0; N];\n    let result_limb = lhs[0] as Field - rhs[0] as Field + addend[0] - result[0] as Field - 1\n        + (borrow_flags[0] as Field - carry_flags[0] as Field) * TWO_POW_120 as Field;\n    assert(result_limb == 0);\n\n    for i in 1..N - 1 {\n        let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n        let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n        let result_limb = lhs[i] as Field - rhs[i] as Field + addend[i]\n            - result[i] as Field\n            - prev_borrow_sub_carry\n            + borrow_sub_carry * TWO_POW_120 as Field;\n        assert(result_limb == 0);\n    }\n\n    let result_limb = lhs[N - 1] as Field - rhs[N - 1] as Field + addend[N - 1]\n        - result[N - 1] as Field\n        - borrow_flags[N - 2] as Field\n        + carry_flags[N - 2] as Field;\n    assert(result_limb == 0);\n}\n\npub(crate) fn neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __neg(params, val)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, borrow_flags) = unsafe { __neg_with_flags(params, val) };\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n        let result_limb = modulus[0] + (borrow_flags[0] as u128 * TWO_POW_120) - val[0] - result[0];\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let result_limb = modulus[i] + (borrow_flags[i] as u128 * TWO_POW_120)\n                - val[i]\n                - result[i]\n                - borrow_flags[i - 1] as u128;\n            assert(result_limb == 0);\n        }\n        let result_limb = modulus[N - 1] - val[N - 1] - result[N - 1] - borrow_flags[N - 2] as u128;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            // __add_u128(params, lhs, rhs)\n            __add(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        let (result, carry_flags, borrow_flags, overflow_modulus) =\n            unsafe { __add_with_flags(params, lhs, rhs) };\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut subtrahend: [u128; N] = [0; N];\n        if (overflow_modulus) {\n            subtrahend = modulus;\n        }\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = lhs[0] as Field + rhs[0] as Field\n            - subtrahend[0] as Field\n            - result[0] as Field\n            + borrow_sub_carry * TWO_POW_120 as Field;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = lhs[i] as Field + rhs[i] as Field\n                - subtrahend[i] as Field\n                - result[i] as Field\n                - prev_borrow_sub_carry\n                + borrow_sub_carry * TWO_POW_120 as Field;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb = lhs[N - 1] as Field + rhs[N - 1] as Field\n            - subtrahend[N - 1] as Field\n            - result[N - 1] as Field\n            - borrow_sub_carry as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\npub(crate) fn sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    if std::runtime::is_unconstrained() {\n        // Safety: not need to constrain in unconstrained runtime\n        unsafe {\n            __sub(params, lhs, rhs)\n        }\n    } else {\n        // so we do... p - x - r = 0 and there might be borrow flags\n        // a - b = r\n        // p + a - b - r = 0\n        let (result, carry_flags, borrow_flags, underflow) =\n            unsafe { __sub_with_flags(params, lhs, rhs) };\n\n        validate_in_range::<_, _, MOD_BITS>(result);\n        let modulus = params.modulus;\n\n        let mut addend: [u128; N] = [0; N];\n        if (underflow) {\n            addend = modulus;\n        }\n\n        let borrow_sub_carry = borrow_flags[0] as Field - carry_flags[0] as Field;\n        let result_limb = borrow_sub_carry * TWO_POW_120 as Field\n            + addend[0] as Field\n            + lhs[0] as Field\n            - rhs[0] as Field\n            - result[0] as Field;\n        assert(result_limb == 0);\n        for i in 1..N - 1 {\n            let prev_borrow_sub_carry = borrow_flags[i - 1] as Field - carry_flags[i - 1] as Field;\n            let borrow_sub_carry = borrow_flags[i] as Field - carry_flags[i] as Field;\n            let result_limb = borrow_sub_carry * TWO_POW_120 as Field\n                + addend[i] as Field\n                + lhs[i] as Field\n                - rhs[i] as Field\n                - result[i] as Field\n                - prev_borrow_sub_carry;\n            assert(result_limb == 0);\n        }\n        let borrow_sub_carry = borrow_flags[N - 2] as Field - carry_flags[N - 2] as Field;\n        let result_limb = addend[N - 1] as Field + lhs[N - 1] as Field\n            - rhs[N - 1] as Field\n            - result[N - 1] as Field\n            - borrow_sub_carry as Field;\n        assert(result_limb == 0);\n        result\n    }\n}\n\n// Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n//       via evaluate_quadratic_expression\n// e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n//      will create much fewer constraints than calling `mul` and `add` directly\npub(crate) fn mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let result = unsafe { __mul::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[lhs]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [result],\n            [true],\n        );\n    }\n    result\n}\n\n// Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\npub(crate) fn div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    assert(\n        params.has_multiplicative_inverse,\n        \"BigNum has no multiplicative inverse. Use udiv for unsigned integer division\",\n    );\n    let result = unsafe { __div::<_, MOD_BITS>(params, lhs, rhs) };\n    if !std::runtime::is_unconstrained() {\n        evaluate_quadratic_expression(\n            params,\n            [[result]],\n            [[false]],\n            [[rhs]],\n            [[false]],\n            [lhs],\n            [true],\n        );\n    }\n    result\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) fn udiv_mod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let (quotient, remainder) = unsafe { __udiv_mod(numerator, divisor) };\n    if !std::runtime::is_unconstrained() {\n        // self / divisor = quotient rounded\n        // quotient * divisor + remainder - self = 0\n        evaluate_quadratic_expression(\n            params,\n            [[quotient]],\n            [[false]],\n            [[divisor]],\n            [[false]],\n            [numerator, remainder],\n            [true, false],\n        );\n        // we need (remainder < divisor)\n        // implies (divisor - remainder > 0)\n        validate_gt::<_, MOD_BITS>(divisor, remainder);\n    }\n    (quotient, remainder)\n}\n\n/**\n* @brief udiv_mod performs integer division between numerator, divisor\n*\n* i.e. return param is floor(numerator / divisor)\n**/\npub(crate) fn udiv<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).0\n}\n\n/**\n* @brief udiv_mod performs integer modular reduction\n*\n* i.e. 1. numerator % divisor = return value\n**/\npub(crate) fn umod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    udiv_mod::<_, MOD_BITS>(params, numerator, divisor).1\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/constrained_ops.nr"},"174":{"source":"use crate::utils::split_bits;\n\nuse crate::constants::{TWO_POW_120, TWO_POW_126, TWO_POW_246};\nuse crate::fns::{\n    constrained_ops::validate_quotient_in_range, unconstrained_helpers::__barrett_reduction,\n};\nuse crate::params::BigNumParams as P;\n\n/**\n* @brief Given a degree-2 BigNum expression that is equal to 0 mod p, compute the quotient and borrow flags \n* @description The expression is of the form:\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] = quotient * modulus\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The borrow flags describe whether individual Field limbs will underflow when evaluating the above relation.\n* For example, when computing the product a * b - q * p = 0, it is possible that:\n*      1. a[0]*b[0] - p[0]*q[0] = -2^{120}\n*      2. a[0]*b[1] + a[1]*b[0] - p[0]*q[1] - p[1]*q[0] = 1\n* In the above example, the value represented by these two limbs is zero despite each limb being nonzero.\n* In this case, to correctly constrain the result, we must add (at least) 2^{120} from the first limb and subtract 1 from the second.\n*\n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\n\nunconstrained fn __compute_quadratic_expression_with_borrow_flags<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([u128; N], [u128; N], [Field; 2 * N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut mulout_p = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n\n    let mut mulout_n: [Field; 2 * N] = [0; 2 * N];\n    let mut relation_result: [u128; 2 * N] = split_bits::__normalize_limbs(mulout_p, 2 * N);\n\n    let (quotient, remainder) =\n        __barrett_reduction(relation_result, params.redc_param, MOD_BITS, params.modulus);\n    assert(remainder == [0; N]);\n    for i in 0..N {\n        for j in 0..N {\n            mulout_n[i + j] += quotient[i] as Field * params.modulus[j] as Field;\n        }\n    }\n\n    // compute borrow flags from mulout_p and mulout_n\n    let mut borrow_flags: [Field; 2 * N] = [0; 2 * N];\n    let borrow_shift: Field = TWO_POW_246; // 2^{246}\n    let borrow_carry: Field = TWO_POW_126; // 2^{246 - 120} = 2^{126}\n    let downshift: Field = 1 / (TWO_POW_120 as Field);\n\n    // determine whether we need to borrow from more significant limbs.\n    // initial limb is \"simple\" comparison operation\n    // TODO: check how expensive `lt` operator is w.r.t. witness generation\n    borrow_flags[0] = mulout_p[0].lt(mulout_n[0]) as Field;\n    // we have 2N - 2 borrow flags. The number of limbs from our product computation is 2N - 1\n    // and there is nothing to borrow against for the final limb.\n    let mut hi_bits =\n        (mulout_p[0] - mulout_n[0] + (borrow_flags[0] as Field * borrow_shift)) * downshift;\n    for i in 1..(N + N - 2) {\n        // compute the contribution from limb `i-1` that gets added into limb `i`, and add into limb `i`\n        // let hi_bits = (mulout_p.get(i - 1) - mulout_n.get(i - 1) + (borrow_flags.get(i - 1) * borrow_shift))\n        //     * downshift;\n        mulout_p[i] += hi_bits;\n\n        // determine whether negative limb values are greater than positive limb values\n        let underflow: Field =\n            mulout_p[i].lt(mulout_n[i] + (borrow_flags[i - 1] * borrow_carry)) as Field;\n        borrow_flags[i] = underflow;\n\n        hi_bits = (\n            mulout_p[i] - mulout_n[i] + (borrow_flags[i] * borrow_shift)\n                - (borrow_flags[i - 1] * borrow_carry)\n        )\n            * downshift;\n    }\n\n    (quotient, remainder, borrow_flags)\n}\n\n/**\n* @brief Computes the result of a linear combination of (possibly negative) BigNum values (unconstrained)\n**/\n// NOTE: modulus2 is structured such that all limbs will be greater than 0, even when subtracting.\n// To do this, when computing `p - x`, we ensure that each limb in `p` is greater than each limb in `x`.\n// We know that, for a valid bignum element, the limbs in `x` will be <2^{120}\n// Therefore each of the limbs in `p` (except the most significant) will borrow 2^{120} from the more significant limb.\n// Finally, to ensure we do not underflow in the most significant limb, we use `2p` instead of `p`\nunconstrained fn __add_linear_expression<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]; M],\n    flags: [bool; M],\n) -> ([u128; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut sum: [u128; N] = [0; N];\n    // TODO: ugly! Will fail if input array is empty\n    let modulus2: [u128; N] = params.double_modulus;\n    for i in 0..M {\n        if (flags[i]) {\n            for j in 0..N {\n                sum[j] = sum[j] + (modulus2[j] as Field - x[i][j] as Field) as u128;\n                // assert(x[i][j].lt(modulus2[j]));\n            }\n        } else {\n            for j in 0..N {\n                sum[j] = sum[j] + x[i][j];\n            }\n        }\n    }\n    // problem if we normalize when used in computing quotient\n    sum\n}\n\n/**\n* @brief computes the limb products of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\nunconstrained fn __compute_quadratic_expression_product<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> [Field; 2 * N] {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mut lhs: [[u128; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut rhs: [[u128; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n\n    for i in 0..NUM_PRODUCTS {\n        lhs[i] = __add_linear_expression(params, lhs_terms[i], lhs_flags[i]);\n        rhs[i] = __add_linear_expression(params, rhs_terms[i], rhs_flags[i]);\n    }\n\n    let add: [u128; N] = __add_linear_expression(params, linear_terms, linear_flags);\n\n    let mut mulout: [Field; 2 * N] = [0; 2 * N];\n\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                mulout[i + j] += (lhs[k][i] as Field * rhs[k][j] as Field);\n            }\n        }\n        mulout[i] += add[i] as Field;\n    }\n    mulout\n}\n\n/**\n* @brief computes the quotient/remainder of a quadratic expression\n* @details see __compute_quadratic_expression_with_borrow_flags for full description\n**/\npub(crate) unconstrained fn __compute_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) -> ([u128; N], [u128; N]) {\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    let mulout: [Field; (N * 2)] = __compute_quadratic_expression_product(\n        params,\n        lhs_terms,\n        lhs_flags,\n        rhs_terms,\n        rhs_flags,\n        linear_terms,\n        linear_flags,\n    );\n    let mut relation_result: [u128; 2 * N] = split_bits::__normalize_limbs(mulout, 2 * N);\n\n    // size 4\n    // a[3] * b[3] = a[6] = 7\n    // TODO: ugly! Will fail if input slice is empty\n    let k = MOD_BITS;\n\n    let (quotient, remainder) =\n        __barrett_reduction(relation_result, params.redc_param, k, params.modulus);\n\n    let mut q = quotient;\n    let mut r = remainder;\n    (q, r)\n}\n\n/**\n* @brief Constrain a degree-2 BigNum expression to be equal to 0 modulo self.modulus\n* @description The expression is of the form (when evaluated as an integer relation):\n*\n* \\sum_{i=0}^{NUM_PRODUCTS - 1} ((\\sum_{j=0}^{LHS_N-1}lhs[i][j]) * (\\sum_{j=0}^{RHS_N-1}rhs[i][j])) + \\sum_{i=0}^{ADD_N - 1}linear_terms[i] - quotient * modulus = 0\n*\n* The intent is to capture an arbitrary degree-2 expression within the limitations of Noir (no efficient dynamically-sized vectors)\n*\n* Note: this method requires the remainder term of the expression to be ZERO\n* When performing BigNum arithmetic, we want to represent desired BigNum operations in a way that minimizes the number of modular reductions that are required.\n* This can be achieved by minimizing the number of degree-2 relations required.\n*\n* The expensive parts of this algorithm are the following:\n*      1. evaluating the limb products required to compute `lhs * rhs`\n*      2. applying range constraints to validate the result is 0\n*\n* Range constraints are needed for the following reason:\n* When evaluating the above expression over N-limb BigNum objects, the result will consist of 2N - 1 limbs.\n* Each limb will be in the range [0, ..., 2^{240 + twiddle_factor} - 1] (twiddle_factor needs to be less than 6).\n* Because of the subtractions, the limbs may underflow and represent NEGATIVE values.\n* To account for this, we allow the Prover to borrow values from more significant limbs and add them into less significant limbs\n* (explicitly, we can borrow 2^{126} from limb `i + 1` to add `2^{246}` into `i`).\n* To ensure this has been done correctly, we validate that the borrow-adjusted limbs are all-zero for the first 120 bits.\n* We do *this* by multiplying the borrow-adjusted limbs by 1 / 2^{120} modulo CircutModulus, and we validate the result is in the range [0, ..., 2^{126} - 1].\n* TODO: explain why this check works. It's statistically sound but not perfectly sound. Chance of the check failing is ~1 in 2^{120}\n* I believe this is the most efficient way of performing the zero-check for this relation as it only requires `2N - 2` 126-bit range checks.\n* TODO: explain why we apply a 126-bit range check, this feels like a magic number\n* (it is. we could go higher, up to the number of bits in the CircuitModulus - 121, but 126 *should be* sufficient and is much cheaper)\n* TODO: apply checks in this method to validate twiddle_factor does not exceed 6\n* \n* @param lhs_terms a 2D array of BigNum\n* @param lhs_flags a 2D array of sign flags\n* @param rhs_terms a 2D array of BigNum\n* @param rhs_flags a 2D array of sign flags\n* @param linear_terms an array of BigNum\n* @param linear_flags an array of sign flags\n**/\npub(crate) fn evaluate_quadratic_expression<let N: u32, let MOD_BITS: u32, let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n    params: P<N, MOD_BITS>,\n    lhs_terms: [[[u128; N]; LHS_N]; NUM_PRODUCTS],\n    lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n    rhs_terms: [[[u128; N]; RHS_N]; NUM_PRODUCTS],\n    rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n    linear_terms: [[u128; N]; ADD_N],\n    linear_flags: [bool; ADD_N],\n) {\n    // use an unconstrained function to compute the value of the quotient\n    let (quotient, _, borrow_flags): ([u128; N], [u128; N], [Field; 2 * N]) = unsafe {\n        __compute_quadratic_expression_with_borrow_flags::<_, MOD_BITS, _, _, _, _>(\n            params,\n            lhs_terms,\n            lhs_flags,\n            rhs_terms,\n            rhs_flags,\n            linear_terms,\n            linear_flags,\n        )\n    };\n\n    // constrain the quotient to be in the range [0, ..., 2^{m} - 1], where `m` is log2(modulus) rounded up.\n    // Additionally, validate quotient limbs are also in the range [0, ..., 2^{120} - 1]\n    validate_quotient_in_range::<_, MOD_BITS>(quotient);\n    // TODO, validate we do not overflow N2 when multiplying and N when adding\n    // (should be a compile-time check...unconstrained function?)\n    // Compute the linear sums that represent lhs_1, rhs_1, lhs_2, rhs_2, add\n    let mut t0: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t1: [[Field; N]; NUM_PRODUCTS] = [[0; N]; NUM_PRODUCTS];\n    let mut t4: [Field; N] = [0; N];\n\n    // TODO: this is super nasty as it requires a multiplication\n    let double_modulus: [u128; N] = params.double_modulus;\n\n    for k in 0..NUM_PRODUCTS {\n        for i in 0..N {\n            for j in 0..LHS_N {\n                // note: if is_negative is not known at comptime this is very expensive\n                if (lhs_flags[k][j]) {\n                    t0[k][i] -= lhs_terms[k][j][i] as Field;\n                    t0[k][i] += double_modulus[i] as Field;\n                } else {\n                    t0[k][i] += lhs_terms[k][j][i] as Field;\n                }\n            }\n            for j in 0..RHS_N {\n                if (rhs_flags[k][j]) {\n                    t1[k][i] -= rhs_terms[k][j][i] as Field;\n                    t1[k][i] += double_modulus[i] as Field;\n                } else {\n                    t1[k][i] += rhs_terms[k][j][i] as Field;\n                }\n            }\n        }\n    }\n    for i in 0..N {\n        for j in 0..ADD_N {\n            if (linear_flags[j]) {\n                t4[i] -= linear_terms[j][i] as Field;\n                t4[i] += double_modulus[i] as Field;\n            } else {\n                t4[i] += linear_terms[j][i] as Field;\n            }\n        }\n    }\n\n    // We want to evaluate that t0 * t1 + t2 * t3 + t4 - Quotient * Modulus = 0, evaluated over the integers\n    // For this we need to be able to borrow values from more-significant limbs into less-significant limbs,\n    // so that we can ensure that no limbs will underflow for an honest Prover\n    let mut product_limbs: [Field; 2 * N] = [0; 2 * N];\n\n    // Compute the product t0 * t1 + t2 * t3 + t4 - Quotient * Modulus\n    // TODO: this is super nasty as it requires a multiplication\n    for i in 0..N {\n        for j in 0..N {\n            for k in 0..NUM_PRODUCTS {\n                if k == 0 {\n                    let new_term =\n                        t0[k][i] * t1[k][j] - quotient[i] as Field * params.modulus[j] as Field;\n                    std::as_witness(new_term); // width-4 optimization (n.b. might not be optimal if t2, t3 input arrays are nonzero)\n                    product_limbs[i + j] += new_term;\n                } else {\n                    product_limbs[i + j] += t0[k][i] * t1[k][j] as Field;\n                }\n            }\n            if (NUM_PRODUCTS == 0) {\n                product_limbs[i + j] -= quotient[i] as Field * params.modulus[j] as Field;\n            }\n        }\n        product_limbs[i] += t4[i];\n    }\n\n    // each limb product represents the sum of 120-bit products.\n    // by setting the borrow value to 2^246 we are restricting this method's completeness to expressions\n    // where no more than 64 limb products are summed together.\n    // TODO: check in unconstrained function that this condition is satisfied\n    // TODO: define trade-offs regarding the value of borrow_shift\n    // (the larger the value, the greater the range check that is required on product_limbs)\n    // (126-bit range check is a sweet spot for the barretenberg backend as it decomposes into 9 14-bit range checks)\n    // (the barretenberg backend can evaluate these in 5.25 gates. 127 bits costs 6.5 gates)\n    let borrow_shift: Field = 0x40000000000000000000000000000000000000000000000000000000000000; // 2^{246}\n    let borrow_carry: Field = 0x40000000000000000000000000000000; // 2^{246 - 120} = 2^{126}\n    // N.B. borrow_flags is `Field` type because making it `bool` would apply boolean constraints to all `N2` array entries.\n    //      We only use `N2 - 2` borrow flags so applying 1-bit range checks on the array elements we use is more efficient.\n    // TODO: Once it is possible to perform arithmetic on generics we can use `borrow_flags: [bool;N+N-2]` to avoid this issue\n    borrow_flags[0].assert_max_bit_size::<1>();\n    product_limbs[0] += borrow_flags[0] * borrow_shift;\n    for i in 1..(N + N - 2) {\n        borrow_flags[i].assert_max_bit_size::<1>();\n        product_limbs[i] += (borrow_flags[i] * borrow_shift - borrow_flags[i - 1] * borrow_carry);\n    }\n    product_limbs[N + N - 2] -= borrow_flags[N + N - 3] as Field * borrow_carry;\n\n    // Final step: Validate `product_limbs` represents the integer value `0`\n    // Each element `i` in `product_limbs` overlaps in bitrange with element `i+1`, EXCEPT for the low 120 bits\n    // i.e. we need to do the following for each limb `i`:\n    //      1. validate the limb's low-120 bits equals zero\n    //      2. compute the limb \"carry\" by right-shifting by 2^{120}\n    //      3. add the carry into limb `i+1`\n    // We can efficiently do all of the above by multiplying the limb by 2^{-120} and constraining the result to be <2^{126}\n    // (if the low 120 bits are nonzero the result will underflow and product a large value that cannot be range constrained)\n    // (the probability of an underflow value satisfying a 126-bit range constraint is approx. 2^{k - 126},\n    //  where k is the number of bits in the prime field)\n    // We then add the result into the next limb and repeat.\n    let hi_shift: Field = 0x1000000000000000000000000000000;\n    let hi_downshift: Field = 1 / hi_shift;\n    for i in 0..N + N - 2 {\n        product_limbs[i] *= hi_downshift;\n        std::as_witness(product_limbs[i]);\n        product_limbs[i].assert_max_bit_size::<126>(); // N.B. is this sufficient? going beyond 126 costs us 1 gate per limb\n        product_limbs[i + 1] += product_limbs[i];\n    }\n    // the most significant limb has no limb to \"carry\" values into - the entire limb must equal zero\n    assert(product_limbs[N + N - 2] == 0);\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/expressions.nr"},"176":{"source":"/**\n* @brief construct a BigNum instance out of an array of bytes in BIG ENDIAN format\n* @description: each 120-bit limb represents 15 bytes, we require that the size of the byte array\n*               is precisely large enough to cover MOD_BITS\n* @param x: input byte array\n**/\npub(crate) fn from_be_bytes<let N: u32, let MOD_BITS: u32, let NBytes: u32>(\n    x: [u8; NBytes],\n) -> [u128; N] {\n    let num_bits = NBytes * 8;\n    assert(num_bits >= MOD_BITS);\n    assert(num_bits - MOD_BITS < 8);\n    let mut result: [u128; N] = [0; N];\n\n    let excess_bytes = N * 15 - NBytes;\n    let final_limb_bytes = 15 - excess_bytes;\n    let mut limb: u128 = 0;\n    let mut k = 0;\n    for _j in 0..final_limb_bytes {\n        limb *= 256;\n        limb += x[k] as u128;\n        k += 1;\n    }\n    result[N - 1] = limb;\n\n    for i in 1..N {\n        let mut limb: u128 = 0;\n        for _j in 0..15 {\n            limb *= 256;\n            limb += x[k] as u128;\n            k += 1;\n        }\n        result[N - i - 1] = limb;\n    }\n\n    let most_significant_byte: Field = x[0] as Field;\n\n    most_significant_byte.assert_max_bit_size::<8 - (NBytes * 8 - MOD_BITS)>();\n    result\n}\n\npub(crate) fn to_le_bytes<let N: u32, let MOD_BITS: u32, let NBytes: u32>(\n    val: [u128; N],\n) -> [u8; NBytes] {\n    let nbytes = (MOD_BITS / 8) + (MOD_BITS % 8 != 0) as u32;\n    assert(nbytes <= NBytes);\n\n    let mut result: [u8; NBytes] = [0; NBytes];\n    for i in 0..N - 1 {\n        let limb_bytes: [u8; 15] = (val[i] as Field).to_le_bytes();\n        for j in 0..15 {\n            result[i * 15 + j] = limb_bytes[j];\n        }\n    }\n    let last_limb_bytes: [u8; 15] = (val[N - 1] as Field).to_le_bytes();\n    let num_last_bytes = (NBytes - (N - 1) * 15);\n    for i in 0..num_last_bytes {\n        result[(N - 1) * 15 + i] = last_limb_bytes[i];\n    }\n    result\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/serialization.nr"},"177":{"source":"use crate::constants::{TWO_POW_119, TWO_POW_120, TWO_POW_60};\nuse crate::fns::unconstrained_ops::{__add, __gte, __mul, __neg, __one, __pow};\nuse crate::params::BigNumParams as P;\nuse crate::utils::msb::get_msb64;\nuse crate::utils::split_bits::__normalize_limbs;\n\npub(crate) unconstrained fn __from_field<let N: u32>(field: Field) -> [u128; N] {\n    let mut x = field;\n    let x_first_u128 = (x as u128);\n    let first: u128 = x_first_u128 % TWO_POW_120;\n    // this becomes the same as a integer division because we're removing the remainder\n    x = (x - (first as Field)) / (TWO_POW_120 as Field);\n    let x_second_u128 = (x as u128);\n    let second = x_second_u128 % TWO_POW_120;\n    x = (x - (second as Field)) / (TWO_POW_120 as Field);\n    let x_third_u128 = (x as u128);\n    let third = x_third_u128 % TWO_POW_120;\n    let mut result: [u128; N] = [0; N];\n    if N > 2 {\n        result[0] = first;\n        result[1] = second;\n        result[2] = third;\n    }\n    if N == 2 {\n        result[0] = first;\n        result[1] = second;\n    }\n    if N == 1 {\n        result[0] = first;\n    }\n    result\n}\n\npub(crate) unconstrained fn __validate_in_field_compute_borrow_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [bool; N] {\n    let mut flags: [bool; N] = [false; N];\n    let modulus: [u128; N] = params.modulus;\n    flags[0] = modulus[0] < val[0];\n    for i in 1..N - 1 {\n        flags[i] = modulus[i] < val[i] + flags[i - 1] as u128;\n    }\n    flags\n}\n\npub(crate) unconstrained fn __validate_gt_remainder<let N: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N]) {\n    let mut a = lhs;\n    let mut b = rhs;\n    let underflow = !__gte(lhs, rhs);\n    assert(underflow == false, \"BigNum::validate_gt check fails\");\n    let mut result: [u128; N] = [0; N];\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 1;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term: u128 = a[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry;\n\n        let sub_term = b[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u128;\n        result[i] = (borrow * TWO_POW_120 + add_term - sub_term);\n\n        borrow_in = borrow;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n\n    (result, carry_flags, borrow_flags)\n}\n\npub(crate) unconstrained fn __neg_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> ([u128; N], [bool; N]) {\n    let mut result: [u128; N] = [0; N];\n    let mut borrow_in: u128 = 0;\n\n    let mut borrow_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let sub_term = val[i] + borrow_in;\n        let borrow = (sub_term > params.modulus[i]) as u128;\n        result[i] = borrow * TWO_POW_120 + params.modulus[i] - sub_term;\n\n        borrow_in = borrow;\n        borrow_flags[i] = borrow as bool;\n    }\n    (result, borrow_flags)\n}\n\npub(crate) unconstrained fn __add_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N], bool) {\n    let add_res = __helper_add(lhs, rhs);\n    let overflow = __gte(add_res, params.modulus);\n\n    let mut subtrahend: [u128; N] = [0; N];\n    let mut result: [u128; N] = [0; N];\n\n    if overflow {\n        subtrahend = params.modulus;\n    }\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term = lhs[i] + rhs[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry as u128;\n\n        let sub_term = subtrahend[i] + borrow_in;\n\n        let mut borrow: u128 = (sub_term > add_term) as u128;\n        result[i] = borrow * TWO_POW_120 + add_term - sub_term;\n        borrow_in = borrow as u128;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n    (result, carry_flags, borrow_flags, overflow)\n}\n\npub(crate) unconstrained fn __sub_with_flags<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [bool; N], [bool; N], bool) {\n    let mut one: [u128; N] = [0; N];\n    one[0] = 1;\n    let underflow = !__gte(lhs, rhs);\n    let addend: [u128; N] = if underflow { params.modulus } else { [0; N] };\n    let mut result: [u128; N] = [0; N];\n\n    let mut carry_in: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    let mut borrow_flags: [bool; N] = [false; N];\n    let mut carry_flags: [bool; N] = [false; N];\n    for i in 0..N {\n        let mut add_term: u128 = lhs[i] + addend[i] + carry_in;\n        let mut carry = (add_term as u128 >= TWO_POW_120) as u128;\n        add_term -= carry * TWO_POW_120;\n        carry_in = carry;\n\n        let sub_term = rhs[i] + borrow_in;\n        let mut borrow = (sub_term > add_term) as u128;\n        result[i] = borrow as u128 * TWO_POW_120 + add_term - sub_term;\n        borrow_in = borrow;\n\n        // Only set `borrow` and `carry` if they differ\n        if (carry != borrow) {\n            carry_flags[i] = carry as bool;\n            borrow_flags[i] = borrow as bool;\n        }\n    }\n    (result, carry_flags, borrow_flags, underflow)\n}\n\n/**\n * @brief BARRETT_REDUCTION_OVERFLOW_BITS defines how large an input to barrett reduction can be\n * @details maximum value = modulus^2 <<BARRETT_REDUCTION_OVERFLOW_BITS\n *          see __barrett_reduction for more details\n **/\ncomptime global BARRETT_REDUCTION_OVERFLOW_BITS: u32 = 4;\n\npub(crate) unconstrained fn __barrett_reduction<let N: u32>(\n    x: [u128; 2 * N],\n    redc_param: [u128; N],\n    k: u32,\n    modulus: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut mulout_field: [Field; 3 * N] = [0; 3 * N];\n    for i in 0..(N + N) {\n        for j in 0..N {\n            mulout_field[i + j] += x[i] as Field * redc_param[j] as Field;\n        }\n    }\n\n    let mulout: [u128; 3 * N] = __normalize_limbs(mulout_field, 3 * N - 1);\n\n    // When we apply the barrett reduction, the maximum value of the output will be\n    // <= p * (1 + x/2^{2k})\n    // where p = modulus,\n    //       x = reduction input\n    // if x > p * p, we need k to be larger than modulus_bits()\n    // we hardcode k = 4, which means that the maximum value of x is approx. 16 * p * p\n    // this should be larger than most values put into `evaluate_quadratic_expression`\n    // TODO: try and detect cases where x might be too large at comptime\n    // N.B. BARRETT_REDUCTION_OVERFLOW_BITS affects how `redc_param` is generated.\n    // `redc_param` = 2^{modulus_bits() * 2 + BARRETT_REDUCTION_OVERFLOW_BITS} / modulus\n    // NOTE: very niche edge case error that we need to be aware of:\n    //       N must be large enough to cover the modulus *plus* BARRETT_REDUCTION_OVERFLOW_BITS\n    //       i.e. a 359-bit prime needs (I think) 4 limbs to represent or we may overflow when calling __barrett_reduction\n    let mut quotient = __shr(mulout, (k + k + BARRETT_REDUCTION_OVERFLOW_BITS));\n    // the quotient has bunch of zero limbs now, so we can just take the first N limbs as a result\n    let mut smaller_quotient = [0; N];\n    for i in 0..N {\n        smaller_quotient[i] = quotient[i] as u128;\n    }\n\n    // N.B. we assume that the shifted quotient cannot exceed 2 times original bit size.\n    //      (partial_quotient_full should be just slightly larger than the modulus, we could probably represent with a size N+1 array)\n    let partial_quotient_full: [Field; 3 * N] = __into_field_array(quotient);\n\n    // quotient_mul_modulus_normalized can never exceed input value `x` so can fit into size-2 array\n    let mut quotient_mul_modulus_normalized: [Field; 2 * N] = [0; 2 * N];\n\n    // First, accumulate the products into quotient_mul_modulus_normalized\n    for j in 0..N {\n        for i in 0..(N + N - j) {\n            quotient_mul_modulus_normalized[i + j] +=\n                partial_quotient_full[i] * modulus[j] as Field;\n        }\n    }\n\n    // Then, split the accumulated values and propagate higher bits\n    let long_quotient_mul_modulus_normalized: [u128; 2 * N] =\n        __normalize_limbs(quotient_mul_modulus_normalized, 2 * N);\n    let mut quotient_mul_modulus_normalized: [u128; N] = [0; N];\n    for i in 0..N {\n        quotient_mul_modulus_normalized[i] = long_quotient_mul_modulus_normalized[i];\n    }\n\n    let mut long_remainder = __helper_sub(x, long_quotient_mul_modulus_normalized);\n    // ugly but have to remove a bunch of zeros from this\n    let mut remainder = [0; N];\n    for i in 0..N {\n        remainder[i] = long_remainder[i];\n    }\n    // barrett reduction is quirky so might need to remove a few modulus from the remainder\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n    if (__gte(remainder, modulus)) {\n        remainder = __helper_sub(remainder, modulus);\n        smaller_quotient = __increment(smaller_quotient);\n    }\n\n    (smaller_quotient, remainder)\n}\n\n/**\n* @brief compute the log of the size of the primitive root\n* @details find the maximum value k where x^k = 1, where x = primitive root\n*          This is needed for our Tonelli-Shanks sqrt algorithm\n**/\npub(crate) unconstrained fn __primitive_root_log_size<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> u32 {\n    let mut one: [u128; N] = [0; N];\n    one[0] = 1;\n    let mut target = __helper_sub(params.modulus, one);\n    let mut result: u32 = 0;\n    for _ in 0..MOD_BITS {\n        let lsb_is_one = (target[0] & 1) == 1;\n        if (lsb_is_one) {\n            break;\n        }\n        result += 1;\n        target = __shr1(target);\n    }\n    result\n}\n\n/**\n* @brief inner loop fn for `find_multiplive_generator`\n* @details recursive function to get around the lack of a `while` keyword\n**/\nunconstrained fn __recursively_find_multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    target: [u128; N],\n    p_minus_one_over_two: [u128; N],\n) -> (bool, [u128; N]) {\n    let exped = __pow(params, target, p_minus_one_over_two);\n    let one: [u128; N] = __one();\n    let neg_one = __neg(params, one);\n    let found = exped == neg_one;\n    let mut result: (bool, [u128; N]) = (found, target);\n    if (!found) {\n        let _target: [u128; N] = __add(params, target, one);\n        result = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n            params,\n            _target,\n            p_minus_one_over_two,\n        );\n    }\n    result\n}\n\n/**\n* @brief find multiplicative generator `g` where `g` is the smallest value that is not a quadratic residue\n*        i.e. smallest g where g^2 = -1\n* @note WARNING if multiplicative generator does not exist, this function will enter an infinite loop!\n**/\npub(crate) unconstrained fn __multiplicative_generator<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n) -> [u128; N] {\n    let mut target: [u128; N] = __one();\n    let p_minus_one_over_two = __shr1(__helper_sub(params.modulus, __one()));\n    let (_, target) = __recursively_find_multiplicative_generator::<_, MOD_BITS>(\n        params,\n        target,\n        p_minus_one_over_two,\n    );\n    target\n}\n\npub(crate) unconstrained fn __tonelli_shanks_sqrt_inner_loop_check<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    t2m: [u128; N],\n    i: u32,\n) -> u32 {\n    let one: [u128; N] = __one();\n    let is_one = t2m == one;\n    let mut result = i;\n    if (!is_one) {\n        let t2m = __mul::<_, MOD_BITS>(params, t2m, t2m);\n        let i = i + 1;\n        result = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, i);\n    }\n    result\n}\n\npub(crate) unconstrained fn __increment<let N: u32>(val: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 1;\n    for i in 0..N {\n        let mut add_term = (val[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shr<let N: u32>(input: [u128; N], shift: u32) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n\n    let num_shifted_limbs = shift / 120;\n    let limb_shift = (shift % 120) as u8;\n    let remainder_shift = (120 - limb_shift) as u8;\n    let mask: u128 = (((1 as u128) << limb_shift) - 1) << remainder_shift;\n    result[0] = (input[0 + num_shifted_limbs] >> limb_shift);\n    for i in 1..(N - num_shifted_limbs) {\n        let value = input[i + num_shifted_limbs];\n        result[i] = value >> limb_shift;\n        let remainder: u128 = (value << remainder_shift) & mask;\n        result[i - 1] = result[i - 1] + remainder;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shl<let N: u32>(input: [u128; N], shift: u32) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n\n    let num_shifted_limbs = shift / 120;\n    let limb_shift = (shift % 120) as u8;\n    let remainder_shift: u8 = 120 - limb_shift as u8;\n\n    // 83\n    // limb shift = 1\n    // inside shift = 19 bits to the left\n    // meaning we have 19 carry bits and 41 remainder bits\n    let mask: u128 = (1 as u128 << 120) - 1;\n    //   let mask: u64 = (((1 as u64) << limb_shift as u8) - 1) << remainder_shift as u8;\n    let value = input[0];\n\n    let mut remainder = (value >> remainder_shift);\n    result[num_shifted_limbs] = (value << limb_shift) & mask;\n\n    // shift 84. num shifted = 1\n    for i in 1..((N) - num_shifted_limbs) {\n        let value = input[i];\n        let upshift = ((value << limb_shift) + remainder) & mask;\n        result[i + num_shifted_limbs] = upshift;\n        remainder = (value >> remainder_shift);\n    }\n    result\n}\n\npub(crate) unconstrained fn __helper_sub<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut borrow: u128 = 0;\n    let mut borrow_in: u128 = 0;\n    for i in 0..N {\n        borrow = ((rhs[i] + borrow_in) > lhs[i]) as u128;\n        let sub = (borrow << 120) + lhs[i] as u128 - rhs[i] as u128 - borrow_in;\n        result[i] = sub;\n        borrow_in = borrow;\n    }\n    result\n}\n\npub(crate) unconstrained fn __helper_add<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (lhs[i] + rhs[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    result\n}\n\npub(crate) unconstrained fn __shr1<let N: u32>(mut input: [u128; N]) -> [u128; N] {\n    let value = input[N - 1];\n    input[N - 1] = value >> 1;\n\n    let mut remainder = (value & 1) << 119;\n\n    for i in 1..N {\n        let value = input[N - 1 - i];\n        input[N - 1 - i] = (value >> 1) + remainder;\n        remainder = (value << 119) & TWO_POW_119;\n    }\n    input\n}\n\npub(crate) unconstrained fn __get_msb<let N: u32>(val: [u128; N]) -> u32 {\n    let mut count = 0;\n    for i in 0..N {\n        let v = val[((N) - 1 - i)];\n        let v_low = v as u64 % TWO_POW_60 as u64;\n        let v_high = ((v - v_low as u128) / TWO_POW_60) as u64;\n        if (v_high > 0) {\n            count = 60 * ((2 * N) - 1 - (i * 2)) + get_msb64(v_high);\n            break;\n        }\n        if (v_low > 0) {\n            count = 60 * ((2 * N) - 1 - (i * 2 + 1)) + get_msb64(v_low);\n            break;\n        }\n    }\n    count\n}\n\npub(crate) fn __get_bit<let N: u32>(input: [u128; N], bit: u32) -> bool {\n    let segment_index: u32 = bit / 120;\n    let uint_index = bit % 120;\n    let limb: u128 = input[segment_index];\n    let value = (limb >> uint_index as u8) & 1;\n    value == 1\n}\n\npub(crate) fn __into_field_array<let N: u32>(input: [u128; N]) -> [Field; N] {\n    let mut result: [Field; N] = [0; N];\n    for i in 0..N {\n        result[i] = input[i] as Field;\n    }\n    result\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/unconstrained_helpers.nr"},"178":{"source":"use crate::fns::constrained_ops::derive_from_seed;\nuse crate::fns::unconstrained_helpers::{\n    __barrett_reduction, __get_bit, __get_msb, __helper_add, __helper_sub, __increment,\n    __multiplicative_generator, __primitive_root_log_size, __shl, __shr,\n    __tonelli_shanks_sqrt_inner_loop_check,\n};\nuse crate::params::BigNumParams as P;\nuse crate::utils::split_bits;\nuse super::unconstrained_helpers::__shr1;\n\npub(crate) unconstrained fn __one<let N: u32>() -> [u128; N] {\n    let mut limbs: [u128; N] = [0; N];\n    limbs[0] = 1;\n    limbs\n}\n\n/// Deterministically derives a big_num from a seed value.\n///\n/// Takes a seed byte array and generates a big_num in the range [0, modulus-1].\n///\n/// ## Value Parameters\n///\n/// - `params`: The BigNum parameters containing modulus and reduction info\n/// - `seed`:  Input seed bytes to derive from.\n///\n/// ## Returns\n///\n///  An array of field elements derived from the seed (the limbs of the big_num)\npub(crate) unconstrained fn __derive_from_seed<let N: u32, let MOD_BITS: u32, let SeedBytes: u32>(\n    params: P<N, MOD_BITS>,\n    seed: [u8; SeedBytes],\n) -> [u128; N] {\n    let out = derive_from_seed::<N, MOD_BITS, SeedBytes>(params, seed);\n    out\n}\n\npub(crate) unconstrained fn __eq<let N: u32>(lhs: [u128; N], rhs: [u128; N]) -> bool {\n    lhs == rhs\n}\n\npub(crate) unconstrained fn __is_zero<let N: u32>(limbs: [u128; N]) -> bool {\n    let mut result: bool = true;\n    for i in 0..N {\n        result = result & (limbs[i] == 0);\n    }\n\n    result\n}\n\n/**\n* @brief given an input `x`, compute `2p - x` (unconstrained)\n*\n* @description we subtract the input from double the modulus, because all constrained BigNum operations\n*              only guarantee that the output is in the range [0, ceil(log2(p))].\n*              I.E. the input may be larger than the modulus `p`.\n*              In order to ensure this operation does not underflow, we compute `2p - x` instead of `p - x`.\n*              N.B. constrained BigNum operations do not fully constrain outputs to be in the range [0, p-1]\n*              because such a check is expensive and usually unneccesary.\n*/\npub(crate) unconstrained fn __neg<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    limbs: [u128; N],\n) -> [u128; N] {\n    let f: [u128; N] = limbs;\n    __helper_sub(params.modulus, f)\n}\n\npub(crate) unconstrained fn __add<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (lhs[i] + rhs[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n    // check if the result is greater than the modulus\n    if __gte(result, params.modulus) {\n        __helper_sub(result, params.modulus)\n    } else {\n        result\n    }\n}\n\n/**\n* @brief given inputs `x, y` compute 2p + x - y (unconstrained)\n* @description see `__neg` for why we use 2p instead of p\n**/\npub(crate) unconstrained fn __sub<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    __add(params, lhs, __neg(params, rhs))\n}\n\npub(crate) unconstrained fn __mul_with_quotient<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut mul: [Field; 2 * N] = [0; 2 * N];\n    for i in 0..N {\n        for j in 0..N {\n            mul[i + j] += (lhs[i] as Field * rhs[j] as Field);\n        }\n    }\n    let to_reduce: [u128; (N * 2)] = split_bits::__normalize_limbs(mul, 2 * N);\n    let (q, r) = __barrett_reduction(to_reduce, params.redc_param, MOD_BITS, params.modulus);\n    // ([0; N], [0; N])\n    (q, r)\n}\n\npub(crate) unconstrained fn __mul<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> [u128; N] {\n    let (_, b) = __mul_with_quotient::<_, MOD_BITS>(params, lhs, rhs);\n    b\n}\n\npub(crate) unconstrained fn __div<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> [u128; N] {\n    let inv_divisor: [u128; N] = __invmod::<_, MOD_BITS>(params, divisor);\n    __mul::<_, MOD_BITS>(params, numerator, inv_divisor)\n}\n\n/**\n* @brief __udiv_mod performs *unconstrained* integer division between numerator, divisor \n*\n* i.e. 1. floor(numerator / divisor) = quotient\n*      2. numerator % divisor = remainder\n*      3. divisor * quotient + remainder = numerator\n**/\npub(crate) unconstrained fn __udiv_mod<let N: u32>(\n    numerator: [u128; N],\n    divisor: [u128; N],\n) -> ([u128; N], [u128; N]) {\n    let mut quotient: [u128; N] = [0; N];\n    let mut remainder: [u128; N] = numerator;\n\n    let b = divisor;\n    let numerator_msb = __get_msb(numerator);\n    let divisor_msb = __get_msb(divisor);\n    if divisor_msb > numerator_msb {\n        ([0; N], numerator)\n    } else {\n        let mut bit_difference = __get_msb(remainder) - __get_msb(divisor);\n        let mut accumulator: [u128; N] = __one();\n        let mut divisor = __shl(divisor, bit_difference);\n        accumulator = __shl(accumulator, bit_difference);\n\n        if (__gte(divisor, __increment(remainder))) {\n            divisor = __shr1(divisor);\n            accumulator = __shr1(accumulator);\n        }\n\n        for _ in 0..(N * 120) {\n            if (__gte(remainder, b) == false) {\n                break;\n            }\n            // we've shunted 'divisor' up to have the same bit length as our remainder.\n            // If remainder >= divisor, then a is at least '1 << bit_difference' multiples of b\n            if (__gte(remainder, divisor)) {\n                remainder = __helper_sub(remainder, divisor);\n                // we can use OR here instead of +, as\n                // accumulator is always a nice power of two\n                quotient = __helper_add(quotient, accumulator);\n            }\n            divisor = __shr1(divisor); // >>= 1;\n            accumulator = __shr1(accumulator); //  >>= 1;\n        }\n\n        (quotient, remainder)\n    }\n}\n\npub(crate) unconstrained fn __invmod<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n) -> [u128; N] {\n    let one = __one();\n    let exp = __helper_sub(params.modulus, __helper_add(one, one));\n    __pow::<_, MOD_BITS>(params, val, exp)\n}\n\npub(crate) unconstrained fn __pow<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    val: [u128; N],\n    exponent: [u128; N],\n) -> [u128; N] {\n    let x = exponent;\n    let num_bits = MOD_BITS + 1;\n\n    let mut accumulator: [u128; N] = __one::<N>();\n\n    for i in 0..num_bits {\n        accumulator = __mul::<_, MOD_BITS>(params, accumulator, accumulator);\n        if __get_bit(x, num_bits - i - 1) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, val);\n        }\n    }\n    accumulator\n}\n\npub(crate) unconstrained fn __batch_invert<let N: u32, let MOD_BITS: u32, let M: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]; M],\n) -> [[u128; N]; M] {\n    // TODO: ugly! Will fail if input slice is empty\n\n    let mut accumulator: [u128; N] = __one::<N>();\n    let mut temporaries: [[u128; N]; M] = std::mem::zeroed();\n\n    for i in 0..M {\n        temporaries[i] = accumulator;\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    let mut result: [[u128; N]; M] = [[0; N]; M];\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    for i in 0..M {\n        let idx = M - 1 - i;\n        if (!__is_zero(x[idx])) {\n            let T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result[idx] = T0;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __batch_invert_slice<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    x: [[u128; N]],\n) -> [[u128; N]] {\n    // TODO: ugly! Will fail if input slice is empty\n    let mut accumulator: [u128; N] = __one::<N>();\n    let mut temporaries: [[u128; N]] = &[];\n    for i in 0..x.len() {\n        temporaries = temporaries.push_back(accumulator);\n        if (!__is_zero(x[i])) {\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[i]);\n        }\n    }\n\n    let mut result: [[u128; N]] = [];\n    accumulator = __invmod::<_, MOD_BITS>(params, accumulator);\n    for i in 0..x.len() {\n        let idx = x.len() - 1 - i;\n        if (!__is_zero(x[idx])) {\n            let T0 = __mul::<_, MOD_BITS>(params, accumulator, temporaries[idx]);\n            accumulator = __mul::<_, MOD_BITS>(params, accumulator, x[idx]);\n            result = result.push_front(T0);\n        } else {\n            result = result.push_front([0; N]);\n        };\n    }\n\n    result\n}\n\n/**\n* @brief compute a modular square root using the Tonelli-Shanks algorithm\n* @details only use for prime fields! Function may infinite loop if used for non-prime fields\n* @note this is unconstrained fn. To constrain a square root, validate that output^2 = self\n* TODO: create fn that constrains nonexistence of square root (i.e. find x where x^2 = -self)\n**/\npub(crate) unconstrained fn __tonelli_shanks_sqrt<let N: u32, let MOD_BITS: u32>(\n    params: P<N, MOD_BITS>,\n    input: [u128; N],\n) -> std::option::Option<[u128; N]> {\n    // Tonelli-shanks algorithm begins by finding a field element Q and integer S,\n    // such that (p - 1) = Q.2^{s}\n    // We can compute the square root of a, by considering a^{(Q + 1) / 2} = R\n    // Once we have found such an R, we have\n    // R^{2} = a^{Q + 1} = a^{Q}a\n    // If a^{Q} = 1, we have found our square root.\n    // Otherwise, we have a^{Q} = t, where t is a 2^{s-1}'th root of unity.\n    // This is because t^{2^{s-1}} = a^{Q.2^{s-1}}.\n    // We know that (p - 1) = Q.w^{s}, therefore t^{2^{s-1}} = a^{(p - 1) / 2}\n    // From Euler's criterion, if a is a quadratic residue, a^{(p - 1) / 2} = 1\n    // i.e. t^{2^{s-1}} = 1\n    // To proceed with computing our square root, we want to transform t into a smaller subgroup,\n    // specifically, the (s-2)'th roots of unity.\n    // We do this by finding some value b,such that\n    // (t.b^2)^{2^{s-2}} = 1 and R' = R.b\n    // Finding such a b is trivial, because from Euler's criterion, we know that,\n    // for any quadratic non-residue z, z^{(p - 1) / 2} = -1\n    // i.e. z^{Q.2^{s-1}} = -1\n    // => z^Q is a 2^{s-1}'th root of -1\n    // => z^{Q^2} is a 2^{s-2}'th root of -1\n    // Since t^{2^{s-1}} = 1, we know that t^{2^{s - 2}} = -1\n    // => t.z^{Q^2} is a 2^{s - 2}'th root of unity.\n    // We can iteratively transform t into ever smaller subgroups, until t = 1.\n    // At each iteration, we need to find a new value for b, which we can obtain\n    // by repeatedly squaring z^{Q}\n    let one = __one();\n    let primitive_root_log_size = __primitive_root_log_size::<_, MOD_BITS>(params);\n    let Q = __shr(\n        __helper_sub(params.modulus, one),\n        primitive_root_log_size - 1,\n    );\n    let two = __helper_add(one, one);\n    let Q_minus_one_over_two = __shr(__helper_sub(Q, two), 2);\n    let mut z = __multiplicative_generator::<_, MOD_BITS>(params); // the generator is a non-residue\n    let mut b = __pow::<_, MOD_BITS>(params, input, Q_minus_one_over_two);\n    let mut r = __mul::<_, MOD_BITS>(params, input, b);\n    let mut t = __mul::<_, MOD_BITS>(params, r, b);\n    let mut check: [u128; N] = t;\n    for _ in 0..primitive_root_log_size - 1 {\n        check = __mul::<_, MOD_BITS>(params, check, check);\n    }\n    let mut result = Option::none();\n    if (__eq(check, one)) {\n        let mut t1 = __pow::<_, MOD_BITS>(params, z, Q_minus_one_over_two);\n        let mut t2 = __mul::<_, MOD_BITS>(params, t1, z);\n        let mut c = __mul::<_, MOD_BITS>(params, t2, t1);\n        let mut m: u32 = primitive_root_log_size;\n        // tonelli shanks inner 1\n        // (if t2m == 1) then skip\n        // else increase i and square t2m and go again\n        // algorithm runtime should only be max the number of bits in modulus\n        for _ in 0..MOD_BITS {\n            if (__eq(t, one)) {\n                result = Option::some(r);\n                break;\n            }\n            let mut t2m = t;\n            // while loop time\n            let i = __tonelli_shanks_sqrt_inner_loop_check::<_, MOD_BITS>(params, t2m, 0);\n            let mut j = m - i - 1;\n            b = c;\n            for _ in 0..j {\n                // how big\n                if (j == 0) {\n                    break;\n                }\n                b = __mul(params, b, b);\n                //j -= 1;\n            }\n            c = __mul::<_, MOD_BITS>(params, b, b);\n            t = __mul::<_, MOD_BITS>(params, t, c);\n            r = __mul::<_, MOD_BITS>(params, r, b);\n            m = i;\n        }\n    }\n    result\n}\n\npub(crate) unconstrained fn __gte<let N: u32, let MOD_BITS: u32>(\n    lhs: [u128; N],\n    rhs: [u128; N],\n) -> bool {\n    let mut result = false;\n    let mut early_exit = false;\n    for i in 0..(N) {\n        let idx = (N) - 1 - i;\n        if (rhs[idx] == lhs[idx]) {\n            continue;\n        }\n\n        result = rhs[idx] < lhs[idx];\n        early_exit = true;\n        break;\n    }\n    if early_exit {\n        result\n    } else {\n        lhs[0] == rhs[0]\n    }\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/fns/unconstrained_ops.nr"},"180":{"source":"pub struct BigNumParams<let N: u32, let MOD_BITS: u32> {\n    pub has_multiplicative_inverse: bool,\n\n    // @brief modulus: all BigNum operations are evaluated modulo this value\n    pub modulus: [u128; N],\n\n    // @brief double_modulus: used when performing negations and subtractions\n    // @note we borrow 1 from the last limb. This is for easing up the operations that might underflow\n    pub double_modulus: [u128; N],\n\n    // @brief redc_param used for __barrett_reduction. See https://en.wikipedia.org/wiki/Barrett_reduction\n    pub redc_param: [u128; N],\n}\n\n// To be implemented by the user for any BigNum they define, or within the predefined BigNums in the `fields/` dir.\npub trait BigNumParamsGetter<let N: u32, let MOD_BITS: u32> {\n    fn get_params() -> BigNumParams<N, MOD_BITS>;\n}\n\nimpl<let N: u32, let MOD_BITS: u32> BigNumParams<N, MOD_BITS> {\n    pub fn new(\n        has_multiplicative_inverse: bool,\n        modulus: [u128; N],\n        redc_param: [u128; N],\n    ) -> Self {\n        Self {\n            has_multiplicative_inverse,\n            modulus,\n            double_modulus: get_double_modulus(modulus),\n            redc_param,\n        }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::cmp::Eq for BigNumParams<N, MOD_BITS> {\n    fn eq(self, other: Self) -> bool {\n        (self.has_multiplicative_inverse == other.has_multiplicative_inverse)\n            & (self.modulus == other.modulus)\n            & (self.double_modulus == other.double_modulus)\n            & (self.redc_param == other.redc_param)\n    }\n}\n\nfn get_double_modulus<let N: u32>(modulus: [u128; N]) -> [u128; N] {\n    let TWO_POW_120: u128 = 0x1000000000000000000000000000000;\n    let mut result: [u128; N] = [0; N];\n    let mut carry: u128 = 0;\n    for i in 0..N {\n        let mut add_term = (modulus[i] + modulus[i] + carry);\n        carry = add_term >> 120;\n        add_term = add_term - (carry << 120);\n        result[i] = add_term;\n    }\n\n    result[0] += TWO_POW_120;\n    for i in 1..N - 1 {\n        result[i] += (TWO_POW_120 - 1);\n    }\n    result[N - 1] -= 1;\n    result\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/params.nr"},"181":{"source":"use crate::params::BigNumParams;\nuse crate::utils::map::map;\n\nuse crate::fns::{\n    constrained_ops::{\n        add, assert_is_not_equal, conditional_select, derive_from_seed, div, eq, is_zero, mul, neg,\n        sub, udiv, udiv_mod, umod, validate_in_field, validate_in_range,\n    },\n    expressions::{__compute_quadratic_expression, evaluate_quadratic_expression},\n    serialization::{from_be_bytes, to_le_bytes},\n    unconstrained_ops::{\n        __add, __batch_invert, __batch_invert_slice, __derive_from_seed, __div, __eq, __invmod,\n        __is_zero, __mul, __neg, __pow, __sub, __tonelli_shanks_sqrt, __udiv_mod,\n    },\n};\nuse std::ops::Neg;\n\npub struct RuntimeBigNum<let N: u32, let MOD_BITS: u32> {\n    pub limbs: [u128; N],\n    pub params: BigNumParams<N, MOD_BITS>,\n}\n\n// All functions prefixed `__` are unconstrained!\n// They're not actually decorated as `unconstrained` because to return the `params` (as part of Self) from an `unconstrained` fn would cause range constraints. Instead, each `__` fn wraps a call to an unconstrained fn, so that the already-range-constrained `params` can be inserted into Self after the unconstrained call.\nimpl<let N: u32, let MOD_BITS: u32> RuntimeBigNum<N, MOD_BITS> {\n\n    pub fn zero(params: BigNumParams<N, MOD_BITS>) -> Self {\n        let limbs: [u128; N] = [0; N];\n        Self { limbs, params }\n    }\n\n    pub fn one(params: BigNumParams<N, MOD_BITS>) -> Self {\n        let mut result = RuntimeBigNum::zero(params);\n        result.limbs[0] = 1;\n        result\n    }\n\n    pub fn derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self {\n        let limbs = derive_from_seed::<_, MOD_BITS, _>(params, seed);\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub unconstrained fn __derive_from_seed<let SeedBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        seed: [u8; SeedBytes],\n    ) -> Self {\n        let limbs = __derive_from_seed::<_, MOD_BITS, _>(params, seed);\n        Self { limbs, params }\n    }\n\n    pub fn from_slice(params: BigNumParams<N, MOD_BITS>, limbs: [u128]) -> Self {\n        Self { limbs: limbs.as_array(), params }\n    }\n\n    pub fn from_array(params: BigNumParams<N, MOD_BITS>, limbs: [u128; N]) -> Self {\n        Self { limbs, params }\n    }\n\n    pub fn from_be_bytes<let NBytes: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        x: [u8; NBytes],\n    ) -> Self {\n        Self { limbs: from_be_bytes::<_, MOD_BITS, _>(x), params }\n    }\n\n    pub fn to_le_bytes<let NBytes: u32>(self) -> [u8; NBytes] {\n        to_le_bytes::<_, MOD_BITS, _>(self.limbs)\n    }\n\n    pub fn modulus(self) -> Self {\n        let params = self.params;\n        Self { limbs: params.modulus, params }\n    }\n\n    pub fn modulus_bits() -> u32 {\n        MOD_BITS\n    }\n\n    pub fn num_limbs() -> u32 {\n        N\n    }\n\n    // fn get(self) -> [Field] {\n    //     self.get_limbs()\n    // }\n\n    pub fn get_limbs(self) -> [u128; N] {\n        self.limbs\n    }\n\n    pub fn get_limb(self, idx: u32) -> u128 {\n        self.limbs[idx]\n    }\n\n    pub fn set_limb(&mut self, idx: u32, value: u128) {\n        self.limbs[idx] = value;\n    }\n\n    pub unconstrained fn __eq(self, other: Self) -> bool {\n        assert(self.params == other.params);\n        __eq(self.limbs, other.limbs)\n    }\n\n    pub unconstrained fn __is_zero(self) -> bool {\n        __is_zero(self.limbs)\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __neg(self) -> Self {\n        let params = self.params;\n        let limbs = unsafe { __neg(params, self.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __add(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __add(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __sub(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __sub(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __mul(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        let limbs = unsafe { __mul::<_, MOD_BITS>(params, self.limbs, other.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __div(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        let limbs = unsafe { __div::<_, MOD_BITS>(params, self.limbs, divisor.limbs) };\n        Self { params, limbs }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = self.params;\n        assert(params == divisor.params);\n        let (q, r) = unsafe { __udiv_mod(self.limbs, divisor.limbs) };\n        (Self { limbs: q, params }, Self { limbs: r, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __invmod(self) -> Self {\n        let params = self.params;\n        assert(params.has_multiplicative_inverse);\n        let limbs = unsafe { __invmod::<_, MOD_BITS>(params, self.limbs) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __pow(self, exponent: Self) -> Self {\n        let params = self.params;\n        assert(params == exponent.params);\n        let limbs = unsafe { __pow::<_, MOD_BITS>(params, self.limbs, exponent.limbs) };\n        Self { limbs, params }\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __batch_invert<let M: u32>(x: [Self; M]) -> [Self; M] {\n        let params = x[0].params;\n        assert(params.has_multiplicative_inverse);\n        let all_limbs =\n            unsafe { __batch_invert::<_, MOD_BITS, _>(params, x.map(|bn| Self::get_limbs(bn))) };\n        all_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // Note: can't return a slice from this unconstrained to a constrained function.\n    pub unconstrained fn __batch_invert_slice<let M: u32>(x: [Self]) -> [Self] {\n        let params = x[0].params;\n        assert(params.has_multiplicative_inverse);\n        let all_limbs = {\n            let inv_slice =\n                __batch_invert_slice::<_, MOD_BITS>(params, x.map(|bn| Self::get_limbs(bn)));\n            inv_slice.as_array()\n        };\n        all_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __tonelli_shanks_sqrt(self) -> std::option::Option<Self> {\n        let params = self.params;\n        let maybe_limbs = unsafe { __tonelli_shanks_sqrt(params, self.limbs) };\n        maybe_limbs.map(|limbs| Self { limbs, params })\n    }\n\n    // UNCONSTRAINED! (Hence `__` prefix).\n    pub fn __compute_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) -> (Self, Self) {\n        let (q_limbs, r_limbs) = unsafe {\n            __compute_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n                params,\n                map(lhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n                lhs_flags,\n                map(rhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n                rhs_flags,\n                map(linear_terms, |bn| Self::get_limbs(bn)),\n                linear_flags,\n            )\n        };\n        (Self { limbs: q_limbs, params }, Self { limbs: r_limbs, params })\n    }\n\n    pub fn evaluate_quadratic_expression<let LHS_N: u32, let RHS_N: u32, let NUM_PRODUCTS: u32, let ADD_N: u32>(\n        params: BigNumParams<N, MOD_BITS>,\n        lhs_terms: [[Self; LHS_N]; NUM_PRODUCTS],\n        lhs_flags: [[bool; LHS_N]; NUM_PRODUCTS],\n        rhs_terms: [[Self; RHS_N]; NUM_PRODUCTS],\n        rhs_flags: [[bool; RHS_N]; NUM_PRODUCTS],\n        linear_terms: [Self; ADD_N],\n        linear_flags: [bool; ADD_N],\n    ) {\n        evaluate_quadratic_expression::<_, MOD_BITS, _, _, _, _>(\n            params,\n            map(lhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n            lhs_flags,\n            map(rhs_terms, |bns| map(bns, |bn| Self::get_limbs(bn))),\n            rhs_flags,\n            map(linear_terms, |bn| Self::get_limbs(bn)),\n            linear_flags,\n        )\n    }\n\n    pub fn validate_in_field(self: Self) {\n        let params = self.params;\n        validate_in_field::<_, MOD_BITS>(params, self.limbs);\n    }\n\n    pub fn validate_in_range(self) {\n        validate_in_range::<_, _, MOD_BITS>(self.limbs);\n    }\n\n    pub fn assert_is_not_equal(self, other: Self) {\n        let params = self.params;\n        assert(params == other.params);\n        assert_is_not_equal(params, self.limbs, other.limbs);\n    }\n\n    pub fn udiv_mod(self, divisor: Self) -> (Self, Self) {\n        let params = self.params;\n        assert(params == divisor.params);\n        let (q, r) = udiv_mod::<_, MOD_BITS>(params, self.limbs, divisor.limbs);\n        (Self { limbs: q, params }, Self { limbs: r, params })\n    }\n\n    pub fn udiv(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: udiv::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n\n    pub fn umod(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: umod::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n\n    pub fn conditional_select(lhs: Self, rhs: Self, predicate: bool) -> Self {\n        let params = lhs.params;\n        assert(params == rhs.params);\n        Self { limbs: conditional_select(lhs.limbs, rhs.limbs, predicate), params }\n    }\n\n    pub fn is_zero(self) -> bool {\n        is_zero::<N, MOD_BITS>(self.limbs)\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Add for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn add(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: add::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Sub for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    fn sub(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: sub::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Mul for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Try to craft quadratic relations and directly evaluate them\n    //       via evaluate_quadratic_expression\n    // e.g. performing a sum of multiple multiplications and additions via `evaluate_quadratic_expression`\n    //      will create much fewer constraints than calling `mul` and `add` directly\n    fn mul(self, other: Self) -> Self {\n        let params = self.params;\n        assert(params == other.params);\n        Self { limbs: mul::<_, MOD_BITS>(params, self.limbs, other.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::ops::Div for RuntimeBigNum<N, MOD_BITS> {\n    // Note: this method is expensive! Witness computation is extremely expensive as it requires modular exponentiation\n    fn div(self, divisor: Self) -> Self {\n        let params = self.params;\n        assert(params == divisor.params);\n        Self { limbs: div::<_, MOD_BITS>(params, self.limbs, divisor.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> Neg for RuntimeBigNum<N, MOD_BITS> {\n    fn neg(self) -> Self {\n        let params = self.params;\n        Self { limbs: neg::<_, MOD_BITS>(params, self.limbs), params }\n    }\n}\n\nimpl<let N: u32, let MOD_BITS: u32> std::cmp::Eq for RuntimeBigNum<N, MOD_BITS> {\n    fn eq(self, other: Self) -> bool {\n        let params = self.params;\n        assert(params == other.params);\n        eq::<_, MOD_BITS>(params, self.limbs, other.limbs)\n    }\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/runtime_bignum.nr"},"188":{"source":"use crate::constants::TWO_POW_120;\n\nunconstrained fn split_120_bits(mut x: Field) -> (u128, u128) {\n    // Here we're taking advantage of truncating 128 bit limbs from the input field\n    // and then subtracting them from the input such that the field division is equivalent to integer division.\n    let low = (x as u128) % TWO_POW_120;\n    let high = ((x - low as Field) / TWO_POW_120 as Field) as u128;\n    (low, high)\n}\n\npub(crate) unconstrained fn __normalize_limbs<let N: u32>(\n    input: [Field; N],\n    range: u32,\n) -> [u128; N] {\n    let mut normalized: [u128; N] = [0; N];\n    let mut next: Field = input[0];\n    for i in 0..(range - 1) {\n        let (lo, hi) = split_120_bits(next);\n        normalized[i] = lo as u128;\n        next = input[i + 1] + hi as Field;\n    }\n    {\n        let (lo, hi) = split_120_bits(next);\n        normalized[range - 1] = lo as u128;\n        assert(hi == 0);\n    }\n    normalized\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir-bignum/v0.6.0/src/utils/split_bits.nr"},"197":{"source":"global ASCII_HEX_TABLE: [u8; 16] = \"0123456789abcdef\".as_bytes();\n\npub fn field_to_hex(value: Field) -> str<64> {\n    let mut result = [0 as u8; 64];\n    let bytes = value.to_be_bytes::<32>().map(|x| x as u32);\n    for i in 0..bytes.len() {\n        result[i * 2] = ASCII_HEX_TABLE[bytes[i] / 16];\n        result[i * 2 + 1] = ASCII_HEX_TABLE[bytes[i] % 16];\n    }\n    From::from(result)\n}\n\n#[deprecated(\"use field_to_hex instead\")]\npub fn to_hex_string_bytes(value: Field) -> [u8; 64] {\n    field_to_hex(value).as_bytes()\n}\n\nglobal U64_STR_LEN: u32 = 20;\npub fn str_to_u64(arr: impl Into<[u8; U64_STR_LEN]>) -> u64 {\n    let arr = arr.into().map(|x| x as u32);\n\n    let mut parsed_number: Field = 0;\n    for i in 0..U64_STR_LEN {\n        let chr = arr[i];\n        if chr != 0 {\n            parsed_number *= 10;\n            let value = crate::tables::ASCII_TO_NUMBER[arr[i]] as Field;\n            parsed_number += value;\n        }\n    }\n    parsed_number as u64\n}\n\npub fn ord(s: str<1>) -> u8 {\n    s.as_bytes()[0]\n}\n\nmod tests {\n    use crate::string::{field_to_hex, ord, str_to_u64};\n\n    #[test]\n    fn test_field_to_hex() {\n        let my_hash = 0x0d67824fead966192029093a3aa5c719f2b80262c4f14a5c97c5d70e4b27f2bf;\n        let expected = \"0d67824fead966192029093a3aa5c719f2b80262c4f14a5c97c5d70e4b27f2bf\";\n        assert_eq(field_to_hex(my_hash), expected);\n    }\n\n    #[test]\n    fn some_test() {\n        let outer_hash = 0x0d67824fead966192029093a3aa5c719f2b80262c4f14a5c97c5d70e4b27f2bf;\n        let hex_challenge = field_to_hex(outer_hash);\n        let header_prefix: [u8; 26] = \"subject:Re: Tx request: 0x\".as_bytes();\n        let header: [u8; 90] = header_prefix.concat(hex_challenge.as_bytes());\n        assert(\n            header\n                == [\n                    115, 117, 98, 106, 101, 99, 116, 58, 82, 101, 58, 32, 84, 120, 32, 114, 101,\n                    113, 117, 101, 115, 116, 58, 32, 48, 120, 48, 100, 54, 55, 56, 50, 52, 102, 101,\n                    97, 100, 57, 54, 54, 49, 57, 50, 48, 50, 57, 48, 57, 51, 97, 51, 97, 97, 53, 99,\n                    55, 49, 57, 102, 50, 98, 56, 48, 50, 54, 50, 99, 52, 102, 49, 52, 97, 53, 99,\n                    57, 55, 99, 53, 100, 55, 48, 101, 52, 98, 50, 55, 102, 50, 98, 102,\n                ],\n        );\n    }\n\n    #[test]\n    fn test_str_to_u64() {\n        let s = \"13378584420\".as_bytes();\n        assert(str_to_u64(s.concat([0; 9])) == 13378584420);\n        assert(str_to_u64(\"02345678912345678912\") == 02345678912345678912);\n    }\n\n    #[test]\n    fn test_char() {\n        assert(ord(\"a\") == 97);\n    }\n\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/olehmisar/nodash/v0.41.1/src/string.nr"},"206":{"source":"use std::hash::sha256_compression;\nuse std::runtime::is_unconstrained;\n\nuse constants::{\n    BLOCK_BYTE_PTR, BLOCK_SIZE, HASH, INITIAL_STATE, INT_BLOCK, INT_BLOCK_SIZE, INT_SIZE,\n    INT_SIZE_PTR, MSG_BLOCK, MSG_SIZE_PTR, STATE, TWO_POW_16, TWO_POW_24, TWO_POW_32, TWO_POW_8,\n};\n\nmod constants;\nmod tests;\n\n// Implementation of SHA-256 mapping a byte array of variable length to\n// 32 bytes.\n\n// Deprecated in favour of `sha256_var`\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> HASH\n// docs:end:sha256\n{\n    digest(input)\n}\n\n// SHA-256 hash function\n#[no_predicates]\npub fn digest<let N: u32>(msg: [u8; N]) -> HASH {\n    sha256_var(msg, N as u64)\n}\n\n// Variable size SHA-256 hash\npub fn sha256_var<let N: u32>(msg: [u8; N], message_size: u64) -> HASH {\n    let message_size = message_size as u32;\n    assert(message_size <= N);\n\n    if std::runtime::is_unconstrained() {\n        // Safety: SHA256 is running as an unconstrained function.\n        unsafe {\n            __sha256_var(msg, message_size)\n        }\n    } else {\n        let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n        // Intermediate hash, starting with the canonical initial value\n        let mut h: STATE = INITIAL_STATE;\n        // Pointer into msg_block on a 64 byte scale\n        let mut msg_byte_ptr = 0;\n        let num_blocks = N / BLOCK_SIZE;\n        for i in 0..num_blocks {\n            let msg_start = BLOCK_SIZE * i;\n            let (new_msg_block, new_msg_byte_ptr) =\n                unsafe { build_msg_block(msg, message_size, msg_start) };\n\n            if msg_start < message_size {\n                msg_block = new_msg_block;\n            }\n\n            // Verify the block we are compressing was appropriately constructed\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n            }\n\n            // If the block is filled, compress it.\n            // An un-filled block is handled after this loop.\n            if (msg_start < message_size) & (msg_byte_ptr == BLOCK_SIZE) {\n                h = sha256_compression(msg_block, h);\n            }\n        }\n\n        let modulo = N % BLOCK_SIZE;\n        // Handle setup of the final msg block.\n        // This case is only hit if the msg is less than the block size,\n        // or our message cannot be evenly split into blocks.\n        if modulo != 0 {\n            let msg_start = BLOCK_SIZE * num_blocks;\n            let (new_msg_block, new_msg_byte_ptr) =\n                unsafe { build_msg_block(msg, message_size, msg_start) };\n\n            if msg_start < message_size {\n                msg_block = new_msg_block;\n            }\n\n            let new_msg_byte_ptr = verify_msg_block(msg, message_size, msg_block, msg_start);\n            if msg_start < message_size {\n                msg_byte_ptr = new_msg_byte_ptr;\n                verify_msg_block_padding(msg_block, msg_byte_ptr);\n            }\n        }\n\n        // If we had modulo == 0 then it means the last block was full,\n        // and we can reset the pointer to zero to overwrite it.\n        if msg_byte_ptr == BLOCK_SIZE {\n            msg_byte_ptr = 0;\n        }\n\n        // Pad the rest such that we have a [u32; 2] block at the end representing the length\n        // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n        // Here we rely on the fact that everything beyond the available input is set to 0.\n        let index = msg_byte_ptr / INT_SIZE;\n        msg_block[index] = set_item_byte_then_zeros(msg_block[index], msg_byte_ptr, 1 << 7);\n\n        msg_byte_ptr = msg_byte_ptr + 1;\n        let last_block = msg_block;\n\n        // If we don't have room to write the size, compress the block and reset it.\n        if msg_byte_ptr > MSG_SIZE_PTR {\n            h = sha256_compression(msg_block, h);\n            // `attach_len_to_msg_block` will zero out everything after the `msg_byte_ptr`.\n            msg_byte_ptr = 0;\n        }\n\n        msg_block = unsafe { attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size) };\n\n        verify_msg_len(msg_block, last_block, msg_byte_ptr, message_size);\n\n        hash_final_block(msg_block, h)\n    }\n}\n\n// Variable size SHA-256 hash\nunconstrained fn __sha256_var<let N: u32>(msg: [u8; N], message_size: u32) -> HASH {\n    let num_full_blocks = message_size / BLOCK_SIZE;\n    // Intermediate hash, starting with the canonical initial value\n    let mut h: STATE = INITIAL_STATE;\n    // Pointer into msg_block on a 64 byte scale\n    for i in 0..num_full_blocks {\n        let (msg_block, _) = build_msg_block(msg, message_size, BLOCK_SIZE * i);\n        h = sha256_compression(msg_block, h);\n    }\n\n    // Handle setup of the final msg block.\n    // This case is only hit if the msg is less than the block size,\n    // or our message cannot be evenly split into blocks.\n    let modulo = message_size % BLOCK_SIZE;\n    let (mut msg_block, mut msg_byte_ptr): (INT_BLOCK, u32) = if modulo != 0 {\n        let msg_start = BLOCK_SIZE * num_full_blocks;\n        let (new_msg_block, new_msg_byte_ptr) = build_msg_block(msg, message_size, msg_start);\n\n        (new_msg_block, new_msg_byte_ptr)\n    } else {\n        // If we had modulo == 0 then it means the last block was full,\n        // and we can reset the pointer to zero to overwrite it.\n        ([0; INT_BLOCK_SIZE], 0)\n    };\n\n    // Pad the rest such that we have a [u32; 2] block at the end representing the length\n    // of the message, and a block of 1 0 ... 0 following the message (i.e. [1 << 7, 0, ..., 0]).\n    // Here we rely on the fact that everything beyond the available input is set to 0.\n    let index = msg_byte_ptr / INT_SIZE;\n    msg_block[index] = set_item_byte_then_zeros(msg_block[index], msg_byte_ptr, 1 << 7);\n\n    // If we don't have room to write the size, compress the block and reset it.\n    let (h, mut msg_byte_ptr): (STATE, u32) = if msg_byte_ptr >= MSG_SIZE_PTR {\n        // `attach_len_to_msg_block` will zero out everything after the `msg_byte_ptr`.\n        (sha256_compression(msg_block, h), 0)\n    } else {\n        (h, msg_byte_ptr + 1)\n    };\n    msg_block = attach_len_to_msg_block(msg_block, msg_byte_ptr, message_size);\n\n    hash_final_block(msg_block, h)\n}\n\n// Take `BLOCK_SIZE` number of bytes from `msg` starting at `msg_start`.\n// Returns the block and the length that has been copied rather than padded with zeros.\nunconstrained fn build_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_start: u32,\n) -> (MSG_BLOCK, BLOCK_BYTE_PTR) {\n    let mut msg_block: MSG_BLOCK = [0; INT_BLOCK_SIZE];\n\n    // We insert `BLOCK_SIZE` bytes (or up to the end of the message)\n    let block_input = if message_size < msg_start {\n        // This function is sometimes called with `msg_start` past the end of the message.\n        // In this case we return an empty block and zero pointer to signal that the result should be ignored.\n        0\n    } else if message_size < msg_start + BLOCK_SIZE {\n        message_size - msg_start\n    } else {\n        BLOCK_SIZE\n    };\n\n    // Figure out the number of items in the int array that we have to pack.\n    // e.g. if the input is [0,1,2,3,4,5] then we need to pack it as 2 items: [0123, 4500]\n    let mut int_input = block_input / INT_SIZE;\n    if block_input % INT_SIZE != 0 {\n        int_input = int_input + 1;\n    };\n\n    for i in 0..int_input {\n        let mut msg_item: u32 = 0;\n        // Always construct the integer as 4 bytes, even if it means going beyond the input.\n        for j in 0..INT_SIZE {\n            let k = i * INT_SIZE + j;\n            let msg_byte = if k < block_input {\n                msg[msg_start + k]\n            } else {\n                0\n            };\n            msg_item = lshift8(msg_item, 1) + msg_byte as u32;\n        }\n        msg_block[i] = msg_item;\n    }\n\n    // Returning the index as if it was a 64 byte array.\n    // We have to project it down to 16 items and bit shifting to get a byte back if we need it.\n    (msg_block, block_input)\n}\n\n// Verify the block we are compressing was appropriately constructed by `build_msg_block`\n// and matches the input data. Returns the index of the first unset item.\n// If `message_size` is less than `msg_start` then this is called with the old non-empty block;\n// in that case we can skip verification, ie. no need to check that everything is zero.\nfn verify_msg_block<let N: u32>(\n    msg: [u8; N],\n    message_size: u32,\n    msg_block: MSG_BLOCK,\n    msg_start: u32,\n) -> BLOCK_BYTE_PTR {\n    let mut msg_byte_ptr = 0;\n    let mut msg_end = msg_start + BLOCK_SIZE;\n    if msg_end > N {\n        msg_end = N;\n    }\n    // We might have to go beyond the input to pad the fields.\n    if msg_end % INT_SIZE != 0 {\n        msg_end = msg_end + INT_SIZE - msg_end % INT_SIZE;\n    }\n\n    // Reconstructed packed item.\n    let mut msg_item: u32 = 0;\n\n    // Inclusive at the end so that we can compare the last item.\n    let mut i: u32 = 0;\n    for k in msg_start..=msg_end {\n        if k % INT_SIZE == 0 {\n            // If we consumed some input we can compare against the block.\n            if (msg_start < message_size) & (k > msg_start) {\n                assert_eq(msg_block[i], msg_item as u32);\n                i = i + 1;\n                msg_item = 0;\n            }\n        }\n        // Shift the accumulator\n        msg_item = lshift8(msg_item, 1);\n        // If we have input to consume, add it at the rightmost position.\n        if k < message_size & k < msg_end {\n            msg_item = msg_item + msg[k] as u32;\n            msg_byte_ptr = msg_byte_ptr + 1;\n        }\n    }\n\n    msg_byte_ptr\n}\n\n// Verify the block we are compressing was appropriately padded with zeros by `build_msg_block`.\n// This is only relevant for the last, potentially partially filled block.\nfn verify_msg_block_padding(msg_block: MSG_BLOCK, msg_byte_ptr: BLOCK_BYTE_PTR) {\n    // Check all the way to the end of the block.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_BLOCK_SIZE);\n}\n\n// Verify that a region of ints in the message block are (partially) zeroed,\n// up to an (exclusive) maximum which can either be the end of the block\n// or just where the size is to be written.\nfn verify_msg_block_zeros(\n    msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    max_int_byte_ptr: u32,\n) {\n    // This variable is used to get around the compiler under-constrained check giving a warning.\n    // We want to check against a constant zero, but if it does not come from the circuit inputs\n    // or return values the compiler check will issue a warning.\n    let zero = msg_block[0] - msg_block[0];\n\n    // First integer which is supposed to be (partially) zero.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        let zeros = INT_SIZE - modulo;\n        let mask = if zeros == 3 {\n            TWO_POW_24\n        } else if zeros == 2 {\n            TWO_POW_16\n        } else {\n            TWO_POW_8\n        };\n        assert_eq(msg_block[int_byte_ptr] % mask, zero);\n        int_byte_ptr = int_byte_ptr + 1;\n    }\n\n    // Check the rest of the items.\n    for i in 0..max_int_byte_ptr {\n        if i >= int_byte_ptr {\n            assert_eq(msg_block[i], zero);\n        }\n    }\n}\n\n// Verify that up to the byte pointer the two blocks are equal.\n// At the byte pointer the new block can be partially zeroed.\nfn verify_msg_block_equals_last(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n) {\n    // msg_byte_ptr is the position at which they are no longer have to be the same.\n    // First integer which is supposed to be (partially) zero contains that pointer.\n    let mut int_byte_ptr = msg_byte_ptr / INT_SIZE;\n\n    // Check partial zeros.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Reconstruct the partially zero item from the last block.\n        let last_field = last_block[int_byte_ptr];\n        let mut msg_item: u32 = 0;\n        // Reset to where they are still equal.\n        msg_byte_ptr = msg_byte_ptr - modulo;\n        for i in 0..INT_SIZE {\n            msg_item = lshift8(msg_item, 1);\n            if i < modulo {\n                msg_item = msg_item + get_item_byte(last_field, msg_byte_ptr) as u32;\n                msg_byte_ptr = msg_byte_ptr + 1;\n            }\n        }\n        assert_eq(msg_block[int_byte_ptr], msg_item);\n    }\n\n    for i in 0..INT_SIZE_PTR {\n        if i < int_byte_ptr {\n            assert_eq(msg_block[i], last_block[i]);\n        }\n    }\n}\n\n// Set the rightmost `zeros` number of bytes to 0.\n#[inline_always]\nfn set_item_zeros(item: u32, zeros: u8) -> u32 {\n    lshift8(rshift8(item, zeros), zeros)\n}\n\n// Replace one byte in the item with a value, and set everything after it to zero.\nfn set_item_byte_then_zeros(msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR, msg_byte: u8) -> u32 {\n    let zeros = INT_SIZE - msg_byte_ptr % INT_SIZE;\n    let zeroed_item = set_item_zeros(msg_item, zeros as u8);\n    let new_item = byte_into_item(msg_byte, msg_byte_ptr);\n    zeroed_item + new_item\n}\n\n// Get a byte of a message item according to its overall position in the `BLOCK_SIZE` space.\nfn get_item_byte(mut msg_item: u32, msg_byte_ptr: BLOCK_BYTE_PTR) -> u8 {\n    // How many times do we have to shift to the right to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    msg_item = rshift8(msg_item, shifts as u8);\n    // At this point the byte we want is in the rightmost position.\n    msg_item as u8\n}\n\n// Project a byte into a position in a field based on the overall block pointer.\n// For example putting 1 into pointer 5 would be 100, because overall we would\n// have [____, 0100] with indexes [0123,4567].\n#[inline_always]\nfn byte_into_item(msg_byte: u8, msg_byte_ptr: BLOCK_BYTE_PTR) -> u32 {\n    let mut msg_item = msg_byte as u32;\n    // How many times do we have to shift to the left to get to the position we want?\n    let max_shifts = INT_SIZE - 1;\n    let shifts = max_shifts - msg_byte_ptr % INT_SIZE;\n    lshift8(msg_item, shifts as u8)\n}\n\n// Construct a field out of 4 bytes.\n#[inline_always]\nfn make_item(b0: u8, b1: u8, b2: u8, b3: u8) -> u32 {\n    let mut item = b0 as u32;\n    item = lshift8(item, 1) + b1 as u32;\n    item = lshift8(item, 1) + b2 as u32;\n    item = lshift8(item, 1) + b3 as u32;\n    item\n}\n\n// Shift by 8 bits to the left between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise multiplies by 256.\n#[inline_always]\nfn lshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        // Brillig wouldn't shift 0<<4 without overflow.\n        if shifts >= 4 {\n            0\n        } else {\n            item << (8 * shifts)\n        }\n    } else {\n        // We can do a for loop up to INT_SIZE or an if-else.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item * TWO_POW_8\n        } else if shifts == 2 {\n            item * TWO_POW_16\n        } else if shifts == 3 {\n            item * TWO_POW_24\n        } else {\n            // Doesn't make sense, but it's most likely called on 0 anyway.\n            0\n        }\n    }\n}\n\n// Shift by 8 bits to the right between 0 and 4 times.\n// Checks `is_unconstrained()` to just use a bitshift if we're running in an unconstrained context,\n// otherwise divides by 256.\nfn rshift8(item: u32, shifts: u8) -> u32 {\n    if is_unconstrained() {\n        item >> (8 * shifts)\n    } else {\n        // Division wouldn't work on `Field`.\n        if shifts == 0 {\n            item\n        } else if shifts == 1 {\n            item / TWO_POW_8\n        } else if shifts == 2 {\n            item / TWO_POW_16\n        } else if shifts == 3 {\n            item / TWO_POW_24\n        } else {\n            0\n        }\n    }\n}\n\n// Zero out all bytes between the end of the message and where the length is appended,\n// then write the length into the last 8 bytes of the block.\nunconstrained fn attach_len_to_msg_block(\n    mut msg_block: MSG_BLOCK,\n    mut msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) -> MSG_BLOCK {\n    // We assume that `msg_byte_ptr` is less than 57 because if not then it is reset to zero before calling this function.\n    // In any case, fill blocks up with zeros until the last 64 bits (i.e. until msg_byte_ptr = 56).\n    // There can be one item which has to be partially zeroed.\n    let modulo = msg_byte_ptr % INT_SIZE;\n    if modulo != 0 {\n        // Index of the block in which we find the item we need to partially zero.\n        let i = msg_byte_ptr / INT_SIZE;\n        let zeros = INT_SIZE - modulo;\n        msg_block[i] = set_item_zeros(msg_block[i], zeros as u8);\n        msg_byte_ptr = msg_byte_ptr + zeros;\n    }\n\n    // The rest can be zeroed without bit shifting anything.\n    for i in (msg_byte_ptr / INT_SIZE)..INT_SIZE_PTR {\n        msg_block[i] = 0;\n    }\n\n    // Set the last two 4 byte ints as the first/second half of the 8 bytes of the length.\n    let len = 8 * message_size;\n    let len_bytes: [u8; 8] = (len as Field).to_be_bytes();\n    for i in 0..=1 {\n        let shift = i * 4;\n        msg_block[INT_SIZE_PTR + i] = make_item(\n            len_bytes[shift],\n            len_bytes[shift + 1],\n            len_bytes[shift + 2],\n            len_bytes[shift + 3],\n        );\n    }\n    msg_block\n}\n\n// Verify that the message length was correctly written by `attach_len_to_msg_block`,\n// and that everything between the byte pointer and the size pointer was zeroed,\n// and that everything before the byte pointer was untouched.\nfn verify_msg_len(\n    msg_block: MSG_BLOCK,\n    last_block: MSG_BLOCK,\n    msg_byte_ptr: BLOCK_BYTE_PTR,\n    message_size: u32,\n) {\n    // Check zeros up to the size pointer.\n    verify_msg_block_zeros(msg_block, msg_byte_ptr, INT_SIZE_PTR);\n\n    // Check that up to the pointer we match the last block.\n    verify_msg_block_equals_last(msg_block, last_block, msg_byte_ptr);\n\n    // We verify the message length was inserted correctly by reversing the byte decomposition.\n    let mut reconstructed_len: u64 = 0;\n    for i in INT_SIZE_PTR..INT_BLOCK_SIZE {\n        reconstructed_len = reconstructed_len * TWO_POW_32;\n        reconstructed_len = reconstructed_len + msg_block[i] as u64;\n    }\n    let len = 8 * message_size as u64;\n    assert_eq(reconstructed_len, len);\n}\n\n// Perform the final compression, then transform the `STATE` into `HASH`.\nfn hash_final_block(msg_block: MSG_BLOCK, mut state: STATE) -> HASH {\n    let mut out_h: HASH = [0; 32]; // Digest as sequence of bytes\n    // Hash final padded block\n    state = sha256_compression(msg_block, state);\n\n    // Return final hash as byte array\n    for j in 0..8 {\n        let h_bytes: [u8; 4] = (state[j] as Field).to_be_bytes();\n        for k in 0..4 {\n            out_h[4 * j + k] = h_bytes[k];\n        }\n    }\n\n    out_h\n}\n\nmod equivalence_test {\n\n    #[test]\n    fn test_implementations_agree(msg: [u8; 100], message_size: u64) {\n        let message_size = message_size % 100;\n        let unconstrained_sha = unsafe { super::__sha256_var(msg, message_size as u32) };\n        let sha = super::sha256_var(msg, message_size);\n        assert_eq(sha, unconstrained_sha);\n    }\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/sha256/v0.1.2/src/sha256.nr"},"209":{"source":"use dep::bignum::RuntimeBigNum;\n\n/**\n * @brief Compare a recovered byte hash from an RSA signature to the original message hash\n * @details Taken from https://github.com/richardliang/noir-rsa\n **/\nfn compare_signature_sha256<let N: u32>(padded_sha256_hash: [u8; N], msg_hash: [u8; 32]) -> bool {\n    // Get length of sig (e.g. 1048 = 128 bytes, 2048 = 256 bytes)\n    // NOTE: Assume MAX_BYTES < 2^32 bit number. MAX_BYTES of 259 > 2^8 bits so need to cast it to u32\n    for i in 0..32 {\n        // Padded hash is reversed\n        assert(padded_sha256_hash[31 - i] == msg_hash[i]);\n    }\n\n    let hash_prefix: [u8; 19] =\n        [32, 4, 0, 5, 1, 2, 4, 3, 101, 1, 72, 134, 96, 9, 6, 13, 48, 49, 48];\n\n    for i in 32..51 {\n        assert(hash_prefix[i - 32] == padded_sha256_hash[i]);\n    }\n\n    assert(padded_sha256_hash[51] == 0);\n\n    // Sub 32 bytes for hash, 19 bytes for prefix, 1 byte for 0, 1 byte for 1, 1 byte for 0\n    let ps_len = N - 54;\n    for i in 52..N {\n        if i < 52 + ps_len {\n            // PS padding which depends on RSA modulus / sig length. 1024 bits = 128 bytes = 128 - 54 = 74 bytes of 0xFF padding\n            assert(padded_sha256_hash[i] == 255);\n        } else if i == 52 + ps_len {\n            // Pad 0x01\n            assert(padded_sha256_hash[i] == 1);\n        } else if i == 53 + ps_len {\n            // 0x00\n            assert(padded_sha256_hash[i] == 0);\n        } else {\n            // Padded with 0 until MAX_BYTES\n            assert(padded_sha256_hash[i] == 0);\n        }\n    }\n\n    true\n}\n\n/**\n * @brief Verify an RSA signature generated via the pkcs1v15 signature scheme.\n * @note The `exponent` can be either 65537 or 3 (i.e. the most common values in use for RSA)\n * Rough cost: 2,048 bit RSA: 26,888 gates per verification\n *             1,024 bit RSA: 11,983 gates per verification\n * A circuit that verifies 1 signature (and does nothing else) will cost ~32k due to initialization costs of lookup tables\n **/\npub fn verify_sha256_pkcs1v15<let NumLimbs: u32, let ModBits: u32>(\n    msg_hash: [u8; 32],\n    sig: RuntimeBigNum<NumLimbs, ModBits>,\n    exponent: u32,\n) -> bool {\n    assert((exponent == 3) | (exponent == 65537), \"Exponent must be 65537 or 3\");\n    let mut exponentiated = sig * sig; // sig^2\n    if exponent == 65537 {\n        // e = 65537 = 1 0000 0000 0000 0001\n        exponentiated = exponentiated * exponentiated; // sig^4\n        exponentiated = exponentiated * exponentiated; // sig^8\n        exponentiated = exponentiated * exponentiated; // sig^16\n        exponentiated = exponentiated * exponentiated; // sig^32\n        exponentiated = exponentiated * exponentiated; // sig^64\n        exponentiated = exponentiated * exponentiated; // sig^128\n        exponentiated = exponentiated * exponentiated; // sig^256\n        exponentiated = exponentiated * exponentiated; // sig^512\n        exponentiated = exponentiated * exponentiated; // sig^1024\n        exponentiated = exponentiated * exponentiated; // sig^2048\n        exponentiated = exponentiated * exponentiated; // sig^4096\n        exponentiated = exponentiated * exponentiated; // sig^8192\n        exponentiated = exponentiated * exponentiated; // sig^16384\n        exponentiated = exponentiated * exponentiated; // sig^32768\n        exponentiated = exponentiated * exponentiated; // sig^65536\n    }\n    // otherwise, e = 3 = 11\n    exponentiated = exponentiated * sig; // either sig^2 * sig = sig^3 or sig^65536 * sig = sig^65537\n    let mut padded_sha256_hash_bytes: [u8; (ModBits + 7) / 8] = exponentiated.to_le_bytes();\n    compare_signature_sha256(padded_sha256_hash_bytes, msg_hash)\n}\n\nmod tests {\n\n    use crate::types::RBN2048;\n    use super::verify_sha256_pkcs1v15;\n    use bignum::params::BigNumParams;\n    use bignum::RuntimeBigNum;\n\n    #[test]\n    fn test_verify_sha256_pkcs1v15_1024() {\n        // Output of `cargo run -- --msg \"hello world! test#123\" --bits 1024` in the `signature_gen` directory\n        let sha256_hash: [u8; 32] = [\n            220, 155, 229, 143, 122, 133, 55, 215, 75, 44, 132, 111, 57, 33, 248, 84, 213, 170, 193,\n            96, 253, 57, 124, 13, 251, 42, 92, 147, 105, 172, 233, 85,\n        ];\n\n        let params: BigNumParams<9, 1024> = BigNumParams::new(\n            false,\n            [\n                0xab238ad9cb37979a43aefbf10be8fb,\n                0x31347febe45fe8c2dac1dd30900704,\n                0xa5a9a6b9cd0cc2b9d13bbd4e068263,\n                0x5eac6390f7873fe97ff9bb14a173ea,\n                0xbc41f700c91fd733a2c63177bbdbd4,\n                0x41442bd58769a3595b659a2ec9c6be,\n                0x4ddc91395f330382aa2e2d3fbe147,\n                0x3d008ff255a0bc71c7887f5728ba1,\n                0xb640c3a8f511c64e,\n            ],\n            [\n                0x5d53d2634c6a0918266043968ce263,\n                0x5dd4be3dce0323a492ee9340aec4db,\n                0xf82d0e2e5c8319f01a460c72c01854,\n                0x236e6fc6e62e8a1d522acda5fb3892,\n                0xdaf755619d66e580901aa224d03174,\n                0x8366291616480e7e1f202dbcedda87,\n                0x40ba1202537d1e94561ccc05265586,\n                0x69b993d857ba89ea5de9822aeb4b93,\n                0x167968c0000761a273,\n            ],\n        );\n\n        let signature: RuntimeBigNum<9, 1024> = RuntimeBigNum {\n            params,\n            limbs: [\n                0xc3850e84ea02da3f028ff422f4d6a9,\n                0x9761f0bd9021f76d45c60df0670a19,\n                0xc1ede421a43607ab623ed4d5a17fc8,\n                0x86197b4315206f4d53200b42555831,\n                0xe95783b69db28c26a83706f39d04cd,\n                0x18b178dc1a9ec76fb22b57e4dfa703,\n                0xdd0e19cd5a09ab48e7af4d0e3470e3,\n                0x10004dfab1cf91304e80e6baa4dfc7,\n                0x241c3fd77b90adef,\n            ],\n        };\n\n        assert(verify_sha256_pkcs1v15(sha256_hash, signature, 65537));\n    }\n\n    #[test]\n    fn test_verify_sha256_pkcs1v15_2048() {\n        // Output of `cargo run -- --msg \"Hello World! This is Noir-RSA\"` in the `signature_gen` directory\n        let sha256_hash: [u8; 32] = [\n            91, 207, 46, 60, 22, 153, 217, 144, 2, 127, 224, 143, 181, 45, 32, 120, 122, 131, 166,\n            79, 166, 183, 43, 158, 116, 105, 73, 207, 196, 77, 33, 5,\n        ];\n\n        let params: BigNumParams<18, 2048> = BigNumParams::new(\n            false,\n            [\n                0x8d5e7d9daedd6cfd1c9bdf0227e05b,\n                0xbfb937fc4d3cf02cc0af780f3cab44,\n                0xd20637ef7adcf5d238ee87bccc9bca,\n                0xb9db4f2663108e2f8b673f7612ae8b,\n                0x85f894ef669b36bfd3d86b0a28873,\n                0xdcc70e1884e38b8229cce3b884121d,\n                0x35488d1138e0b03e1676f7f5d8a5b3,\n                0xe1a97820e7dcbb4eab35c9b71bb273,\n                0x97d19eb3c63249ddbfcff915863f54,\n                0x3a78c7af6da0f6af0d67b1ca4b6065,\n                0xd7a3c433c020f624821e5e678c7d69,\n                0x52d5b53240feae82ffea3d2a3d9b09,\n                0xb8aad5e19e2163f68997c6fdd71906,\n                0x5db432d06e8b0bf59511100c7894e2,\n                0xadc0bbc4c54da10d1cc88438ea3127,\n                0xece1cf6a1501109cd2734d5893c8d9,\n                0x7196b90acdf06c31b1288064fd0c27,\n                0xc8,\n            ],\n            [\n                0x1b1deccf4dbde852c34a5d6908a0f,\n                0xbc9e5bdab22f023fbcca58692bccf5,\n                0x1f65439685623e45396ff55751c3bf,\n                0x2b6ad2c5f8e3aac15d0ccbab816bfa,\n                0x5ca2e8e3048243c16c708a8030ab0d,\n                0x30079bfeb1fa51e5501581173ca19c,\n                0xff8d5f6bea485fdcc2716327f69ab4,\n                0x36b599d81589416b5b5f037986b999,\n                0x75612e34a4ff29f0a19a7823512f58,\n                0x288b6897929b54c3b26a5faa07c00f,\n                0x4b5675fa13ab7444f1f047d3eb1bbe,\n                0x6ba0ac610ef9f267ab30fe25bb1c84,\n                0xa386b48ee03168d5cea3ecb9dc901f,\n                0xacf1a01f7dba44e050c976142fb1f6,\n                0x97a63b5cb7efc60d3502946aec63cf,\n                0x12cc1d5cab10a1e9e2398d29b9e3ef,\n                0x4635cf25c66e76bba8034df46204fb,\n                0x146f,\n            ],\n        );\n\n        let signature: RuntimeBigNum<18, 2048> = RuntimeBigNum {\n            params,\n            limbs: [\n                0xad29e07d16a278de49a371b9760a27,\n                0x86311920cc0e17a3c20cdff4c56dbb,\n                0x863556c6c5247dd83668dd825716ae,\n                0xc247c960945f4485b46c33b87425ca,\n                0x7326463c5c4cd5b08e21b938d9ed9a,\n                0x4f89fe0c82da08a0259eddb34d0da1,\n                0x43a74e76d4e1bd2666f1591889af0d,\n                0x240f7b80f0ff29f4253ee3019f832d,\n                0xc6edd131fbaaf725fd423dac52b362,\n                0x85f9732679242163e8afff44f6104d,\n                0xd3c3bbcb1757013fd6fb80f31dd9a6,\n                0x9008633f15df440e6df6d21ee585a2,\n                0x324df3425ed256e283be5b6b761741,\n                0xc60c1302929bd0e07caa4aeff4e8fd,\n                0x600d804ff13ba8d0e1bc9508714212,\n                0x50f7e75e5751d7edd61167027926be,\n                0x0db41d39442023e1420a8a84fe81d9,\n                0xab,\n            ],\n        };\n        assert(verify_sha256_pkcs1v15(sha256_hash, signature, 65537));\n    }\n\n    #[test]\n    fn test_verify_sha256_pkcs1v15_2048_exponent_3() {\n        // Output of `cargo run -- --msg \"hello world\" -e 3` in the `signature_gen` directory\n        let sha256_hash: [u8; 32] = [\n            185, 77, 39, 185, 147, 77, 62, 8, 165, 46, 82, 215, 218, 125, 171, 250, 196, 132, 239,\n            227, 122, 83, 128, 238, 144, 136, 247, 172, 226, 239, 205, 233,\n        ];\n\n        let params: BigNumParams<18, 2048> = BigNumParams::new(\n            false,\n            [\n                0xe40ee47801326543c8e84b85d567c1,\n                0x5b54ea87f0ce29de1995697b0696fd,\n                0x457078f8fdce68b437cac0970b2452,\n                0x473ec776fee3731b6ab06e35875ddc,\n                0x62dedd594e5f12c80c3ccb5791a6cd,\n                0xecb934b9d8272c5e3a418145345499,\n                0xd1af643b3d785470ed0c6cd633f706,\n                0xb58a57b9e96eccbdfc7c17f0333d4,\n                0x2ebd34b5039fc596504927c282c60d,\n                0x3a44928a74f25fc1043bb37ce4dfa8,\n                0x91448459f9617fac33a2816162ac9e,\n                0x70cb910d9f3e1a78864640ec6c8240,\n                0x9aed33f6b31f1c9de67248a98c180,\n                0x7f1416e032c79488c94b311e87bd9c,\n                0x7191b4ebb1b3fffa949fa48ed01e5,\n                0x350a75cbaeca6bfdd71ca83cdbcae9,\n                0xfb1d274fa207457c6814d42c09f9cf,\n                0xd4,\n            ],\n            [\n                0x803bf4d38110a7d37fdd05f590dee9,\n                0xa68d317c933f37cab5ab4e7c00a3b9,\n                0x476a05a536bf5f2aa1b8850146cba7,\n                0xca297ea8b5528d91d4836ff27c30ab,\n                0x75cf2eaab76eefa12bbd570f1aea9f,\n                0x8f6a8ab877d9c5bcd98c37bdc5c2d3,\n                0xd497db1f6ebe83decacaa647fabea6,\n                0x686b27ca330e25e7a7cf197f6433ef,\n                0xfde04d2225c8308b07580af0058a0f,\n                0xa29fb69777c0e916976243b2b09855,\n                0xf983592285852e7e1c2cb3ae968323,\n                0x673608017f9f5acf67a01b73728d70,\n                0xeeff82521c0bc432a05f4b7444fac0,\n                0x85a89c4d229f60aaa3aa7ac7dac1e2,\n                0xcfecff93bc9fbfe0d6dff6091f2db8,\n                0xf20f047dcb224b4447bd098c07f8c2,\n                0x554bb53cadeb3eaab911a189f90227,\n                0x133b,\n            ],\n        );\n\n        let signature: RuntimeBigNum<18, 2048> = RuntimeBigNum {\n            params,\n            limbs: [\n                0xa250eff812c63eaaeaa3f04641c05f,\n                0xecc09613cb8b289c1f37c8f92e6a05,\n                0x2c0a0510058360c07af65d46f594fd,\n                0x943d67513363d3de430c94a1dafe7c,\n                0x511ec8e9b10bc6c6ff0d6c232ccf92,\n                0x50ffd07b3c093b3f5fc027de847731,\n                0xc268e1489449943fdafdf89ff168c3,\n                0x0b8b7f9f49b492f78fda58d252f23a,\n                0x491c6c4ef836a6a8730b7bf81e865e,\n                0x8746c75fb079d014e419543f56d7f0,\n                0x65804c417d6168a8bc0025d255cebf,\n                0xf695e91b77890b8e3fd775fa56e627,\n                0x5e90001c0218550f4083ae28025a2f,\n                0x526bd4eff34f25f62a698f0470e0a6,\n                0x7f224306a7d9daf536b1559434c6c6,\n                0x88809f16fe1fcea3c87511d9319735,\n                0x7694685fee0bfab4a9196b92ec6f2e,\n                0xa7,\n            ],\n        };\n\n        assert(verify_sha256_pkcs1v15(sha256_hash, signature, 3));\n    }\n\n    #[test]\n    fn smoke_test() {\n        // Output of `cargo run -- --msg \"hello world\"` in the `signature_gen` directory\n        // Create runtime params:\n        let modulus_limbs = [\n            0x65af46d235241cf0e8fbe8cff4abb7,\n            0xeead39ba3f377ddd5ccb2ef2085190,\n            0xe483f94c0a98e8b618d92fb926f596,\n            0x1fa8c1b2c62cca6db090cd74a29db2,\n            0xc38e22042fcb74585a7e535301f50f,\n            0xcbc4378e5212752743ae78a75a44a9,\n            0xf5acc41788d9a346a0f75630a8b2b6,\n            0xf7a741bb3ecf1aadd5a327f362abd8,\n            0x4d5f24e815db43a1b2cc2ba40f8715,\n            0xe501f1a01305cb198475a4bff0da2e,\n            0xd541b78cfbc2b314083c340840c82c,\n            0xa0ab069c26b2a0458f4c642bf72526,\n            0x2ccb676d8f22517116fee0d2340533,\n            0x7cf2a7cf772025c0a83747bbc18228,\n            0xf9475f17988a56f17b3bdf88dc72dc,\n            0x4ff228bee24415fae7a7c05771e830,\n            0x55acd96b485515c38906106cf0d189,\n            0xb9,\n        ];\n        let redc_limbs = [\n            0x172c8f156f020ad88d30fa3ba47f03,\n            0x1740a43a67cb9a7be1ac1422d77246,\n            0x2d967be1edf369834317e04856e591,\n            0x65d9fa0de5fdab598c04d9a515156a,\n            0xc6791a661ea7621db7e6c4ec48f466,\n            0xa4a1a7c06d3e8a0bcbc540c6af6788,\n            0xdcaffeb149f5bf646caa00d7355715,\n            0xb75471630a9d0fefb5cb61e66991a1,\n            0x97c041a0fc30fdff3d5ed16997da02,\n            0xbfbe7d217694b269e1ed37819c2f17,\n            0x1b44ffc3180531e2ab8bdf7848a3a9,\n            0x9f004af11132cb68bb55998ed7616a,\n            0x1b15dbbb96ce80f479724bbd768a0c,\n            0x59ba1419093ae6ed2592ffb3065867,\n            0xa35b69affa3bb3f4713f315e50b584,\n            0xa873210f83a6de0d8cbb816af3e37,\n            0xbe4fe7cf98da87ec87638030797e92,\n            0x1619,\n        ];\n\n        let signature_limbs = [\n            0x2f397c4611d4a4271453e1e50e1578,\n            0xe506a7f47c721a4943783e8ad459e6,\n            0x6cc4ae1d91cb381cba9673470999fb,\n            0x1e127364d07f94e58227f50fbf5687,\n            0xf64a2579c7189f882d68832d16faa4,\n            0x3b014b74c6c6f76f2f8af170fa0fe4,\n            0x7df41e68c86815a6fdc33968c66b67,\n            0x6a57ac06282527242fddb6ed08dbdc,\n            0xac40d37b819c4b6193f90a634e4fc7,\n            0x96606ed166a7f032d858cd40ac73a5,\n            0x8eb7d4351159a46733f92610d5c597,\n            0xc8e8e9faa9738e82dbe774a3f5cf07,\n            0x89ca84fd54ee3d5cca87c9f178375e,\n            0xdb7a1465fc76507ea498a351af70dd,\n            0x6ac6fe14f51c711f983125c776f712,\n            0x3254c17fef51bf4194a8a1674634e3,\n            0xee38c83c77c6e1ff7b70a5d9d1dd0f,\n            0x26,\n        ];\n\n        let hash: [u8; 32] = [\n            0xb9, 0x4d, 0x27, 0xb9, 0x93, 0x4d, 0x3e, 0x08, 0xa5, 0x2e, 0x52, 0xd7, 0xda, 0x7d,\n            0xab, 0xfa, 0xc4, 0x84, 0xef, 0xe3, 0x7a, 0x53, 0x80, 0xee, 0x90, 0x88, 0xf7, 0xac,\n            0xe2, 0xef, 0xcd, 0xe9,\n        ];\n\n        let has_multiplicative_inverse = false;\n        let params: BigNumParams<18, 2048> =\n            BigNumParams::new(has_multiplicative_inverse, modulus_limbs, redc_limbs);\n\n        let signature: RBN2048 = RBN2048::from_array(params, signature_limbs);\n\n        assert(verify_sha256_pkcs1v15(hash, signature, 65537));\n    }\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir_rsa/v0.7.0/src/rsa.nr"},"211":{"source":"mod utils;\n\npub use utils::{conditional_select, DebugRandomEngine, lt_f};\nuse std::collections::bounded_vec::BoundedVec;\n\n/**\n * @brief represents a byte-array of up to MaxBytes, that is used as a \"haystack\" array,\n *        where we want to validate a substring \"needle\" is present in the \"haystack\"\n * @details the \"body\" parameter contains some input bytes, zero-padded to the nearest multiple of 31\n *          We pack \"bytes\" into 31-byte \"chunks\", as this is the maximum number of bytes we can fit\n *          into a field element without overflowing.\n *          TODO: once we can derive generics via arithmetic on other generics, we want this \"31\" parameter\n *          to be defined by the backend being used instead of being hardcoded to 31\n *\n * @note We perform this 31-byte packing because it dramatically reduces the number of constraints required for substring matching. See (chicken)\n *\n * @tparam MaxBytes: the maximum number of bytes that StringBody can contain\n * @tparam MaxPaddedBytes: the maximum number of bytes after zero-padding to the nearest multiple of 31\n * @tparam PaddedChunks: the number of 31-byte chunks needed to represent MaxPaddedBytes\n **/\npub struct StringBody<let MaxPaddedBytes: u32, let PaddedChunks: u32, let MaxBytes: u32> {\n    pub body: [u8; MaxPaddedBytes],\n    chunks: [Field; PaddedChunks],\n    pub byte_length: u32,\n}\n\n/**\n * @brief represents a byte-array of up to MaxBytes, that is used as a \"needle\" array,\n *        where we want to validate a substring \"needle\" is present in the \"haystack\"\n * @tparam MaxBytes: the maximum number of bytes that StringBody can contain\n * @tparam MaxPaddedBytes: the maximum number of bytes after zero-padding to the nearest multiple of 31\n * @tparam PaddedChunksMinusOne: the number of 31-byte chunks needed to represent MaxPaddedBytes minus one!\n *\n * @note PaddedChunksMinusOne is because we are going to do the following:\n *                            1. align the SubString bytes according to the StringBody bytes being matched against\n *                            2. split the aligned bytes into 31-byte chunks. The 1st and last chunks might contain\n *                               fewer than 31 bytes due to the above alignment\n *                            3. validate the aligned-byte-chunks match the StringBody byte chunks\n *       To account for the fact that the 1st and last chunks might have fewer bytes we treat those separately\n *       The param PaddedChunksMinusOne is the number of 31-byte chunks required to represent SubString *EXCLUDING* the initial and final chunks\n */\npub struct SubString<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> {\n    pub body: [u8; MaxPaddedBytes],\n    pub byte_length: u32,\n}\n\npub type StringBody32 = StringBody<62, 2, 32>;\npub type StringBody64 = StringBody<93, 3, 64>;\npub type StringBody128 = StringBody<155, 5, 128>;\npub type StringBody256 = StringBody<279, 9, 256>;\npub type StringBody512 = StringBody<527, 17, 512>;\npub type StringBody1024 = StringBody<1054, 34, 1024>;\npub type StringBody2048 = StringBody<2077, 67, 2048>;\npub type StringBody4096 = StringBody<4123, 133, 4096>;\npub type StringBody8192 = StringBody<8215, 265, 8192>;\npub type StringBody16384 = StringBody<16399, 529, 16384>;\n\npub type SubString32 = SubString<62, 1, 32>;\npub type SubString64 = SubString<93, 2, 64>;\npub type SubString128 = SubString<155, 4, 128>;\npub type SubString256 = SubString<279, 8, 256>;\npub type SubString512 = SubString<527, 16, 512>;\npub type SubString1024 = SubString<1054, 33, 1024>;\n\npub trait SubStringTrait {\n    fn match_chunks<let HaystackChunks: u32>(\n        self,\n        haystack: [Field; HaystackChunks],\n        num_bytes_in_first_chunk: Field,\n        body_chunk_offset: Field,\n        num_full_chunks: Field,\n    );\n\n    fn len(self) -> u32;\n    fn get(self, idx: Field) -> u8;\n    fn get_body(self) -> [u8];\n}\n\n// ######################################################\n// S U B S T R I N G\n// ######################################################\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> SubString<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n\n    /**\n     * @brief construct a SubString object from an input byte array\n     * @details the input byte array must have a number of bytes less than or equal to MaxBytes\n     **/\n    pub fn new<let InputBytes: u32>(input: [u8; InputBytes], input_length: u32) -> Self {\n        assert(MaxBytes <= MaxPaddedBytes);\n        assert(input_length <= MaxBytes);\n        assert(InputBytes <= MaxBytes);\n        let mut body: [u8; MaxPaddedBytes] = [0; MaxPaddedBytes];\n        for i in 0..InputBytes {\n            body[i] = input[i];\n        }\n        SubString { body, byte_length: input_length }\n    }\n\n    /**\n     * @brief concatenate two SubString objects together\n     * @details each SubString can have different MaxBytes sizes, however we need OtherBytes <= MaxBytes\n     *          (use concat_into for cases where this is not the case)\n     **/\n    pub fn concat<let OtherPaddedBytes: u32, let OtherPaddedChunks: u32, let OtherMaxBytes: u32>(\n        self,\n        other: SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes>,\n    ) -> Self {\n        assert(\n            OtherPaddedBytes <= MaxPaddedBytes,\n            \"SubString::concat. SubString being concatted has larger max length. Try calling concat_into\",\n        );\n        assert(\n            self.byte_length + other.byte_length <= MaxPaddedBytes,\n            \"SubString::concat, concatenated string exceeds MaxPaddedBytes\",\n        );\n        let mut body = self.body;\n        let offset: u32 = self.byte_length;\n        for i in 0..MaxPaddedBytes {\n            if (i + offset < MaxPaddedBytes) {\n                body[i + offset] = other.body[i];\n            }\n        }\n        SubString { body, byte_length: self.byte_length + other.byte_length }\n    }\n\n    /**\n     * @brief concatenate two SubString objects together. Return type has OtherPaddedBytes max bytes\n     * @details each SubString can have different MaxBytes sizes, however we need MaxBytes <= OtherBytes\n     *          (use concat for cases where this is not the case)\n     **/\n    pub fn concat_into<let OtherPaddedBytes: u32, let OtherPaddedChunks: u32, let OtherMaxBytes: u32>(\n        self,\n        other: SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes>,\n    ) -> SubString<OtherPaddedBytes, OtherPaddedChunks, OtherMaxBytes> {\n        assert(\n            MaxPaddedBytes <= OtherPaddedBytes,\n            \"SubString::concat_into. SubString being concat has larger max length. Try calling concat\",\n        );\n        assert(\n            self.byte_length + other.byte_length <= OtherPaddedBytes,\n            \"SubString::concat_into, concatenated string exceeds MaxPaddedBytes\",\n        );\n        let mut body: [u8; OtherPaddedBytes] = [0; OtherPaddedBytes];\n        for i in 0..MaxBytes {\n            body[i] = self.body[i];\n        }\n\n        let offset: u32 = self.byte_length;\n        for i in 0..OtherPaddedBytes {\n            if (i + offset < OtherPaddedBytes) {\n                body[i + offset] = other.body[i];\n            }\n        }\n        SubString { body, byte_length: self.byte_length + other.byte_length }\n    }\n}\n\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> SubStringTrait for SubString<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n\n    fn len(self) -> u32 {\n        self.byte_length\n    }\n    fn get(self, idx: Field) -> u8 {\n        self.body[idx as u32]\n    }\n    fn get_body(self) -> [u8] {\n        let x = self.body.as_slice();\n        x\n    }\n\n    /**\n     * @brief given some `haystack` 31-byte chunks, validate that there exist `num_full_chunks`\n     *        in the SubString, starting at byte position `starting_needle_byte`.\n     *        The selected chunks must be equal to the haystack chunks starting at `starting_haystack_chunk`\n     **/\n    fn match_chunks<let HaystackChunks: u32>(\n        self,\n        haystack: [Field; HaystackChunks],\n        starting_needle_byte: Field,\n        starting_haystack_chunk: Field,\n        num_full_chunks: Field,\n    ) {\n        let mut substring_chunks: [Field; PaddedChunksMinusOne] = [0; PaddedChunksMinusOne];\n        // pack the substring into 31 byte chunks.\n        // This is fairly expensive as we need a ROM table to access the SubString.body\n        // which is 2 gates per byte\n        for i in 0..PaddedChunksMinusOne {\n            let mut slice: Field = 0;\n            for j in 0..31 {\n                slice *= 256;\n                let substring_idx = starting_needle_byte as Field + (i as Field * 31) + j as Field;\n                let mut byte = self.body[substring_idx];\n                slice += byte as Field;\n            }\n            std::as_witness(slice);\n            substring_chunks[i] = slice;\n        }\n        // iterate over the needle chunks and validate they match the haystack chunks\n        for i in 0..PaddedChunksMinusOne {\n            let predicate: Field = lt_f(i as Field, num_full_chunks) as Field;\n            let lhs = substring_chunks[i];\n            let rhs = haystack[predicate as Field * (i as Field + starting_haystack_chunk)];\n            assert(predicate * (lhs - rhs) == 0);\n        }\n    }\n}\n\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> From<BoundedVec<u8, MaxBytes>> for SubString<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n    fn from(input: BoundedVec<u8, MaxBytes>) -> Self {\n        Self::new(input.storage(), input.len() as u32)\n    }\n}\n\n// ######################################################\n// S T R I N G   B O D Y\n// ######################################################\nimpl<let MaxPaddedBytes: u32, let PaddedChunks: u32, let MaxBytes: u32> StringBody<MaxPaddedBytes, PaddedChunks, MaxBytes> {\n\n    /**\n     * @brief construct a StringBody object from an input byte array\n     * @details the input byte array must have a number of bytes less than or equal to MaxBytes\n     **/\n    pub fn new<let InputBytes: u32>(data: [u8; InputBytes], length: u32) -> Self {\n        assert(length <= MaxBytes);\n        assert(length <= InputBytes);\n        let mut body: [u8; MaxPaddedBytes] = [0; MaxPaddedBytes];\n        for i in 0..InputBytes {\n            body[i] = data[i];\n        }\n        StringBody { body, chunks: compute_chunks(body), byte_length: length }\n    }\n\n    /**\n     * @brief Validate a substring exists in the StringBody. Returns a success flag and the position within the StringBody that the match was found\n     **/\n    pub fn substring_match<NeedleSubString>(self, substring: NeedleSubString) -> (bool, u32)\n    where\n        NeedleSubString: SubStringTrait,\n    {\n        // use unconstrained function to determine:\n        // a: is the substring present in the body text\n        // b: the position of the first match in the body text\n        let position: u32 = unsafe {\n            // Safety: The rest of this function checks this.\n            utils::search(\n                self.body,\n                substring.get_body(),\n                self.byte_length,\n                substring.len(),\n            )\n        };\n\n        assert(\n            position + substring.len() <= self.byte_length,\n            \"substring not present in main text (match found if a padding text included. is main text correctly formatted?)\",\n        );\n        let substring_length = substring.len();\n\n        // chunk_index = which 31-byte haystack chunk does the needle begin in?\n        let chunk_index: u32 = position / 31;\n        // chunk_offset = how many haystack bytes are present in the 1st haystack chunk?\n        let chunk_offset: u32 = position % 31;\n        // how many needle bytes are in 1st haystack chunk?\n        let num_bytes_in_first_chunk: u32 = 31 - chunk_offset;\n        let mut starting_needle_byte_index_of_final_chunk: Field = 0;\n        let mut chunk_index_of_final_haystack_chunk_with_matching_needle_bytes: Field = 0;\n        let mut num_full_chunks = 0;\n\n        // is there only one haystack chunk that contains needle bytes?\n        let merge_initial_final_needle_chunks =\n            lt_f(substring_length as Field, num_bytes_in_first_chunk as Field);\n\n        // if the above is false...\n        if (!merge_initial_final_needle_chunks) {\n            // compute how many full 31-byte haystack chunks contain 31 needle bytes\n            num_full_chunks = (substring_length - num_bytes_in_first_chunk) / 31;\n            // for the final haystack chunk that contains needle bytes, where in the needle does this chunk begin?\n            starting_needle_byte_index_of_final_chunk =\n                num_full_chunks as Field * 31 + num_bytes_in_first_chunk as Field;\n\n            // what is the index of the final haystack chunk that contains needle bytes?\n            chunk_index_of_final_haystack_chunk_with_matching_needle_bytes =\n                num_full_chunks as Field + chunk_index as Field + 1;\n        } else {\n            starting_needle_byte_index_of_final_chunk = 0;\n            // if the needle bytes does NOT span more than 1 haystack chunk,\n            // the final haystack index will be the same as the initial haystack index\n            chunk_index_of_final_haystack_chunk_with_matching_needle_bytes = chunk_index as Field;\n        }\n\n        // To minimize the number of comparisons between the haystack bytes and the needle bytes,\n        // we pack both the haystack bytes and needle bytes into 31-byte Field \"chunks\" and compare chunks.\n        // To do this correctly, we need to align the needle chunks with the haystack chunks\n        /*\n            e.g. consider a toy example where we pack 3 bytes into a chunk\n            haystack: [VWXZYABCDEQRSTU]\n            needle: [ABCDE]\n        when constructing needle chunks, we need to align according to where the needle is located in the haystack\n            haystack chunks:   [VWX] [ZYA] [BCD] [EQR] [STU]\n                                      _..   ...   .__\n            processed needle chunks: [ZYA] [BCD] [EQR]\n        a \"_\" symbole means that a chunk byte has been sourced from the haystack bytes,\n            a \".\" symbol means a byte is sourced from the needle bytes\n        Both the initial and final chunks of the processed needle are \"composite\" constructions.\n            If chunk byte index < `position` or is > `position + needle length\", byte is sourced from haystack, otherwise byte is sourced from needle\n        The way we execute this in code is to define an \"initial\" needle chunk and a \"final\" needle chunk.\n            Num needle bytes in initial chunk = position % 31\n            Num needle bytes in final chunk = (needle_length - (position % 31)) % 31\n        If needle_length < 31 then the \"initial\" and \"final\" chunks\n            are actually the *same* chunk and we must perform a merge operation\n            (see later in algo for comments)\n        */\n        // instead of directly reading haystack bytes, we derive the bytes from the haystack chunks.\n        // This way we don't have to instantiate the haystack bytes as a ROM table, which would cost 2 * haystack.length gates\n        let offset_to_first_needle_byte_in_chunk: Field = chunk_offset as Field;\n        let initial_haystack_chunk = self.chunks[chunk_index];\n        let final_haystack_chunk =\n            self.chunks[chunk_index_of_final_haystack_chunk_with_matching_needle_bytes];\n\n        let initial_body_bytes: [u8; 31] = initial_haystack_chunk.to_be_bytes();\n        let final_body_bytes: [u8; 31] = final_haystack_chunk.to_be_bytes();\n\n        // When defining the initial chunk bytes, we can represent as Field elements as we are deriving values from known bytes.\n        // This saves us a few gates\n        let mut initial_chunk: [Field; 31] = [0; 31];\n        let mut final_chunk: [Field; 31] = [0; 31];\n        for i in 0..31 {\n            // if i < offset_to_first_needle_byte_in_chunk, we read from the haystack\n            // otherwise we read from the needle\n            // n.b. this can be done with an if statement, but the following code produces fewer constraints\n            let idx: Field = i as Field;\n            let predicate: Field = lt_f(i as Field, offset_to_first_needle_byte_in_chunk) as Field;\n            let lhs: Field = initial_body_bytes[i] as Field;\n            // if i < offset_to_first_needle_byte_in_chunk then `idx - offset_to_first_needle_byte_in_chunk` is negative\n            // to ensure we access array correctly we need to set the lookup index to 0 if predicate = 0\n            let substring_idx = (1 - predicate) * (idx - offset_to_first_needle_byte_in_chunk);\n            let rhs: Field = substring.get(substring_idx) as Field;\n            let byte: Field = predicate * (lhs - rhs) + rhs;\n            initial_chunk[i] = byte;\n        }\n\n        // If `merge_initial_final_needle_chunks = true`, `final_chunk` will contain the full needle data,\n        // this requires some complex logic to determine where we are sourcing the needle bytes from.\n        // Either they come from the `initial_chunk`, the haystack bytes or the substring bytes.\n        for i in 0..31 {\n            let mut lhs_index: Field =\n                starting_needle_byte_index_of_final_chunk as Field + i as Field;\n            let predicate = lt_f(lhs_index, substring_length as Field);\n            /*\n                | merge_initial_final_needle_chunks | predicate | byte_source              |\n                | false                             | false     | body_bytes[i]            |\n                | false                             | true      | substring[lhs_idx]       |\n                | true                              | false     | body_bytes[i]            |\n                | true                              | true      | initial_chunk[lhs_index] |\n            NOTE: if `merge = true` and `predicate = true`, we read from `initial_chunk` to short-circuit some extra logic.\n                      if `initial_chunk` did not exist, then we would need to validate whether `i < offset_to_first_needle_byte_in_chunk`.\n                      if true, the byte source would be body_bytes, otherwise the source would be substring bytes\n            */\n            let substring_idx = (predicate as Field) * lhs_index;\n            let byte_from_substring = substring.get(substring_idx) as Field;\n            let byte_from_initial_chunk = initial_chunk[i] as Field;\n            let byte_from_haystack = final_body_bytes[i] as Field;\n\n            // TODO: find out why this cuts 1 gate per iteration\n            std::as_witness(byte_from_initial_chunk);\n\n            let p = predicate as Field;\n            let m = merge_initial_final_needle_chunks as Field;\n            // p * (m * (a - b) + (b - c)) + c\n            let ab = byte_from_initial_chunk - byte_from_substring;\n            std::as_witness(ab);\n            let bc = byte_from_substring - byte_from_haystack;\n            let t0 = m * ab + bc;\n            let destination_byte = p * t0 + byte_from_haystack;\n\n            final_chunk[i] = destination_byte;\n        }\n\n        // TODO: moving this above the previous code block adds 31 gates. find out why? :/\n        let mut initial_needle_chunk: Field = 0;\n        let mut final_needle_chunk: Field = 0;\n\n        // Construct the initial and final needle chunks from the byte arrays we previously built.\n        // Validate they match the initial and final haystack chunks\n        for i in 0..31 {\n            initial_needle_chunk *= 256;\n            initial_needle_chunk += initial_chunk[i];\n            final_needle_chunk *= 256;\n            final_needle_chunk += final_chunk[i];\n        }\n\n        std::as_witness(initial_needle_chunk);\n        std::as_witness(final_needle_chunk);\n\n        initial_needle_chunk = merge_initial_final_needle_chunks as Field\n            * (final_needle_chunk - initial_needle_chunk)\n            + initial_needle_chunk;\n        assert(initial_needle_chunk == initial_haystack_chunk);\n        assert(final_needle_chunk == final_haystack_chunk);\n\n        // Step 3: Construct needle chunks (for all but the 1st and last chunks) and validate they match the haystack chunks.\n        //         This part is much simpler as we know that all bytes in the chunk are sourced from the needle chunk.\n        // NOTE:   If we chose to not pack bytes into 31-byte chunks, the string matching algorithm would be simpler but more expensive.\n        //         Instead of matching chunks with each other, we would match individual byte values.\n        //         i.e. the number of iterations in this loop would be 31x greater\n        //         each loop iteration would also require a predicate, to check whether the byte index was within the needle range or not\n        //         Combined these two operations would add about 10 gates per loop iteration,\n        //         combined with a 31x iteration length would make this algorithm much more costly than the chunked variant\n        let body_chunk_offset: Field = chunk_index as Field + 1;\n        substring.match_chunks(\n            self.chunks,\n            num_bytes_in_first_chunk as Field,\n            body_chunk_offset,\n            num_full_chunks as Field,\n        );\n        (true, position)\n    }\n}\n\nimpl<let MaxPaddedBytes: u32, let PaddedChunksMinusOne: u32, let MaxBytes: u32> From<BoundedVec<u8, MaxBytes>> for StringBody<MaxPaddedBytes, PaddedChunksMinusOne, MaxBytes> {\n    fn from(input: BoundedVec<u8, MaxBytes>) -> Self {\n        Self::new(input.storage(), input.len() as u32)\n    }\n}\n\n/// Given an input byte array, convert into 31-byte chunks\n///\n/// Cost: ~0.5 gates per byte\nfn compute_chunks<let MaxPaddedBytes: u32, let PaddedChunks: u32>(\n    body: [u8; MaxPaddedBytes],\n) -> [Field; PaddedChunks] {\n    let mut chunks: [Field; PaddedChunks] = [0; PaddedChunks];\n    for i in 0..PaddedChunks {\n        let mut limb: Field = 0;\n        for j in 0..31 {\n            limb *= 256;\n            limb += body[i * 31 + j] as Field;\n        }\n        chunks[i] = limb;\n        std::as_witness(chunks[i]);\n    }\n    chunks\n}\n\n#[test]\nfn test() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        .as_bytes();\n    let needle_text = \" dolor in reprehenderit in voluptate velit esse\".as_bytes();\n\n    let mut haystack: StringBody512 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString64 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_small_needle() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        .as_bytes();\n    let needle_text = \"olor\".as_bytes();\n    let mut haystack: StringBody512 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString32 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_needle_aligned_on_byte_boundary() {\n    let haystack_text = \"the quick brown fox jumped over the lazy dog\".as_bytes();\n    let needle_text = \" the lazy dog\".as_bytes();\n\n    let mut haystack: StringBody256 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString256 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_needle_haystack_equal_size() {\n    let haystack_text =\n        \"the quick brown fox jumped over the lazy dog lorem ipsum blahhhh\".as_bytes();\n    let needle_text = \"the quick brown fox jumped over the lazy dog lorem ipsum blahhhh\".as_bytes();\n\n    let mut haystack: StringBody64 = StringBody::new(haystack_text, haystack_text.len());\n    let mut needle: SubString64 = SubString::new(needle_text, needle_text.len());\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_concat() {\n    let email_text = \"account recovery for Bartholomew Fibblesworth\".as_bytes();\n    let username = \"Bartholomew Fibblesworth\".as_bytes();\n    let mut padded_email_text: [u8; 256] = [0; 256];\n    let mut padded_username: [u8; 100] = [0; 100];\n    for i in 0..username.len() {\n        padded_username[i] = username[i];\n    }\n    for i in 0..email_text.len() {\n        padded_email_text[i] = email_text[i];\n    }\n    let needle_text_init = \"account recovery for \".as_bytes();\n\n    let needle_start: SubString128 = SubString::new(needle_text_init, needle_text_init.len());\n    let needle_end: SubString128 = SubString::new(padded_username, username.len());\n    let needle = needle_start.concat(needle_end);\n\n    for i in 0..45 {\n        assert(needle.body[i] == email_text[i]);\n    }\n\n    let haystack: StringBody256 = StringBody::new(padded_email_text, 200);\n    let (result, _): (bool, u32) = haystack.substring_match(needle);\n    assert(result == true);\n}\n\n#[test]\nfn test_concat_into() {\n    let email_text = \"account recovery for Bartholomew Fibblesworth\".as_bytes();\n    let username = \"Bartholomew Fibblesworth\".as_bytes();\n    let mut padded_email_text: [u8; 256] = [0; 256];\n    let mut padded_username: [u8; 100] = [0; 100];\n    for i in 0..username.len() {\n        padded_username[i] = username[i];\n    }\n    for i in 0..email_text.len() {\n        padded_email_text[i] = email_text[i];\n    }\n    let needle_text_init = \"account recovery for \".as_bytes();\n\n    let needle_start: SubString32 = SubString::new(needle_text_init, needle_text_init.len());\n    let needle_end: SubString128 = SubString::new(padded_username, username.len());\n    let needle = needle_start.concat_into(needle_end);\n\n    for i in 0..45 {\n        assert(needle.body[i] == email_text[i]);\n    }\n\n    let haystack: StringBody256 = StringBody::new(padded_email_text, 200);\n    let (result, _): (bool, u32) = haystack.substring_match(needle);\n    assert(result == true);\n}\n\n#[test]\nunconstrained fn test_partial_match() {\n    let mut Engine = DebugRandomEngine { seed: 0 };\n    let mut foo: [u8; 1024] = Engine.get_random_bytes();\n    let mut bar: [u8; 128] = [0; 128];\n    for i in 0..128 {\n        bar[i] = foo[i + 123];\n    }\n    let position = utils::search(foo, bar.as_slice(), 1024, 128);\n\n    assert(position == 123);\n}\n\n#[test]\nfn test_substring_from_bounded_vec() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        .as_bytes();\n    let needle_text = \" dolor in reprehenderit in voluptate velit esse\".as_bytes();\n\n    let mut haystack: StringBody512 = BoundedVec::from(haystack_text).into();\n    let mut needle: SubString64 = BoundedVec::from(needle_text).into();\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn test_string_body_from_bounded_vec() {\n    let haystack_text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n        .as_bytes();\n\n    let mut haystack: StringBody512 = BoundedVec::from(haystack_text).into();\n    let needle_text = \" dolor in reprehenderit in voluptate velit esse\".as_bytes();\n    let mut needle: SubString64 = BoundedVec::from(needle_text).into();\n\n    let result = haystack.substring_match(needle);\n    assert(result.0 == true);\n}\n\n#[test]\nfn regression_20() {\n    let haystack: [u8; 128] = [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x92, 0x00, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x6e, 0x00, 0x00, 0x00, 0x00, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x84,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    ];\n\n    let needle: [u8; 32] = [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00,\n    ];\n    let needle_len: u32 = 0x20;\n    let id_haystack: StringBody128 = StringBody::new(haystack, 128);\n    let pk_needle: SubString32 = SubString::new(needle, needle_len);\n    let (result, _): (bool, u32) = id_haystack.substring_match(pk_needle);\n    assert(result);\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir_string_search/v0.3.2/src/lib.nr"},"212":{"source":"pub unconstrained fn search<let N: u32>(\n    haystack: [u8; N],\n    needle: [u8],\n    haystack_length: u32,\n    needle_length: u32,\n) -> u32 {\n    assert(needle_length > 0, \"needle length of size 0 not supported\");\n    assert(haystack_length > 0, \"haystack length of size 0 not supported\");\n    let mut found = false;\n    let mut found_index: u32 = 0;\n    for i in 0..haystack_length - needle_length + 1 {\n        if (found == true) {\n            break;\n        }\n        for j in 0..needle_length {\n            if haystack[i + j] != needle[j] {\n                break;\n            } else if (j == needle_length - 1) {\n                found = true;\n            }\n            if (found == true) {\n                found_index = i;\n                break;\n            }\n        }\n    }\n    assert(found == true, \"utils::search could not find needle in haystack\");\n    found_index\n}\n\nunconstrained fn __conditional_select(lhs: u8, rhs: u8, predicate: bool) -> u8 {\n    if (predicate) {\n        lhs\n    } else {\n        rhs\n    }\n}\n\npub fn conditional_select<T>(lhs: u8, rhs: u8, predicate: bool) -> u8 {\n    // Safety: This is all just a very verbose `if (predicate) { lhs } else { rhs }`\n    // formulated as `rhs + (lhs - rhs) * predicate`\n    unsafe {\n        let result = __conditional_select(lhs, rhs, predicate);\n        let result_f = result as Field;\n        let lhs_f = lhs as Field;\n        let rhs_f = rhs as Field;\n\n        let diff = lhs_f - rhs_f;\n        std::as_witness(diff);\n        assert_eq((predicate as Field) * diff + rhs_f, result_f);\n        result\n    }\n}\n\npub unconstrained fn get_lt_predicate_f(x: Field, y: Field) -> bool {\n    let a = x as u32;\n    let b = y as u32;\n    a < b\n}\n\npub fn lt_f(x: Field, y: Field) -> bool {\n    // Safety: As `x` and `y` are known to be valid `u32`s, this function reimplements the\n    // compiler's internal implementation of `lt`\n    unsafe {\n        let predicate = get_lt_predicate_f(x, y);\n        let delta = y as Field - x as Field;\n        let lt_parameter = 2 * (predicate as Field) * delta - predicate as Field - delta;\n        lt_parameter.assert_max_bit_size::<32>();\n\n        predicate\n    }\n}\n\npub struct DebugRandomEngine {\n    pub seed: Field,\n}\n\nimpl DebugRandomEngine {\n    unconstrained fn get_random_32_bytes(&mut self) -> [u8; 32] {\n        self.seed += 1;\n        let input: [u8; 32] = self.seed.to_be_bytes();\n        let hash: [u8; 32] = std::hash::blake3(input);\n        hash\n    }\n    unconstrained fn get_random_field(&mut self) -> Field {\n        let hash = self.get_random_32_bytes();\n        let mut result: Field = 0;\n        for i in 0..32 {\n            result *= 256;\n            result += hash[i] as Field;\n        }\n        result\n    }\n\n    pub unconstrained fn get_random_bytes<let NBytes: u32>(&mut self) -> [u8; NBytes] {\n        let num_chunks = (NBytes / 32) + ((NBytes % 32) != 0) as u32;\n\n        let mut result: [u8; NBytes] = [0; NBytes];\n        for i in 0..num_chunks - 1 {\n            let bytes = self.get_random_32_bytes();\n            for j in 0..32 {\n                result[i * 32 + j] = bytes[j];\n            }\n        }\n\n        let bytes = self.get_random_32_bytes();\n        for j in 0..(NBytes - (num_chunks - 1) * 32) {\n            result[(num_chunks - 1) * 32 + j] = bytes[j];\n        }\n        result\n    }\n}\n","path":"/Users/kiagengsatriapamungkas/nargo/github.com/noir-lang/noir_string_search/v0.3.2/src/utils.nr"}},"names":["main"],"brillig_names":["build_msg_block","attach_len_to_msg_block","__mul","__compute_quadratic_expression_with_borrow_flags","extract_claim_unconstrained","__boundary_check","__validate_decoded","search","get_lt_predicate_f","extract_claim_unconstrained","print_unconstrained","decompose_hint","lte_hint","directive_integer_quotient","directive_invert","directive_to_radix"]}